// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Indicates which properties of a network have changed after a network state change background trigger.
public final class WindowsNetworkingConnectivity_NetworkStateChangeEventDetails: WindowsRuntime.WinRTImport<WindowsNetworkingConnectivity_NetworkStateChangeEventDetailsProjection> {
    // MARK: Windows.Networking.Connectivity.INetworkStateChangeEventDetails members

    /// Indicates if a connected network has a new connection cost.
    /// - Returns: true if there is a new connection cost; otherwise, false.
    public var hasNewConnectionCost: Swift.Bool {
        get throws {
            try _interop.get_HasNewConnectionCost()
        }
    }

    /// Indicates a connected network has a new domain connectivity level.
    /// - Returns: true if the connectivity level changed; otherwise, false.
    public var hasNewDomainConnectivityLevel: Swift.Bool {
        get throws {
            try _interop.get_HasNewDomainConnectivityLevel()
        }
    }

    /// Indicates if the list of host names returned by GetHostNames has changed.
    /// - Returns: true if a new Host Name list was provided; otherwise, false.
    public var hasNewHostNameList: Swift.Bool {
        get throws {
            try _interop.get_HasNewHostNameList()
        }
    }

    /// Indicates if the local machine has a new connection profile associated with the current internet connection.
    /// - Returns: true if the connection has changed; otherwise, false.
    public var hasNewInternetConnectionProfile: Swift.Bool {
        get throws {
            try _interop.get_HasNewInternetConnectionProfile()
        }
    }

    /// Indicates if the network connectivity level for any connection profiles has changed.
    /// - Returns: true if the network connectivity level changed; otherwise, false.
    public var hasNewNetworkConnectivityLevel: Swift.Bool {
        get throws {
            try _interop.get_HasNewNetworkConnectivityLevel()
        }
    }

    /// Indicates if the network state change event represents a change to the registration state of a WWAN connection. The current registration state can be retrieved from WwanConnectionProfileDetails.GetNetworkRegistrationState.
    /// - Returns: true if the registration state has changed; otherwise, false.
    public var hasNewWwanRegistrationState: Swift.Bool {
        get throws {
            try _interop.get_HasNewWwanRegistrationState()
        }
    }

    // MARK: Windows.Networking.Connectivity.INetworkStateChangeEventDetails2 members

    /// Gets a value indicating whether the network state change event shows a new tethering client count.
    /// - Returns: When true, the tethering client count has changed.
    public var hasNewTetheringClientCount: Swift.Bool {
        get throws {
            try _inetworkStateChangeEventDetails2.get_HasNewTetheringClientCount()
        }
    }

    /// Gets a value that indicates whether the tethering operational state has changed.
    /// - Returns: When true, tethering operational state has changed.
    public var hasNewTetheringOperationalState: Swift.Bool {
        get throws {
            try _inetworkStateChangeEventDetails2.get_HasNewTetheringOperationalState()
        }
    }

    // MARK: Implementation details

    private var _inetworkStateChangeEventDetails2_storage: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingConnectivity_INetworkStateChangeEventDetails2>? = nil

    internal var _inetworkStateChangeEventDetails2: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingConnectivity_INetworkStateChangeEventDetails2> {
        get throws {
            try _inetworkStateChangeEventDetails2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsNetworkingConnectivity_INetworkStateChangeEventDetails2.iid).cast(to: CWinRT.SWRT_WindowsNetworkingConnectivity_INetworkStateChangeEventDetails2.self)
            }
        }
    }

    deinit {
        _inetworkStateChangeEventDetails2_storage?.release()
    }
}