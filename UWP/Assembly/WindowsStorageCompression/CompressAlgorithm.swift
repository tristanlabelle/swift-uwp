// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Identifies a compression algorithm to use when creating an instance of a compressor.
public struct WindowsStorageCompression_CompressAlgorithm: RawRepresentable, Hashable, Codable {
    public var rawValue: Swift.Int32

    public init(rawValue: Swift.Int32 = 0) {
        self.rawValue = rawValue
    }

    /// This value represents an invalid compression algorithm. It is useful primarily for error checking.
    public static let invalidAlgorithm = Self()

    /// This value represents an algorithm that passes data through with no compression. It is useful primarily for testing.
    public static let nullAlgorithm = Self(rawValue: 1)

    /// The compressor will use the MSZIP compression algorithm.
    public static let mszip = Self(rawValue: 2)

    /// The compressor will use the XPRESS compression algorithm.
    public static let xpress = Self(rawValue: 3)

    /// The compressor will use the XPRESS compression algorithm with Huffman encoding.
    public static let xpressHuff = Self(rawValue: 4)

    /// The compressor will use the LZMS compression algorithm.
    public static let lzms = Self(rawValue: 5)
}