// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides localized information that details an add-on (also called an in-app product or IAP).
public final class WindowsApplicationModelStore_ProductListing: WindowsRuntime.WinRTImport<WindowsApplicationModelStore_ProductListingProjection> {
    // MARK: Windows.ApplicationModel.Store.IProductListing members

    /// Gets the purchase price for the in-app product with the appropriate formatting for the current market.
    /// - Returns: The purchase price with the appropriate formatting for the current market.
    public var formattedPrice: Swift.String {
        get throws {
            try _interop.get_FormattedPrice()
        }
    }

    /// Gets the descriptive name of the add-on (also called an in-app product or IAP) that is displayed customers in the current market.
    /// - Returns: The add-on's descriptive name as it is seen by customers in the current market.
    public var name: Swift.String {
        get throws {
            try _interop.get_Name()
        }
    }

    /// Gets the product ID for the add-on that this **ProductListing** represents.
    /// - Returns: The product ID for the add-on.
    public var productId: Swift.String {
        get throws {
            try _interop.get_ProductId()
        }
    }

    // MARK: Windows.ApplicationModel.Store.IProductListingWithMetadata members

    /// Gets the description for the add-on (also called an in-app product or IAP).
    /// - Returns: The description for the product.
    public var description: Swift.String {
        get throws {
            try _iproductListingWithMetadata.get_Description()
        }
    }

    /// Gets the URI of the image associated with the add-on (also called an in-app product or IAP).
    /// - Returns: The URI to the image associated with the add-on.
    public var imageUri: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_iproductListingWithMetadata.get_ImageUri())
        }
    }

    /// Gets the list of keywords associated with the add-on (also called an in-app product or IAP). These strings correspond to the value of the **Keywords** field in the properties page for the add-on in Partner Center. These keywords are useful for filtering product lists by keyword, for example, when calling LoadListingInformationByKeywordsAsync.
    /// - Returns: The keywords associated with the add-on.
    public var keywords: WindowsFoundationCollections_IIterable<Swift.String> {
        get throws {
            try COM.NullResult.unwrap(_iproductListingWithMetadata.get_Keywords())
        }
    }

    /// Gets the type of this add-on (also called an in-app product or IAP). Possible values are defined by ProductType.
    /// - Returns: The product type. Possible values include **Consumable** and **Durable**.
    public var productType: WindowsApplicationModelStore_ProductType {
        get throws {
            try _iproductListingWithMetadata.get_ProductType()
        }
    }

    /// Gets the custom developer data string (also called a tag) that contains custom information about an add-on (also called an in-app product or IAP). This string corresponds to the value of the **Custom developer data** field in the properties page for the add-on in Partner Center.
    /// - Returns: The custom developer data for the add-on.
    public var tag: Swift.String {
        get throws {
            try _iproductListingWithMetadata.get_Tag()
        }
    }

    // MARK: Windows.ApplicationModel.Store.IProductListing2 members

    /// Gets the currency code associated with the user's market, such as **USD** or **CAD**.
    /// - Returns: The currency code associated with the user's market, such as **USD** or **CAD**.
    public var currencyCode: Swift.String {
        get throws {
            try _iproductListing2.get_CurrencyCode()
        }
    }

    /// Gets the base price for the add-on (also called an in-app product or IAP) with the appropriate formatting for the current market.
    /// - Returns: The base price for the add-on with the appropriate formatting for the current market.
    public var formattedBasePrice: Swift.String {
        get throws {
            try _iproductListing2.get_FormattedBasePrice()
        }
    }

    /// Gets a value that indicates whether the add-on (also called an in-app product or IAP) is on sale.
    /// - Returns: Returns true if the in-app product is on sale, and otherwise false.
    public var isOnSale: Swift.Bool {
        get throws {
            try _iproductListing2.get_IsOnSale()
        }
    }

    /// Gets the end date of the sale period for the add-on (also called an in-app product or IAP).
    /// - Returns: The date and time that the add-on's sale period will end.
    public var saleEndDate: WindowsFoundation_DateTime {
        get throws {
            try _iproductListing2.get_SaleEndDate()
        }
    }

    // MARK: Implementation details

    private var _iproductListingWithMetadata_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelStore_IProductListingWithMetadata>? = nil

    internal var _iproductListingWithMetadata: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelStore_IProductListingWithMetadata> {
        get throws {
            try _iproductListingWithMetadata_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelStore_IProductListingWithMetadata.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelStore_IProductListingWithMetadata.self)
            }
        }
    }

    private var _iproductListing2_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelStore_IProductListing2>? = nil

    internal var _iproductListing2: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelStore_IProductListing2> {
        get throws {
            try _iproductListing2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelStore_IProductListing2.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelStore_IProductListing2.self)
            }
        }
    }

    deinit {
        _iproductListingWithMetadata_storage?.release()
        _iproductListing2_storage?.release()
    }
}