// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents name and value information used in a number of HTTP headers.
public final class WindowsWebHttpHeaders_HttpNameValueHeaderValue: WindowsRuntime.WinRTImport<WindowsWebHttpHeaders_HttpNameValueHeaderValueProjection>, WindowsFoundation_IStringableProtocol {
    // MARK: Windows.Web.Http.Headers.IHttpNameValueHeaderValueFactory members

    public convenience init(_ name: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ihttpNameValueHeaderValueFactory.createFromName(name)))
    }

    public convenience init(_ name: Swift.String, _ value: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ihttpNameValueHeaderValueFactory.createFromNameWithValue(name, value)))
    }

    // MARK: Windows.Web.Http.Headers.IHttpNameValueHeaderValue members

    /// Gets the name used in the HttpNameValueHeaderValue object.
    /// - Returns: The name used in the HttpNameValueHeaderValue object.
    public var name: Swift.String {
        get throws {
            try _interop.get_Name()
        }
    }

    /// Gets or sets the value associated with a name used in the HttpNameValueHeaderValue object.
    /// - Returns: The value associated with a name used in the HttpNameValueHeaderValue object.
    public var value: Swift.String {
        get throws {
            try _interop.get_Value()
        }
    }

    /// Gets or sets the value associated with a name used in the HttpNameValueHeaderValue object.
    /// - Returns: The value associated with a name used in the HttpNameValueHeaderValue object.
    public func value(_ value: Swift.String) throws {
        try _interop.put_Value(value)
    }

    // MARK: Windows.Foundation.IStringable members

    /// Returns a string that represents the current HttpNameValueHeaderValue object.
    /// - Returns: A string that represents the current object.
    public func toString() throws -> Swift.String {
        try _istringable.toString()
    }

    // MARK: Windows.Web.Http.Headers.IHttpNameValueHeaderValueStatics members

    /// Converts a string to an HttpNameValueHeaderValue instance.
    /// - Parameter input: A string that represents the name and value.
    /// - Returns: An HttpNameValueHeaderValue instance.
    public static func parse(_ input: Swift.String) throws -> WindowsWebHttpHeaders_HttpNameValueHeaderValue {
        try COM.NullResult.unwrap(_ihttpNameValueHeaderValueStatics.parse(input))
    }

    /// Determines whether a string is valid HttpNameValueHeaderValue information.
    /// - Parameter input: The string to validate.
    /// - Parameter nameValueHeaderValue: The HttpNameValueHeaderValue version of the string.
    /// - Returns: **true** if *input* is valid HttpNameValueHeaderValue information; otherwise, **false**.
    public static func tryParse(_ input: Swift.String, _ nameValueHeaderValue: inout WindowsWebHttpHeaders_HttpNameValueHeaderValue?) throws -> Swift.Bool {
        try _ihttpNameValueHeaderValueStatics.tryParse(input, &nameValueHeaderValue)
    }

    // MARK: Implementation details

    private var _istringable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IStringable>? = nil

    internal var _istringable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IStringable> {
        get throws {
            try _istringable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IStringable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IStringable.self)
            }
        }
    }

    deinit {
        _istringable_storage?.release()
    }

    private static var _ihttpNameValueHeaderValueFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsWebHttpHeaders_IHttpNameValueHeaderValueFactory>? = nil

    internal static var _ihttpNameValueHeaderValueFactory: COM.COMInterop<CWinRT.SWRT_WindowsWebHttpHeaders_IHttpNameValueHeaderValueFactory> {
        get throws {
            try _ihttpNameValueHeaderValueFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Web.Http.Headers.HttpNameValueHeaderValue", id: CWinRT.SWRT_WindowsWebHttpHeaders_IHttpNameValueHeaderValueFactory.iid)
            }
        }
    }

    private static var _ihttpNameValueHeaderValueStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsWebHttpHeaders_IHttpNameValueHeaderValueStatics>? = nil

    internal static var _ihttpNameValueHeaderValueStatics: COM.COMInterop<CWinRT.SWRT_WindowsWebHttpHeaders_IHttpNameValueHeaderValueStatics> {
        get throws {
            try _ihttpNameValueHeaderValueStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Web.Http.Headers.HttpNameValueHeaderValue", id: CWinRT.SWRT_WindowsWebHttpHeaders_IHttpNameValueHeaderValueStatics.iid)
            }
        }
    }
}