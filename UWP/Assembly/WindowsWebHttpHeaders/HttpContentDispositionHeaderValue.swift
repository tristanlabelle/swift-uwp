// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the value of the **Content-Disposition** HTTP header on HTTP content in a request or a response.
public final class WindowsWebHttpHeaders_HttpContentDispositionHeaderValue: WindowsRuntime.WinRTImport<WindowsWebHttpHeaders_HttpContentDispositionHeaderValueProjection>, WindowsFoundation_IStringableProtocol {
    // MARK: Windows.Web.Http.Headers.IHttpContentDispositionHeaderValueFactory members

    public convenience init(_ dispositionType: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ihttpContentDispositionHeaderValueFactory.create(dispositionType)))
    }

    // MARK: Windows.Web.Http.Headers.IHttpContentDispositionHeaderValue members

    /// Gets or sets the value of the **disposition-type** information in the **Content-Disposition** HTTP header.
    /// - Returns: The value of the **disposition-type** characteristic in the **Content-Disposition** HTTP header.
    public var dispositionType: Swift.String {
        get throws {
            try _interop.get_DispositionType()
        }
    }

    /// Gets or sets the value of the **disposition-type** information in the **Content-Disposition** HTTP header.
    /// - Returns: The value of the **disposition-type** characteristic in the **Content-Disposition** HTTP header.
    public func dispositionType(_ value: Swift.String) throws {
        try _interop.put_DispositionType(value)
    }

    /// Gets or sets the value of the **filename-parm** information in the **Content-Disposition** HTTP header for a single file.
    /// - Returns: A suggested filename.
    public var fileName: Swift.String {
        get throws {
            try _interop.get_FileName()
        }
    }

    /// Gets or sets the value of the **filename-parm** information in the **Content-Disposition** HTTP header for a single file.
    /// - Returns: A suggested filename.
    public func fileName(_ value: Swift.String) throws {
        try _interop.put_FileName(value)
    }

    /// Gets or sets the value of the **filename-parm** characteristic in the **Content-Disposition** HTTP header for multiple files.
    /// - Returns: A suggested filename of the form filename*.
    public var fileNameStar: Swift.String {
        get throws {
            try _interop.get_FileNameStar()
        }
    }

    /// Gets or sets the value of the **filename-parm** characteristic in the **Content-Disposition** HTTP header for multiple files.
    /// - Returns: A suggested filename of the form filename*.
    public func fileNameStar(_ value: Swift.String) throws {
        try _interop.put_FileNameStar(value)
    }

    /// Gets or sets the name for a content body part in the **Content-Disposition** HTTP header.
    /// - Returns: The name for the content body part.
    public var name: Swift.String {
        get throws {
            try _interop.get_Name()
        }
    }

    /// Gets or sets the name for a content body part in the **Content-Disposition** HTTP header.
    /// - Returns: The name for the content body part.
    public func name(_ value: Swift.String) throws {
        try _interop.put_Name(value)
    }

    /// Gets a set of parameters included in the **Content-Disposition** HTTP header.
    /// - Returns: A set of parameters.
    public var parameters: WindowsFoundationCollections_IVector<WindowsWebHttpHeaders_HttpNameValueHeaderValue?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Parameters())
        }
    }

    /// Gets or sets the approximate size, in bytes, of the file used in the **Content-Disposition** HTTP header.
    /// - Returns: The approximate size, in bytes.
    public var size: Swift.UInt64? {
        get throws {
            try _interop.get_Size()
        }
    }

    /// Gets or sets the approximate size, in bytes, of the file used in the **Content-Disposition** HTTP header.
    /// - Returns: The approximate size, in bytes.
    public func size(_ value: Swift.UInt64?) throws {
        try _interop.put_Size(value)
    }

    // MARK: Windows.Foundation.IStringable members

    /// Returns a string that represents the current HttpContentDispositionHeaderValue object.
    /// - Returns: A string that represents the current object.
    public func toString() throws -> Swift.String {
        try _istringable.toString()
    }

    // MARK: Windows.Web.Http.Headers.IHttpContentDispositionHeaderValueStatics members

    /// Converts a string to an HttpContentDispositionHeaderValue instance.
    /// - Parameter input: A string that represents the content disposition information in the **Content-Disposition** HTTP header.
    /// - Returns: An HttpContentDispositionHeaderValue instance.
    public static func parse(_ input: Swift.String) throws -> WindowsWebHttpHeaders_HttpContentDispositionHeaderValue {
        try COM.NullResult.unwrap(_ihttpContentDispositionHeaderValueStatics.parse(input))
    }

    /// Determines whether a string is valid HttpContentDispositionHeaderValue information.
    /// - Parameter input: The string to validate.
    /// - Parameter contentDispositionHeaderValue: The HttpContentDispositionHeaderValue version of the string.
    /// - Returns: **true** if *input* is valid HttpContentDispositionHeaderValue information; otherwise, **false**.
    public static func tryParse(_ input: Swift.String, _ contentDispositionHeaderValue: inout WindowsWebHttpHeaders_HttpContentDispositionHeaderValue?) throws -> Swift.Bool {
        try _ihttpContentDispositionHeaderValueStatics.tryParse(input, &contentDispositionHeaderValue)
    }

    // MARK: Implementation details

    private var _istringable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IStringable>? = nil

    internal var _istringable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IStringable> {
        get throws {
            try _istringable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IStringable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IStringable.self)
            }
        }
    }

    deinit {
        _istringable_storage?.release()
    }

    private static var _ihttpContentDispositionHeaderValueFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsWebHttpHeaders_IHttpContentDispositionHeaderValueFactory>? = nil

    internal static var _ihttpContentDispositionHeaderValueFactory: COM.COMInterop<CWinRT.SWRT_WindowsWebHttpHeaders_IHttpContentDispositionHeaderValueFactory> {
        get throws {
            try _ihttpContentDispositionHeaderValueFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Web.Http.Headers.HttpContentDispositionHeaderValue", id: CWinRT.SWRT_WindowsWebHttpHeaders_IHttpContentDispositionHeaderValueFactory.iid)
            }
        }
    }

    private static var _ihttpContentDispositionHeaderValueStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsWebHttpHeaders_IHttpContentDispositionHeaderValueStatics>? = nil

    internal static var _ihttpContentDispositionHeaderValueStatics: COM.COMInterop<CWinRT.SWRT_WindowsWebHttpHeaders_IHttpContentDispositionHeaderValueStatics> {
        get throws {
            try _ihttpContentDispositionHeaderValueStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Web.Http.Headers.HttpContentDispositionHeaderValue", id: CWinRT.SWRT_WindowsWebHttpHeaders_IHttpContentDispositionHeaderValueStatics.iid)
            }
        }
    }
}