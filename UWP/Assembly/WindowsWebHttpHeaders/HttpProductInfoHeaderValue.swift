// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents product information used in the **User-Agent** HTTP header on an HTTP request.
public final class WindowsWebHttpHeaders_HttpProductInfoHeaderValue: WindowsRuntime.WinRTImport<WindowsWebHttpHeaders_HttpProductInfoHeaderValueProjection>, WindowsFoundation_IStringableProtocol {
    // MARK: Windows.Web.Http.Headers.IHttpProductInfoHeaderValueFactory members

    public convenience init(_ productComment: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ihttpProductInfoHeaderValueFactory.createFromComment(productComment)))
    }

    public convenience init(_ productName: Swift.String, _ productVersion: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ihttpProductInfoHeaderValueFactory.createFromNameWithVersion(productName, productVersion)))
    }

    // MARK: Windows.Web.Http.Headers.IHttpProductInfoHeaderValue members

    /// Gets the product comment from the HttpProductInfoHeaderValue used in the **User-Agent** HTTP header.
    /// - Returns: The product comment used in the **User-Agent** HTTP header.
    public var comment: Swift.String {
        get throws {
            try _interop.get_Comment()
        }
    }

    /// Gets the product from the HttpProductInfoHeaderValue used in the **User-Agent** HTTP header.
    /// - Returns: The product name and version used in the **User-Agent** HTTP header.
    public var product: WindowsWebHttpHeaders_HttpProductHeaderValue {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Product())
        }
    }

    // MARK: Windows.Foundation.IStringable members

    /// Returns a string that represents the current HttpProductInfoHeaderValue object.
    /// - Returns: A string that represents the current object.
    public func toString() throws -> Swift.String {
        try _istringable.toString()
    }

    // MARK: Windows.Web.Http.Headers.IHttpProductInfoHeaderValueStatics members

    /// Converts a string to an HttpProductInfoHeaderValue instance.
    /// - Parameter input: A string that represents the product information.
    /// - Returns: An HttpProductInfoHeaderValue instance.
    public static func parse(_ input: Swift.String) throws -> WindowsWebHttpHeaders_HttpProductInfoHeaderValue {
        try COM.NullResult.unwrap(_ihttpProductInfoHeaderValueStatics.parse(input))
    }

    /// Determines whether a string is valid HttpProductInfoHeaderValue information.
    /// - Parameter input: The string to validate.
    /// - Parameter productInfoHeaderValue: The HttpProductInfoHeaderValue version of the string.
    /// - Returns: **true** if *input* is valid HttpProductInfoHeaderValue information; otherwise, **false**.
    public static func tryParse(_ input: Swift.String, _ productInfoHeaderValue: inout WindowsWebHttpHeaders_HttpProductInfoHeaderValue?) throws -> Swift.Bool {
        try _ihttpProductInfoHeaderValueStatics.tryParse(input, &productInfoHeaderValue)
    }

    // MARK: Implementation details

    private var _istringable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IStringable>? = nil

    internal var _istringable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IStringable> {
        get throws {
            try _istringable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IStringable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IStringable.self)
            }
        }
    }

    deinit {
        _istringable_storage?.release()
    }

    private static var _ihttpProductInfoHeaderValueFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsWebHttpHeaders_IHttpProductInfoHeaderValueFactory>? = nil

    internal static var _ihttpProductInfoHeaderValueFactory: COM.COMInterop<CWinRT.SWRT_WindowsWebHttpHeaders_IHttpProductInfoHeaderValueFactory> {
        get throws {
            try _ihttpProductInfoHeaderValueFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Web.Http.Headers.HttpProductInfoHeaderValue", id: CWinRT.SWRT_WindowsWebHttpHeaders_IHttpProductInfoHeaderValueFactory.iid)
            }
        }
    }

    private static var _ihttpProductInfoHeaderValueStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsWebHttpHeaders_IHttpProductInfoHeaderValueStatics>? = nil

    internal static var _ihttpProductInfoHeaderValueStatics: COM.COMInterop<CWinRT.SWRT_WindowsWebHttpHeaders_IHttpProductInfoHeaderValueStatics> {
        get throws {
            try _ihttpProductInfoHeaderValueStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Web.Http.Headers.HttpProductInfoHeaderValue", id: CWinRT.SWRT_WindowsWebHttpHeaders_IHttpProductInfoHeaderValueStatics.iid)
            }
        }
    }
}