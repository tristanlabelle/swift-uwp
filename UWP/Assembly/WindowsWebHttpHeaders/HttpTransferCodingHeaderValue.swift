// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents transfer coding information used in the **Transfer-Encoding** HTTP header on an HTTP request.
public final class WindowsWebHttpHeaders_HttpTransferCodingHeaderValue: WindowsRuntime.WinRTImport<WindowsWebHttpHeaders_HttpTransferCodingHeaderValueProjection>, WindowsFoundation_IStringableProtocol {
    // MARK: Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueFactory members

    public convenience init(_ input: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ihttpTransferCodingHeaderValueFactory.create(input)))
    }

    // MARK: Windows.Web.Http.Headers.IHttpTransferCodingHeaderValue members

    /// Gets a set of parameters used in the **Transfer-Encoding** HTTP header.
    /// - Returns: A set of name/value parameters used in the **Transfer-Encoding** HTTP header.
    public var parameters: WindowsFoundationCollections_IVector<WindowsWebHttpHeaders_HttpNameValueHeaderValue?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Parameters())
        }
    }

    /// Gets the transfer-coding value used in the **Transfer-Encoding** HTTP header.
    /// - Returns: The transfer-coding value (transfer-coding name) used in the **Transfer-Encoding** HTTP header.
    public var value: Swift.String {
        get throws {
            try _interop.get_Value()
        }
    }

    // MARK: Windows.Foundation.IStringable members

    /// Returns a string that represents the current HttpTransferCodingHeaderValue object.
    /// - Returns: A string that represents the current object.
    public func toString() throws -> Swift.String {
        try _istringable.toString()
    }

    // MARK: Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueStatics members

    /// Converts a string to an HttpTransferCodingHeaderValue instance.
    /// - Parameter input: A string that represents the **transfer-coding** information.
    /// - Returns: An HttpProductInfoHeaderValue instance.
    public static func parse(_ input: Swift.String) throws -> WindowsWebHttpHeaders_HttpTransferCodingHeaderValue {
        try COM.NullResult.unwrap(_ihttpTransferCodingHeaderValueStatics.parse(input))
    }

    /// Determines whether a string is valid HttpTransferCodingHeaderValue information.
    /// - Parameter input: The string to validate.
    /// - Parameter transferCodingHeaderValue: The HttpTransferCodingHeaderValue version of the string.
    /// - Returns: **true** if *input* is valid HttpTransferCodingHeaderValue information; otherwise, **false**.
    public static func tryParse(_ input: Swift.String, _ transferCodingHeaderValue: inout WindowsWebHttpHeaders_HttpTransferCodingHeaderValue?) throws -> Swift.Bool {
        try _ihttpTransferCodingHeaderValueStatics.tryParse(input, &transferCodingHeaderValue)
    }

    // MARK: Implementation details

    private var _istringable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IStringable>? = nil

    internal var _istringable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IStringable> {
        get throws {
            try _istringable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IStringable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IStringable.self)
            }
        }
    }

    deinit {
        _istringable_storage?.release()
    }

    private static var _ihttpTransferCodingHeaderValueFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsWebHttpHeaders_IHttpTransferCodingHeaderValueFactory>? = nil

    internal static var _ihttpTransferCodingHeaderValueFactory: COM.COMInterop<CWinRT.SWRT_WindowsWebHttpHeaders_IHttpTransferCodingHeaderValueFactory> {
        get throws {
            try _ihttpTransferCodingHeaderValueFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Web.Http.Headers.HttpTransferCodingHeaderValue", id: CWinRT.SWRT_WindowsWebHttpHeaders_IHttpTransferCodingHeaderValueFactory.iid)
            }
        }
    }

    private static var _ihttpTransferCodingHeaderValueStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsWebHttpHeaders_IHttpTransferCodingHeaderValueStatics>? = nil

    internal static var _ihttpTransferCodingHeaderValueStatics: COM.COMInterop<CWinRT.SWRT_WindowsWebHttpHeaders_IHttpTransferCodingHeaderValueStatics> {
        get throws {
            try _ihttpTransferCodingHeaderValueStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Web.Http.Headers.HttpTransferCodingHeaderValue", id: CWinRT.SWRT_WindowsWebHttpHeaders_IHttpTransferCodingHeaderValueStatics.iid)
            }
        }
    }
}