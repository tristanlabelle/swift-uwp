// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the value of the **Content-Range** HTTP header on HTTP content in a request or a response.
public final class WindowsWebHttpHeaders_HttpContentRangeHeaderValue: WindowsRuntime.WinRTImport<WindowsWebHttpHeaders_HttpContentRangeHeaderValueProjection>, WindowsFoundation_IStringableProtocol {
    // MARK: Windows.Web.Http.Headers.IHttpContentRangeHeaderValueFactory members

    public convenience init(_ length: Swift.UInt64) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ihttpContentRangeHeaderValueFactory.createFromLength(length)))
    }

    public convenience init(_ from: Swift.UInt64, _ to: Swift.UInt64) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ihttpContentRangeHeaderValueFactory.createFromRange(from, to)))
    }

    public convenience init(_ from: Swift.UInt64, _ to: Swift.UInt64, _ length: Swift.UInt64) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ihttpContentRangeHeaderValueFactory.createFromRangeWithLength(from, to, length)))
    }

    // MARK: Windows.Web.Http.Headers.IHttpContentRangeHeaderValue members

    /// Gets the position at which to start sending data in the **Content-Range** HTTP header.
    /// - Returns: The position, in bytes, at which to start sending data.
    public var firstBytePosition: Swift.UInt64? {
        get throws {
            try _interop.get_FirstBytePosition()
        }
    }

    /// Gets the position at which to stop sending data in the **Content-Range** HTTP header.
    /// - Returns: The position at which to stop sending data.
    public var lastBytePosition: Swift.UInt64? {
        get throws {
            try _interop.get_LastBytePosition()
        }
    }

    /// Gets the length of the full content entity body in the **Content-Range** HTTP header.
    /// - Returns: The length of the full content entity body.
    public var length: Swift.UInt64? {
        get throws {
            try _interop.get_Length()
        }
    }

    /// Gets or sets the value of the range units used in the **Content-Range** HTTP header.
    /// - Returns: The range units used.
    public var unit: Swift.String {
        get throws {
            try _interop.get_Unit()
        }
    }

    /// Gets or sets the value of the range units used in the **Content-Range** HTTP header.
    /// - Returns: The range units used.
    public func unit(_ value: Swift.String) throws {
        try _interop.put_Unit(value)
    }

    // MARK: Windows.Foundation.IStringable members

    /// Returns a string that represents the current HttpContentRangeHeaderValue object.
    /// - Returns: A string that represents the current object.
    public func toString() throws -> Swift.String {
        try _istringable.toString()
    }

    // MARK: Windows.Web.Http.Headers.IHttpContentRangeHeaderValueStatics members

    /// Converts a string to an HttpContentRangeHeaderValue instance.
    /// - Parameter input: A string that represents the content range information in the **Content-Range** HTTP header.
    /// - Returns: An HttpContentRangeHeaderValue instance.
    public static func parse(_ input: Swift.String) throws -> WindowsWebHttpHeaders_HttpContentRangeHeaderValue {
        try COM.NullResult.unwrap(_ihttpContentRangeHeaderValueStatics.parse(input))
    }

    /// Determines whether a string is valid HttpContentRangeHeaderValue information.
    /// - Parameter input: The string to validate.
    /// - Parameter contentRangeHeaderValue: The HttpContentRangeHeaderValue version of the string.
    /// - Returns: **true** if *input* is valid HttpContentRangeHeaderValue information; otherwise, **false**.
    public static func tryParse(_ input: Swift.String, _ contentRangeHeaderValue: inout WindowsWebHttpHeaders_HttpContentRangeHeaderValue?) throws -> Swift.Bool {
        try _ihttpContentRangeHeaderValueStatics.tryParse(input, &contentRangeHeaderValue)
    }

    // MARK: Implementation details

    private var _istringable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IStringable>? = nil

    internal var _istringable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IStringable> {
        get throws {
            try _istringable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IStringable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IStringable.self)
            }
        }
    }

    deinit {
        _istringable_storage?.release()
    }

    private static var _ihttpContentRangeHeaderValueFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsWebHttpHeaders_IHttpContentRangeHeaderValueFactory>? = nil

    internal static var _ihttpContentRangeHeaderValueFactory: COM.COMInterop<CWinRT.SWRT_WindowsWebHttpHeaders_IHttpContentRangeHeaderValueFactory> {
        get throws {
            try _ihttpContentRangeHeaderValueFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Web.Http.Headers.HttpContentRangeHeaderValue", id: CWinRT.SWRT_WindowsWebHttpHeaders_IHttpContentRangeHeaderValueFactory.iid)
            }
        }
    }

    private static var _ihttpContentRangeHeaderValueStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsWebHttpHeaders_IHttpContentRangeHeaderValueStatics>? = nil

    internal static var _ihttpContentRangeHeaderValueStatics: COM.COMInterop<CWinRT.SWRT_WindowsWebHttpHeaders_IHttpContentRangeHeaderValueStatics> {
        get throws {
            try _ihttpContentRangeHeaderValueStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Web.Http.Headers.HttpContentRangeHeaderValue", id: CWinRT.SWRT_WindowsWebHttpHeaders_IHttpContentRangeHeaderValueStatics.iid)
            }
        }
    }
}