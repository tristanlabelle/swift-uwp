// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Defines values that represent hardware features that can be queried for the current device by using the FilterUnsupportedSystemFeaturesAsync method.
public struct WindowsApplicationModelStorePreview_StoreSystemFeature: RawRepresentable, Hashable, Codable {
    public var rawValue: Swift.Int32

    public init(rawValue: Swift.Int32 = 0) {
        self.rawValue = rawValue
    }

    /// The device chipset uses the x86 CPU architecture.
    public static let architectureX86 = Self()

    /// The device chipset uses the x64 CPU architecture.
    public static let architectureX64 = Self(rawValue: 1)

    /// The device chipset uses the ARM CPU architecture.
    public static let architectureArm = Self(rawValue: 2)

    /// The device supports DirectX9.
    public static let directX9 = Self(rawValue: 3)

    /// The device supports DirectX10.
    public static let directX10 = Self(rawValue: 4)

    /// The device supports DirectX11.
    public static let directX11 = Self(rawValue: 5)

    /// The device supports Direct3D 12 feature level 12.0.
    public static let d3D12HardwareFL11 = Self(rawValue: 6)

    /// The device supports Direct3D 12 feature level 12.1.
    public static let d3D12HardwareFL12 = Self(rawValue: 7)

    /// The device has 300 MB of RAM.
    public static let memory300MB = Self(rawValue: 8)

    /// The device has 750 MB of RAM.
    public static let memory750MB = Self(rawValue: 9)

    /// The device has 1 GB of RAM.
    public static let memory1GB = Self(rawValue: 10)

    /// The device has 2 GB of RAM.
    public static let memory2GB = Self(rawValue: 11)

    /// The device has a front-facing camera.
    public static let cameraFront = Self(rawValue: 12)

    /// The device has a rear-facing camera.
    public static let cameraRear = Self(rawValue: 13)

    /// The device has a gyroscope.
    public static let gyroscope = Self(rawValue: 14)

    /// The device supports hover touch.
    public static let hover = Self(rawValue: 15)

    /// The device has a magnetometer.
    public static let magnetometer = Self(rawValue: 16)

    /// The device includes an NFC device.
    public static let nfc = Self(rawValue: 17)

    /// The display resolution is 720p.
    public static let resolution720P = Self(rawValue: 18)

    /// The display resolution is WVGA.
    public static let resolutionWvga = Self(rawValue: 19)

    /// The display resolution is 720p or WVGA.
    public static let resolutionWvgaOr720P = Self(rawValue: 20)

    /// The display resolution is WXGA
    public static let resolutionWxga = Self(rawValue: 21)

    /// The display resolution is WVGA or WXGA.
    public static let resolutionWvgaOrWxga = Self(rawValue: 22)

    /// The display resolution is WXGA or 720p.
    public static let resolutionWxgaOr720P = Self(rawValue: 23)

    /// The device has 4 GB of memory.
    public static let memory4GB = Self(rawValue: 24)

    /// The device has 6 GB of memory.
    public static let memory6GB = Self(rawValue: 25)

    /// The device has 8 GB of memory.
    public static let memory8GB = Self(rawValue: 26)

    /// The device has 12 GB of memory.
    public static let memory12GB = Self(rawValue: 27)

    /// The device has 16 GB of memory.
    public static let memory16GB = Self(rawValue: 28)

    /// The device has 20 GB of memory.
    public static let memory20GB = Self(rawValue: 29)

    /// The device has 2 GB of video memory.
    public static let videoMemory2GB = Self(rawValue: 30)

    /// The device has4 GB of video memory.
    public static let videoMemory4GB = Self(rawValue: 31)

    /// The device has 6 GB of video memory.
    public static let videoMemory6GB = Self(rawValue: 32)

    /// The device has 1 GB of video memory.
    public static let videoMemory1GB = Self(rawValue: 33)

    /// The device chipset uses the ARM64 CPU architecture.
    public static let architectureArm64 = Self(rawValue: 34)
}