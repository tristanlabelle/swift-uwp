// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides parameter info for the Frame.Navigate method. Controls how the transition animation runs during the navigation action.
open class WindowsUIXamlMediaAnimation_NavigationTransitionInfo: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Media.Animation.INavigationTransitionInfoFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlMediaAnimation_NavigationTransitionInfo.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._inavigationTransitionInfoFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Media.Animation.INavigationTransitionInfoOverrides members

    /// When implemented in a derived class, gets the navigation state string that is reported for navigation actions through Frame.Navigate and similar API.
    /// - Returns: The string to use for navigation state info.
    open func getNavigationStateCore() throws -> Swift.String {
        try _inavigationTransitionInfoOverrides.getNavigationStateCore()
    }

    /// When implemented in a derived class, sets the navigation state string that is passed for navigation actions through Frame.Navigate and similar API.
    /// - Parameter navigationState: The string to use for navigation state info.
    open func setNavigationStateCore(_ navigationState: Swift.String) throws {
        try _inavigationTransitionInfoOverrides.setNavigationStateCore(navigationState)
    }

    // MARK: Implementation details

    private var _inavigationTransitionInfo_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_INavigationTransitionInfo>? = nil

    internal var _inavigationTransitionInfo: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_INavigationTransitionInfo> {
        get throws {
            try _inavigationTransitionInfo_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlMediaAnimation_INavigationTransitionInfo.iid).cast(to: CWinRT.SWRT_WindowsUIXamlMediaAnimation_INavigationTransitionInfo.self)
            }
        }
    }

    private var _inavigationTransitionInfoOverrides_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_INavigationTransitionInfoOverrides>? = nil

    internal var _inavigationTransitionInfoOverrides: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_INavigationTransitionInfoOverrides> {
        get throws {
            try _inavigationTransitionInfoOverrides_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlMediaAnimation_INavigationTransitionInfoOverrides.iid).cast(to: CWinRT.SWRT_WindowsUIXamlMediaAnimation_INavigationTransitionInfoOverrides.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlMediaAnimation_INavigationTransitionInfo>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _inavigationTransitionInfo_storage?.release()
        _inavigationTransitionInfoOverrides_storage?.release()
    }

    private static var _inavigationTransitionInfoFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_INavigationTransitionInfoFactory>? = nil

    internal static var _inavigationTransitionInfoFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_INavigationTransitionInfoFactory> {
        get throws {
            try _inavigationTransitionInfoFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo", id: CWinRT.SWRT_WindowsUIXamlMediaAnimation_INavigationTransitionInfoFactory.iid)
            }
        }
    }

    // MARK: Override support

    private var _inavigationTransitionInfoOverrides_outer: COM.COMExportedInterface = .uninitialized

    public override func _queryOverridesInterfacePointer(_ id: COM.COMInterfaceID) throws -> COM.IUnknownPointer? {
        if id == CWinRT.SWRT_WindowsUIXamlMediaAnimation_INavigationTransitionInfoOverrides.iid {
            if !_inavigationTransitionInfoOverrides_outer.isInitialized {
                _inavigationTransitionInfoOverrides_outer = COM.COMExportedInterface(
                    swiftObject: self, virtualTable: &WindowsUIXamlMediaAnimation_NavigationTransitionInfoProjection.VirtualTables.inavigationTransitionInfoOverrides)
            }
            return _inavigationTransitionInfoOverrides_outer.unknownPointer.addingRef()
        }
        return nil
    }
}