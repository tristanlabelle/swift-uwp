// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents an easing function that creates an animated bouncing effect.
public final class WindowsUIXamlMediaAnimation_BounceEase: WindowsRuntime.WinRTImport<WindowsUIXamlMediaAnimation_BounceEaseProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlMediaAnimation_BounceEaseProjection.self))
    }

    // MARK: Windows.UI.Xaml.Media.Animation.IBounceEase members

    /// Gets or sets the number of bounces.
    /// - Returns: The number of bounces. The value must be greater or equal to zero. Negative values will resolve to zero. The default is 3.
    public var bounces: Swift.Int32 {
        get throws {
            try _interop.get_Bounces()
        }
    }

    /// Gets or sets the number of bounces.
    /// - Returns: The number of bounces. The value must be greater or equal to zero. Negative values will resolve to zero. The default is 3.
    public func bounces(_ value: Swift.Int32) throws {
        try _interop.put_Bounces(value)
    }

    /// Gets or sets a value that specifies how bouncy the bounce animation is. Low values of this property result in bounces with little loss of height between bounces (more bouncy) while high values result in dampened bounces (less bouncy).
    /// - Returns: The value that specifies how bouncy the bounce animation is. This value must be positive. The default value is 2.
    public var bounciness: Swift.Double {
        get throws {
            try _interop.get_Bounciness()
        }
    }

    /// Gets or sets a value that specifies how bouncy the bounce animation is. Low values of this property result in bounces with little loss of height between bounces (more bouncy) while high values result in dampened bounces (less bouncy).
    /// - Returns: The value that specifies how bouncy the bounce animation is. This value must be positive. The default value is 2.
    public func bounciness(_ value: Swift.Double) throws {
        try _interop.put_Bounciness(value)
    }

    // MARK: Windows.UI.Xaml.Media.Animation.IBounceEaseStatics members

    /// Identifies the Bounces dependency property.
    /// - Returns: The identifier for the Bounces dependency property.
    public static var bouncesProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ibounceEaseStatics.get_BouncesProperty())
        }
    }

    /// Identifies the Bounciness dependency property.
    /// - Returns: The identifier for the Bounciness dependency property.
    public static var bouncinessProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ibounceEaseStatics.get_BouncinessProperty())
        }
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Animation.BounceEase", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _ibounceEaseStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_IBounceEaseStatics>? = nil

    internal static var _ibounceEaseStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_IBounceEaseStatics> {
        get throws {
            try _ibounceEaseStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Animation.BounceEase", id: CWinRT.SWRT_WindowsUIXamlMediaAnimation_IBounceEaseStatics.iid)
            }
        }
    }
}