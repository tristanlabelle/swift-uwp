// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a visual behavior that occurs for predefined actions or state changes. Specific theme transitions (various Transition derived classes) can be applied to individual elements using the UIElement.Transitions property, or applied for scenario-specific theme transition properties such as ContentControl.ContentTransitions.
open class WindowsUIXamlMediaAnimation_Transition: WindowsRuntime.WinRTComposableClass {
    // MARK: Implementation details

    private var _itransition_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_ITransition>? = nil

    internal var _itransition: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_ITransition> {
        get throws {
            try _itransition_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlMediaAnimation_ITransition.iid).cast(to: CWinRT.SWRT_WindowsUIXamlMediaAnimation_ITransition.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlMediaAnimation_ITransition>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _itransition_storage?.release()
    }

    private static var _itransitionFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_ITransitionFactory>? = nil

    internal static var _itransitionFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_ITransitionFactory> {
        get throws {
            try _itransitionFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Animation.Transition", id: CWinRT.SWRT_WindowsUIXamlMediaAnimation_ITransitionFactory.iid)
            }
        }
    }
}