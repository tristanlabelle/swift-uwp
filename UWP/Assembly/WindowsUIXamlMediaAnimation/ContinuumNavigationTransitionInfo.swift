// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Specifies the object that will fly between pages to provide context during a continuum transition.
public final class WindowsUIXamlMediaAnimation_ContinuumNavigationTransitionInfo: WindowsRuntime.WinRTImport<WindowsUIXamlMediaAnimation_ContinuumNavigationTransitionInfoProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlMediaAnimation_ContinuumNavigationTransitionInfoProjection.self))
    }

    // MARK: Windows.UI.Xaml.Media.Animation.IContinuumNavigationTransitionInfo members

    /// Gets or sets the element that will fly between pages during a continuum navigation transition.
    /// - Returns: The element that will fly between pages during a continuum navigation transition.
    public var exitElement: WindowsUIXaml_UIElement {
        get throws {
            try COM.NullResult.unwrap(_interop.get_ExitElement())
        }
    }

    /// Gets or sets the element that will fly between pages during a continuum navigation transition.
    /// - Returns: The element that will fly between pages during a continuum navigation transition.
    public func exitElement(_ value: WindowsUIXaml_UIElement?) throws {
        try _interop.put_ExitElement(value)
    }

    // MARK: Windows.UI.Xaml.Media.Animation.IContinuumNavigationTransitionInfoStatics members

    /// Identifies the ContinuumNavigationTransitionInfo.ExitElementContainer attached property.
    /// - Returns: The identifier for the ContinuumNavigationTransitionInfo.ExitElementContainer attached property.
    public static var exitElementContainerProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontinuumNavigationTransitionInfoStatics.get_ExitElementContainerProperty())
        }
    }

    /// Identifies the ExitElement dependency property.
    /// - Returns: The identifier for the ExitElement dependency property.
    public static var exitElementProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontinuumNavigationTransitionInfoStatics.get_ExitElementProperty())
        }
    }

    /// Identifies the ContinuumNavigationTransitionInfo.IsEntranceElement attached property.
    /// - Returns: The identifier for the ContinuumNavigationTransitionInfo.IsEntranceElement attached property.
    public static var isEntranceElementProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontinuumNavigationTransitionInfoStatics.get_IsEntranceElementProperty())
        }
    }

    /// Identifies the ContinuumNavigationTransitionInfo.IsExitElement attached property.
    /// - Returns: The identifier for the ContinuumNavigationTransitionInfo.IsExitElement attached property.
    public static var isExitElementProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontinuumNavigationTransitionInfoStatics.get_IsExitElementProperty())
        }
    }

    /// Returns a Boolean value indicating if the specified **UIElement** is the entrance element for the continuum navigation.
    /// - Parameter element: The **UIElement** to check as being the entrance element.
    /// - Returns: Returns **true** if *element* is the entrance element; otherwise **false**.
    public static func getIsEntranceElement(_ element: WindowsUIXaml_UIElement?) throws -> Swift.Bool {
        try _icontinuumNavigationTransitionInfoStatics.getIsEntranceElement(element)
    }

    /// Sets a Boolean value indicating if the specified **UIElement** is the entrance element for the continuum navigation.
    /// - Parameter element: The **UIElement** about which to set the entrance element indicator.
    /// - Parameter value: Set this value to **true** if *element* is the entrance element; otherwise set it to **false**.
    public static func setIsEntranceElement(_ element: WindowsUIXaml_UIElement?, _ value: Swift.Bool) throws {
        try _icontinuumNavigationTransitionInfoStatics.setIsEntranceElement(element, value)
    }

    /// Returns a Boolean value indicating if the specified **UIElement** is the exit element of the continuum navigation.
    /// - Parameter element: The **UIElement** to check as being the exit element.
    /// - Returns: Returns **true** if *element* is the exit element; otherwise **false**.
    public static func getIsExitElement(_ element: WindowsUIXaml_UIElement?) throws -> Swift.Bool {
        try _icontinuumNavigationTransitionInfoStatics.getIsExitElement(element)
    }

    /// Sets a Boolean value indicating if the specified **UIElement** is the exit element for the continuum navigation.
    /// - Parameter element: The **UIElement** about which to set the exit element indicator.
    /// - Parameter value: Set this value to **true** if *element* is the exit element; otherwise set it to **false**.
    public static func setIsExitElement(_ element: WindowsUIXaml_UIElement?, _ value: Swift.Bool) throws {
        try _icontinuumNavigationTransitionInfoStatics.setIsExitElement(element, value)
    }

    /// Returns a Boolean value indicating if the specified element is the ExitElement container.
    /// - Parameter element: The element to be checked as being the container.
    /// - Returns: Returns **true** if *element* is the container; otherwise **false**.
    public static func getExitElementContainer(_ element: WindowsUIXamlControls_ListViewBase?) throws -> Swift.Bool {
        try _icontinuumNavigationTransitionInfoStatics.getExitElementContainer(element)
    }

    /// Sets a Boolean value indicating that the specified element is the exit element container for the continuum navigation.
    /// - Parameter element: The element about which to set the exit element container indicator.
    /// - Parameter value: Set this value to **true** if *element* is the exit element; otherwise set it to **false**.
    public static func setExitElementContainer(_ element: WindowsUIXamlControls_ListViewBase?, _ value: Swift.Bool) throws {
        try _icontinuumNavigationTransitionInfoStatics.setExitElementContainer(element, value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _icontinuumNavigationTransitionInfoStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_IContinuumNavigationTransitionInfoStatics>? = nil

    internal static var _icontinuumNavigationTransitionInfoStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_IContinuumNavigationTransitionInfoStatics> {
        get throws {
            try _icontinuumNavigationTransitionInfoStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo", id: CWinRT.SWRT_WindowsUIXamlMediaAnimation_IContinuumNavigationTransitionInfoStatics.iid)
            }
        }
    }
}