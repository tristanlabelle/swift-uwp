// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a service that provides properties and methods to display a ConnectedAnimation.
public final class WindowsUIXamlMediaAnimation_ConnectedAnimationService: WindowsRuntime.WinRTImport<WindowsUIXamlMediaAnimation_ConnectedAnimationServiceProjection> {
    // MARK: Windows.UI.Xaml.Media.Animation.IConnectedAnimationService members

    /// Gets or sets the default time that the animation runs.
    /// - Returns: The default time that the animation runs.
    public var defaultDuration: WindowsFoundation_TimeSpan {
        get throws {
            try _interop.get_DefaultDuration()
        }
    }

    /// Gets or sets the default time that the animation runs.
    /// - Returns: The default time that the animation runs.
    public func defaultDuration(_ value: WindowsFoundation_TimeSpan) throws {
        try _interop.put_DefaultDuration(value)
    }

    /// Gets or sets the default CompositionEasingFunction used by the animation.
    /// - Returns: The default CompositionEasingFunction used by the animation.
    public var defaultEasingFunction: WindowsUIComposition_CompositionEasingFunction {
        get throws {
            try COM.NullResult.unwrap(_interop.get_DefaultEasingFunction())
        }
    }

    /// Gets or sets the default CompositionEasingFunction used by the animation.
    /// - Returns: The default CompositionEasingFunction used by the animation.
    public func defaultEasingFunction(_ value: WindowsUIComposition_CompositionEasingFunction?) throws {
        try _interop.put_DefaultEasingFunction(value)
    }

    /// Returns a connected animation that's associated with the specified key and source element.
    /// - Parameter key: The key for the animation.
    /// - Parameter source: The element that is animated out of view.
    /// - Returns: The animation with the specified key.
    public func prepareToAnimate(_ key: Swift.String, _ source: WindowsUIXaml_UIElement?) throws -> WindowsUIXamlMediaAnimation_ConnectedAnimation {
        try COM.NullResult.unwrap(_interop.prepareToAnimate(key, source))
    }

    /// Returns the animation with the specified key.
    /// - Parameter key: The key for the animation.
    /// - Returns: The animation with the specified key; or **null** if no animation has been prepared for that key, or if the animation is no longer active.
    public func getAnimation(_ key: Swift.String) throws -> WindowsUIXamlMediaAnimation_ConnectedAnimation {
        try COM.NullResult.unwrap(_interop.getAnimation(key))
    }

    // MARK: Windows.UI.Xaml.Media.Animation.IConnectedAnimationServiceStatics members

    /// Returns an instance of ConnectedAnimationService for the current view.
    /// - Returns: An instance of ConnectedAnimationService for the current view.
    public static func getForCurrentView() throws -> WindowsUIXamlMediaAnimation_ConnectedAnimationService {
        try COM.NullResult.unwrap(_iconnectedAnimationServiceStatics.getForCurrentView())
    }

    // MARK: Implementation details

    private static var _iconnectedAnimationServiceStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_IConnectedAnimationServiceStatics>? = nil

    internal static var _iconnectedAnimationServiceStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_IConnectedAnimationServiceStatics> {
        get throws {
            try _iconnectedAnimationServiceStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Animation.ConnectedAnimationService", id: CWinRT.SWRT_WindowsUIXamlMediaAnimation_IConnectedAnimationServiceStatics.iid)
            }
        }
    }
}