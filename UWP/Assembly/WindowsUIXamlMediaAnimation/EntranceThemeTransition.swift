// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides the animated transition behavior on controls when they first appear. You can use this on individual objects or on containers of objects. In the latter case, child elements will animate into view in sequence rather than all at the same time.
public final class WindowsUIXamlMediaAnimation_EntranceThemeTransition: WindowsRuntime.WinRTImport<WindowsUIXamlMediaAnimation_EntranceThemeTransitionProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlMediaAnimation_EntranceThemeTransitionProjection.self))
    }

    // MARK: Windows.UI.Xaml.Media.Animation.IEntranceThemeTransition members

    /// Gets or sets the distance by which the target is translated in the horizontal direction when the animation is active.
    /// - Returns: The horizontal offset translation, in pixels.
    public var fromHorizontalOffset: Swift.Double {
        get throws {
            try _interop.get_FromHorizontalOffset()
        }
    }

    /// Gets or sets the distance by which the target is translated in the horizontal direction when the animation is active.
    /// - Returns: The horizontal offset translation, in pixels.
    public func fromHorizontalOffset(_ value: Swift.Double) throws {
        try _interop.put_FromHorizontalOffset(value)
    }

    /// Gets or sets the distance by which the target is translated in the vertical direction when the animation is active.
    /// - Returns: The vertical offset translation, in pixels.
    public var fromVerticalOffset: Swift.Double {
        get throws {
            try _interop.get_FromVerticalOffset()
        }
    }

    /// Gets or sets the distance by which the target is translated in the vertical direction when the animation is active.
    /// - Returns: The vertical offset translation, in pixels.
    public func fromVerticalOffset(_ value: Swift.Double) throws {
        try _interop.put_FromVerticalOffset(value)
    }

    /// Gets or sets a value that determines whether the transition staggers rendering of multiple items, or renders all items at once.
    /// - Returns: **true** if the animation staggers rendering of multiple items. **false** if the animation renders all items at once.
    public var isStaggeringEnabled: Swift.Bool {
        get throws {
            try _interop.get_IsStaggeringEnabled()
        }
    }

    /// Gets or sets a value that determines whether the transition staggers rendering of multiple items, or renders all items at once.
    /// - Returns: **true** if the animation staggers rendering of multiple items. **false** if the animation renders all items at once.
    public func isStaggeringEnabled(_ value: Swift.Bool) throws {
        try _interop.put_IsStaggeringEnabled(value)
    }

    // MARK: Windows.UI.Xaml.Media.Animation.IEntranceThemeTransitionStatics members

    /// Identifies the FromHorizontalOffset dependency property.
    /// - Returns: The identifier for the FromHorizontalOffset dependency property.
    public static var fromHorizontalOffsetProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ientranceThemeTransitionStatics.get_FromHorizontalOffsetProperty())
        }
    }

    /// Identifies the FromVerticalOffset dependency property.
    /// - Returns: The identifier for the FromVerticalOffset dependency property.
    public static var fromVerticalOffsetProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ientranceThemeTransitionStatics.get_FromVerticalOffsetProperty())
        }
    }

    /// Identifies the IsStaggeringEnabled dependency property.
    /// - Returns: The identifier for the IsStaggeringEnabled dependency property.
    public static var isStaggeringEnabledProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ientranceThemeTransitionStatics.get_IsStaggeringEnabledProperty())
        }
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Animation.EntranceThemeTransition", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _ientranceThemeTransitionStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_IEntranceThemeTransitionStatics>? = nil

    internal static var _ientranceThemeTransitionStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_IEntranceThemeTransitionStatics> {
        get throws {
            try _ientranceThemeTransitionStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Animation.EntranceThemeTransition", id: CWinRT.SWRT_WindowsUIXamlMediaAnimation_IEntranceThemeTransitionStatics.iid)
            }
        }
    }
}