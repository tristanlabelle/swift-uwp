// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides common parameters for navigation transition animations.
public final class WindowsUIXamlMediaAnimation_CommonNavigationTransitionInfo: WindowsRuntime.WinRTImport<WindowsUIXamlMediaAnimation_CommonNavigationTransitionInfoProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlMediaAnimation_CommonNavigationTransitionInfoProjection.self))
    }

    // MARK: Windows.UI.Xaml.Media.Animation.ICommonNavigationTransitionInfo members

    /// Gets or sets a Boolean value indicating if staggering is enabled for the navigation transition.
    /// - Returns: A Boolean value indicating if staggering is enabled for the navigation transition.
    public var isStaggeringEnabled: Swift.Bool {
        get throws {
            try _interop.get_IsStaggeringEnabled()
        }
    }

    /// Gets or sets a Boolean value indicating if staggering is enabled for the navigation transition.
    /// - Returns: A Boolean value indicating if staggering is enabled for the navigation transition.
    public func isStaggeringEnabled(_ value: Swift.Bool) throws {
        try _interop.put_IsStaggeringEnabled(value)
    }

    // MARK: Windows.UI.Xaml.Media.Animation.ICommonNavigationTransitionInfoStatics members

    /// Identifies the CommonNavigationTransitionInfo.IsStaggerElement attached property.
    /// - Returns: The identifier for the CommonNavigationTransitionInfo.IsStaggerElement attached property.
    public static var isStaggerElementProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icommonNavigationTransitionInfoStatics.get_IsStaggerElementProperty())
        }
    }

    /// Identifies the IsStaggeringEnabled dependency property.
    /// - Returns: The identifier for the IsStaggeringEnabled dependency property.
    public static var isStaggeringEnabledProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icommonNavigationTransitionInfoStatics.get_IsStaggeringEnabledProperty())
        }
    }

    /// Returns a Boolean value indicating if the specified **UIElement** is the stagger element for the navigation transition.
    /// - Parameter element: The **UIElement** to check as being the stagger element.
    /// - Returns: Returns **true** if *element* is the stagger element; otherwise **false**.
    public static func getIsStaggerElement(_ element: WindowsUIXaml_UIElement?) throws -> Swift.Bool {
        try _icommonNavigationTransitionInfoStatics.getIsStaggerElement(element)
    }

    /// Sets a Boolean value indicating if the specified **UIElement** is the stagger element for the navigation transition.
    /// - Parameter element: The **UIElement** about which to set the stagger element indicator.
    /// - Parameter value: Set this value to **true** if *element* is the stagger element; otherwise set it to **false**.
    public static func setIsStaggerElement(_ element: WindowsUIXaml_UIElement?, _ value: Swift.Bool) throws {
        try _icommonNavigationTransitionInfoStatics.setIsStaggerElement(element, value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _icommonNavigationTransitionInfoStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_ICommonNavigationTransitionInfoStatics>? = nil

    internal static var _icommonNavigationTransitionInfoStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_ICommonNavigationTransitionInfoStatics> {
        get throws {
            try _icommonNavigationTransitionInfoStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo", id: CWinRT.SWRT_WindowsUIXamlMediaAnimation_ICommonNavigationTransitionInfoStatics.iid)
            }
        }
    }
}