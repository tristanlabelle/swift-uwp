// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Defines a duration and other behavior properties for a Windows Runtime animation. Timeline is the base class for Storyboard and all the Windows Runtime animation types, including those from the animation library and those used for custom animations in visual states or page-level XAML.
open class WindowsUIXamlMediaAnimation_Timeline: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Media.Animation.ITimelineFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlMediaAnimation_Timeline.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._itimelineFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Media.Animation.ITimeline members

    /// Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.
    /// - Returns: **true** if the timeline plays in reverse at the end of each iteration; otherwise, **false**. The default value is **false**.
    public var autoReverse: Swift.Bool {
        get throws {
            try _itimeline.get_AutoReverse()
        }
    }

    /// Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.
    /// - Returns: **true** if the timeline plays in reverse at the end of each iteration; otherwise, **false**. The default value is **false**.
    public func autoReverse(_ value: Swift.Bool) throws {
        try _itimeline.put_AutoReverse(value)
    }

    /// Gets or sets the time at which this Timeline should begin.
    /// - Returns: The start time of the time line. The default value is zero. 
    public var beginTime: WindowsFoundation_IReference<WindowsFoundation_TimeSpan>? {
        get throws {
            try _itimeline.get_BeginTime()
        }
    }

    /// Gets or sets the time at which this Timeline should begin.
    /// - Returns: The start time of the time line. The default value is zero. 
    public func beginTime(_ value: WindowsFoundation_IReference<WindowsFoundation_TimeSpan>?) throws {
        try _itimeline.put_BeginTime(value)
    }

    /// Gets or sets the length of time for which this timeline plays, not counting repetitions.
    /// - Returns: The timeline's simple duration: the amount of time this timeline takes to complete a single forward iteration. The default value is a Duration that evaluates as Automatic.
    public var duration: WindowsUIXaml_Duration {
        get throws {
            try _itimeline.get_Duration()
        }
    }

    /// Gets or sets the length of time for which this timeline plays, not counting repetitions.
    /// - Returns: The timeline's simple duration: the amount of time this timeline takes to complete a single forward iteration. The default value is a Duration that evaluates as Automatic.
    public func duration(_ value: WindowsUIXaml_Duration) throws {
        try _itimeline.put_Duration(value)
    }

    /// Gets or sets a value that specifies how the animation behaves after it reaches the end of its active period.
    /// - Returns: A value that specifies how the timeline behaves after it reaches the end of its active period but its parent is inside its active or fill period. The default value is **HoldEnd**.
    public var fillBehavior: WindowsUIXamlMediaAnimation_FillBehavior {
        get throws {
            try _itimeline.get_FillBehavior()
        }
    }

    /// Gets or sets a value that specifies how the animation behaves after it reaches the end of its active period.
    /// - Returns: A value that specifies how the timeline behaves after it reaches the end of its active period but its parent is inside its active or fill period. The default value is **HoldEnd**.
    public func fillBehavior(_ value: WindowsUIXamlMediaAnimation_FillBehavior) throws {
        try _itimeline.put_FillBehavior(value)
    }

    /// Gets or sets the repeating behavior of this timeline.
    /// - Returns: An iteration **Count** that specifies the number of times the timeline should play, a **TimeSpan** value that specifies the total length of this timeline's active period, or the special value **Forever**, which specifies that the timeline should repeat indefinitely. The default value is a RepeatBehavior with a **Count** value of 1, which indicates that the timeline plays once.
    public var repeatBehavior: WindowsUIXamlMediaAnimation_RepeatBehavior {
        get throws {
            try _itimeline.get_RepeatBehavior()
        }
    }

    /// Gets or sets the repeating behavior of this timeline.
    /// - Returns: An iteration **Count** that specifies the number of times the timeline should play, a **TimeSpan** value that specifies the total length of this timeline's active period, or the special value **Forever**, which specifies that the timeline should repeat indefinitely. The default value is a RepeatBehavior with a **Count** value of 1, which indicates that the timeline plays once.
    public func repeatBehavior(_ value: WindowsUIXamlMediaAnimation_RepeatBehavior) throws {
        try _itimeline.put_RepeatBehavior(value)
    }

    /// Gets or sets the rate, relative to its parent, at which time progresses for this Timeline.
    /// - Returns: A finite value greater than 0 that specifies the rate at which time progresses for this timeline, relative to the speed of the timeline's parent. If this timeline is a root timeline, specifies the default timeline speed. The value is expressed as a factor where 1 represents normal speed, 2 is double speed, 0.5 is half speed, and so on. The default value is 1.
    public var speedRatio: Swift.Double {
        get throws {
            try _itimeline.get_SpeedRatio()
        }
    }

    /// Gets or sets the rate, relative to its parent, at which time progresses for this Timeline.
    /// - Returns: A finite value greater than 0 that specifies the rate at which time progresses for this timeline, relative to the speed of the timeline's parent. If this timeline is a root timeline, specifies the default timeline speed. The value is expressed as a factor where 1 represents normal speed, 2 is double speed, 0.5 is half speed, and so on. The default value is 1.
    public func speedRatio(_ value: Swift.Double) throws {
        try _itimeline.put_SpeedRatio(value)
    }

    /// Occurs when the Storyboard object has completed playing.
    public func completed(adding handler: WindowsFoundation_EventHandler<WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _itimeline.add_Completed(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: completed)
    }

    public func completed(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _itimeline.remove_Completed(token)
    }

    // MARK: Windows.UI.Xaml.Media.Animation.ITimelineStatics members

    /// Gets or sets a value that determines whether dependent animations should be permitted to run, throughout the app.
    /// - Returns: **true** if animations can run in the app for dependent animation cases. Otherwise, **false**. The default is **true**.
    public static var allowDependentAnimations: Swift.Bool {
        get throws {
            try _itimelineStatics.get_AllowDependentAnimations()
        }
    }

    /// Gets or sets a value that determines whether dependent animations should be permitted to run, throughout the app.
    /// - Returns: **true** if animations can run in the app for dependent animation cases. Otherwise, **false**. The default is **true**.
    public static func allowDependentAnimations(_ value: Swift.Bool) throws {
        try _itimelineStatics.put_AllowDependentAnimations(value)
    }

    /// Identifies the AutoReverse  dependency property.
    /// - Returns: The identifier for the AutoReverse  dependency property.
    public static var autoReverseProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itimelineStatics.get_AutoReverseProperty())
        }
    }

    /// Identifies the BeginTime  dependency property.
    /// - Returns: The identifier for the BeginTime  dependency property.
    public static var beginTimeProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itimelineStatics.get_BeginTimeProperty())
        }
    }

    /// Identifies the Duration  dependency property.
    /// - Returns: The identifier for the Duration  dependency property.
    public static var durationProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itimelineStatics.get_DurationProperty())
        }
    }

    /// Identifies the FillBehavior  dependency property.
    /// - Returns: The identifier for the FillBehavior  dependency property.
    public static var fillBehaviorProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itimelineStatics.get_FillBehaviorProperty())
        }
    }

    /// Identifies the RepeatBehavior  dependency property.
    /// - Returns: The identifier for the RepeatBehavior  dependency property.
    public static var repeatBehaviorProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itimelineStatics.get_RepeatBehaviorProperty())
        }
    }

    /// Identifies for the SpeedRatio  dependency property.
    /// - Returns: The identifier for the SpeedRatio  dependency property.
    public static var speedRatioProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itimelineStatics.get_SpeedRatioProperty())
        }
    }

    // MARK: Implementation details

    private var _itimeline_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_ITimeline>? = nil

    internal var _itimeline: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_ITimeline> {
        get throws {
            try _itimeline_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlMediaAnimation_ITimeline.iid).cast(to: CWinRT.SWRT_WindowsUIXamlMediaAnimation_ITimeline.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlMediaAnimation_ITimeline>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _itimeline_storage?.release()
    }

    private static var _itimelineFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_ITimelineFactory>? = nil

    internal static var _itimelineFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_ITimelineFactory> {
        get throws {
            try _itimelineFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Animation.Timeline", id: CWinRT.SWRT_WindowsUIXamlMediaAnimation_ITimelineFactory.iid)
            }
        }
    }

    private static var _itimelineStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_ITimelineStatics>? = nil

    internal static var _itimelineStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_ITimelineStatics> {
        get throws {
            try _itimelineStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Animation.Timeline", id: CWinRT.SWRT_WindowsUIXamlMediaAnimation_ITimelineStatics.iid)
            }
        }
    }
}