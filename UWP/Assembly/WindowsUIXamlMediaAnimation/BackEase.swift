// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents an easing function that changes a value in the opposite direction of the main function during part of a duration, then reverses and finishes the function-over-time behavior in a conventional way.
public final class WindowsUIXamlMediaAnimation_BackEase: WindowsRuntime.WinRTImport<WindowsUIXamlMediaAnimation_BackEaseProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlMediaAnimation_BackEaseProjection.self))
    }

    // MARK: Windows.UI.Xaml.Media.Animation.IBackEase members

    /// Gets or sets the amplitude of retraction associated with a BackEase animation.
    /// - Returns: The amplitude of retraction associated with a BackEase animation. This value must be greater than or equal to 0. The default is 1.
    public var amplitude: Swift.Double {
        get throws {
            try _interop.get_Amplitude()
        }
    }

    /// Gets or sets the amplitude of retraction associated with a BackEase animation.
    /// - Returns: The amplitude of retraction associated with a BackEase animation. This value must be greater than or equal to 0. The default is 1.
    public func amplitude(_ value: Swift.Double) throws {
        try _interop.put_Amplitude(value)
    }

    // MARK: Windows.UI.Xaml.Media.Animation.IBackEaseStatics members

    /// Identifies the Amplitude dependency property.
    /// - Returns: The identifier for the Amplitude dependency property.
    public static var amplitudeProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ibackEaseStatics.get_AmplitudeProperty())
        }
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Animation.BackEase", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _ibackEaseStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_IBackEaseStatics>? = nil

    internal static var _ibackEaseStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_IBackEaseStatics> {
        get throws {
            try _ibackEaseStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Animation.BackEase", id: CWinRT.SWRT_WindowsUIXamlMediaAnimation_IBackEaseStatics.iid)
            }
        }
    }
}