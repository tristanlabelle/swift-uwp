// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the preconfigured animation that conceals a target UI using a *split* animation.
public final class WindowsUIXamlMediaAnimation_SplitCloseThemeAnimation: WindowsRuntime.WinRTImport<WindowsUIXamlMediaAnimation_SplitCloseThemeAnimationProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlMediaAnimation_SplitCloseThemeAnimationProjection.self))
    }

    // MARK: Windows.UI.Xaml.Media.Animation.ISplitCloseThemeAnimation members

    /// Gets or sets the initial size of the target element in the animation direction.
    /// - Returns: The initial size of the target in pixels.
    public var closedLength: Swift.Double {
        get throws {
            try _interop.get_ClosedLength()
        }
    }

    /// Gets or sets the initial size of the target element in the animation direction.
    /// - Returns: The initial size of the target in pixels.
    public func closedLength(_ value: Swift.Double) throws {
        try _interop.put_ClosedLength(value)
    }

    /// Gets or sets the UI element that specifies the initial clip size.
    /// - Returns: The UI element that specifies the initial clip size.
    public var closedTarget: WindowsUIXaml_DependencyObject {
        get throws {
            try COM.NullResult.unwrap(_interop.get_ClosedTarget())
        }
    }

    /// Gets or sets the UI element that specifies the initial clip size.
    /// - Returns: The UI element that specifies the initial clip size.
    public func closedTarget(_ value: WindowsUIXaml_DependencyObject?) throws {
        try _interop.put_ClosedTarget(value)
    }

    /// Gets or sets the identifying name of the UI element that specifies the initial clip size.
    /// - Returns: The reference name. This is typically the **x:Name** of the relevant element as declared in XAML.
    public var closedTargetName: Swift.String {
        get throws {
            try _interop.get_ClosedTargetName()
        }
    }

    /// Gets or sets the identifying name of the UI element that specifies the initial clip size.
    /// - Returns: The reference name. This is typically the **x:Name** of the relevant element as declared in XAML.
    public func closedTargetName(_ value: Swift.String) throws {
        try _interop.put_ClosedTargetName(value)
    }

    /// Gets or sets the UI element that will be translated. Typically this is a child/part of the element identified by OpenedTargetName or OpenedTarget.
    /// - Returns: The UI element that will be translated.
    public var contentTarget: WindowsUIXaml_DependencyObject {
        get throws {
            try COM.NullResult.unwrap(_interop.get_ContentTarget())
        }
    }

    /// Gets or sets the UI element that will be translated. Typically this is a child/part of the element identified by OpenedTargetName or OpenedTarget.
    /// - Returns: The UI element that will be translated.
    public func contentTarget(_ value: WindowsUIXaml_DependencyObject?) throws {
        try _interop.put_ContentTarget(value)
    }

    /// Gets or sets the identifying name of the UI element that will be translated. Typically this is a child/part of the element identified by OpenedTargetName.
    /// - Returns: The name of the UI element that will be translated.
    public var contentTargetName: Swift.String {
        get throws {
            try _interop.get_ContentTargetName()
        }
    }

    /// Gets or sets the identifying name of the UI element that will be translated. Typically this is a child/part of the element identified by OpenedTargetName.
    /// - Returns: The name of the UI element that will be translated.
    public func contentTargetName(_ value: Swift.String) throws {
        try _interop.put_ContentTargetName(value)
    }

    /// Gets or sets a value that determines which direction the content should translate when the animation runs.
    /// - Returns: A value of the enumeration.
    public var contentTranslationDirection: WindowsUIXamlControlsPrimitives_AnimationDirection {
        get throws {
            try _interop.get_ContentTranslationDirection()
        }
    }

    /// Gets or sets a value that determines which direction the content should translate when the animation runs.
    /// - Returns: A value of the enumeration.
    public func contentTranslationDirection(_ value: WindowsUIXamlControlsPrimitives_AnimationDirection) throws {
        try _interop.put_ContentTranslationDirection(value)
    }

    /// Gets or sets the pixels to translate by when the animation runs.
    /// - Returns: A distance in pixels.
    public var contentTranslationOffset: Swift.Double {
        get throws {
            try _interop.get_ContentTranslationOffset()
        }
    }

    /// Gets or sets the pixels to translate by when the animation runs.
    /// - Returns: A distance in pixels.
    public func contentTranslationOffset(_ value: Swift.Double) throws {
        try _interop.put_ContentTranslationOffset(value)
    }

    /// Gets or sets an offset from the center of the *opened* target.
    /// - Returns: An offset in pixels. The default is 0.
    public var offsetFromCenter: Swift.Double {
        get throws {
            try _interop.get_OffsetFromCenter()
        }
    }

    /// Gets or sets an offset from the center of the *opened* target.
    /// - Returns: An offset in pixels. The default is 0.
    public func offsetFromCenter(_ value: Swift.Double) throws {
        try _interop.put_OffsetFromCenter(value)
    }

    /// Gets or sets the final size of the target UI element.
    /// - Returns: The final size. If left unset, the value defaults to the size of the opened target.
    public var openedLength: Swift.Double {
        get throws {
            try _interop.get_OpenedLength()
        }
    }

    /// Gets or sets the final size of the target UI element.
    /// - Returns: The final size. If left unset, the value defaults to the size of the opened target.
    public func openedLength(_ value: Swift.Double) throws {
        try _interop.put_OpenedLength(value)
    }

    /// Gets or sets the UI element that will be clipped.
    /// - Returns: The UI element that will be clipped.
    public var openedTarget: WindowsUIXaml_DependencyObject {
        get throws {
            try COM.NullResult.unwrap(_interop.get_OpenedTarget())
        }
    }

    /// Gets or sets the UI element that will be clipped.
    /// - Returns: The UI element that will be clipped.
    public func openedTarget(_ value: WindowsUIXaml_DependencyObject?) throws {
        try _interop.put_OpenedTarget(value)
    }

    /// Gets or sets the identifying name of the UI element that will be clipped.
    /// - Returns: The reference name. This is typically the **x:Name** of the relevant element as declared in XAML.
    public var openedTargetName: Swift.String {
        get throws {
            try _interop.get_OpenedTargetName()
        }
    }

    /// Gets or sets the identifying name of the UI element that will be clipped.
    /// - Returns: The reference name. This is typically the **x:Name** of the relevant element as declared in XAML.
    public func openedTargetName(_ value: Swift.String) throws {
        try _interop.put_OpenedTargetName(value)
    }

    // MARK: Windows.UI.Xaml.Media.Animation.ISplitCloseThemeAnimationStatics members

    /// Identifies the ClosedLength dependency property.
    /// - Returns: The identifier for the ClosedLength dependency property.
    public static var closedLengthProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_isplitCloseThemeAnimationStatics.get_ClosedLengthProperty())
        }
    }

    /// Identifies the ClosedTargetName dependency property.
    /// - Returns: The identifier for the ClosedTargetName dependency property.
    public static var closedTargetNameProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_isplitCloseThemeAnimationStatics.get_ClosedTargetNameProperty())
        }
    }

    /// Identifies the ClosedTarget dependency property.
    /// - Returns: The identifier for the ClosedTarget dependency property.
    public static var closedTargetProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_isplitCloseThemeAnimationStatics.get_ClosedTargetProperty())
        }
    }

    /// Identifies the ContentTargetName dependency property.
    /// - Returns: The identifier for the ContentTargetName dependency property.
    public static var contentTargetNameProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_isplitCloseThemeAnimationStatics.get_ContentTargetNameProperty())
        }
    }

    /// Identifies the ContentTarget dependency property.
    /// - Returns: The identifier for the ContentTarget dependency property.
    public static var contentTargetProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_isplitCloseThemeAnimationStatics.get_ContentTargetProperty())
        }
    }

    /// Identifies the ContentTranslationDirection dependency property.
    /// - Returns: The identifier for the ContentTranslationDirection dependency property.
    public static var contentTranslationDirectionProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_isplitCloseThemeAnimationStatics.get_ContentTranslationDirectionProperty())
        }
    }

    /// Identifies the ContentTranslationOffset dependency property.
    /// - Returns: The identifier for the ContentTranslationOffset dependency property.
    public static var contentTranslationOffsetProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_isplitCloseThemeAnimationStatics.get_ContentTranslationOffsetProperty())
        }
    }

    /// Identifies the OffsetFromCenter dependency property.
    /// - Returns: The identifier for the OffsetFromCenter dependency property.
    public static var offsetFromCenterProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_isplitCloseThemeAnimationStatics.get_OffsetFromCenterProperty())
        }
    }

    /// Identifies the OpenedLength dependency property.
    /// - Returns: The identifier for the OpenedLength dependency property.
    public static var openedLengthProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_isplitCloseThemeAnimationStatics.get_OpenedLengthProperty())
        }
    }

    /// Identifies the OpenedTargetName dependency property.
    /// - Returns: The identifier for the OpenedTargetName dependency property.
    public static var openedTargetNameProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_isplitCloseThemeAnimationStatics.get_OpenedTargetNameProperty())
        }
    }

    /// Identifies the OpenedTarget dependency property.
    /// - Returns: The identifier for the OpenedTarget dependency property.
    public static var openedTargetProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_isplitCloseThemeAnimationStatics.get_OpenedTargetProperty())
        }
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _isplitCloseThemeAnimationStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_ISplitCloseThemeAnimationStatics>? = nil

    internal static var _isplitCloseThemeAnimationStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_ISplitCloseThemeAnimationStatics> {
        get throws {
            try _isplitCloseThemeAnimationStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation", id: CWinRT.SWRT_WindowsUIXamlMediaAnimation_ISplitCloseThemeAnimationStatics.iid)
            }
        }
    }
}