// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents an easing function that creates an animation that accelerates and/or decelerates using an exponential formula.
public final class WindowsUIXamlMediaAnimation_ExponentialEase: WindowsRuntime.WinRTImport<WindowsUIXamlMediaAnimation_ExponentialEaseProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlMediaAnimation_ExponentialEaseProjection.self))
    }

    // MARK: Windows.UI.Xaml.Media.Animation.IExponentialEase members

    /// Gets or sets the exponent used to determine the interpolation of the animation.
    /// - Returns: The exponent used to determine the interpolation of the animation. The default is 2.
    public var exponent: Swift.Double {
        get throws {
            try _interop.get_Exponent()
        }
    }

    /// Gets or sets the exponent used to determine the interpolation of the animation.
    /// - Returns: The exponent used to determine the interpolation of the animation. The default is 2.
    public func exponent(_ value: Swift.Double) throws {
        try _interop.put_Exponent(value)
    }

    // MARK: Windows.UI.Xaml.Media.Animation.IExponentialEaseStatics members

    /// Identifies the Exponent  dependency property.
    /// - Returns: The identifier for the Exponent  dependency property.
    public static var exponentProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iexponentialEaseStatics.get_ExponentProperty())
        }
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Animation.ExponentialEase", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _iexponentialEaseStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_IExponentialEaseStatics>? = nil

    internal static var _iexponentialEaseStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaAnimation_IExponentialEaseStatics> {
        get throws {
            try _iexponentialEaseStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Animation.ExponentialEase", id: CWinRT.SWRT_WindowsUIXamlMediaAnimation_IExponentialEaseStatics.iid)
            }
        }
    }
}