// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Contains basic pointer information common to all pointer types.
public struct WindowsUIInputPreviewInjection_InjectedInputPointerInfo: Hashable, Codable {
    /// A unique identifier for the lifetime of the pointer. A pointer is created when it enters detection range and destroyed when it leaves detection range. If a pointer goes out of detection range and then returns, it is treated as a new pointer and might be assigned a new identifier.
    public var pointerId: Swift.UInt32

    /// The various options, or modifiers, used to simulate pointer input through InjectedInputMouseInfo, InjectedInputPenInfo, and InjectedInputTouchInfo.
    public var pointerOptions: WindowsUIInputPreviewInjection_InjectedInputPointerOptions

    /// The screen coordinates of the pointer in device-independent pixel (DIP).
    public var pixelLocation: WindowsUIInputPreviewInjection_InjectedInputPoint

    /// The baseline, or reference value, in milliseconds, for timed input events such as a double click/tap.
    public var timeOffsetInMilliseconds: Swift.UInt32

    /// A high resolution (less than one microsecond) time stamp used for time-interval measurements.
    public var performanceCount: Swift.UInt64

    public init() {
        self.pointerId = 0
        self.pointerOptions = .init()
        self.pixelLocation = .init()
        self.timeOffsetInMilliseconds = 0
        self.performanceCount = 0
    }

    public init(pointerId: Swift.UInt32, pointerOptions: WindowsUIInputPreviewInjection_InjectedInputPointerOptions, pixelLocation: WindowsUIInputPreviewInjection_InjectedInputPoint, timeOffsetInMilliseconds: Swift.UInt32, performanceCount: Swift.UInt64) {
        self.pointerId = pointerId
        self.pointerOptions = pointerOptions
        self.pixelLocation = pixelLocation
        self.timeOffsetInMilliseconds = timeOffsetInMilliseconds
        self.performanceCount = performanceCount
    }
}