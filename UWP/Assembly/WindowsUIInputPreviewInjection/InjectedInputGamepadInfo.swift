// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents programmatically generated gamepad input.
public final class WindowsUIInputPreviewInjection_InjectedInputGamepadInfo: WindowsRuntime.WinRTImport<WindowsUIInputPreviewInjection_InjectedInputGamepadInfoProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIInputPreviewInjection_InjectedInputGamepadInfoProjection.self))
    }

    // MARK: Windows.UI.Input.Preview.Injection.IInjectedInputGamepadInfoFactory members

    public convenience init(_ reading: WindowsGamingInput_GamepadReading) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iinjectedInputGamepadInfoFactory.createInstanceFromGamepadReading(reading)))
    }

    // MARK: Windows.UI.Input.Preview.Injection.IInjectedInputGamepadInfo members

    /// Gets or sets the gamepad buttons used for input injection.
    /// - Returns: One or more gamepad buttons used for input injection.
    public var buttons: WindowsGamingInput_GamepadButtons {
        get throws {
            try _interop.get_Buttons()
        }
    }

    /// Gets or sets the gamepad buttons used for input injection.
    /// - Returns: One or more gamepad buttons used for input injection.
    public func buttons(_ value: WindowsGamingInput_GamepadButtons) throws {
        try _interop.put_Buttons(value)
    }

    /// Gets or sets the position of the left stick on the X-axis.
    /// - Returns: A value between -1.0 (pressed to the left) and 1.0 (pressed to the right).
    public var leftThumbstickX: Swift.Double {
        get throws {
            try _interop.get_LeftThumbstickX()
        }
    }

    /// Gets or sets the position of the left stick on the X-axis.
    /// - Returns: A value between -1.0 (pressed to the left) and 1.0 (pressed to the right).
    public func leftThumbstickX(_ value: Swift.Double) throws {
        try _interop.put_LeftThumbstickX(value)
    }

    /// Gets or sets the position of the left stick on the Y-axis.
    /// - Returns: A value between -1.0 (pressed towards the user) and 1.0 (pressed away from the user).
    public var leftThumbstickY: Swift.Double {
        get throws {
            try _interop.get_LeftThumbstickY()
        }
    }

    /// Gets or sets the position of the left stick on the Y-axis.
    /// - Returns: A value between -1.0 (pressed towards the user) and 1.0 (pressed away from the user).
    public func leftThumbstickY(_ value: Swift.Double) throws {
        try _interop.put_LeftThumbstickY(value)
    }

    /// Gets or sets the position of the left trigger.
    /// - Returns: A value between 0.0 (not depressed) and 1.0 (fully depressed).
    public var leftTrigger: Swift.Double {
        get throws {
            try _interop.get_LeftTrigger()
        }
    }

    /// Gets or sets the position of the left trigger.
    /// - Returns: A value between 0.0 (not depressed) and 1.0 (fully depressed).
    public func leftTrigger(_ value: Swift.Double) throws {
        try _interop.put_LeftTrigger(value)
    }

    /// Gets or sets the position of the right stick on the X-axis.
    /// - Returns: A value between -1.0 (pressed to the left) and 1.0 (pressed to the right).
    public var rightThumbstickX: Swift.Double {
        get throws {
            try _interop.get_RightThumbstickX()
        }
    }

    /// Gets or sets the position of the right stick on the X-axis.
    /// - Returns: A value between -1.0 (pressed to the left) and 1.0 (pressed to the right).
    public func rightThumbstickX(_ value: Swift.Double) throws {
        try _interop.put_RightThumbstickX(value)
    }

    /// Gets or sets the position of the right stick on the Y-axis.
    /// - Returns: A value between -1.0 (pressed towards the user) and 1.0 (pressed away from the user).
    public var rightThumbstickY: Swift.Double {
        get throws {
            try _interop.get_RightThumbstickY()
        }
    }

    /// Gets or sets the position of the right stick on the Y-axis.
    /// - Returns: A value between -1.0 (pressed towards the user) and 1.0 (pressed away from the user).
    public func rightThumbstickY(_ value: Swift.Double) throws {
        try _interop.put_RightThumbstickY(value)
    }

    /// Gets or sets the position of the right trigger.
    /// - Returns: A value between 0.0 (not depressed) and 1.0 (fully depressed).
    public var rightTrigger: Swift.Double {
        get throws {
            try _interop.get_RightTrigger()
        }
    }

    /// Gets or sets the position of the right trigger.
    /// - Returns: A value between 0.0 (not depressed) and 1.0 (fully depressed).
    public func rightTrigger(_ value: Swift.Double) throws {
        try _interop.put_RightTrigger(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Input.Preview.Injection.InjectedInputGamepadInfo", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _iinjectedInputGamepadInfoFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIInputPreviewInjection_IInjectedInputGamepadInfoFactory>? = nil

    internal static var _iinjectedInputGamepadInfoFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIInputPreviewInjection_IInjectedInputGamepadInfoFactory> {
        get throws {
            try _iinjectedInputGamepadInfoFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Input.Preview.Injection.InjectedInputGamepadInfo", id: CWinRT.SWRT_WindowsUIInputPreviewInjection_IInjectedInputGamepadInfoFactory.iid)
            }
        }
    }
}