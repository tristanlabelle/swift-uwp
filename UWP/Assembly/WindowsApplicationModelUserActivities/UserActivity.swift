// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// A **UserActivity** is created by an app during its execution to notify the system of a user work stream that can be continued on another device, or at another time on the same device. It provides information about a task the user is engaged in.
public final class WindowsApplicationModelUserActivities_UserActivity: WindowsRuntime.WinRTImport<WindowsApplicationModelUserActivities_UserActivityProjection> {
    // MARK: Windows.ApplicationModel.UserActivities.IUserActivityFactory members

    public convenience init(_ activityId: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iuserActivityFactory.createWithActivityId(activityId)))
    }

    // MARK: Windows.ApplicationModel.UserActivities.IUserActivity members

    /// Gets and sets the activation Uniform Resource Identifier (URI).
    /// - Returns: The activation URI.
    public var activationUri: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_interop.get_ActivationUri())
        }
    }

    /// Gets and sets the activation Uniform Resource Identifier (URI).
    /// - Returns: The activation URI.
    public func activationUri(_ value: WindowsFoundation_Uri?) throws {
        try _interop.put_ActivationUri(value)
    }

    /// Gets the activity ID that was assigned to this **UserActivity** when it was created.
    /// - Returns: The activity ID.
    public var activityId: Swift.String {
        get throws {
            try _interop.get_ActivityId()
        }
    }

    /// Gets or sets the content information object for this user activity.
    /// - Returns: A content information object that implements IUserActivityContentInfo.
    public var contentInfo: WindowsApplicationModelUserActivities_IUserActivityContentInfo {
        get throws {
            try COM.NullResult.unwrap(_interop.get_ContentInfo())
        }
    }

    /// Gets or sets the content information object for this user activity.
    /// - Returns: A content information object that implements IUserActivityContentInfo.
    public func contentInfo(_ value: WindowsApplicationModelUserActivities_IUserActivityContentInfo?) throws {
        try _interop.put_ContentInfo(value)
    }

    /// Gets and sets the MIME (Multipurpose Internet Mail Extensions) type of the content stored at UserActivity.ContentUri.  For example, "text/plain".
    /// - Returns: The content type.
    public var contentType: Swift.String {
        get throws {
            try _interop.get_ContentType()
        }
    }

    /// Gets and sets the MIME (Multipurpose Internet Mail Extensions) type of the content stored at UserActivity.ContentUri.  For example, "text/plain".
    /// - Returns: The content type.
    public func contentType(_ value: Swift.String) throws {
        try _interop.put_ContentType(value)
    }

    /// Gets and sets the content Uniform Resource Identifier (URI) of the content or document that is represented by the UserActivity.
    /// - Returns: The content URI.
    public var contentUri: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_interop.get_ContentUri())
        }
    }

    /// Gets and sets the content Uniform Resource Identifier (URI) of the content or document that is represented by the UserActivity.
    /// - Returns: The content URI.
    public func contentUri(_ value: WindowsFoundation_Uri?) throws {
        try _interop.put_ContentUri(value)
    }

    /// Gets and sets the fallback Uniform Resource Identifier (URI) to use if there is no handler for the activation URI.
    /// - Returns: The fallback URI.
    public var fallbackUri: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_interop.get_FallbackUri())
        }
    }

    /// Gets and sets the fallback Uniform Resource Identifier (URI) to use if there is no handler for the activation URI.
    /// - Returns: The fallback URI.
    public func fallbackUri(_ value: WindowsFoundation_Uri?) throws {
        try _interop.put_FallbackUri(value)
    }

    /// Gets the state (**Published** or **New**) of this **UserActivity**.
    /// - Returns: The state of this **UserActivity**.
    public var state: WindowsApplicationModelUserActivities_UserActivityState {
        get throws {
            try _interop.get_State()
        }
    }

    /// Gets information that can be used for the details tile for this activity.
    /// - Returns: The description, icon, and so on, associated with this **UserActivity**.
    public var visualElements: WindowsApplicationModelUserActivities_UserActivityVisualElements {
        get throws {
            try COM.NullResult.unwrap(_interop.get_VisualElements())
        }
    }

    /// Publish the UserActivity.
    /// - Returns: An asynchronous action that can be awaited.
    public func saveAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.saveAsync())
    }

    /// Creates a UserActivitySession that this user activity will be associated with. You must call this method on the UI thread.
    /// - Returns: The created session.
    public func createSession() throws -> WindowsApplicationModelUserActivities_UserActivitySession {
        try COM.NullResult.unwrap(_interop.createSession())
    }

    // MARK: Windows.ApplicationModel.UserActivities.IUserActivity2 members

    /// Serializes the UserActivity into a JSON string. Among other things, the JSON string will contain the App display name, the activation URL, the content URL, content information, and visual element information such as description, background color, and so on.
    /// - Returns: The JSON text representation of the **UserActivity**.
    public func toJson() throws -> Swift.String {
        try _iuserActivity2.toJson()
    }

    // MARK: Windows.ApplicationModel.UserActivities.IUserActivity3 members

    /// Gets and sets whether the particular activity's metadata should be uploaded to the Microsoft Cloud.
    /// - Returns: The boolean representing whether metadata should uploaded. If not set, this property defaults to True.
    public var isRoamable: Swift.Bool {
        get throws {
            try _iuserActivity3.get_IsRoamable()
        }
    }

    /// Gets and sets whether the particular activity's metadata should be uploaded to the Microsoft Cloud.
    /// - Returns: The boolean representing whether metadata should uploaded. If not set, this property defaults to True.
    public func isRoamable(_ value: Swift.Bool) throws {
        try _iuserActivity3.put_IsRoamable(value)
    }

    // MARK: Windows.ApplicationModel.UserActivities.IUserActivityStatics members

    /// Constructs a UserActivity from a JSON string.
    /// - Parameter json: The JSON string that represents the **UserActivity**.
    /// - Returns: A **UserActivity** constructed from the JSON string.
    public static func tryParseFromJson(_ json: Swift.String) throws -> WindowsApplicationModelUserActivities_UserActivity {
        try COM.NullResult.unwrap(_iuserActivityStatics.tryParseFromJson(json))
    }

    /// Creates a collection of UserActivity objects from a JSON string.
    /// - Parameter json: The JSON string that represents a collection of **UserActivity** objects.
    /// - Returns: A collection of **UserActivity** objects.
    public static func tryParseFromJsonArray(_ json: Swift.String) throws -> WindowsFoundationCollections_IVector<WindowsApplicationModelUserActivities_UserActivity?> {
        try COM.NullResult.unwrap(_iuserActivityStatics.tryParseFromJsonArray(json))
    }

    public static func toJsonArray(_ activities: WindowsFoundationCollections_IIterable<WindowsApplicationModelUserActivities_UserActivity?>?) throws -> Swift.String {
        try _iuserActivityStatics.toJsonArray(activities)
    }

    // MARK: Implementation details

    private var _iuserActivity2_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivity2>? = nil

    internal var _iuserActivity2: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivity2> {
        get throws {
            try _iuserActivity2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivity2.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivity2.self)
            }
        }
    }

    private var _iuserActivity3_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivity3>? = nil

    internal var _iuserActivity3: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivity3> {
        get throws {
            try _iuserActivity3_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivity3.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivity3.self)
            }
        }
    }

    deinit {
        _iuserActivity2_storage?.release()
        _iuserActivity3_storage?.release()
    }

    private static var _iuserActivityFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivityFactory>? = nil

    internal static var _iuserActivityFactory: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivityFactory> {
        get throws {
            try _iuserActivityFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.UserActivities.UserActivity", id: CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivityFactory.iid)
            }
        }
    }

    private static var _iuserActivityStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivityStatics>? = nil

    internal static var _iuserActivityStatics: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivityStatics> {
        get throws {
            try _iuserActivityStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.UserActivities.UserActivity", id: CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivityStatics.iid)
            }
        }
    }
}