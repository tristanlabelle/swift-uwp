// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Creates or gets UserActivity objects created on this or another device.
public final class WindowsApplicationModelUserActivities_UserActivityChannel: WindowsRuntime.WinRTImport<WindowsApplicationModelUserActivities_UserActivityChannelProjection> {
    // MARK: Windows.ApplicationModel.UserActivities.IUserActivityChannel members

    /// Create (or get) a UserActivity with the specified id.
    /// - Parameter activityId: The identifier for the **UserActivity**.
    /// - Returns: An existing **UserActivity** if the **activityId** matches; otherwise a new **UserActivity** that is given the specified id.
    public func getOrCreateUserActivityAsync(_ activityId: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelUserActivities_UserActivity?> {
        try COM.NullResult.unwrap(_interop.getOrCreateUserActivityAsync(activityId))
    }

    /// Delete a specific user activity.
    /// - Parameter activityId: The identifier of the user activity to delete.
    /// - Returns: An asynchronous action.
    public func deleteActivityAsync(_ activityId: Swift.String) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.deleteActivityAsync(activityId))
    }

    /// Deletes all of the user activities registered by this app.
    /// - Returns: An asynchronous action.
    public func deleteAllActivitiesAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.deleteAllActivitiesAsync())
    }

    // MARK: Windows.ApplicationModel.UserActivities.IUserActivityChannel2 members

    /// Get up to the specified number of the most recently engaged user activities, sorted by the time each user activity ended.
    /// - Parameter maxUniqueActivities: The maximum number of user activities to get. Fewer may be returned if there aren't as many user activities as requested.
    /// - Returns: A list of user activities, sorted by when the activities ended.
    public func getRecentUserActivitiesAsync(_ maxUniqueActivities: Swift.Int32) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVector<WindowsApplicationModelUserActivities_UserActivitySessionHistoryItem?>?> {
        try COM.NullResult.unwrap(_iuserActivityChannel2.getRecentUserActivitiesAsync(maxUniqueActivities))
    }

    /// Gets the session history for a user activity.
    /// - Parameter activityId: Identifies the user activity to get session history for.
    /// - Parameter startTime: Get user activity sessions that were active between **startTime** and now.
    /// - Returns: A list of user activity session objects that were active during the specified time for the specified user activity.
    public func getSessionHistoryItemsForUserActivityAsync(_ activityId: Swift.String, _ startTime: WindowsFoundation_DateTime) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVector<WindowsApplicationModelUserActivities_UserActivitySessionHistoryItem?>?> {
        try COM.NullResult.unwrap(_iuserActivityChannel2.getSessionHistoryItemsForUserActivityAsync(activityId, startTime))
    }

    // MARK: Windows.ApplicationModel.UserActivities.IUserActivityChannelStatics3 members

    /// Gets a UserActivityChannel object that can be used to get or create UserActivity objects for the specified user in the context of the current app.
    /// - Parameter user: The User that you want to get or create UserActivity objects for.
    /// - Returns: The UserActivityChannel object for the specified user.
    public static func getForUser(_ user: WindowsSystem_User?) throws -> WindowsApplicationModelUserActivities_UserActivityChannel {
        try COM.NullResult.unwrap(_iuserActivityChannelStatics3.getForUser(user))
    }

    // MARK: Windows.ApplicationModel.UserActivities.IUserActivityChannelStatics2 members

    /// Disable the automatic creation of a session when a new UserActivity is created.
    public static func disableAutoSessionCreation() throws {
        try _iuserActivityChannelStatics2.disableAutoSessionCreation()
    }

    /// Get a channel, specific to a specified web account, to use to record user activity.
    /// - Parameter account: The web account to associate user activity with.
    /// - Returns: The channel to use to record user activity. The channel will be associated with the web account.
    public static func tryGetForWebAccount(_ account: WindowsSecurityCredentials_WebAccount?) throws -> WindowsApplicationModelUserActivities_UserActivityChannel {
        try COM.NullResult.unwrap(_iuserActivityChannelStatics2.tryGetForWebAccount(account))
    }

    // MARK: Windows.ApplicationModel.UserActivities.IUserActivityChannelStatics members

    /// Provides access to the User Activities associated with the user's Managed Service Account (MSA).
    /// - Returns: A channel that can be used to create or get User Activity objects.
    public static func getDefault() throws -> WindowsApplicationModelUserActivities_UserActivityChannel {
        try COM.NullResult.unwrap(_iuserActivityChannelStatics.getDefault())
    }

    // MARK: Implementation details

    private var _iuserActivityChannel2_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivityChannel2>? = nil

    internal var _iuserActivityChannel2: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivityChannel2> {
        get throws {
            try _iuserActivityChannel2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivityChannel2.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivityChannel2.self)
            }
        }
    }

    deinit {
        _iuserActivityChannel2_storage?.release()
    }

    private static var _iuserActivityChannelStatics3_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivityChannelStatics3>? = nil

    internal static var _iuserActivityChannelStatics3: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivityChannelStatics3> {
        get throws {
            try _iuserActivityChannelStatics3_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.UserActivities.UserActivityChannel", id: CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivityChannelStatics3.iid)
            }
        }
    }

    private static var _iuserActivityChannelStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivityChannelStatics2>? = nil

    internal static var _iuserActivityChannelStatics2: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivityChannelStatics2> {
        get throws {
            try _iuserActivityChannelStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.UserActivities.UserActivityChannel", id: CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivityChannelStatics2.iid)
            }
        }
    }

    private static var _iuserActivityChannelStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivityChannelStatics>? = nil

    internal static var _iuserActivityChannelStatics: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivityChannelStatics> {
        get throws {
            try _iuserActivityChannelStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.UserActivities.UserActivityChannel", id: CWinRT.SWRT_WindowsApplicationModelUserActivities_IUserActivityChannelStatics.iid)
            }
        }
    }
}