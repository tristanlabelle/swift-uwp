// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides information about a MediaFrameSource.
public final class WindowsMediaCaptureFrames_MediaFrameSourceInfo: WindowsRuntime.WinRTImport<WindowsMediaCaptureFrames_MediaFrameSourceInfoProjection> {
    // MARK: Windows.Media.Capture.Frames.IMediaFrameSourceInfo members

    /// Gets an object representing the spatial coordinate system in which the data from a MediaFrameSource is expressed.
    /// - Returns: An object representing the spatial coordinate system of the media frame source.
    public var coordinateSystem: WindowsPerceptionSpatial_SpatialCoordinateSystem {
        get throws {
            try COM.NullResult.unwrap(_interop.get_CoordinateSystem())
        }
    }

    /// Gets a DeviceInformation object that can be used to access properties of a MediaFrameSource device.
    /// - Returns: A DeviceInformation object representing a media frame source.
    public var deviceInformation: WindowsDevicesEnumeration_DeviceInformation {
        get throws {
            try COM.NullResult.unwrap(_interop.get_DeviceInformation())
        }
    }

    /// Gets the unique identifier for a MediaFrameSource. Use this identifier as the key when getting a **MediaFrameSource** instance from MediaCapture.FrameSources dictionary.
    /// - Returns: The unique identifier for a media frame source.
    public var id: Swift.String {
        get throws {
            try _interop.get_Id()
        }
    }

    /// Gets a value indicating the stream type of a MediaFrameSource, such as photo, video, or audio.
    /// - Returns: A value indicating the stream type of a media frame source.
    public var mediaStreamType: WindowsMediaCapture_MediaStreamType {
        get throws {
            try _interop.get_MediaStreamType()
        }
    }

    /// Gets a read-only map of properties for a MediaFrameSource.
    /// - Returns: A read-only map of properties for a media frame source.
    public var properties: WindowsFoundationCollections_IMapView<Foundation.UUID, WindowsRuntime.IInspectable?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Properties())
        }
    }

    /// Gets the MediaFrameSourceGroup to which a MediaFrameSource belongs.
    /// - Returns: The group to which a media frame source belongs.
    public var sourceGroup: WindowsMediaCaptureFrames_MediaFrameSourceGroup {
        get throws {
            try COM.NullResult.unwrap(_interop.get_SourceGroup())
        }
    }

    /// Gets a value indicating the kind of media frames generated by a MediaFrameSource, such as color, depth, or infrared.
    /// - Returns: A value indicating the kind of media frames generated by a media frame source.
    public var sourceKind: WindowsMediaCaptureFrames_MediaFrameSourceKind {
        get throws {
            try _interop.get_SourceKind()
        }
    }

    // MARK: Windows.Media.Capture.Frames.IMediaFrameSourceInfo2 members

    /// Gets the unique identifier of the MediaCaptureVideoProfile associated with the MediaFrameSourceInfo.
    /// - Returns: The unique identifier of the **MediaCaptureVideoProfile** associated with the MediaFrameSourceInfo.
    public var profileId: Swift.String {
        get throws {
            try _imediaFrameSourceInfo2.get_ProfileId()
        }
    }

    /// Gets a read-only list of MediaCaptureVideoProfileMediaDescription objects which specify a group of capture settings that are supported by a video profile.
    /// - Returns: A read-only list of MediaCaptureVideoProfileMediaDescription objects.
    public var videoProfileMediaDescription: WindowsFoundationCollections_IVectorView<WindowsMediaCapture_MediaCaptureVideoProfileMediaDescription?> {
        get throws {
            try COM.NullResult.unwrap(_imediaFrameSourceInfo2.get_VideoProfileMediaDescription())
        }
    }

    // MARK: Windows.Media.Capture.Frames.IMediaFrameSourceInfo3 members

    /// Gets the relative panel location of the provided DisplayRegion when using the associated MediaFrameSource.
    /// - Parameter displayRegion: The **DisplayRegion** for which the relative panel location is retrieved.
    /// - Returns: A member of the Panel enumeration indicating relative panel location of the provided **DisplayRegion**.
    public func getRelativePanel(_ displayRegion: WindowsUIWindowManagement_DisplayRegion?) throws -> WindowsDevicesEnumeration_Panel {
        try _imediaFrameSourceInfo3.getRelativePanel(displayRegion)
    }

    // MARK: Implementation details

    private var _imediaFrameSourceInfo2_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaCaptureFrames_IMediaFrameSourceInfo2>? = nil

    internal var _imediaFrameSourceInfo2: COM.COMInterop<CWinRT.SWRT_WindowsMediaCaptureFrames_IMediaFrameSourceInfo2> {
        get throws {
            try _imediaFrameSourceInfo2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaCaptureFrames_IMediaFrameSourceInfo2.iid).cast(to: CWinRT.SWRT_WindowsMediaCaptureFrames_IMediaFrameSourceInfo2.self)
            }
        }
    }

    private var _imediaFrameSourceInfo3_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaCaptureFrames_IMediaFrameSourceInfo3>? = nil

    internal var _imediaFrameSourceInfo3: COM.COMInterop<CWinRT.SWRT_WindowsMediaCaptureFrames_IMediaFrameSourceInfo3> {
        get throws {
            try _imediaFrameSourceInfo3_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaCaptureFrames_IMediaFrameSourceInfo3.iid).cast(to: CWinRT.SWRT_WindowsMediaCaptureFrames_IMediaFrameSourceInfo3.self)
            }
        }
    }

    deinit {
        _imediaFrameSourceInfo2_storage?.release()
        _imediaFrameSourceInfo3_storage?.release()
    }
}