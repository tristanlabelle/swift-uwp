// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Contains information about a single instance of a Binding.
open class WindowsUIXamlData_BindingExpression: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Data.IBindingExpression members

    /// Gets the binding source object that this BindingExpression uses.
    /// - Returns: The binding source object that this BindingExpression uses.
    public var dataItem: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_ibindingExpression.get_DataItem())
        }
    }

    /// Gets the Binding object of this BindingExpression.
    /// - Returns: The Binding object of the current binding expression.
    public var parentBinding: WindowsUIXamlData_Binding {
        get throws {
            try COM.NullResult.unwrap(_ibindingExpression.get_ParentBinding())
        }
    }

    /// Sends the current binding target value to the binding source property in **TwoWay** bindings.
    public func updateSource() throws {
        try _ibindingExpression.updateSource()
    }

    // MARK: Implementation details

    private var _ibindingExpression_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlData_IBindingExpression>? = nil

    internal var _ibindingExpression: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlData_IBindingExpression> {
        get throws {
            try _ibindingExpression_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlData_IBindingExpression.iid).cast(to: CWinRT.SWRT_WindowsUIXamlData_IBindingExpression.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlData_IBindingExpression>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _ibindingExpression_storage?.release()
    }

    private static var _ibindingExpressionFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlData_IBindingExpressionFactory>? = nil

    internal static var _ibindingExpressionFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlData_IBindingExpressionFactory> {
        get throws {
            try _ibindingExpressionFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Data.BindingExpression", id: CWinRT.SWRT_WindowsUIXamlData_IBindingExpressionFactory.iid)
            }
        }
    }
}