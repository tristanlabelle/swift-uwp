// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Implements a markup extension that describes the location of the binding source relative to the position of the binding target.
open class WindowsUIXamlData_RelativeSource: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Data.IRelativeSourceFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlData_RelativeSource.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._irelativeSourceFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Data.IRelativeSource members

    /// Gets or sets a value that describes the location of the binding source relative to the position of the binding target.
    /// - Returns: A value of the enumeration.
    public var mode: WindowsUIXamlData_RelativeSourceMode {
        get throws {
            try _irelativeSource.get_Mode()
        }
    }

    /// Gets or sets a value that describes the location of the binding source relative to the position of the binding target.
    /// - Returns: A value of the enumeration.
    public func mode(_ value: WindowsUIXamlData_RelativeSourceMode) throws {
        try _irelativeSource.put_Mode(value)
    }

    // MARK: Implementation details

    private var _irelativeSource_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlData_IRelativeSource>? = nil

    internal var _irelativeSource: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlData_IRelativeSource> {
        get throws {
            try _irelativeSource_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlData_IRelativeSource.iid).cast(to: CWinRT.SWRT_WindowsUIXamlData_IRelativeSource.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlData_IRelativeSource>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _irelativeSource_storage?.release()
    }

    private static var _irelativeSourceFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlData_IRelativeSourceFactory>? = nil

    internal static var _irelativeSourceFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlData_IRelativeSourceFactory> {
        get throws {
            try _irelativeSourceFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Data.RelativeSource", id: CWinRT.SWRT_WindowsUIXamlData_IRelativeSourceFactory.iid)
            }
        }
    }
}