// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents content that a Frame control can navigate to.
open class WindowsUIXamlControls_Page: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.IPageFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_Page.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._ipageFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IPage members

    /// Gets a reference to an AppBar displayed at the bottom of the page, if any.
    /// - Returns: A reference to an AppBar displayed at the bottom of the page, or **null**.
    public var bottomAppBar: WindowsUIXamlControls_AppBar {
        get throws {
            try COM.NullResult.unwrap(_ipage.get_BottomAppBar())
        }
    }

    /// Gets a reference to an AppBar displayed at the bottom of the page, if any.
    /// - Returns: A reference to an AppBar displayed at the bottom of the page, or **null**.
    public func bottomAppBar(_ value: WindowsUIXamlControls_AppBar?) throws {
        try _ipage.put_BottomAppBar(value)
    }

    /// Gets the controlling Frame for the Page content.
    /// - Returns: The controlling Frame for the Page content.
    public var frame: WindowsUIXamlControls_Frame {
        get throws {
            try COM.NullResult.unwrap(_ipage.get_Frame())
        }
    }

    /// Gets or sets the navigation mode that indicates whether this Page is cached, and the period of time that the cache entry should persist.
    /// - Returns: A value of the enumeration. The default is **Disabled**.
    public var navigationCacheMode: WindowsUIXamlNavigation_NavigationCacheMode {
        get throws {
            try _ipage.get_NavigationCacheMode()
        }
    }

    /// Gets or sets the navigation mode that indicates whether this Page is cached, and the period of time that the cache entry should persist.
    /// - Returns: A value of the enumeration. The default is **Disabled**.
    public func navigationCacheMode(_ value: WindowsUIXamlNavigation_NavigationCacheMode) throws {
        try _ipage.put_NavigationCacheMode(value)
    }

    /// Gets a reference to an AppBar displayed at the top of the page, if any.
    /// - Returns: A reference to an AppBar displayed at the top of the page, or **null**.
    public var topAppBar: WindowsUIXamlControls_AppBar {
        get throws {
            try COM.NullResult.unwrap(_ipage.get_TopAppBar())
        }
    }

    /// Gets a reference to an AppBar displayed at the top of the page, if any.
    /// - Returns: A reference to an AppBar displayed at the top of the page, or **null**.
    public func topAppBar(_ value: WindowsUIXamlControls_AppBar?) throws {
        try _ipage.put_TopAppBar(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IPageOverrides members

    /// Invoked immediately after the Page is unloaded and is no longer the current source of a parent Frame.
    /// - Parameter e: Event data that can be examined by overriding code. The event data is representative of the navigation that has unloaded the current Page.
    open func onNavigatedFrom(_ e: WindowsUIXamlNavigation_NavigationEventArgs?) throws {
        try _ipageOverrides.onNavigatedFrom(e)
    }

    /// Invoked when the Page is loaded and becomes the current source of a parent Frame.
    /// - Parameter e: Event data that can be examined by overriding code. The event data is representative of the pending navigation that will load the current Page. Usually the most relevant property to examine is Parameter.
    open func onNavigatedTo(_ e: WindowsUIXamlNavigation_NavigationEventArgs?) throws {
        try _ipageOverrides.onNavigatedTo(e)
    }

    /// Invoked immediately before the Page is unloaded and is no longer the current source of a parent Frame.
    /// - Parameter e: Event data that can be examined by overriding code. The event data is representative of the navigation that will unload the current Page unless canceled. The navigation can potentially be canceled by setting Cancel.
    open func onNavigatingFrom(_ e: WindowsUIXamlNavigation_NavigatingCancelEventArgs?) throws {
        try _ipageOverrides.onNavigatingFrom(e)
    }

    // MARK: Windows.UI.Xaml.Controls.IPageStatics members

    /// Identifies the BottomAppBar dependency property.
    /// - Returns: The identifier for the BottomAppBar dependency property.
    public static var bottomAppBarProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ipageStatics.get_BottomAppBarProperty())
        }
    }

    /// Identifies the Frame dependency property.
    /// - Returns: The identifier for the Frame dependency property.
    public static var frameProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ipageStatics.get_FrameProperty())
        }
    }

    /// Identifies the TopAppBar dependency property.
    /// - Returns: The identifier for the TopAppBar dependency property.
    public static var topAppBarProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ipageStatics.get_TopAppBarProperty())
        }
    }

    // MARK: Implementation details

    private var _ipage_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IPage>? = nil

    internal var _ipage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IPage> {
        get throws {
            try _ipage_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IPage.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IPage.self)
            }
        }
    }

    private var _ipageOverrides_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IPageOverrides>? = nil

    internal var _ipageOverrides: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IPageOverrides> {
        get throws {
            try _ipageOverrides_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IPageOverrides.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IPageOverrides.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_IPage>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _ipage_storage?.release()
        _ipageOverrides_storage?.release()
    }

    private static var _ipageFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IPageFactory>? = nil

    internal static var _ipageFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IPageFactory> {
        get throws {
            try _ipageFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.Page", id: CWinRT.SWRT_WindowsUIXamlControls_IPageFactory.iid)
            }
        }
    }

    private static var _ipageStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IPageStatics>? = nil

    internal static var _ipageStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IPageStatics> {
        get throws {
            try _ipageStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.Page", id: CWinRT.SWRT_WindowsUIXamlControls_IPageStatics.iid)
            }
        }
    }

    // MARK: Override support

    private var _ipageOverrides_outer: COM.COMExportedInterface = .uninitialized

    public override func _queryOverridesInterfacePointer(_ id: COM.COMInterfaceID) throws -> COM.IUnknownPointer? {
        if id == CWinRT.SWRT_WindowsUIXamlControls_IPageOverrides.iid {
            if !_ipageOverrides_outer.isInitialized {
                _ipageOverrides_outer = COM.COMExportedInterface(
                    swiftObject: self, virtualTable: &WindowsUIXamlControls_PageProjection.VirtualTables.ipageOverrides)
            }
            return _ipageOverrides_outer.unknownPointer.addingRef()
        }
        return nil
    }
}