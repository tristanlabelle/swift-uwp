// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents an icon that uses a bitmap as its content.
open class WindowsUIXamlControls_BitmapIcon: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.IBitmapIconFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_BitmapIcon.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._ibitmapIconFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IBitmapIcon members

    /// Gets or sets the Uniform Resource Identifier (URI) of the bitmap to use as the icon content.
    /// - Returns: The Uri of the bitmap to use as the icon content. The default is **null**.
    public var uriSource: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_ibitmapIcon.get_UriSource())
        }
    }

    /// Gets or sets the Uniform Resource Identifier (URI) of the bitmap to use as the icon content.
    /// - Returns: The Uri of the bitmap to use as the icon content. The default is **null**.
    public func uriSource(_ value: WindowsFoundation_Uri?) throws {
        try _ibitmapIcon.put_UriSource(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IBitmapIcon2 members

    /// Gets or sets a value that indicates whether the bitmap is shown in a single color.
    /// - Returns: **true** to show the bitmap in a single color; **false** to show the bitmap in full color. The default is **true.**
    public var showAsMonochrome: Swift.Bool {
        get throws {
            try _ibitmapIcon2.get_ShowAsMonochrome()
        }
    }

    /// Gets or sets a value that indicates whether the bitmap is shown in a single color.
    /// - Returns: **true** to show the bitmap in a single color; **false** to show the bitmap in full color. The default is **true.**
    public func showAsMonochrome(_ value: Swift.Bool) throws {
        try _ibitmapIcon2.put_ShowAsMonochrome(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IBitmapIconStatics2 members

    /// Identifies the ShowAsMonochrome dependency property.
    /// - Returns: The identifier for the **ShowAsMonochrome** dependency property.
    public static var showAsMonochromeProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ibitmapIconStatics2.get_ShowAsMonochromeProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IBitmapIconStatics members

    /// Identifies the UriSource dependency property.
    /// - Returns: The identifier for the UriSource dependency property.
    public static var uriSourceProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ibitmapIconStatics.get_UriSourceProperty())
        }
    }

    // MARK: Implementation details

    private var _ibitmapIcon_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IBitmapIcon>? = nil

    internal var _ibitmapIcon: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IBitmapIcon> {
        get throws {
            try _ibitmapIcon_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IBitmapIcon.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IBitmapIcon.self)
            }
        }
    }

    private var _ibitmapIcon2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IBitmapIcon2>? = nil

    internal var _ibitmapIcon2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IBitmapIcon2> {
        get throws {
            try _ibitmapIcon2_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IBitmapIcon2.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IBitmapIcon2.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_IBitmapIcon>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _ibitmapIcon_storage?.release()
        _ibitmapIcon2_storage?.release()
    }

    private static var _ibitmapIconFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IBitmapIconFactory>? = nil

    internal static var _ibitmapIconFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IBitmapIconFactory> {
        get throws {
            try _ibitmapIconFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.BitmapIcon", id: CWinRT.SWRT_WindowsUIXamlControls_IBitmapIconFactory.iid)
            }
        }
    }

    private static var _ibitmapIconStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IBitmapIconStatics2>? = nil

    internal static var _ibitmapIconStatics2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IBitmapIconStatics2> {
        get throws {
            try _ibitmapIconStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.BitmapIcon", id: CWinRT.SWRT_WindowsUIXamlControls_IBitmapIconStatics2.iid)
            }
        }
    }

    private static var _ibitmapIconStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IBitmapIconStatics>? = nil

    internal static var _ibitmapIconStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IBitmapIconStatics> {
        get throws {
            try _ibitmapIconStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.BitmapIcon", id: CWinRT.SWRT_WindowsUIXamlControls_IBitmapIconStatics.iid)
            }
        }
    }
}