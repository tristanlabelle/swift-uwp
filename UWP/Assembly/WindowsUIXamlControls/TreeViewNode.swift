// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a node in a TreeView control.
open class WindowsUIXamlControls_TreeViewNode: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.ITreeViewNodeFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_TreeViewNode.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._itreeViewNodeFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.ITreeViewNode members

    /// Gets the collection of nodes that are children of the current node.
    /// - Returns: The collection of nodes that are children of the current node. The default is an empty collection.
    public var children: WindowsFoundationCollections_IVector<WindowsUIXamlControls_TreeViewNode?> {
        get throws {
            try COM.NullResult.unwrap(_itreeViewNode.get_Children())
        }
    }

    /// Gets or sets the data content for the current node.
    /// - Returns: The data content for the current node.
    public var content: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_itreeViewNode.get_Content())
        }
    }

    /// Gets or sets the data content for the current node.
    /// - Returns: The data content for the current node.
    public func content(_ value: WindowsRuntime.IInspectable?) throws {
        try _itreeViewNode.put_Content(value)
    }

    /// Gets a value that indicates how far the current node is from the root node of the tree.
    /// - Returns: The depth of the current node from the root node of the tree.
    public var depth: Swift.Int32 {
        get throws {
            try _itreeViewNode.get_Depth()
        }
    }

    /// Gets a value that indicates whether the current node has child items.
    /// - Returns: **true** if the current node has child items; otherwise, **false**.
    public var hasChildren: Swift.Bool {
        get throws {
            try _itreeViewNode.get_HasChildren()
        }
    }

    /// Gets or sets a value that indicates whether the current node has child items that haven't been shown.
    /// - Returns: **true** of the current node has child items that haven't been shown; otherwise, **false**.
    public var hasUnrealizedChildren: Swift.Bool {
        get throws {
            try _itreeViewNode.get_HasUnrealizedChildren()
        }
    }

    /// Gets or sets a value that indicates whether the current node has child items that haven't been shown.
    /// - Returns: **true** of the current node has child items that haven't been shown; otherwise, **false**.
    public func hasUnrealizedChildren(_ value: Swift.Bool) throws {
        try _itreeViewNode.put_HasUnrealizedChildren(value)
    }

    /// Gets or sets a value that indicates whether the cuurent tree view node is expanded.
    /// - Returns: **true** if the node is expanded; otherwise, **false**.
    public var isExpanded: Swift.Bool {
        get throws {
            try _itreeViewNode.get_IsExpanded()
        }
    }

    /// Gets or sets a value that indicates whether the cuurent tree view node is expanded.
    /// - Returns: **true** if the node is expanded; otherwise, **false**.
    public func isExpanded(_ value: Swift.Bool) throws {
        try _itreeViewNode.put_IsExpanded(value)
    }

    /// Gets or sets the node that is the parent of the current node.
    /// - Returns: The node that is the parent of the current node.
    public var parent: WindowsUIXamlControls_TreeViewNode {
        get throws {
            try COM.NullResult.unwrap(_itreeViewNode.get_Parent())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.ITreeViewNodeStatics members

    /// Identifies the Content dependency property.
    /// - Returns: The identifier for the Content dependency property.
    public static var contentProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itreeViewNodeStatics.get_ContentProperty())
        }
    }

    /// Identifies the Depth dependency property.
    /// - Returns: The identifier for the Depth dependency property.
    public static var depthProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itreeViewNodeStatics.get_DepthProperty())
        }
    }

    /// Identifies the HasChildren dependency property.
    /// - Returns: The identifier for the HasChildren dependency property.
    public static var hasChildrenProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itreeViewNodeStatics.get_HasChildrenProperty())
        }
    }

    /// Identifies the IsExpanded dependency property.
    /// - Returns: The identifier for the IsExpanded dependency property.
    public static var isExpandedProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itreeViewNodeStatics.get_IsExpandedProperty())
        }
    }

    // MARK: Implementation details

    private var _itreeViewNode_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewNode>? = nil

    internal var _itreeViewNode: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewNode> {
        get throws {
            try _itreeViewNode_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_ITreeViewNode.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_ITreeViewNode.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewNode>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _itreeViewNode_storage?.release()
    }

    private static var _itreeViewNodeFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewNodeFactory>? = nil

    internal static var _itreeViewNodeFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewNodeFactory> {
        get throws {
            try _itreeViewNodeFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.TreeViewNode", id: CWinRT.SWRT_WindowsUIXamlControls_ITreeViewNodeFactory.iid)
            }
        }
    }

    private static var _itreeViewNodeStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewNodeStatics>? = nil

    internal static var _itreeViewNodeStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewNodeStatics> {
        get throws {
            try _itreeViewNodeStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.TreeViewNode", id: CWinRT.SWRT_WindowsUIXamlControls_ITreeViewNodeStatics.iid)
            }
        }
    }
}