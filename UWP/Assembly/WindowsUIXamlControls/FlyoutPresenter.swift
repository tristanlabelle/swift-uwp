// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Displays the content of a Flyout.
open class WindowsUIXamlControls_FlyoutPresenter: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.IFlyoutPresenterFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_FlyoutPresenter.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._iflyoutPresenterFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IFlyoutPresenter2 members

    /// Gets or sets a value that indicates whether the default shadow effect is shown.
    /// - Returns: **true** if the default shadow effect is shown; otherwise, **false**. The default is **true**.
    public var isDefaultShadowEnabled: Swift.Bool {
        get throws {
            try _iflyoutPresenter2.get_IsDefaultShadowEnabled()
        }
    }

    /// Gets or sets a value that indicates whether the default shadow effect is shown.
    /// - Returns: **true** if the default shadow effect is shown; otherwise, **false**. The default is **true**.
    public func isDefaultShadowEnabled(_ value: Swift.Bool) throws {
        try _iflyoutPresenter2.put_IsDefaultShadowEnabled(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IFlyoutPresenterStatics2 members

    /// Identifies the IsDefaultShadowEnabled dependency property.
    /// - Returns: The identifier for the IsDefaultShadowEnabled dependency property.
    public static var isDefaultShadowEnabledProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iflyoutPresenterStatics2.get_IsDefaultShadowEnabledProperty())
        }
    }

    // MARK: Implementation details

    private var _iflyoutPresenter_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IFlyoutPresenter>? = nil

    internal var _iflyoutPresenter: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IFlyoutPresenter> {
        get throws {
            try _iflyoutPresenter_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IFlyoutPresenter.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IFlyoutPresenter.self)
            }
        }
    }

    private var _iflyoutPresenter2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IFlyoutPresenter2>? = nil

    internal var _iflyoutPresenter2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IFlyoutPresenter2> {
        get throws {
            try _iflyoutPresenter2_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IFlyoutPresenter2.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IFlyoutPresenter2.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_IFlyoutPresenter>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _iflyoutPresenter_storage?.release()
        _iflyoutPresenter2_storage?.release()
    }

    private static var _iflyoutPresenterFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IFlyoutPresenterFactory>? = nil

    internal static var _iflyoutPresenterFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IFlyoutPresenterFactory> {
        get throws {
            try _iflyoutPresenterFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.FlyoutPresenter", id: CWinRT.SWRT_WindowsUIXamlControls_IFlyoutPresenterFactory.iid)
            }
        }
    }

    private static var _iflyoutPresenterStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IFlyoutPresenterStatics2>? = nil

    internal static var _iflyoutPresenterStatics2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IFlyoutPresenterStatics2> {
        get throws {
            try _iflyoutPresenterStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.FlyoutPresenter", id: CWinRT.SWRT_WindowsUIXamlControls_IFlyoutPresenterStatics2.iid)
            }
        }
    }
}