// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Implements a XAML layout surface target for Microsoft DirectX interoperation scenarios. This panel has some atypical restrictions on its usage within an app window; see Remarks.
open class WindowsUIXamlControls_SwapChainBackgroundPanel: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.ISwapChainBackgroundPanelFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_SwapChainBackgroundPanel.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._iswapChainBackgroundPanelFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.ISwapChainBackgroundPanel2 members

    /// Creates a core input object that handles the input types as specified by the *deviceTypes* parameter.
    /// - Parameter deviceTypes: A combined value of the enumeration.
    /// - Returns: An object that represents the input subsystem for interoperation purposes and can be used for input event connection points.
    public func createCoreIndependentInputSource(_ deviceTypes: WindowsUICore_CoreInputDeviceTypes) throws -> WindowsUICore_CoreIndependentInputSource {
        try COM.NullResult.unwrap(_iswapChainBackgroundPanel2.createCoreIndependentInputSource(deviceTypes))
    }

    // MARK: Implementation details

    private var _iswapChainBackgroundPanel_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ISwapChainBackgroundPanel>? = nil

    internal var _iswapChainBackgroundPanel: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ISwapChainBackgroundPanel> {
        get throws {
            try _iswapChainBackgroundPanel_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_ISwapChainBackgroundPanel.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_ISwapChainBackgroundPanel.self)
            }
        }
    }

    private var _iswapChainBackgroundPanel2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ISwapChainBackgroundPanel2>? = nil

    internal var _iswapChainBackgroundPanel2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ISwapChainBackgroundPanel2> {
        get throws {
            try _iswapChainBackgroundPanel2_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_ISwapChainBackgroundPanel2.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_ISwapChainBackgroundPanel2.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_ISwapChainBackgroundPanel>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _iswapChainBackgroundPanel_storage?.release()
        _iswapChainBackgroundPanel2_storage?.release()
    }

    private static var _iswapChainBackgroundPanelFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ISwapChainBackgroundPanelFactory>? = nil

    internal static var _iswapChainBackgroundPanelFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ISwapChainBackgroundPanelFactory> {
        get throws {
            try _iswapChainBackgroundPanelFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.SwapChainBackgroundPanel", id: CWinRT.SWRT_WindowsUIXamlControls_ISwapChainBackgroundPanelFactory.iid)
            }
        }
    }
}