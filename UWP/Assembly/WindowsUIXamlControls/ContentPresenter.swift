// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Displays the content of a ContentControl. Can also provide content presentation for non-controls. Provides a base class for specialized presenters such as ScrollContentPresenter.
open class WindowsUIXamlControls_ContentPresenter: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.IContentPresenterFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_ContentPresenter.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._icontentPresenterFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IContentPresenter members

    /// Gets or sets the uniform spacing between characters, in units of 1/1000 of an em.
    /// - Returns: The uniform spacing between characters, in units of 1/1000 of an em. The default is 0. Positive values increase tracking and loosen character spacing. Negative values decrease tracking and tighten the character spacing.
    public var characterSpacing: Swift.Int32 {
        get throws {
            try _icontentPresenter.get_CharacterSpacing()
        }
    }

    /// Gets or sets the uniform spacing between characters, in units of 1/1000 of an em.
    /// - Returns: The uniform spacing between characters, in units of 1/1000 of an em. The default is 0. Positive values increase tracking and loosen character spacing. Negative values decrease tracking and tighten the character spacing.
    public func characterSpacing(_ value: Swift.Int32) throws {
        try _icontentPresenter.put_CharacterSpacing(value)
    }

    /// Gets or sets the data that is used to generate the child elements of a ContentPresenter.
    /// - Returns: The data that is used to generate the child elements. The default is null.
    public var content: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenter.get_Content())
        }
    }

    /// Gets or sets the data that is used to generate the child elements of a ContentPresenter.
    /// - Returns: The data that is used to generate the child elements. The default is null.
    public func content(_ value: WindowsRuntime.IInspectable?) throws {
        try _icontentPresenter.put_Content(value)
    }

    /// Gets or sets the template that is used to display the content of the control.
    /// - Returns: A DataTemplate that defines the visualization of the content. The default is null.
    public var contentTemplate: WindowsUIXaml_DataTemplate {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenter.get_ContentTemplate())
        }
    }

    /// Gets or sets the template that is used to display the content of the control.
    /// - Returns: A DataTemplate that defines the visualization of the content. The default is null.
    public func contentTemplate(_ value: WindowsUIXaml_DataTemplate?) throws {
        try _icontentPresenter.put_ContentTemplate(value)
    }

    /// Gets or sets a selection object that changes the DataTemplate to apply for content presented in the ContentPresenter, based on processing information about the content item or its container at run time.
    /// - Returns: A selection object that changes the DataTemplate to apply for content.
    public var contentTemplateSelector: WindowsUIXamlControls_DataTemplateSelector {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenter.get_ContentTemplateSelector())
        }
    }

    /// Gets or sets a selection object that changes the DataTemplate to apply for content presented in the ContentPresenter, based on processing information about the content item or its container at run time.
    /// - Returns: A selection object that changes the DataTemplate to apply for content.
    public func contentTemplateSelector(_ value: WindowsUIXamlControls_DataTemplateSelector?) throws {
        try _icontentPresenter.put_ContentTemplateSelector(value)
    }

    /// Gets or sets the collection of Transition style elements that apply to content presented by the ContentPresenter.
    /// - Returns: The strongly typed collection of Transition style elements.
    public var contentTransitions: WindowsUIXamlMediaAnimation_TransitionCollection {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenter.get_ContentTransitions())
        }
    }

    /// Gets or sets the collection of Transition style elements that apply to content presented by the ContentPresenter.
    /// - Returns: The strongly typed collection of Transition style elements.
    public func contentTransitions(_ value: WindowsUIXamlMediaAnimation_TransitionCollection?) throws {
        try _icontentPresenter.put_ContentTransitions(value)
    }

    /// Gets or sets the preferred top-level font family for the text content presented by the ContentPresenter.
    /// - Returns: A FontFamily object that specifies the preferred font family, or a primary preferred font family with one or more fallback font families. For information about defaults, see the FontFamily class topic.
    public var fontFamily: WindowsUIXamlMedia_FontFamily {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenter.get_FontFamily())
        }
    }

    /// Gets or sets the preferred top-level font family for the text content presented by the ContentPresenter.
    /// - Returns: A FontFamily object that specifies the preferred font family, or a primary preferred font family with one or more fallback font families. For information about defaults, see the FontFamily class topic.
    public func fontFamily(_ value: WindowsUIXamlMedia_FontFamily?) throws {
        try _icontentPresenter.put_FontFamily(value)
    }

    /// Gets or sets the font size for the text content presented by the ContentPresenter.
    /// - Returns: A non-negative value that specifies the font size, measured in pixels.
    public var fontSize: Swift.Double {
        get throws {
            try _icontentPresenter.get_FontSize()
        }
    }

    /// Gets or sets the font size for the text content presented by the ContentPresenter.
    /// - Returns: A non-negative value that specifies the font size, measured in pixels.
    public func fontSize(_ value: Swift.Double) throws {
        try _icontentPresenter.put_FontSize(value)
    }

    /// Gets or sets the font stretch for the text content presented by the ContentPresenter.
    /// - Returns: The requested font stretch, as a FontStretch constant. The default is Normal.
    public var fontStretch: WindowsUIText_FontStretch {
        get throws {
            try _icontentPresenter.get_FontStretch()
        }
    }

    /// Gets or sets the font stretch for the text content presented by the ContentPresenter.
    /// - Returns: The requested font stretch, as a FontStretch constant. The default is Normal.
    public func fontStretch(_ value: WindowsUIText_FontStretch) throws {
        try _icontentPresenter.put_FontStretch(value)
    }

    /// Gets or sets the font style for the presented content.
    /// - Returns: The requested font style, which is a FontStyle constant name. The default is Normal.
    public var fontStyle: WindowsUIText_FontStyle {
        get throws {
            try _icontentPresenter.get_FontStyle()
        }
    }

    /// Gets or sets the font style for the presented content.
    /// - Returns: The requested font style, which is a FontStyle constant name. The default is Normal.
    public func fontStyle(_ value: WindowsUIText_FontStyle) throws {
        try _icontentPresenter.put_FontStyle(value)
    }

    /// Gets or sets the top-level font weight for the text content presented by the ContentPresenter.
    /// - Returns: The requested font weight, which is a FontWeight that is obtained from one of the FontWeights property values. The default is Normal.
    public var fontWeight: WindowsUIText_FontWeight {
        get throws {
            try _icontentPresenter.get_FontWeight()
        }
    }

    /// Gets or sets the top-level font weight for the text content presented by the ContentPresenter.
    /// - Returns: The requested font weight, which is a FontWeight that is obtained from one of the FontWeights property values. The default is Normal.
    public func fontWeight(_ value: WindowsUIText_FontWeight) throws {
        try _icontentPresenter.put_FontWeight(value)
    }

    /// Gets or sets the Brush to apply to the text content handled by the ContentPresenter.
    /// - Returns: The brush used as the foreground brush for the text contents. The default is a null brush from a pure code perspective, but system style defaults set this to Black (for **Light** theme) or White (for **Dark** theme).
    public var foreground: WindowsUIXamlMedia_Brush {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenter.get_Foreground())
        }
    }

    /// Gets or sets the Brush to apply to the text content handled by the ContentPresenter.
    /// - Returns: The brush used as the foreground brush for the text contents. The default is a null brush from a pure code perspective, but system style defaults set this to Black (for **Light** theme) or White (for **Dark** theme).
    public func foreground(_ value: WindowsUIXamlMedia_Brush?) throws {
        try _icontentPresenter.put_Foreground(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IContentPresenter2 members

    /// Get or sets a value that indicates how the font is modified to align with fonts of different sizes.
    /// - Returns: A value of the enumeration that indicates how the font is modified to align at different sizes. The default is **None**.
    public var opticalMarginAlignment: WindowsUIXaml_OpticalMarginAlignment {
        get throws {
            try _icontentPresenter2.get_OpticalMarginAlignment()
        }
    }

    /// Get or sets a value that indicates how the font is modified to align with fonts of different sizes.
    /// - Returns: A value of the enumeration that indicates how the font is modified to align at different sizes. The default is **None**.
    public func opticalMarginAlignment(_ value: WindowsUIXaml_OpticalMarginAlignment) throws {
        try _icontentPresenter2.put_OpticalMarginAlignment(value)
    }

    /// Gets or sets a value that indicates how the line box height is determined for each line of text displayed in the ContentPresenter.
    /// - Returns: A value that indicates how the line box height is determined for each line of text. The default is **Full**.
    public var textLineBounds: WindowsUIXaml_TextLineBounds {
        get throws {
            try _icontentPresenter2.get_TextLineBounds()
        }
    }

    /// Gets or sets a value that indicates how the line box height is determined for each line of text displayed in the ContentPresenter.
    /// - Returns: A value that indicates how the line box height is determined for each line of text. The default is **Full**.
    public func textLineBounds(_ value: WindowsUIXaml_TextLineBounds) throws {
        try _icontentPresenter2.put_TextLineBounds(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IContentPresenter3 members

    /// Gets or sets whether automatic text enlargement, to reflect the system text size setting, is enabled.
    /// - Returns: **true** if automatic text enlargement is enabled; otherwise, **false**.
    public var isTextScaleFactorEnabled: Swift.Bool {
        get throws {
            try _icontentPresenter3.get_IsTextScaleFactorEnabled()
        }
    }

    /// Gets or sets whether automatic text enlargement, to reflect the system text size setting, is enabled.
    /// - Returns: **true** if automatic text enlargement is enabled; otherwise, **false**.
    public func isTextScaleFactorEnabled(_ value: Swift.Bool) throws {
        try _icontentPresenter3.put_IsTextScaleFactorEnabled(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IContentPresenter4 members

    /// Gets or sets the Brush to apply to the background of content handled by the ContentPresenter.
    /// - Returns: The brush used as the background brush for the contents. The default is a null brush from a pure code perspective, but system style defaults set this to White (for **Light** theme) or Black (for **Dark** theme).
    public var background: WindowsUIXamlMedia_Brush {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenter4.get_Background())
        }
    }

    /// Gets or sets the Brush to apply to the background of content handled by the ContentPresenter.
    /// - Returns: The brush used as the background brush for the contents. The default is a null brush from a pure code perspective, but system style defaults set this to White (for **Light** theme) or Black (for **Dark** theme).
    public func background(_ value: WindowsUIXamlMedia_Brush?) throws {
        try _icontentPresenter4.put_Background(value)
    }

    /// Gets or sets a brush that describes the border fill of the content presenter.
    /// - Returns: The brush that is used to fill the content presenter's border. The default is **null**, (a null brush) which is evaluated as Transparent for rendering.
    public var borderBrush: WindowsUIXamlMedia_Brush {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenter4.get_BorderBrush())
        }
    }

    /// Gets or sets a brush that describes the border fill of the content presenter.
    /// - Returns: The brush that is used to fill the content presenter's border. The default is **null**, (a null brush) which is evaluated as Transparent for rendering.
    public func borderBrush(_ value: WindowsUIXamlMedia_Brush?) throws {
        try _icontentPresenter4.put_BorderBrush(value)
    }

    /// Gets or sets the border thickness of the content presenter.
    /// - Returns: The border thickness of the content presenter, as a Thickness value.
    public var borderThickness: WindowsUIXaml_Thickness {
        get throws {
            try _icontentPresenter4.get_BorderThickness()
        }
    }

    /// Gets or sets the border thickness of the content presenter.
    /// - Returns: The border thickness of the content presenter, as a Thickness value.
    public func borderThickness(_ value: WindowsUIXaml_Thickness) throws {
        try _icontentPresenter4.put_BorderThickness(value)
    }

    /// Gets or sets the radius for the corners of the content presenter's border.
    /// - Returns: The degree to which the corners are rounded, expressed as values of the CornerRadius structure.
    public var cornerRadius: WindowsUIXaml_CornerRadius {
        get throws {
            try _icontentPresenter4.get_CornerRadius()
        }
    }

    /// Gets or sets the radius for the corners of the content presenter's border.
    /// - Returns: The degree to which the corners are rounded, expressed as values of the CornerRadius structure.
    public func cornerRadius(_ value: WindowsUIXaml_CornerRadius) throws {
        try _icontentPresenter4.put_CornerRadius(value)
    }

    /// Gets or sets the horizontal alignment of the content.
    /// - Returns: One of the HorizontalAlignment values.
    public var horizontalContentAlignment: WindowsUIXaml_HorizontalAlignment {
        get throws {
            try _icontentPresenter4.get_HorizontalContentAlignment()
        }
    }

    /// Gets or sets the horizontal alignment of the content.
    /// - Returns: One of the HorizontalAlignment values.
    public func horizontalContentAlignment(_ value: WindowsUIXaml_HorizontalAlignment) throws {
        try _icontentPresenter4.put_HorizontalContentAlignment(value)
    }

    /// Gets or sets the height of each line of text content presented by the ContentPresenter.
    /// - Returns: The height in pixels of each line of text content. A value of 0 indicates that the line height is determined automatically from the current font characteristics. The default is 0.
    public var lineHeight: Swift.Double {
        get throws {
            try _icontentPresenter4.get_LineHeight()
        }
    }

    /// Gets or sets the height of each line of text content presented by the ContentPresenter.
    /// - Returns: The height in pixels of each line of text content. A value of 0 indicates that the line height is determined automatically from the current font characteristics. The default is 0.
    public func lineHeight(_ value: Swift.Double) throws {
        try _icontentPresenter4.put_LineHeight(value)
    }

    /// Gets or sets a value that indicates how a line box is determined for each line of text.
    /// - Returns: A value that indicates how a line box is determined for each line of text. The default is **MaxHeight**.
    public var lineStackingStrategy: WindowsUIXaml_LineStackingStrategy {
        get throws {
            try _icontentPresenter4.get_LineStackingStrategy()
        }
    }

    /// Gets or sets a value that indicates how a line box is determined for each line of text.
    /// - Returns: A value that indicates how a line box is determined for each line of text. The default is **MaxHeight**.
    public func lineStackingStrategy(_ value: WindowsUIXaml_LineStackingStrategy) throws {
        try _icontentPresenter4.put_LineStackingStrategy(value)
    }

    /// Gets or sets the maximum lines of text shown.
    /// - Returns: The maximum lines of text shown. The default is 0, which is a special value that represents "Auto" behavior. The value cannot be negative.
    public var maxLines: Swift.Int32 {
        get throws {
            try _icontentPresenter4.get_MaxLines()
        }
    }

    /// Gets or sets the maximum lines of text shown.
    /// - Returns: The maximum lines of text shown. The default is 0, which is a special value that represents "Auto" behavior. The value cannot be negative.
    public func maxLines(_ value: Swift.Int32) throws {
        try _icontentPresenter4.put_MaxLines(value)
    }

    /// Gets or sets the distance between the border and its child object.
    /// - Returns: The dimensions of the space between the border and its child as a Thickness value. Thickness is a structure that stores dimension values using pixel measures.
    public var padding: WindowsUIXaml_Thickness {
        get throws {
            try _icontentPresenter4.get_Padding()
        }
    }

    /// Gets or sets the distance between the border and its child object.
    /// - Returns: The dimensions of the space between the border and its child as a Thickness value. Thickness is a structure that stores dimension values using pixel measures.
    public func padding(_ value: WindowsUIXaml_Thickness) throws {
        try _icontentPresenter4.put_Padding(value)
    }

    /// Gets or sets how the element wraps text.
    /// - Returns: A value that indicates how the element wraps text. The default is **NoWrap**.
    public var textWrapping: WindowsUIXaml_TextWrapping {
        get throws {
            try _icontentPresenter4.get_TextWrapping()
        }
    }

    /// Gets or sets how the element wraps text.
    /// - Returns: A value that indicates how the element wraps text. The default is **NoWrap**.
    public func textWrapping(_ value: WindowsUIXaml_TextWrapping) throws {
        try _icontentPresenter4.put_TextWrapping(value)
    }

    /// Gets or sets the vertical alignment of the content.
    /// - Returns: One of the VerticalAlignment values.
    public var verticalContentAlignment: WindowsUIXaml_VerticalAlignment {
        get throws {
            try _icontentPresenter4.get_VerticalContentAlignment()
        }
    }

    /// Gets or sets the vertical alignment of the content.
    /// - Returns: One of the VerticalAlignment values.
    public func verticalContentAlignment(_ value: WindowsUIXaml_VerticalAlignment) throws {
        try _icontentPresenter4.put_VerticalContentAlignment(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IContentPresenter5 members

    /// Gets or sets a value that indicates how far the background extends in relation to this element's border.
    /// - Returns: A value of the enumeration that indicates how far the background extends. The default is **InnerBorderEdge**.
    public var backgroundSizing: WindowsUIXamlControls_BackgroundSizing {
        get throws {
            try _icontentPresenter5.get_BackgroundSizing()
        }
    }

    /// Gets or sets a value that indicates how far the background extends in relation to this element's border.
    /// - Returns: A value of the enumeration that indicates how far the background extends. The default is **InnerBorderEdge**.
    public func backgroundSizing(_ value: WindowsUIXamlControls_BackgroundSizing) throws {
        try _icontentPresenter5.put_BackgroundSizing(value)
    }

    /// Gets or sets an instance of BrushTransition to automatically animate changes to the Background property.
    /// - Returns: An instance of BrushTransition to automatically animate changes to the Background; otherwise, **null**. The default is **null**.
    public var backgroundTransition: WindowsUIXaml_BrushTransition {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenter5.get_BackgroundTransition())
        }
    }

    /// Gets or sets an instance of BrushTransition to automatically animate changes to the Background property.
    /// - Returns: An instance of BrushTransition to automatically animate changes to the Background; otherwise, **null**. The default is **null**.
    public func backgroundTransition(_ value: WindowsUIXaml_BrushTransition?) throws {
        try _icontentPresenter5.put_BackgroundTransition(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IContentPresenterOverrides members

    /// Invoked when the value of the ContentTemplate property changes.
    /// - Parameter oldContentTemplate: The old value of the ContentTemplate property.
    /// - Parameter newContentTemplate: The new value of the ContentTemplate property.
    open func onContentTemplateChanged(_ oldContentTemplate: WindowsUIXaml_DataTemplate?, _ newContentTemplate: WindowsUIXaml_DataTemplate?) throws {
        try _icontentPresenterOverrides.onContentTemplateChanged(oldContentTemplate, newContentTemplate)
    }

    /// Invoked when the value of the ContentTemplateSelector property changes.
    /// - Parameter oldContentTemplateSelector: The old value of the ContentTemplateSelector property.
    /// - Parameter newContentTemplateSelector: The new value of the ContentTemplateSelector property.
    open func onContentTemplateSelectorChanged(_ oldContentTemplateSelector: WindowsUIXamlControls_DataTemplateSelector?, _ newContentTemplateSelector: WindowsUIXamlControls_DataTemplateSelector?) throws {
        try _icontentPresenterOverrides.onContentTemplateSelectorChanged(oldContentTemplateSelector, newContentTemplateSelector)
    }

    // MARK: Windows.UI.Xaml.Controls.IContentPresenterStatics2 members

    /// Identifies the OpticalMarginAlignment dependency property.
    /// - Returns: The identifier for the OpticalMarginAlignment dependency property.
    public static var opticalMarginAlignmentProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics2.get_OpticalMarginAlignmentProperty())
        }
    }

    /// Identifies the TextLineBounds dependency property.
    /// - Returns: The identifier for the TextLineBounds dependency property.
    public static var textLineBoundsProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics2.get_TextLineBoundsProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IContentPresenterStatics3 members

    /// Identifies the IsTextScaleFactorEnabled  dependency property.
    /// - Returns: The identifier for the IsTextScaleFactorEnabled dependency property.
    public static var isTextScaleFactorEnabledProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics3.get_IsTextScaleFactorEnabledProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IContentPresenterStatics5 members

    /// Identifies the BackgroundSizing dependency property.
    /// - Returns: The identifier for the BackgroundSizing dependency property.
    public static var backgroundSizingProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics5.get_BackgroundSizingProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IContentPresenterStatics4 members

    /// Identifies the Background dependency property.
    /// - Returns: The identifier for the Background dependency property.
    public static var backgroundProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics4.get_BackgroundProperty())
        }
    }

    /// Identifies the BorderBrush dependency property.
    /// - Returns: The identifier for the BorderBrush dependency property.
    public static var borderBrushProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics4.get_BorderBrushProperty())
        }
    }

    /// Identifies the BorderThickness dependency property.
    /// - Returns: The identifier for the BorderThickness dependency property.
    public static var borderThicknessProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics4.get_BorderThicknessProperty())
        }
    }

    /// Identifies the CornerRadius dependency property.
    /// - Returns: The identifier for the CornerRadius dependency property.
    public static var cornerRadiusProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics4.get_CornerRadiusProperty())
        }
    }

    /// Identifies the HorizontalContentAlignment dependency property.
    /// - Returns: The identifier for the HorizontalContentAlignment dependency property.
    public static var horizontalContentAlignmentProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics4.get_HorizontalContentAlignmentProperty())
        }
    }

    /// Identifies the LineHeight  dependency property.
    /// - Returns: The identifier for the LineHeight dependency property.
    public static var lineHeightProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics4.get_LineHeightProperty())
        }
    }

    /// Identifies the LineStackingStrategy dependency property.
    /// - Returns: The identifier for the LineStackingStrategy dependency property.
    public static var lineStackingStrategyProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics4.get_LineStackingStrategyProperty())
        }
    }

    /// Identifies the MaxLines dependency property.
    /// - Returns: The identifier for the MaxLines dependency property.
    public static var maxLinesProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics4.get_MaxLinesProperty())
        }
    }

    /// Identifies the Padding dependency property.
    /// - Returns: The identifier for the Padding dependency property.
    public static var paddingProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics4.get_PaddingProperty())
        }
    }

    /// Identifies the TextWrapping dependency property.
    /// - Returns: The identifier for the TextWrapping dependency property.
    public static var textWrappingProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics4.get_TextWrappingProperty())
        }
    }

    /// Identifies the VerticalContentAlignment dependency property.
    /// - Returns: The identifier for the VerticalContentAlignment dependency property.
    public static var verticalContentAlignmentProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics4.get_VerticalContentAlignmentProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IContentPresenterStatics members

    /// Identifies the CharacterSpacing dependency property.
    /// - Returns: The identifier for the CharacterSpacing dependency property.
    public static var characterSpacingProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics.get_CharacterSpacingProperty())
        }
    }

    /// Identifies the Content dependency property
    /// - Returns: The identifier for the Content dependency property.
    public static var contentProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics.get_ContentProperty())
        }
    }

    /// Identifies the ContentTemplate dependency property.
    /// - Returns: The identifier for the ContentTemplate dependency property.
    public static var contentTemplateProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics.get_ContentTemplateProperty())
        }
    }

    /// Identifies the ContentTemplateSelector dependency property.
    /// - Returns: The identifier for the ContentTemplateSelector dependency property.
    public static var contentTemplateSelectorProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics.get_ContentTemplateSelectorProperty())
        }
    }

    /// Identifies the ContentTransitions dependency property.
    /// - Returns: The identifier for the ContentTransitions dependency property.
    public static var contentTransitionsProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics.get_ContentTransitionsProperty())
        }
    }

    /// Identifies the FontFamily  dependency property.
    /// - Returns: The identifier for the FontFamily dependency property.
    public static var fontFamilyProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics.get_FontFamilyProperty())
        }
    }

    /// Identifies the FontSize  dependency property.
    /// - Returns: The identifier for the FontSize dependency property.
    public static var fontSizeProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics.get_FontSizeProperty())
        }
    }

    /// Identifies the FontStretch  dependency property.
    /// - Returns: The identifier for the FontStretch dependency property.
    public static var fontStretchProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics.get_FontStretchProperty())
        }
    }

    /// Identifies the FontStyle  dependency property.
    /// - Returns: The identifier for the FontStyle dependency property.
    public static var fontStyleProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics.get_FontStyleProperty())
        }
    }

    /// Identifies the FontWeight  dependency property.
    /// - Returns: The identifier for the FontWeight dependency property.
    public static var fontWeightProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics.get_FontWeightProperty())
        }
    }

    /// Identifies the Foreground  dependency property.
    /// - Returns: The identifier for the Foreground dependency property.
    public static var foregroundProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icontentPresenterStatics.get_ForegroundProperty())
        }
    }

    // MARK: Implementation details

    private var _icontentPresenter_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenter>? = nil

    internal var _icontentPresenter: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenter> {
        get throws {
            try _icontentPresenter_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IContentPresenter.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IContentPresenter.self)
            }
        }
    }

    private var _icontentPresenter2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenter2>? = nil

    internal var _icontentPresenter2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenter2> {
        get throws {
            try _icontentPresenter2_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IContentPresenter2.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IContentPresenter2.self)
            }
        }
    }

    private var _icontentPresenter3_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenter3>? = nil

    internal var _icontentPresenter3: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenter3> {
        get throws {
            try _icontentPresenter3_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IContentPresenter3.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IContentPresenter3.self)
            }
        }
    }

    private var _icontentPresenter4_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenter4>? = nil

    internal var _icontentPresenter4: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenter4> {
        get throws {
            try _icontentPresenter4_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IContentPresenter4.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IContentPresenter4.self)
            }
        }
    }

    private var _icontentPresenter5_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenter5>? = nil

    internal var _icontentPresenter5: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenter5> {
        get throws {
            try _icontentPresenter5_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IContentPresenter5.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IContentPresenter5.self)
            }
        }
    }

    private var _icontentPresenterOverrides_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterOverrides>? = nil

    internal var _icontentPresenterOverrides: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterOverrides> {
        get throws {
            try _icontentPresenterOverrides_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterOverrides.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterOverrides.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenter>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _icontentPresenter_storage?.release()
        _icontentPresenter2_storage?.release()
        _icontentPresenter3_storage?.release()
        _icontentPresenter4_storage?.release()
        _icontentPresenter5_storage?.release()
        _icontentPresenterOverrides_storage?.release()
    }

    private static var _icontentPresenterFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterFactory>? = nil

    internal static var _icontentPresenterFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterFactory> {
        get throws {
            try _icontentPresenterFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ContentPresenter", id: CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterFactory.iid)
            }
        }
    }

    private static var _icontentPresenterStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterStatics2>? = nil

    internal static var _icontentPresenterStatics2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterStatics2> {
        get throws {
            try _icontentPresenterStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ContentPresenter", id: CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterStatics2.iid)
            }
        }
    }

    private static var _icontentPresenterStatics3_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterStatics3>? = nil

    internal static var _icontentPresenterStatics3: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterStatics3> {
        get throws {
            try _icontentPresenterStatics3_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ContentPresenter", id: CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterStatics3.iid)
            }
        }
    }

    private static var _icontentPresenterStatics5_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterStatics5>? = nil

    internal static var _icontentPresenterStatics5: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterStatics5> {
        get throws {
            try _icontentPresenterStatics5_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ContentPresenter", id: CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterStatics5.iid)
            }
        }
    }

    private static var _icontentPresenterStatics4_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterStatics4>? = nil

    internal static var _icontentPresenterStatics4: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterStatics4> {
        get throws {
            try _icontentPresenterStatics4_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ContentPresenter", id: CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterStatics4.iid)
            }
        }
    }

    private static var _icontentPresenterStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterStatics>? = nil

    internal static var _icontentPresenterStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterStatics> {
        get throws {
            try _icontentPresenterStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ContentPresenter", id: CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterStatics.iid)
            }
        }
    }

    // MARK: Override support

    private var _icontentPresenterOverrides_outer: COM.COMExportedInterface = .uninitialized

    public override func _queryOverridesInterfacePointer(_ id: COM.COMInterfaceID) throws -> COM.IUnknownPointer? {
        if id == CWinRT.SWRT_WindowsUIXamlControls_IContentPresenterOverrides.iid {
            if !_icontentPresenterOverrides_outer.isInitialized {
                _icontentPresenterOverrides_outer = COM.COMExportedInterface(
                    swiftObject: self, virtualTable: &WindowsUIXamlControls_ContentPresenterProjection.VirtualTables.icontentPresenterOverrides)
            }
            return _icontentPresenterOverrides_outer.unknownPointer.addingRef()
        }
        return nil
    }
}