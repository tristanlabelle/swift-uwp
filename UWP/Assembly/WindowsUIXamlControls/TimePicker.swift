// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a control that allows a user to pick a time value.
open class WindowsUIXamlControls_TimePicker: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.ITimePickerFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_TimePicker.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._itimePickerFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.ITimePicker members

    /// Gets or sets the clock system to use.
    /// - Returns: The name of the clock system to use. See Remarks.
    public var clockIdentifier: Swift.String {
        get throws {
            try _itimePicker.get_ClockIdentifier()
        }
    }

    /// Gets or sets the clock system to use.
    /// - Returns: The name of the clock system to use. See Remarks.
    public func clockIdentifier(_ value: Swift.String) throws {
        try _itimePicker.put_ClockIdentifier(value)
    }

    /// Gets or sets the content for the control's header.
    /// - Returns: The content of the control's header. The default is **null**.
    public var header: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_itimePicker.get_Header())
        }
    }

    /// Gets or sets the content for the control's header.
    /// - Returns: The content of the control's header. The default is **null**.
    public func header(_ value: WindowsRuntime.IInspectable?) throws {
        try _itimePicker.put_Header(value)
    }

    /// Gets or sets the DataTemplate used to display the content of the control's header.
    /// - Returns: The template that specifies the visualization of the header object. The default is **null**.
    public var headerTemplate: WindowsUIXaml_DataTemplate {
        get throws {
            try COM.NullResult.unwrap(_itimePicker.get_HeaderTemplate())
        }
    }

    /// Gets or sets the DataTemplate used to display the content of the control's header.
    /// - Returns: The template that specifies the visualization of the header object. The default is **null**.
    public func headerTemplate(_ value: WindowsUIXaml_DataTemplate?) throws {
        try _itimePicker.put_HeaderTemplate(value)
    }

    /// Gets or sets a value that indicates the time increments shown in the minute picker. For example, 15 specifies that the TimePicker minute control displays only the choices 00, 15, 30, 45.
    /// - Returns: An integer from 0-59 that indicates the increments shown in the minute picker. The default is 1.
    public var minuteIncrement: Swift.Int32 {
        get throws {
            try _itimePicker.get_MinuteIncrement()
        }
    }

    /// Gets or sets a value that indicates the time increments shown in the minute picker. For example, 15 specifies that the TimePicker minute control displays only the choices 00, 15, 30, 45.
    /// - Returns: An integer from 0-59 that indicates the increments shown in the minute picker. The default is 1.
    public func minuteIncrement(_ value: Swift.Int32) throws {
        try _itimePicker.put_MinuteIncrement(value)
    }

    /// Gets or sets the time currently set in the time picker.
    /// - Returns: The time currently set in the time picker.
    public var time: WindowsFoundation_TimeSpan {
        get throws {
            try _itimePicker.get_Time()
        }
    }

    /// Gets or sets the time currently set in the time picker.
    /// - Returns: The time currently set in the time picker.
    public func time(_ value: WindowsFoundation_TimeSpan) throws {
        try _itimePicker.put_Time(value)
    }

    /// Occurs when the time value is changed.
    public func timeChanged(adding handler: WindowsFoundation_EventHandler<WindowsUIXamlControls_TimePickerValueChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _itimePicker.add_TimeChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: timeChanged)
    }

    public func timeChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _itimePicker.remove_TimeChanged(token)
    }

    // MARK: Windows.UI.Xaml.Controls.ITimePicker2 members

    /// Gets or sets a value that specifies whether the area outside of a *light-dismiss* UI is darkened.
    /// - Returns: A value of the enumeration that specifies whether the area outside of a light-dismiss UI is darkened. The default is **Auto**.
    public var lightDismissOverlayMode: WindowsUIXamlControls_LightDismissOverlayMode {
        get throws {
            try _itimePicker2.get_LightDismissOverlayMode()
        }
    }

    /// Gets or sets a value that specifies whether the area outside of a *light-dismiss* UI is darkened.
    /// - Returns: A value of the enumeration that specifies whether the area outside of a light-dismiss UI is darkened. The default is **Auto**.
    public func lightDismissOverlayMode(_ value: WindowsUIXamlControls_LightDismissOverlayMode) throws {
        try _itimePicker2.put_LightDismissOverlayMode(value)
    }

    // MARK: Windows.UI.Xaml.Controls.ITimePicker3 members

    /// Gets or sets the time currently selected in the time picker.
    /// - Returns: The time currently selected in the time picker.
    public var selectedTime: WindowsFoundation_IReference<WindowsFoundation_TimeSpan>? {
        get throws {
            try _itimePicker3.get_SelectedTime()
        }
    }

    /// Gets or sets the time currently selected in the time picker.
    /// - Returns: The time currently selected in the time picker.
    public func selectedTime(_ value: WindowsFoundation_IReference<WindowsFoundation_TimeSpan>?) throws {
        try _itimePicker3.put_SelectedTime(value)
    }

    /// Occurs when the selected time value is changed.
    public func selectedTimeChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIXamlControls_TimePicker?, WindowsUIXamlControls_TimePickerSelectedValueChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _itimePicker3.add_SelectedTimeChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: selectedTimeChanged)
    }

    public func selectedTimeChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _itimePicker3.remove_SelectedTimeChanged(token)
    }

    // MARK: Windows.UI.Xaml.Controls.ITimePickerStatics members

    /// Gets the identifier for the ClockIdentifier dependency property.
    /// - Returns: The identifier for the ClockIdentifier dependency property.
    public static var clockIdentifierProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itimePickerStatics.get_ClockIdentifierProperty())
        }
    }

    /// Identifies the Header dependency property.
    /// - Returns: The identifier for the Header dependency property.
    public static var headerProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itimePickerStatics.get_HeaderProperty())
        }
    }

    /// Identifies the HeaderTemplate dependency property.
    /// - Returns: The identifier for the HeaderTemplate dependency property.
    public static var headerTemplateProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itimePickerStatics.get_HeaderTemplateProperty())
        }
    }

    /// Gets the identifier for the MinuteIncrement dependency property.
    /// - Returns: The identifier for the MinuteIncrement dependency property.
    public static var minuteIncrementProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itimePickerStatics.get_MinuteIncrementProperty())
        }
    }

    /// Gets the identifier for the Time dependency property.
    /// - Returns: The identifier for the Time dependency property.
    public static var timeProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itimePickerStatics.get_TimeProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.ITimePickerStatics3 members

    /// Identifies the SelectedTime dependency property.
    /// - Returns: The identifier for the SelectedTime dependency property.
    public static var selectedTimeProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itimePickerStatics3.get_SelectedTimeProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.ITimePickerStatics2 members

    /// Identifies the LightDismissOverlayMode dependency property.
    /// - Returns: The identifier for the LightDismissOverlayMode dependency property.
    public static var lightDismissOverlayModeProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itimePickerStatics2.get_LightDismissOverlayModeProperty())
        }
    }

    // MARK: Implementation details

    private var _itimePicker_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITimePicker>? = nil

    internal var _itimePicker: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITimePicker> {
        get throws {
            try _itimePicker_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_ITimePicker.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_ITimePicker.self)
            }
        }
    }

    private var _itimePicker2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITimePicker2>? = nil

    internal var _itimePicker2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITimePicker2> {
        get throws {
            try _itimePicker2_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_ITimePicker2.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_ITimePicker2.self)
            }
        }
    }

    private var _itimePicker3_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITimePicker3>? = nil

    internal var _itimePicker3: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITimePicker3> {
        get throws {
            try _itimePicker3_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_ITimePicker3.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_ITimePicker3.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_ITimePicker>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _itimePicker_storage?.release()
        _itimePicker2_storage?.release()
        _itimePicker3_storage?.release()
    }

    private static var _itimePickerFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITimePickerFactory>? = nil

    internal static var _itimePickerFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITimePickerFactory> {
        get throws {
            try _itimePickerFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.TimePicker", id: CWinRT.SWRT_WindowsUIXamlControls_ITimePickerFactory.iid)
            }
        }
    }

    private static var _itimePickerStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITimePickerStatics>? = nil

    internal static var _itimePickerStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITimePickerStatics> {
        get throws {
            try _itimePickerStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.TimePicker", id: CWinRT.SWRT_WindowsUIXamlControls_ITimePickerStatics.iid)
            }
        }
    }

    private static var _itimePickerStatics3_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITimePickerStatics3>? = nil

    internal static var _itimePickerStatics3: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITimePickerStatics3> {
        get throws {
            try _itimePickerStatics3_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.TimePicker", id: CWinRT.SWRT_WindowsUIXamlControls_ITimePickerStatics3.iid)
            }
        }
    }

    private static var _itimePickerStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITimePickerStatics2>? = nil

    internal static var _itimePickerStatics2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITimePickerStatics2> {
        get throws {
            try _itimePickerStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.TimePicker", id: CWinRT.SWRT_WindowsUIXamlControls_ITimePickerStatics2.iid)
            }
        }
    }
}