// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a control that allows a user to pick a date from a calendar display.
open class WindowsUIXamlControls_CalendarDatePicker: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.ICalendarDatePickerFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_CalendarDatePicker.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._icalendarDatePickerFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.ICalendarDatePicker members

    /// Gets or sets the calendar system to use.
    /// - Returns: The name of the calendar system to use.
    public var calendarIdentifier: Swift.String {
        get throws {
            try _icalendarDatePicker.get_CalendarIdentifier()
        }
    }

    /// Gets or sets the calendar system to use.
    /// - Returns: The name of the calendar system to use.
    public func calendarIdentifier(_ value: Swift.String) throws {
        try _icalendarDatePicker.put_CalendarIdentifier(value)
    }

    /// Gets or sets the Style associated with the control's internal CalendarView object.
    /// - Returns: The current style of the CalendarView object.
    public var calendarViewStyle: WindowsUIXaml_Style {
        get throws {
            try COM.NullResult.unwrap(_icalendarDatePicker.get_CalendarViewStyle())
        }
    }

    /// Gets or sets the Style associated with the control's internal CalendarView object.
    /// - Returns: The current style of the CalendarView object.
    public func calendarViewStyle(_ value: WindowsUIXaml_Style?) throws {
        try _icalendarDatePicker.put_CalendarViewStyle(value)
    }

    /// Gets or sets the date currently set in the calendar picker.
    /// - Returns: The date currently set in the calendar picker.
    public var date: WindowsFoundation_IReference<WindowsFoundation_DateTime>? {
        get throws {
            try _icalendarDatePicker.get_Date()
        }
    }

    /// Gets or sets the date currently set in the calendar picker.
    /// - Returns: The date currently set in the calendar picker.
    public func date(_ value: WindowsFoundation_IReference<WindowsFoundation_DateTime>?) throws {
        try _icalendarDatePicker.put_Date(value)
    }

    /// Gets or sets the display format for the date value in the picker's text box.
    /// - Returns: The string format to use to display the date in the picker's text box.
    public var dateFormat: Swift.String {
        get throws {
            try _icalendarDatePicker.get_DateFormat()
        }
    }

    /// Gets or sets the display format for the date value in the picker's text box.
    /// - Returns: The string format to use to display the date in the picker's text box.
    public func dateFormat(_ value: Swift.String) throws {
        try _icalendarDatePicker.put_DateFormat(value)
    }

    /// Gets or sets the display format for the day of the week headers in the picker's CalendarView.
    /// - Returns: The string format to use to display the day of the week headers in the picker's CalendarView.
    public var dayOfWeekFormat: Swift.String {
        get throws {
            try _icalendarDatePicker.get_DayOfWeekFormat()
        }
    }

    /// Gets or sets the display format for the day of the week headers in the picker's CalendarView.
    /// - Returns: The string format to use to display the day of the week headers in the picker's CalendarView.
    public func dayOfWeekFormat(_ value: Swift.String) throws {
        try _icalendarDatePicker.put_DayOfWeekFormat(value)
    }

    /// Gets or sets a value that indicates whether the calendar shows selections for month, year, or decade in the picker's CalendarView.
    /// - Returns: A value of the enumeration that indicates whether the calendar shows selections for month, year, or decade. The default is **Month**.
    public var displayMode: WindowsUIXamlControls_CalendarViewDisplayMode {
        get throws {
            try _icalendarDatePicker.get_DisplayMode()
        }
    }

    /// Gets or sets a value that indicates whether the calendar shows selections for month, year, or decade in the picker's CalendarView.
    /// - Returns: A value of the enumeration that indicates whether the calendar shows selections for month, year, or decade. The default is **Month**.
    public func displayMode(_ value: WindowsUIXamlControls_CalendarViewDisplayMode) throws {
        try _icalendarDatePicker.put_DisplayMode(value)
    }

    /// Gets or sets a value that indicates which day is shown as the first day of the week in the picker's CalendarView.
    /// - Returns: A value of the enumeration that indicates which day is shown as the first day of the week.
    public var firstDayOfWeek: WindowsGlobalization_DayOfWeek {
        get throws {
            try _icalendarDatePicker.get_FirstDayOfWeek()
        }
    }

    /// Gets or sets a value that indicates which day is shown as the first day of the week in the picker's CalendarView.
    /// - Returns: A value of the enumeration that indicates which day is shown as the first day of the week.
    public func firstDayOfWeek(_ value: WindowsGlobalization_DayOfWeek) throws {
        try _icalendarDatePicker.put_FirstDayOfWeek(value)
    }

    /// Gets or sets the content for the calendar picker's header.
    /// - Returns: The content of the header. The default value is **null**.
    public var header: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_icalendarDatePicker.get_Header())
        }
    }

    /// Gets or sets the content for the calendar picker's header.
    /// - Returns: The content of the header. The default value is **null**.
    public func header(_ value: WindowsRuntime.IInspectable?) throws {
        try _icalendarDatePicker.put_Header(value)
    }

    /// Gets or sets the DataTemplate used to display the content of the header.
    /// - Returns: The template that specifies the visualization of the header object. The default is **null**.
    public var headerTemplate: WindowsUIXaml_DataTemplate {
        get throws {
            try COM.NullResult.unwrap(_icalendarDatePicker.get_HeaderTemplate())
        }
    }

    /// Gets or sets the DataTemplate used to display the content of the header.
    /// - Returns: The template that specifies the visualization of the header object. The default is **null**.
    public func headerTemplate(_ value: WindowsUIXaml_DataTemplate?) throws {
        try _icalendarDatePicker.put_HeaderTemplate(value)
    }

    /// Gets or sets a value that indicates whether the calendar view of the CalendarDatePicker is currently shown.
    /// - Returns: **true** if the calendar view is shown; otherwise, **false**. The default is **false**.
    public var isCalendarOpen: Swift.Bool {
        get throws {
            try _icalendarDatePicker.get_IsCalendarOpen()
        }
    }

    /// Gets or sets a value that indicates whether the calendar view of the CalendarDatePicker is currently shown.
    /// - Returns: **true** if the calendar view is shown; otherwise, **false**. The default is **false**.
    public func isCalendarOpen(_ value: Swift.Bool) throws {
        try _icalendarDatePicker.put_IsCalendarOpen(value)
    }

    /// Gets or sets a value that indicates whether the month name is shown with the first day of the month in the picker's CalendarView.
    /// - Returns: **true** if the month name is shown with the first day of the month; otherwise, **false**. The default is **true**.
    public var isGroupLabelVisible: Swift.Bool {
        get throws {
            try _icalendarDatePicker.get_IsGroupLabelVisible()
        }
    }

    /// Gets or sets a value that indicates whether the month name is shown with the first day of the month in the picker's CalendarView.
    /// - Returns: **true** if the month name is shown with the first day of the month; otherwise, **false**. The default is **true**.
    public func isGroupLabelVisible(_ value: Swift.Bool) throws {
        try _icalendarDatePicker.put_IsGroupLabelVisible(value)
    }

    /// Gets or sets a value that indicates whether out-of-scope calendar items are shown with a unique foreground color in the picker's CalendarView.
    /// - Returns: **true** if out-of-scope calendar items are shown with a unique color; **false** if they are shown with the same color as in-scope items. The default is **true**.
    public var isOutOfScopeEnabled: Swift.Bool {
        get throws {
            try _icalendarDatePicker.get_IsOutOfScopeEnabled()
        }
    }

    /// Gets or sets a value that indicates whether out-of-scope calendar items are shown with a unique foreground color in the picker's CalendarView.
    /// - Returns: **true** if out-of-scope calendar items are shown with a unique color; **false** if they are shown with the same color as in-scope items. The default is **true**.
    public func isOutOfScopeEnabled(_ value: Swift.Bool) throws {
        try _icalendarDatePicker.put_IsOutOfScopeEnabled(value)
    }

    /// Gets or sets a value that indicates whether the current date is highlighted in the picker's CalendarView.
    /// - Returns: **true** if the current date is highlighted; otherwise, **false**. The default is **true**.
    public var isTodayHighlighted: Swift.Bool {
        get throws {
            try _icalendarDatePicker.get_IsTodayHighlighted()
        }
    }

    /// Gets or sets a value that indicates whether the current date is highlighted in the picker's CalendarView.
    /// - Returns: **true** if the current date is highlighted; otherwise, **false**. The default is **true**.
    public func isTodayHighlighted(_ value: Swift.Bool) throws {
        try _icalendarDatePicker.put_IsTodayHighlighted(value)
    }

    /// Gets or sets the latest date that can be set in the picker.
    /// - Returns: The latest date that can be set.
    public var maxDate: WindowsFoundation_DateTime {
        get throws {
            try _icalendarDatePicker.get_MaxDate()
        }
    }

    /// Gets or sets the latest date that can be set in the picker.
    /// - Returns: The latest date that can be set.
    public func maxDate(_ value: WindowsFoundation_DateTime) throws {
        try _icalendarDatePicker.put_MaxDate(value)
    }

    /// Gets or sets the earliest date that can be set in the picker.
    /// - Returns: The earliest date that can be set.
    public var minDate: WindowsFoundation_DateTime {
        get throws {
            try _icalendarDatePicker.get_MinDate()
        }
    }

    /// Gets or sets the earliest date that can be set in the picker.
    /// - Returns: The earliest date that can be set.
    public func minDate(_ value: WindowsFoundation_DateTime) throws {
        try _icalendarDatePicker.put_MinDate(value)
    }

    /// Gets or sets the text that is displayed in the picker's text box until the value is changed by a user action or some other operation.
    /// - Returns: The text that is displayed in the control when no value is entered. The default is an empty string ("").
    public var placeholderText: Swift.String {
        get throws {
            try _icalendarDatePicker.get_PlaceholderText()
        }
    }

    /// Gets or sets the text that is displayed in the picker's text box until the value is changed by a user action or some other operation.
    /// - Returns: The text that is displayed in the control when no value is entered. The default is an empty string ("").
    public func placeholderText(_ value: Swift.String) throws {
        try _icalendarDatePicker.put_PlaceholderText(value)
    }

    /// Occurs when a CalendarViewDayItem is loading in the picker's CalendarView.
    public func calendarViewDayItemChanging(adding handler: WindowsUIXamlControls_CalendarViewDayItemChangingEventHandler?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _icalendarDatePicker.add_CalendarViewDayItemChanging(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: calendarViewDayItemChanging)
    }

    public func calendarViewDayItemChanging(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _icalendarDatePicker.remove_CalendarViewDayItemChanging(token)
    }

    /// Occurs when the picker's CalendarView is hidden.
    public func closed(adding handler: WindowsFoundation_EventHandler<WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _icalendarDatePicker.add_Closed(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: closed)
    }

    public func closed(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _icalendarDatePicker.remove_Closed(token)
    }

    /// Occurs when the date value is changed.
    public func dateChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIXamlControls_CalendarDatePicker?, WindowsUIXamlControls_CalendarDatePickerDateChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _icalendarDatePicker.add_DateChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: dateChanged)
    }

    public func dateChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _icalendarDatePicker.remove_DateChanged(token)
    }

    /// Occurs when the picker's CalendarView is shown.
    public func opened(adding handler: WindowsFoundation_EventHandler<WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _icalendarDatePicker.add_Opened(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: opened)
    }

    public func opened(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _icalendarDatePicker.remove_Opened(token)
    }

    /// Shows the specified date in the calendar picker.
    /// - Parameter date: The date to show.
    public func setDisplayDate(_ date: WindowsFoundation_DateTime) throws {
        try _icalendarDatePicker.setDisplayDate(date)
    }

    /// Sets the number of rows and columns to use in the **Year** and **Decade** display modes of the picker's CalendarView.
    /// - Parameter columns: The number of columns in the view.
    /// - Parameter rows: The number of rows in the view.
    public func setYearDecadeDisplayDimensions(_ columns: Swift.Int32, _ rows: Swift.Int32) throws {
        try _icalendarDatePicker.setYearDecadeDisplayDimensions(columns, rows)
    }

    // MARK: Windows.UI.Xaml.Controls.ICalendarDatePicker2 members

    /// Gets or sets a value that specifies whether the area outside of a *light-dismiss* UI is darkened.
    /// - Returns: A value of the enumeration that specifies whether the area outside of a light-dismiss UI is darkened. The default is **Auto**.
    public var lightDismissOverlayMode: WindowsUIXamlControls_LightDismissOverlayMode {
        get throws {
            try _icalendarDatePicker2.get_LightDismissOverlayMode()
        }
    }

    /// Gets or sets a value that specifies whether the area outside of a *light-dismiss* UI is darkened.
    /// - Returns: A value of the enumeration that specifies whether the area outside of a light-dismiss UI is darkened. The default is **Auto**.
    public func lightDismissOverlayMode(_ value: WindowsUIXamlControls_LightDismissOverlayMode) throws {
        try _icalendarDatePicker2.put_LightDismissOverlayMode(value)
    }

    // MARK: Windows.UI.Xaml.Controls.ICalendarDatePicker3 members

    /// Gets or sets content that is shown below the control. The content should provide guidance about the input expected by the control.
    /// - Returns: The content to be displayed below the control. The default is **null**.
    public var description: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_icalendarDatePicker3.get_Description())
        }
    }

    /// Gets or sets content that is shown below the control. The content should provide guidance about the input expected by the control.
    /// - Returns: The content to be displayed below the control. The default is **null**.
    public func description(_ value: WindowsRuntime.IInspectable?) throws {
        try _icalendarDatePicker3.put_Description(value)
    }

    // MARK: Windows.UI.Xaml.Controls.ICalendarDatePickerStatics2 members

    /// Identifies the LightDismissOverlayMode dependency property.
    /// - Returns: The identifier for the LightDismissOverlayMode dependency property.
    public static var lightDismissOverlayModeProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icalendarDatePickerStatics2.get_LightDismissOverlayModeProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.ICalendarDatePickerStatics members

    /// Identifies the CalendarIdentifier dependency property.
    /// - Returns: The identifier for the CalendarIdentifier dependency property.
    public static var calendarIdentifierProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icalendarDatePickerStatics.get_CalendarIdentifierProperty())
        }
    }

    /// Identifies the CalendarViewStyle dependency property.
    /// - Returns: The identifier for the CalendarViewStyle dependency property.
    public static var calendarViewStyleProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icalendarDatePickerStatics.get_CalendarViewStyleProperty())
        }
    }

    /// Identifies the DateFormat dependency property.
    /// - Returns: The identifier for the DateFormat dependency property.
    public static var dateFormatProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icalendarDatePickerStatics.get_DateFormatProperty())
        }
    }

    /// Identifies the Date dependency property.
    /// - Returns: The identifier for the Date dependency property.
    public static var dateProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icalendarDatePickerStatics.get_DateProperty())
        }
    }

    /// Identifies the DayOfWeekFormat dependency property.
    /// - Returns: The identifier for the DayOfWeekFormat dependency property.
    public static var dayOfWeekFormatProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icalendarDatePickerStatics.get_DayOfWeekFormatProperty())
        }
    }

    /// Identifies the DisplayMode dependency property.
    /// - Returns: The identifier for the DisplayMode dependency property.
    public static var displayModeProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icalendarDatePickerStatics.get_DisplayModeProperty())
        }
    }

    /// Identifies the FirstDayOfWeek dependency property.
    /// - Returns: The identifier for the FirstDayOfWeek dependency property.
    public static var firstDayOfWeekProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icalendarDatePickerStatics.get_FirstDayOfWeekProperty())
        }
    }

    /// Identifies the Header dependency property.
    /// - Returns: The identifier for the Header dependency property.
    public static var headerProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icalendarDatePickerStatics.get_HeaderProperty())
        }
    }

    /// Identifies the HeaderTemplate dependency property.
    /// - Returns: The identifier for the HeaderTemplate dependency property.
    public static var headerTemplateProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icalendarDatePickerStatics.get_HeaderTemplateProperty())
        }
    }

    /// Identifies the IsCalendarOpen dependency property.
    /// - Returns: The identifier for the IsCalendarOpen dependency property.
    public static var isCalendarOpenProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icalendarDatePickerStatics.get_IsCalendarOpenProperty())
        }
    }

    /// Identifies the IsGroupLabelVisible  dependency property.
    /// - Returns: The identifier for the IsGroupLabelVisible   dependency property.
    public static var isGroupLabelVisibleProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icalendarDatePickerStatics.get_IsGroupLabelVisibleProperty())
        }
    }

    /// Identifies the IsOutOfScopeEnabled dependency property.
    /// - Returns: The identifier for the IsOutOfScopeEnabled dependency property.
    public static var isOutOfScopeEnabledProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icalendarDatePickerStatics.get_IsOutOfScopeEnabledProperty())
        }
    }

    /// Identifies the IsTodayHighlighted dependency property.
    /// - Returns: The identifier for the IsTodayHighlighted dependency property.
    public static var isTodayHighlightedProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icalendarDatePickerStatics.get_IsTodayHighlightedProperty())
        }
    }

    /// Identifies the MaxDate dependency property.
    /// - Returns: The identifier for the MaxDate dependency property.
    public static var maxDateProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icalendarDatePickerStatics.get_MaxDateProperty())
        }
    }

    /// Identifies the MinDate dependency property.
    /// - Returns: The identifier for the MinDate dependency property.
    public static var minDateProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icalendarDatePickerStatics.get_MinDateProperty())
        }
    }

    /// Identifies the PlaceholderText dependency property.
    /// - Returns: The identifier for the PlaceholderText dependency property.
    public static var placeholderTextProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icalendarDatePickerStatics.get_PlaceholderTextProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.ICalendarDatePickerStatics3 members

    /// Identifies the Description dependency property.
    /// - Returns: The identifier for the Description dependency property.
    public static var descriptionProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icalendarDatePickerStatics3.get_DescriptionProperty())
        }
    }

    // MARK: Implementation details

    private var _icalendarDatePicker_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePicker>? = nil

    internal var _icalendarDatePicker: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePicker> {
        get throws {
            try _icalendarDatePicker_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePicker.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePicker.self)
            }
        }
    }

    private var _icalendarDatePicker2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePicker2>? = nil

    internal var _icalendarDatePicker2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePicker2> {
        get throws {
            try _icalendarDatePicker2_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePicker2.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePicker2.self)
            }
        }
    }

    private var _icalendarDatePicker3_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePicker3>? = nil

    internal var _icalendarDatePicker3: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePicker3> {
        get throws {
            try _icalendarDatePicker3_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePicker3.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePicker3.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePicker>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _icalendarDatePicker_storage?.release()
        _icalendarDatePicker2_storage?.release()
        _icalendarDatePicker3_storage?.release()
    }

    private static var _icalendarDatePickerFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePickerFactory>? = nil

    internal static var _icalendarDatePickerFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePickerFactory> {
        get throws {
            try _icalendarDatePickerFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.CalendarDatePicker", id: CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePickerFactory.iid)
            }
        }
    }

    private static var _icalendarDatePickerStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePickerStatics2>? = nil

    internal static var _icalendarDatePickerStatics2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePickerStatics2> {
        get throws {
            try _icalendarDatePickerStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.CalendarDatePicker", id: CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePickerStatics2.iid)
            }
        }
    }

    private static var _icalendarDatePickerStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePickerStatics>? = nil

    internal static var _icalendarDatePickerStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePickerStatics> {
        get throws {
            try _icalendarDatePickerStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.CalendarDatePicker", id: CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePickerStatics.iid)
            }
        }
    }

    private static var _icalendarDatePickerStatics3_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePickerStatics3>? = nil

    internal static var _icalendarDatePickerStatics3: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePickerStatics3> {
        get throws {
            try _icalendarDatePickerStatics3_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.CalendarDatePicker", id: CWinRT.SWRT_WindowsUIXamlControls_ICalendarDatePickerStatics3.iid)
            }
        }
    }
}