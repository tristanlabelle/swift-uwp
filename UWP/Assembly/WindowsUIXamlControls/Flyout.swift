// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a control that displays lightweight UI that is either information, or requires user interaction. Unlike a dialog, a Flyout can be light dismissed by clicking or tapping outside of it, pressing the device’s back button, or pressing the ‘Esc’ key.
open class WindowsUIXamlControls_Flyout: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.IFlyoutFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_Flyout.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._iflyoutFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IFlyout members

    /// Gets or sets the content of the Flyout.
    /// - Returns: The content of the Flyout.
    public var content: WindowsUIXaml_UIElement {
        get throws {
            try COM.NullResult.unwrap(_iflyout.get_Content())
        }
    }

    /// Gets or sets the content of the Flyout.
    /// - Returns: The content of the Flyout.
    public func content(_ value: WindowsUIXaml_UIElement?) throws {
        try _iflyout.put_Content(value)
    }

    /// Gets or sets the Style applied to the Flyout content.
    /// - Returns: The applied Style for the Flyout content, if present; otherwise, **null**. The default is **null**.
    public var flyoutPresenterStyle: WindowsUIXaml_Style {
        get throws {
            try COM.NullResult.unwrap(_iflyout.get_FlyoutPresenterStyle())
        }
    }

    /// Gets or sets the Style applied to the Flyout content.
    /// - Returns: The applied Style for the Flyout content, if present; otherwise, **null**. The default is **null**.
    public func flyoutPresenterStyle(_ value: WindowsUIXaml_Style?) throws {
        try _iflyout.put_FlyoutPresenterStyle(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IFlyoutStatics members

    /// Gets the identifier for the Content dependency property.
    /// - Returns: The identifier for the Content dependency property.
    public static var contentProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iflyoutStatics.get_ContentProperty())
        }
    }

    /// Gets the identifier for the FlyoutPresenterStyle dependency property.
    /// - Returns: The identifier for the FlyoutPresenterStyle dependency property.
    public static var flyoutPresenterStyleProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iflyoutStatics.get_FlyoutPresenterStyleProperty())
        }
    }

    // MARK: Implementation details

    private var _iflyout_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IFlyout>? = nil

    internal var _iflyout: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IFlyout> {
        get throws {
            try _iflyout_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IFlyout.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IFlyout.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_IFlyout>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _iflyout_storage?.release()
    }

    private static var _iflyoutFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IFlyoutFactory>? = nil

    internal static var _iflyoutFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IFlyoutFactory> {
        get throws {
            try _iflyoutFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.Flyout", id: CWinRT.SWRT_WindowsUIXamlControls_IFlyoutFactory.iid)
            }
        }
    }

    private static var _iflyoutStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IFlyoutStatics>? = nil

    internal static var _iflyoutStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IFlyoutStatics> {
        get throws {
            try _iflyoutStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.Flyout", id: CWinRT.SWRT_WindowsUIXamlControls_IFlyoutStatics.iid)
            }
        }
    }
}