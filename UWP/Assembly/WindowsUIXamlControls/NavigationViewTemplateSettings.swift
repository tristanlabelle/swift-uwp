// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides calculated values that can be referenced as **TemplatedParent** sources when defining templates for a NavigationView. Not intended for general use.
open class WindowsUIXamlControls_NavigationViewTemplateSettings: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.INavigationViewTemplateSettingsFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_NavigationViewTemplateSettings.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._inavigationViewTemplateSettingsFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.INavigationViewTemplateSettings members

    /// Gets the visibility of the back button.
    /// - Returns: The visibility of the back button.
    public var backButtonVisibility: WindowsUIXaml_Visibility {
        get throws {
            try _inavigationViewTemplateSettings.get_BackButtonVisibility()
        }
    }

    /// Gets the visibility of the left pane.
    /// - Returns: The visibility of the left pane.
    public var leftPaneVisibility: WindowsUIXaml_Visibility {
        get throws {
            try _inavigationViewTemplateSettings.get_LeftPaneVisibility()
        }
    }

    /// Gets the visibility of the overflow button.
    /// - Returns: The visibility of the overflow button.
    public var overflowButtonVisibility: WindowsUIXaml_Visibility {
        get throws {
            try _inavigationViewTemplateSettings.get_OverflowButtonVisibility()
        }
    }

    /// Gets the visibility of the pane toggle button.
    /// - Returns: The visibility of the pane toggle button.
    public var paneToggleButtonVisibility: WindowsUIXaml_Visibility {
        get throws {
            try _inavigationViewTemplateSettings.get_PaneToggleButtonVisibility()
        }
    }

    /// Gets the SelectionFollowsFocus value.
    /// - Returns: The SelectionFollowsFocus value.
    public var singleSelectionFollowsFocus: Swift.Bool {
        get throws {
            try _inavigationViewTemplateSettings.get_SingleSelectionFollowsFocus()
        }
    }

    /// Gets the padding value of the top pane.
    /// - Returns: The padding value of the top pane.
    public var topPadding: Swift.Double {
        get throws {
            try _inavigationViewTemplateSettings.get_TopPadding()
        }
    }

    /// Gets the visibility of the top pane.
    /// - Returns: The visibility of the top pane.
    public var topPaneVisibility: WindowsUIXaml_Visibility {
        get throws {
            try _inavigationViewTemplateSettings.get_TopPaneVisibility()
        }
    }

    // MARK: Windows.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics members

    /// Identifies the BackButtonVisibility dependency property.
    /// - Returns: The identifier for the BackButtonVisibility dependency property.
    public static var backButtonVisibilityProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_inavigationViewTemplateSettingsStatics.get_BackButtonVisibilityProperty())
        }
    }

    /// Identifies the LeftPaneVisibility dependency property.
    /// - Returns: The identifier for the LeftPaneVisibility dependency property.
    public static var leftPaneVisibilityProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_inavigationViewTemplateSettingsStatics.get_LeftPaneVisibilityProperty())
        }
    }

    /// Identifies the OverflowButtonVisibility dependency property.
    /// - Returns: The identifier for the OverflowButtonVisibility dependency property.
    public static var overflowButtonVisibilityProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_inavigationViewTemplateSettingsStatics.get_OverflowButtonVisibilityProperty())
        }
    }

    /// Identifies the PaneToggleButtonVisibility dependency property.
    /// - Returns: The identifier for the PaneToggleButtonVisibility dependency property.
    public static var paneToggleButtonVisibilityProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_inavigationViewTemplateSettingsStatics.get_PaneToggleButtonVisibilityProperty())
        }
    }

    /// Identifies the SingleSelectionFollowsFocus dependency property.
    /// - Returns: The identifier for the SingleSelectionFollowsFocus dependency property.
    public static var singleSelectionFollowsFocusProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_inavigationViewTemplateSettingsStatics.get_SingleSelectionFollowsFocusProperty())
        }
    }

    /// Identifies the TopPadding dependency property.
    /// - Returns: The identifier for the TopPadding dependency property.
    public static var topPaddingProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_inavigationViewTemplateSettingsStatics.get_TopPaddingProperty())
        }
    }

    /// Identifies the TopPaneVisibility dependency property.
    /// - Returns: The identifier for the TopPaneVisibility dependency property.
    public static var topPaneVisibilityProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_inavigationViewTemplateSettingsStatics.get_TopPaneVisibilityProperty())
        }
    }

    // MARK: Implementation details

    private var _inavigationViewTemplateSettings_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_INavigationViewTemplateSettings>? = nil

    internal var _inavigationViewTemplateSettings: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_INavigationViewTemplateSettings> {
        get throws {
            try _inavigationViewTemplateSettings_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_INavigationViewTemplateSettings.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_INavigationViewTemplateSettings.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_INavigationViewTemplateSettings>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _inavigationViewTemplateSettings_storage?.release()
    }

    private static var _inavigationViewTemplateSettingsFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_INavigationViewTemplateSettingsFactory>? = nil

    internal static var _inavigationViewTemplateSettingsFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_INavigationViewTemplateSettingsFactory> {
        get throws {
            try _inavigationViewTemplateSettingsFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.NavigationViewTemplateSettings", id: CWinRT.SWRT_WindowsUIXamlControls_INavigationViewTemplateSettingsFactory.iid)
            }
        }
    }

    private static var _inavigationViewTemplateSettingsStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_INavigationViewTemplateSettingsStatics>? = nil

    internal static var _inavigationViewTemplateSettingsStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_INavigationViewTemplateSettingsStatics> {
        get throws {
            try _inavigationViewTemplateSettingsStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.NavigationViewTemplateSettings", id: CWinRT.SWRT_WindowsUIXamlControls_INavigationViewTemplateSettingsStatics.iid)
            }
        }
    }
}