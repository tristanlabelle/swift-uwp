// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents an icon source that uses a glyph from the specified font.
open class WindowsUIXamlControls_FontIconSource: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.IFontIconSourceFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_FontIconSource.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._ifontIconSourceFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IFontIconSource members

    /// Gets or sets the font used to display the icon glyph.
    /// - Returns: The font used to display the icon glyph.
    public var fontFamily: WindowsUIXamlMedia_FontFamily {
        get throws {
            try COM.NullResult.unwrap(_ifontIconSource.get_FontFamily())
        }
    }

    /// Gets or sets the font used to display the icon glyph.
    /// - Returns: The font used to display the icon glyph.
    public func fontFamily(_ value: WindowsUIXamlMedia_FontFamily?) throws {
        try _ifontIconSource.put_FontFamily(value)
    }

    /// Gets or sets the size of the icon glyph.
    /// - Returns: A non-negative value that specifies the font size, measured in pixels.
    public var fontSize: Swift.Double {
        get throws {
            try _ifontIconSource.get_FontSize()
        }
    }

    /// Gets or sets the size of the icon glyph.
    /// - Returns: A non-negative value that specifies the font size, measured in pixels.
    public func fontSize(_ value: Swift.Double) throws {
        try _ifontIconSource.put_FontSize(value)
    }

    /// Gets or sets the font style for the icon glyph.
    /// - Returns: A named constant of the enumeration that specifies the style in which the icon glyph is rendered. The default is **Normal**.
    public var fontStyle: WindowsUIText_FontStyle {
        get throws {
            try _ifontIconSource.get_FontStyle()
        }
    }

    /// Gets or sets the font style for the icon glyph.
    /// - Returns: A named constant of the enumeration that specifies the style in which the icon glyph is rendered. The default is **Normal**.
    public func fontStyle(_ value: WindowsUIText_FontStyle) throws {
        try _ifontIconSource.put_FontStyle(value)
    }

    /// Gets or sets the thickness of the icon glyph.
    /// - Returns: A value that specifies the thickness of the icon glyph. The default is **Normal**.
    public var fontWeight: WindowsUIText_FontWeight {
        get throws {
            try _ifontIconSource.get_FontWeight()
        }
    }

    /// Gets or sets the thickness of the icon glyph.
    /// - Returns: A value that specifies the thickness of the icon glyph. The default is **Normal**.
    public func fontWeight(_ value: WindowsUIText_FontWeight) throws {
        try _ifontIconSource.put_FontWeight(value)
    }

    /// Gets or sets the character code that identifies the icon glyph.
    /// - Returns: The hexadecimal character code for the icon glyph.
    public var glyph: Swift.String {
        get throws {
            try _ifontIconSource.get_Glyph()
        }
    }

    /// Gets or sets the character code that identifies the icon glyph.
    /// - Returns: The hexadecimal character code for the icon glyph.
    public func glyph(_ value: Swift.String) throws {
        try _ifontIconSource.put_Glyph(value)
    }

    /// Gets or sets a value that indicates whether automatic text enlargement, to reflect the system text size setting, is enabled.
    /// - Returns: **true** if automatic text enlargement is enabled; otherwise, **false**.
    public var isTextScaleFactorEnabled: Swift.Bool {
        get throws {
            try _ifontIconSource.get_IsTextScaleFactorEnabled()
        }
    }

    /// Gets or sets a value that indicates whether automatic text enlargement, to reflect the system text size setting, is enabled.
    /// - Returns: **true** if automatic text enlargement is enabled; otherwise, **false**.
    public func isTextScaleFactorEnabled(_ value: Swift.Bool) throws {
        try _ifontIconSource.put_IsTextScaleFactorEnabled(value)
    }

    /// Gets or sets a value that indicates whether the icon is mirrored when its containing element's FlowDirection is **RightToLeft**.
    /// - Returns: **true** if the icon is mirrored when the FlowDirection is FlowDirection.RightToLeft; otherwise, **false**. The default is **false**.
    public var mirroredWhenRightToLeft: Swift.Bool {
        get throws {
            try _ifontIconSource.get_MirroredWhenRightToLeft()
        }
    }

    /// Gets or sets a value that indicates whether the icon is mirrored when its containing element's FlowDirection is **RightToLeft**.
    /// - Returns: **true** if the icon is mirrored when the FlowDirection is FlowDirection.RightToLeft; otherwise, **false**. The default is **false**.
    public func mirroredWhenRightToLeft(_ value: Swift.Bool) throws {
        try _ifontIconSource.put_MirroredWhenRightToLeft(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IFontIconSourceStatics members

    /// Gets the identifier for the FontFamily dependency property.
    /// - Returns: The identifier for the FontFamily dependency property.
    public static var fontFamilyProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ifontIconSourceStatics.get_FontFamilyProperty())
        }
    }

    /// Gets the identifier for the FontSize dependency property.
    /// - Returns: The identifier for the FontSize dependency property.
    public static var fontSizeProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ifontIconSourceStatics.get_FontSizeProperty())
        }
    }

    /// Gets the identifier for the FontStyle dependency property.
    /// - Returns: The identifier for the FontStyle dependency property.
    public static var fontStyleProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ifontIconSourceStatics.get_FontStyleProperty())
        }
    }

    /// Gets the identifier for the FontWeight dependency property.
    /// - Returns: The identifier for the FontWeight dependency property.
    public static var fontWeightProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ifontIconSourceStatics.get_FontWeightProperty())
        }
    }

    /// Gets the identifier for the Glyph dependency property.
    /// - Returns: The identifier for the Glyph dependency property.
    public static var glyphProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ifontIconSourceStatics.get_GlyphProperty())
        }
    }

    /// Gets the identifier for the IsTextScaleFactorEnabled dependency property.
    /// - Returns: The identifier for the IsTextScaleFactorEnabled dependency property.
    public static var isTextScaleFactorEnabledProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ifontIconSourceStatics.get_IsTextScaleFactorEnabledProperty())
        }
    }

    /// Gets the identifier for the MirroredWhenRightToLeft dependency property.
    /// - Returns: The identifier for the MirroredWhenRightToLeft dependency property.
    public static var mirroredWhenRightToLeftProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ifontIconSourceStatics.get_MirroredWhenRightToLeftProperty())
        }
    }

    // MARK: Implementation details

    private var _ifontIconSource_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IFontIconSource>? = nil

    internal var _ifontIconSource: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IFontIconSource> {
        get throws {
            try _ifontIconSource_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IFontIconSource.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IFontIconSource.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_IFontIconSource>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _ifontIconSource_storage?.release()
    }

    private static var _ifontIconSourceFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IFontIconSourceFactory>? = nil

    internal static var _ifontIconSourceFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IFontIconSourceFactory> {
        get throws {
            try _ifontIconSourceFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.FontIconSource", id: CWinRT.SWRT_WindowsUIXamlControls_IFontIconSourceFactory.iid)
            }
        }
    }

    private static var _ifontIconSourceStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IFontIconSourceStatics>? = nil

    internal static var _ifontIconSourceStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IFontIconSourceStatics> {
        get throws {
            try _ifontIconSourceStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.FontIconSource", id: CWinRT.SWRT_WindowsUIXamlControls_IFontIconSourceStatics.iid)
            }
        }
    }
}