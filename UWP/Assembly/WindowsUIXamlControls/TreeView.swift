// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a hierarchical list with expanding and collapsing nodes that contain nested items.
open class WindowsUIXamlControls_TreeView: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.ITreeViewFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_TreeView.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._itreeViewFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.ITreeView members

    /// Gets or sets the collection of root nodes of the tree.
    /// - Returns: The collection of root nodes of the tree.
    public var rootNodes: WindowsFoundationCollections_IVector<WindowsUIXamlControls_TreeViewNode?> {
        get throws {
            try COM.NullResult.unwrap(_itreeView.get_RootNodes())
        }
    }

    /// Gets or sets the collection of nodes that are selected in the tree.
    /// - Returns: The collection of nodes that are selected in the tree. The default is an empty collection.
    public var selectedNodes: WindowsFoundationCollections_IVector<WindowsUIXamlControls_TreeViewNode?> {
        get throws {
            try COM.NullResult.unwrap(_itreeView.get_SelectedNodes())
        }
    }

    /// Gets or sets the selection behavior for a TreeView instance.
    /// - Returns: An enumeration value that specifies the selection behavior for a TreeView. The default is **Single** selection.
    public var selectionMode: WindowsUIXamlControls_TreeViewSelectionMode {
        get throws {
            try _itreeView.get_SelectionMode()
        }
    }

    /// Gets or sets the selection behavior for a TreeView instance.
    /// - Returns: An enumeration value that specifies the selection behavior for a TreeView. The default is **Single** selection.
    public func selectionMode(_ value: WindowsUIXamlControls_TreeViewSelectionMode) throws {
        try _itreeView.put_SelectionMode(value)
    }

    /// Occurs when a node in the tree is collapsed.
    public func collapsed(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIXamlControls_TreeView?, WindowsUIXamlControls_TreeViewCollapsedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _itreeView.add_Collapsed(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: collapsed)
    }

    public func collapsed(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _itreeView.remove_Collapsed(token)
    }

    /// Occurs when a node in the tree starts to expand.
    public func expanding(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIXamlControls_TreeView?, WindowsUIXamlControls_TreeViewExpandingEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _itreeView.add_Expanding(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: expanding)
    }

    public func expanding(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _itreeView.remove_Expanding(token)
    }

    /// Occurs when an item in the tree is invoked.
    public func itemInvoked(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIXamlControls_TreeView?, WindowsUIXamlControls_TreeViewItemInvokedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _itreeView.add_ItemInvoked(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: itemInvoked)
    }

    public func itemInvoked(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _itreeView.remove_ItemInvoked(token)
    }

    /// Expands the specified node in the tree.
    /// - Parameter value: The tree node to expand.
    public func expand(_ value: WindowsUIXamlControls_TreeViewNode?) throws {
        try _itreeView.expand(value)
    }

    /// Collapses the specified node in the tree.
    /// - Parameter value: The tree node to collapse.
    public func collapse(_ value: WindowsUIXamlControls_TreeViewNode?) throws {
        try _itreeView.collapse(value)
    }

    /// Selects all nodes in the tree.
    public func selectAll() throws {
        try _itreeView.selectAll()
    }

    // MARK: Windows.UI.Xaml.Controls.ITreeView2 members

    /// Gets or sets a value that indicates whether items in the view can be dragged as data payload.
    /// - Returns: **true** if items in the view can be dragged as data payload; otherwise, **false**. The default is **false**.
    public var canDragItems: Swift.Bool {
        get throws {
            try _itreeView2.get_CanDragItems()
        }
    }

    /// Gets or sets a value that indicates whether items in the view can be dragged as data payload.
    /// - Returns: **true** if items in the view can be dragged as data payload; otherwise, **false**. The default is **false**.
    public func canDragItems(_ value: Swift.Bool) throws {
        try _itreeView2.put_CanDragItems(value)
    }

    /// Gets or sets a value that indicates whether items in the view can be reordered through user interaction.
    /// - Returns: **true** if items in the view can be reordered through user interaction; otherwise, **false**. The default is **false**.
    public var canReorderItems: Swift.Bool {
        get throws {
            try _itreeView2.get_CanReorderItems()
        }
    }

    /// Gets or sets a value that indicates whether items in the view can be reordered through user interaction.
    /// - Returns: **true** if items in the view can be reordered through user interaction; otherwise, **false**. The default is **false**.
    public func canReorderItems(_ value: Swift.Bool) throws {
        try _itreeView2.put_CanReorderItems(value)
    }

    /// Gets or sets the style that is used when rendering the item containers.
    /// - Returns: The style applied to the item containers. The default is **null**.
    public var itemContainerStyle: WindowsUIXaml_Style {
        get throws {
            try COM.NullResult.unwrap(_itreeView2.get_ItemContainerStyle())
        }
    }

    /// Gets or sets the style that is used when rendering the item containers.
    /// - Returns: The style applied to the item containers. The default is **null**.
    public func itemContainerStyle(_ value: WindowsUIXaml_Style?) throws {
        try _itreeView2.put_ItemContainerStyle(value)
    }

    /// Gets or sets a reference to a custom StyleSelector logic class. The StyleSelector returns different Style values to use for the item container based on characteristics of the object being displayed.
    /// - Returns: A custom StyleSelector logic class.
    public var itemContainerStyleSelector: WindowsUIXamlControls_StyleSelector {
        get throws {
            try COM.NullResult.unwrap(_itreeView2.get_ItemContainerStyleSelector())
        }
    }

    /// Gets or sets a reference to a custom StyleSelector logic class. The StyleSelector returns different Style values to use for the item container based on characteristics of the object being displayed.
    /// - Returns: A custom StyleSelector logic class.
    public func itemContainerStyleSelector(_ value: WindowsUIXamlControls_StyleSelector?) throws {
        try _itreeView2.put_ItemContainerStyleSelector(value)
    }

    /// Gets or sets the collection of Transition style elements that apply to the item containers of a TreeView.
    /// - Returns: The collection of Transition style elements that apply to the item containers of an ItemsControl.
    public var itemContainerTransitions: WindowsUIXamlMediaAnimation_TransitionCollection {
        get throws {
            try COM.NullResult.unwrap(_itreeView2.get_ItemContainerTransitions())
        }
    }

    /// Gets or sets the collection of Transition style elements that apply to the item containers of a TreeView.
    /// - Returns: The collection of Transition style elements that apply to the item containers of an ItemsControl.
    public func itemContainerTransitions(_ value: WindowsUIXamlMediaAnimation_TransitionCollection?) throws {
        try _itreeView2.put_ItemContainerTransitions(value)
    }

    /// Gets or sets the DataTemplate used to display each item.
    /// - Returns: The template that specifies the visualization of the data objects. The default is **null**.
    public var itemTemplate: WindowsUIXaml_DataTemplate {
        get throws {
            try COM.NullResult.unwrap(_itreeView2.get_ItemTemplate())
        }
    }

    /// Gets or sets the DataTemplate used to display each item.
    /// - Returns: The template that specifies the visualization of the data objects. The default is **null**.
    public func itemTemplate(_ value: WindowsUIXaml_DataTemplate?) throws {
        try _itreeView2.put_ItemTemplate(value)
    }

    /// Gets or sets a reference to a custom DataTemplateSelector logic class. The DataTemplateSelector referenced by this property returns a template to apply to items.
    /// - Returns: A reference to a custom DataTemplateSelector logic class.
    public var itemTemplateSelector: WindowsUIXamlControls_DataTemplateSelector {
        get throws {
            try COM.NullResult.unwrap(_itreeView2.get_ItemTemplateSelector())
        }
    }

    /// Gets or sets a reference to a custom DataTemplateSelector logic class. The DataTemplateSelector referenced by this property returns a template to apply to items.
    /// - Returns: A reference to a custom DataTemplateSelector logic class.
    public func itemTemplateSelector(_ value: WindowsUIXamlControls_DataTemplateSelector?) throws {
        try _itreeView2.put_ItemTemplateSelector(value)
    }

    /// Gets or sets an object source used to generate the content of the TreeView.
    /// - Returns: The object that is used to generate the content of the TreeView. The default is **null**.
    public var itemsSource: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_itreeView2.get_ItemsSource())
        }
    }

    /// Gets or sets an object source used to generate the content of the TreeView.
    /// - Returns: The object that is used to generate the content of the TreeView. The default is **null**.
    public func itemsSource(_ value: WindowsRuntime.IInspectable?) throws {
        try _itreeView2.put_ItemsSource(value)
    }

    /// Occurs when a drag operation that involves one of the items in the view is ended.
    public func dragItemsCompleted(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIXamlControls_TreeView?, WindowsUIXamlControls_TreeViewDragItemsCompletedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _itreeView2.add_DragItemsCompleted(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: dragItemsCompleted)
    }

    public func dragItemsCompleted(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _itreeView2.remove_DragItemsCompleted(token)
    }

    /// Occurs when a drag operation that involves one of the items in the view is initiated.
    public func dragItemsStarting(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIXamlControls_TreeView?, WindowsUIXamlControls_TreeViewDragItemsStartingEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _itreeView2.add_DragItemsStarting(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: dragItemsStarting)
    }

    public func dragItemsStarting(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _itreeView2.remove_DragItemsStarting(token)
    }

    /// Returns the TreeViewNode corresponding to the specified container.
    /// - Parameter container: The container to retrieve the TreeViewNode for.
    /// - Returns: The node that corresponds to the specified container.
    public func nodeFromContainer(_ container: WindowsUIXaml_DependencyObject?) throws -> WindowsUIXamlControls_TreeViewNode {
        try COM.NullResult.unwrap(_itreeView2.nodeFromContainer(container))
    }

    /// Returns the container corresponding to the specified node.
    /// - Parameter node: The node to retrieve the container for.
    /// - Returns: A container that corresponds to the specified node, if the node has a container and exists in the collection; otherwise, **null**.
    public func containerFromNode(_ node: WindowsUIXamlControls_TreeViewNode?) throws -> WindowsUIXaml_DependencyObject {
        try COM.NullResult.unwrap(_itreeView2.containerFromNode(node))
    }

    /// Returns the item that corresponds to the specified, generated container.
    /// - Parameter container: The DependencyObject that corresponds to the item to be returned.
    /// - Returns: The contained item, or the container if it does not contain an item.
    public func itemFromContainer(_ container: WindowsUIXaml_DependencyObject?) throws -> WindowsRuntime.IInspectable {
        try COM.NullResult.unwrap(_itreeView2.itemFromContainer(container))
    }

    /// Returns the container corresponding to the specified item.
    /// - Parameter item: The item to retrieve the container for.
    /// - Returns: A container that corresponds to the specified item, if the item has a container and exists in the collection; otherwise, **null**.
    public func containerFromItem(_ item: WindowsRuntime.IInspectable?) throws -> WindowsUIXaml_DependencyObject {
        try COM.NullResult.unwrap(_itreeView2.containerFromItem(item))
    }

    // MARK: Windows.UI.Xaml.Controls.ITreeViewStatics members

    /// Identifies the SelectionMode dependency property.
    /// - Returns: The identifier for the SelectionMode dependency property.
    public static var selectionModeProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itreeViewStatics.get_SelectionModeProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.ITreeViewStatics2 members

    /// Identifies the CanDragItems dependency property.
    /// - Returns: The identifier for the CanDragItems dependency property.
    public static var canDragItemsProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itreeViewStatics2.get_CanDragItemsProperty())
        }
    }

    /// Identifies the CanReorderItems dependency property.
    /// - Returns: The identifier for the CanReorderItems dependency property.
    public static var canReorderItemsProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itreeViewStatics2.get_CanReorderItemsProperty())
        }
    }

    /// Identifies the ItemContainerStyle dependency property.
    /// - Returns: The identifier for the ItemContainerStyle dependency property.
    public static var itemContainerStyleProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itreeViewStatics2.get_ItemContainerStyleProperty())
        }
    }

    /// Identifies the ItemContainerStyleSelector dependency property.
    /// - Returns: The identifier for the ItemContainerStyleSelector dependency property.
    public static var itemContainerStyleSelectorProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itreeViewStatics2.get_ItemContainerStyleSelectorProperty())
        }
    }

    /// Identifies the ItemContainerTransitions dependency property.
    /// - Returns: The identifier for the ItemContainerTransitions dependency property.
    public static var itemContainerTransitionsProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itreeViewStatics2.get_ItemContainerTransitionsProperty())
        }
    }

    /// Identifies the ItemTemplate dependency property.
    /// - Returns: The identifier for the ItemTemplate dependency property.
    public static var itemTemplateProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itreeViewStatics2.get_ItemTemplateProperty())
        }
    }

    /// Identifies the ItemTemplateSelector dependency property.
    /// - Returns: The identifier for the ItemTemplateSelector dependency property.
    public static var itemTemplateSelectorProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itreeViewStatics2.get_ItemTemplateSelectorProperty())
        }
    }

    /// Identifies the ItemsSource dependency property.
    /// - Returns: The identifier for the ItemsSource dependency property.
    public static var itemsSourceProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itreeViewStatics2.get_ItemsSourceProperty())
        }
    }

    // MARK: Implementation details

    private var _itreeView_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeView>? = nil

    internal var _itreeView: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeView> {
        get throws {
            try _itreeView_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_ITreeView.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_ITreeView.self)
            }
        }
    }

    private var _itreeView2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeView2>? = nil

    internal var _itreeView2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeView2> {
        get throws {
            try _itreeView2_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_ITreeView2.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_ITreeView2.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_ITreeView>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _itreeView_storage?.release()
        _itreeView2_storage?.release()
    }

    private static var _itreeViewFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewFactory>? = nil

    internal static var _itreeViewFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewFactory> {
        get throws {
            try _itreeViewFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.TreeView", id: CWinRT.SWRT_WindowsUIXamlControls_ITreeViewFactory.iid)
            }
        }
    }

    private static var _itreeViewStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewStatics>? = nil

    internal static var _itreeViewStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewStatics> {
        get throws {
            try _itreeViewStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.TreeView", id: CWinRT.SWRT_WindowsUIXamlControls_ITreeViewStatics.iid)
            }
        }
    }

    private static var _itreeViewStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewStatics2>? = nil

    internal static var _itreeViewStatics2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewStatics2> {
        get throws {
            try _itreeViewStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.TreeView", id: CWinRT.SWRT_WindowsUIXamlControls_ITreeViewStatics2.iid)
            }
        }
    }
}