// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a selection control that combines a non-editable text box and a drop-down list box that allows users to select an item from a list.
open class WindowsUIXamlControls_ComboBox: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.IComboBoxFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_ComboBox.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._icomboBoxFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IComboBox members

    /// Gets or sets a value that indicates whether the drop-down portion of the ComboBox is currently open.
    /// - Returns: **True** if the drop-down portion is open; otherwise, **false**. The default is **false**.
    public var isDropDownOpen: Swift.Bool {
        get throws {
            try _icomboBox.get_IsDropDownOpen()
        }
    }

    /// Gets or sets a value that indicates whether the drop-down portion of the ComboBox is currently open.
    /// - Returns: **True** if the drop-down portion is open; otherwise, **false**. The default is **false**.
    public func isDropDownOpen(_ value: Swift.Bool) throws {
        try _icomboBox.put_IsDropDownOpen(value)
    }

    /// Gets or sets a value that indicates whether the user can edit text in the text box portion of the ComboBox. See remarks.
    /// - Returns: **true** if the user can edit text in the ComboBox, otherwise **false**. The default is **false**. See remarks.
    public var isEditable: Swift.Bool {
        get throws {
            try _icomboBox.get_IsEditable()
        }
    }

    /// Gets a value that indicates whether the SelectionBoxItem component is highlighted.
    /// - Returns: **True** if the SelectionBoxItem is highlighted; otherwise, **false**. The default is **true**.
    public var isSelectionBoxHighlighted: Swift.Bool {
        get throws {
            try _icomboBox.get_IsSelectionBoxHighlighted()
        }
    }

    /// Gets or sets the maximum height for a combo box drop-down.
    /// - Returns: The maximum height of the drop-down. The default is infinity.
    public var maxDropDownHeight: Swift.Double {
        get throws {
            try _icomboBox.get_MaxDropDownHeight()
        }
    }

    /// Gets or sets the maximum height for a combo box drop-down.
    /// - Returns: The maximum height of the drop-down. The default is infinity.
    public func maxDropDownHeight(_ value: Swift.Double) throws {
        try _icomboBox.put_MaxDropDownHeight(value)
    }

    /// Gets the item shown when the ComboBox is closed.
    /// - Returns: The item shown when the ComboBox is closed.
    public var selectionBoxItem: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_icomboBox.get_SelectionBoxItem())
        }
    }

    /// Gets the template applied to the selection box content.
    /// - Returns: The template applied to the selection box content.
    public var selectionBoxItemTemplate: WindowsUIXaml_DataTemplate {
        get throws {
            try COM.NullResult.unwrap(_icomboBox.get_SelectionBoxItemTemplate())
        }
    }

    /// Gets an object that provides calculated values that can be referenced as **TemplateBinding** sources when defining templates for a ComboBox control.
    /// - Returns: An object that provides calculated values for templates.
    public var templateSettings: WindowsUIXamlControlsPrimitives_ComboBoxTemplateSettings {
        get throws {
            try COM.NullResult.unwrap(_icomboBox.get_TemplateSettings())
        }
    }

    /// Occurs when the drop-down portion of the ComboBox closes.
    public func dropDownClosed(adding handler: WindowsFoundation_EventHandler<WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _icomboBox.add_DropDownClosed(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: dropDownClosed)
    }

    public func dropDownClosed(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _icomboBox.remove_DropDownClosed(token)
    }

    /// Occurs when the drop-down portion of the ComboBox opens.
    public func dropDownOpened(adding handler: WindowsFoundation_EventHandler<WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _icomboBox.add_DropDownOpened(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: dropDownOpened)
    }

    public func dropDownOpened(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _icomboBox.remove_DropDownOpened(token)
    }

    // MARK: Windows.UI.Xaml.Controls.IComboBox2 members

    /// Gets or sets the content for the control's header.
    /// - Returns: The content of the control's header. The default is **null**.
    public var header: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_icomboBox2.get_Header())
        }
    }

    /// Gets or sets the content for the control's header.
    /// - Returns: The content of the control's header. The default is **null**.
    public func header(_ value: WindowsRuntime.IInspectable?) throws {
        try _icomboBox2.put_Header(value)
    }

    /// Gets or sets the DataTemplate used to display the content of the control's header.
    /// - Returns: The template that specifies the visualization of the header object. The default is **null**.
    public var headerTemplate: WindowsUIXaml_DataTemplate {
        get throws {
            try COM.NullResult.unwrap(_icomboBox2.get_HeaderTemplate())
        }
    }

    /// Gets or sets the DataTemplate used to display the content of the control's header.
    /// - Returns: The template that specifies the visualization of the header object. The default is **null**.
    public func headerTemplate(_ value: WindowsUIXaml_DataTemplate?) throws {
        try _icomboBox2.put_HeaderTemplate(value)
    }

    /// Gets or sets the text that is displayed in the control until the value is changed by a user action or some other operation.
    /// - Returns: The text that is displayed in the control when no value is selected. The default is an empty string ("").
    public var placeholderText: Swift.String {
        get throws {
            try _icomboBox2.get_PlaceholderText()
        }
    }

    /// Gets or sets the text that is displayed in the control until the value is changed by a user action or some other operation.
    /// - Returns: The text that is displayed in the control when no value is selected. The default is an empty string ("").
    public func placeholderText(_ value: Swift.String) throws {
        try _icomboBox2.put_PlaceholderText(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IComboBox3 members

    /// Gets or sets a value that specifies whether a user can jump to a value by typing.
    /// - Returns: **true** if a user can jump to a value by typing; otherwise, **false**. The default is **true**.
    public var isTextSearchEnabled: Swift.Bool {
        get throws {
            try _icomboBox3.get_IsTextSearchEnabled()
        }
    }

    /// Gets or sets a value that specifies whether a user can jump to a value by typing.
    /// - Returns: **true** if a user can jump to a value by typing; otherwise, **false**. The default is **true**.
    public func isTextSearchEnabled(_ value: Swift.Bool) throws {
        try _icomboBox3.put_IsTextSearchEnabled(value)
    }

    /// Gets or sets a value that specifies whether the area outside of a *light-dismiss* UI is darkened.
    /// - Returns: A value of the enumeration that specifies whether the area outside of a light-dismiss UI is darkened. The default is **Auto**.
    public var lightDismissOverlayMode: WindowsUIXamlControls_LightDismissOverlayMode {
        get throws {
            try _icomboBox3.get_LightDismissOverlayMode()
        }
    }

    /// Gets or sets a value that specifies whether the area outside of a *light-dismiss* UI is darkened.
    /// - Returns: A value of the enumeration that specifies whether the area outside of a light-dismiss UI is darkened. The default is **Auto**.
    public func lightDismissOverlayMode(_ value: WindowsUIXamlControls_LightDismissOverlayMode) throws {
        try _icomboBox3.put_LightDismissOverlayMode(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IComboBox4 members

    /// Gets or sets a value that indicates what action causes a SelectionChanged event to occur.
    /// - Returns: A value of the enumeration. The default is **Committed**.
    public var selectionChangedTrigger: WindowsUIXamlControls_ComboBoxSelectionChangedTrigger {
        get throws {
            try _icomboBox4.get_SelectionChangedTrigger()
        }
    }

    /// Gets or sets a value that indicates what action causes a SelectionChanged event to occur.
    /// - Returns: A value of the enumeration. The default is **Committed**.
    public func selectionChangedTrigger(_ value: WindowsUIXamlControls_ComboBoxSelectionChangedTrigger) throws {
        try _icomboBox4.put_SelectionChangedTrigger(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IComboBox5 members

    /// Gets or sets a brush that describes the color of placeholder text.
    /// - Returns: The brush that describes the color of placeholder text.
    public var placeholderForeground: WindowsUIXamlMedia_Brush {
        get throws {
            try COM.NullResult.unwrap(_icomboBox5.get_PlaceholderForeground())
        }
    }

    /// Gets or sets a brush that describes the color of placeholder text.
    /// - Returns: The brush that describes the color of placeholder text.
    public func placeholderForeground(_ value: WindowsUIXamlMedia_Brush?) throws {
        try _icomboBox5.put_PlaceholderForeground(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IComboBox6 members

    /// Gets or sets content that is shown below the control. The content should provide guidance about the input expected by the control.
    /// - Returns: The content to be displayed below the control. The default is **null**.
    public var description: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_icomboBox6.get_Description())
        }
    }

    /// Gets or sets content that is shown below the control. The content should provide guidance about the input expected by the control.
    /// - Returns: The content to be displayed below the control. The default is **null**.
    public func description(_ value: WindowsRuntime.IInspectable?) throws {
        try _icomboBox6.put_Description(value)
    }

    /// Gets or sets a value that indicates whether the user can edit text in the text box portion of the ComboBox. See remarks.
    /// - Returns: **true** if the user can edit text in the ComboBox, otherwise **false**. The default is **false**. See remarks.
    public func isEditable(_ value: Swift.Bool) throws {
        try _icomboBox6.put_IsEditable(value)
    }

    /// Gets or sets the text in the ComboBox.
    public var text: Swift.String {
        get throws {
            try _icomboBox6.get_Text()
        }
    }

    /// Gets or sets the text in the ComboBox.
    public func text(_ value: Swift.String) throws {
        try _icomboBox6.put_Text(value)
    }

    /// Gets or sets the style of the TextBox in the ComboBox when the ComboBox is editable.
    /// - Returns: The style of the TextBox in the ComboBox when the ComboBox is editable.
    public var textBoxStyle: WindowsUIXaml_Style {
        get throws {
            try COM.NullResult.unwrap(_icomboBox6.get_TextBoxStyle())
        }
    }

    /// Gets or sets the style of the TextBox in the ComboBox when the ComboBox is editable.
    /// - Returns: The style of the TextBox in the ComboBox when the ComboBox is editable.
    public func textBoxStyle(_ value: WindowsUIXaml_Style?) throws {
        try _icomboBox6.put_TextBoxStyle(value)
    }

    /// Occurs when the user submits some text that does not correspond to an item in the ComboBox dropdown list.
    public func textSubmitted(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIXamlControls_ComboBox?, WindowsUIXamlControls_ComboBoxTextSubmittedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _icomboBox6.add_TextSubmitted(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: textSubmitted)
    }

    public func textSubmitted(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _icomboBox6.remove_TextSubmitted(token)
    }

    // MARK: Windows.UI.Xaml.Controls.IComboBoxOverrides members

    /// Invoked when the DropDownClosed event is raised.
    /// - Parameter e: Event data for the event. 
    open func onDropDownClosed(_ e: WindowsRuntime.IInspectable?) throws {
        try _icomboBoxOverrides.onDropDownClosed(e)
    }

    /// Invoked when the DropDownOpened event is raised.
    /// - Parameter e: Event data for the event. 
    open func onDropDownOpened(_ e: WindowsRuntime.IInspectable?) throws {
        try _icomboBoxOverrides.onDropDownOpened(e)
    }

    // MARK: Windows.UI.Xaml.Controls.IComboBoxStatics5 members

    /// Identifies the PlaceholderForeground dependency property.
    /// - Returns: The identifier for the PlaceholderForeground dependency property.
    public static var placeholderForegroundProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icomboBoxStatics5.get_PlaceholderForegroundProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IComboBoxStatics4 members

    /// Identifies the SelectionChangedTrigger dependency property.
    /// - Returns: The identifier for the **SelectionChangedTrigger** dependency property.
    public static var selectionChangedTriggerProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icomboBoxStatics4.get_SelectionChangedTriggerProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IComboBoxStatics3 members

    /// Identifies the IsTextSearchEnabled dependency property.
    /// - Returns: The identifier for the IsTextSearchEnabled dependency property.
    public static var isTextSearchEnabledProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icomboBoxStatics3.get_IsTextSearchEnabledProperty())
        }
    }

    /// Identifies the LightDismissOverlayMode dependency property.
    /// - Returns: The identifier for the LightDismissOverlayMode dependency property.
    public static var lightDismissOverlayModeProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icomboBoxStatics3.get_LightDismissOverlayModeProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IComboBoxStatics6 members

    /// Identifies the Description dependency property.
    /// - Returns: The identifier for the Description dependency property.
    public static var descriptionProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icomboBoxStatics6.get_DescriptionProperty())
        }
    }

    /// Identifies the IsEditable dependency property.
    /// - Returns: The identifier for the IsEditable dependency property.
    public static var isEditableProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icomboBoxStatics6.get_IsEditableProperty())
        }
    }

    /// Identifies the TextBoxStyle dependency property.
    /// - Returns: The identifier for the TextBoxStyle dependency property.
    public static var textBoxStyleProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icomboBoxStatics6.get_TextBoxStyleProperty())
        }
    }

    /// Identifies the Text dependency property.
    /// - Returns: The identifier for the Text dependency property.
    public static var textProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icomboBoxStatics6.get_TextProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IComboBoxStatics2 members

    /// Identifies the Header dependency property.
    /// - Returns: The identifier for the Header dependency property.
    public static var headerProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icomboBoxStatics2.get_HeaderProperty())
        }
    }

    /// Identifies the HeaderTemplate dependency property.
    /// - Returns: The identifier for the HeaderTemplate dependency property.
    public static var headerTemplateProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icomboBoxStatics2.get_HeaderTemplateProperty())
        }
    }

    /// Identifies the PlaceholderText dependency property.
    /// - Returns: The identifier for the PlaceholderText dependency property.
    public static var placeholderTextProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icomboBoxStatics2.get_PlaceholderTextProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IComboBoxStatics members

    /// Identifies the IsDropDownOpen dependency property.
    /// - Returns: The identifier for the IsDropDownOpen dependency property.
    public static var isDropDownOpenProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icomboBoxStatics.get_IsDropDownOpenProperty())
        }
    }

    /// Identifies the MaxDropDownHeight dependency property.
    /// - Returns: The identifier for the MaxDropDownHeight dependency property.
    public static var maxDropDownHeightProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_icomboBoxStatics.get_MaxDropDownHeightProperty())
        }
    }

    // MARK: Implementation details

    private var _icomboBox_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBox>? = nil

    internal var _icomboBox: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBox> {
        get throws {
            try _icomboBox_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IComboBox.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IComboBox.self)
            }
        }
    }

    private var _icomboBox2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBox2>? = nil

    internal var _icomboBox2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBox2> {
        get throws {
            try _icomboBox2_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IComboBox2.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IComboBox2.self)
            }
        }
    }

    private var _icomboBox3_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBox3>? = nil

    internal var _icomboBox3: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBox3> {
        get throws {
            try _icomboBox3_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IComboBox3.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IComboBox3.self)
            }
        }
    }

    private var _icomboBox4_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBox4>? = nil

    internal var _icomboBox4: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBox4> {
        get throws {
            try _icomboBox4_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IComboBox4.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IComboBox4.self)
            }
        }
    }

    private var _icomboBox5_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBox5>? = nil

    internal var _icomboBox5: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBox5> {
        get throws {
            try _icomboBox5_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IComboBox5.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IComboBox5.self)
            }
        }
    }

    private var _icomboBox6_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBox6>? = nil

    internal var _icomboBox6: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBox6> {
        get throws {
            try _icomboBox6_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IComboBox6.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IComboBox6.self)
            }
        }
    }

    private var _icomboBoxOverrides_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBoxOverrides>? = nil

    internal var _icomboBoxOverrides: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBoxOverrides> {
        get throws {
            try _icomboBoxOverrides_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IComboBoxOverrides.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IComboBoxOverrides.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_IComboBox>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _icomboBox_storage?.release()
        _icomboBox2_storage?.release()
        _icomboBox3_storage?.release()
        _icomboBox4_storage?.release()
        _icomboBox5_storage?.release()
        _icomboBox6_storage?.release()
        _icomboBoxOverrides_storage?.release()
    }

    private static var _icomboBoxFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBoxFactory>? = nil

    internal static var _icomboBoxFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBoxFactory> {
        get throws {
            try _icomboBoxFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ComboBox", id: CWinRT.SWRT_WindowsUIXamlControls_IComboBoxFactory.iid)
            }
        }
    }

    private static var _icomboBoxStatics5_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBoxStatics5>? = nil

    internal static var _icomboBoxStatics5: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBoxStatics5> {
        get throws {
            try _icomboBoxStatics5_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ComboBox", id: CWinRT.SWRT_WindowsUIXamlControls_IComboBoxStatics5.iid)
            }
        }
    }

    private static var _icomboBoxStatics4_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBoxStatics4>? = nil

    internal static var _icomboBoxStatics4: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBoxStatics4> {
        get throws {
            try _icomboBoxStatics4_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ComboBox", id: CWinRT.SWRT_WindowsUIXamlControls_IComboBoxStatics4.iid)
            }
        }
    }

    private static var _icomboBoxStatics3_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBoxStatics3>? = nil

    internal static var _icomboBoxStatics3: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBoxStatics3> {
        get throws {
            try _icomboBoxStatics3_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ComboBox", id: CWinRT.SWRT_WindowsUIXamlControls_IComboBoxStatics3.iid)
            }
        }
    }

    private static var _icomboBoxStatics6_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBoxStatics6>? = nil

    internal static var _icomboBoxStatics6: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBoxStatics6> {
        get throws {
            try _icomboBoxStatics6_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ComboBox", id: CWinRT.SWRT_WindowsUIXamlControls_IComboBoxStatics6.iid)
            }
        }
    }

    private static var _icomboBoxStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBoxStatics2>? = nil

    internal static var _icomboBoxStatics2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBoxStatics2> {
        get throws {
            try _icomboBoxStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ComboBox", id: CWinRT.SWRT_WindowsUIXamlControls_IComboBoxStatics2.iid)
            }
        }
    }

    private static var _icomboBoxStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBoxStatics>? = nil

    internal static var _icomboBoxStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IComboBoxStatics> {
        get throws {
            try _icomboBoxStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ComboBox", id: CWinRT.SWRT_WindowsUIXamlControls_IComboBoxStatics.iid)
            }
        }
    }

    // MARK: Override support

    private var _icomboBoxOverrides_outer: COM.COMExportedInterface = .uninitialized

    public override func _queryOverridesInterfacePointer(_ id: COM.COMInterfaceID) throws -> COM.IUnknownPointer? {
        if id == CWinRT.SWRT_WindowsUIXamlControls_IComboBoxOverrides.iid {
            if !_icomboBoxOverrides_outer.isInitialized {
                _icomboBoxOverrides_outer = COM.COMExportedInterface(
                    swiftObject: self, virtualTable: &WindowsUIXamlControls_ComboBoxProjection.VirtualTables.icomboBoxOverrides)
            }
            return _icomboBoxOverrides_outer.unknownPointer.addingRef()
        }
        return nil
    }
}