// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a custom picker control. (Not recommended for Universal Windows Platform (UWP) app. See Flyout.)
public final class WindowsUIXamlControls_PickerFlyout: WindowsRuntime.WinRTImport<WindowsUIXamlControls_PickerFlyoutProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlControls_PickerFlyoutProjection.self))
    }

    // MARK: Windows.UI.Xaml.Controls.IPickerFlyout members

    /// Gets or sets whether the confirmation buttons are visible.
    /// - Returns: True of the confirmation buttons are visible; Otherwise, false.
    public var confirmationButtonsVisible: Swift.Bool {
        get throws {
            try _interop.get_ConfirmationButtonsVisible()
        }
    }

    /// Gets or sets whether the confirmation buttons are visible.
    /// - Returns: True of the confirmation buttons are visible; Otherwise, false.
    public func confirmationButtonsVisible(_ value: Swift.Bool) throws {
        try _interop.put_ConfirmationButtonsVisible(value)
    }

    /// Gets or sets the content that is contained within the picker.
    /// - Returns: The content of the user control.
    public var content: WindowsUIXaml_UIElement {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Content())
        }
    }

    /// Gets or sets the content that is contained within the picker.
    /// - Returns: The content of the user control.
    public func content(_ value: WindowsUIXaml_UIElement?) throws {
        try _interop.put_Content(value)
    }

    /// Occurs when the user has tapped a confirmation button to confirm the selection.
    public func confirmed(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIXamlControls_PickerFlyout?, WindowsUIXamlControls_PickerConfirmedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Confirmed(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: confirmed)
    }

    public func confirmed(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Confirmed(token)
    }

    /// Begins an asynchronous operation to show the flyout placed in relation to the specified element.
    /// - Parameter target: The element to use as the flyout's placement target.
    /// - Returns: An asynchronous operation.
    public func showAtAsync(_ target: WindowsUIXaml_FrameworkElement?) throws -> WindowsFoundation_IAsyncOperation<Swift.Bool> {
        try COM.NullResult.unwrap(_interop.showAtAsync(target))
    }

    // MARK: Windows.UI.Xaml.Controls.IPickerFlyoutStatics members

    /// Identifies the ConfirmationButtonsVisible dependency property.
    /// - Returns: The identifier of the ConfirmationButtonsVisible dependency property.
    public static var confirmationButtonsVisibleProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ipickerFlyoutStatics.get_ConfirmationButtonsVisibleProperty())
        }
    }

    /// Gets the identifier for the Content dependency property.
    /// - Returns: The identifier for the Content dependency property.
    public static var contentProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ipickerFlyoutStatics.get_ContentProperty())
        }
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.PickerFlyout", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _ipickerFlyoutStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IPickerFlyoutStatics>? = nil

    internal static var _ipickerFlyoutStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IPickerFlyoutStatics> {
        get throws {
            try _ipickerFlyoutStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.PickerFlyout", id: CWinRT.SWRT_WindowsUIXamlControls_IPickerFlyoutStatics.iid)
            }
        }
    }
}