// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a Universal Windows app control containing a customizable and extensible collection of buttons that activate ink-related features in an associated InkCanvas.
open class WindowsUIXamlControls_InkToolbar: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.IInkToolbarFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_InkToolbar.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._iinkToolbarFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IInkToolbar members

    /// Gets or sets the currently selected feature in the "tools" group of the InkToolbar (see remarks).
    /// - Returns: The currently selected feature. By default, this is the first button on the InkToolbar.
    public var activeTool: WindowsUIXamlControls_InkToolbarToolButton {
        get throws {
            try COM.NullResult.unwrap(_iinkToolbar.get_ActiveTool())
        }
    }

    /// Gets or sets the currently selected feature in the "tools" group of the InkToolbar (see remarks).
    /// - Returns: The currently selected feature. By default, this is the first button on the InkToolbar.
    public func activeTool(_ value: WindowsUIXamlControls_InkToolbarToolButton?) throws {
        try _iinkToolbar.put_ActiveTool(value)
    }

    /// Gets the collection of custom buttons displayed on the InkToolbar.
    /// - Returns: A collection of InkToolbar custom buttons.
    public var children: WindowsUIXaml_DependencyObjectCollection {
        get throws {
            try COM.NullResult.unwrap(_iinkToolbar.get_Children())
        }
    }

    /// Gets or sets the collection of built-in buttons added to the InkToolbar at initialization.
    /// - Returns: The collection of built-in buttons to add to the InkToolbar.
    public var initialControls: WindowsUIXamlControls_InkToolbarInitialControls {
        get throws {
            try _iinkToolbar.get_InitialControls()
        }
    }

    /// Gets or sets the collection of built-in buttons added to the InkToolbar at initialization.
    /// - Returns: The collection of built-in buttons to add to the InkToolbar.
    public func initialControls(_ value: WindowsUIXamlControls_InkToolbarInitialControls) throws {
        try _iinkToolbar.put_InitialControls(value)
    }

    /// Gets the InkStroke properties specified through the InkToolbar.
    /// - Returns: The InkStroke properties.
    public var inkDrawingAttributes: WindowsUIInputInking_InkDrawingAttributes {
        get throws {
            try COM.NullResult.unwrap(_iinkToolbar.get_InkDrawingAttributes())
        }
    }

    /// Gets or sets the state of the InkToolbarRulerButton (and associated tool) to on or off.
    /// - Returns: **true** if the ruler button is selected and the ruler is active; otherwise, **false**.
    public var isRulerButtonChecked: Swift.Bool {
        get throws {
            try _iinkToolbar.get_IsRulerButtonChecked()
        }
    }

    /// Gets or sets the state of the InkToolbarRulerButton (and associated tool) to on or off.
    /// - Returns: **true** if the ruler button is selected and the ruler is active; otherwise, **false**.
    public func isRulerButtonChecked(_ value: Swift.Bool) throws {
        try _iinkToolbar.put_IsRulerButtonChecked(value)
    }

    /// Gets or sets the InkCanvas control associated with the InkToolbar.
    /// - Returns: The InkCanvas control associated with the InkToolbar.
    public var targetInkCanvas: WindowsUIXamlControls_InkCanvas {
        get throws {
            try COM.NullResult.unwrap(_iinkToolbar.get_TargetInkCanvas())
        }
    }

    /// Gets or sets the InkCanvas control associated with the InkToolbar.
    /// - Returns: The InkCanvas control associated with the InkToolbar.
    public func targetInkCanvas(_ value: WindowsUIXamlControls_InkCanvas?) throws {
        try _iinkToolbar.put_TargetInkCanvas(value)
    }

    /// Occurs when the currently selected feature in the RadioButton group of the InkToolbar is changed.
    public func activeToolChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIXamlControls_InkToolbar?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _iinkToolbar.add_ActiveToolChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: activeToolChanged)
    }

    public func activeToolChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _iinkToolbar.remove_ActiveToolChanged(token)
    }

    /// Occurs when "Erase All  Ink" is selected from the flyout for the InkToolbarEraserButton on the InkToolbar.
    public func eraseAllClicked(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIXamlControls_InkToolbar?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _iinkToolbar.add_EraseAllClicked(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: eraseAllClicked)
    }

    public func eraseAllClicked(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _iinkToolbar.remove_EraseAllClicked(token)
    }

    /// Occurs when any InkDrawingAttributes are changed.
    public func inkDrawingAttributesChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIXamlControls_InkToolbar?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _iinkToolbar.add_InkDrawingAttributesChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: inkDrawingAttributesChanged)
    }

    public func inkDrawingAttributesChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _iinkToolbar.remove_InkDrawingAttributesChanged(token)
    }

    /// Occurs when the toggled state of the InkToolbarRulerButton changes.
    public func isRulerButtonCheckedChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIXamlControls_InkToolbar?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _iinkToolbar.add_IsRulerButtonCheckedChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: isRulerButtonCheckedChanged)
    }

    public func isRulerButtonCheckedChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _iinkToolbar.remove_IsRulerButtonCheckedChanged(token)
    }

    /// Retrieves a reference to one of the following objects from the radio button group of the InkToolbar.
    /// - Parameter tool: Indicates the type of InkToolbarToolButton to retrieve.
    /// - Returns: The InkToolbarToolButton specified, or **null** if the button has not been added to the InkToolbar.
    public func getToolButton(_ tool: WindowsUIXamlControls_InkToolbarTool) throws -> WindowsUIXamlControls_InkToolbarToolButton {
        try COM.NullResult.unwrap(_iinkToolbar.getToolButton(tool))
    }

    /// Retrieves a reference to an InkToolbarToggleButton object from the toggle button group of the InkToolbar.
    /// - Parameter tool: Indicates the type of InkToolbarToggleButton to retrieve.
    /// - Returns: The InkToolbarToggleButton specified.
    public func getToggleButton(_ tool: WindowsUIXamlControls_InkToolbarToggle) throws -> WindowsUIXamlControls_InkToolbarToggleButton {
        try COM.NullResult.unwrap(_iinkToolbar.getToggleButton(tool))
    }

    // MARK: Windows.UI.Xaml.Controls.IInkToolbar2 members

    /// Gets or sets the location of ink stroke configuration flyout relative to the InkToolbar.
    /// - Returns: The location of the flyout relative to the ink toolbar.
    public var buttonFlyoutPlacement: WindowsUIXamlControls_InkToolbarButtonFlyoutPlacement {
        get throws {
            try _iinkToolbar2.get_ButtonFlyoutPlacement()
        }
    }

    /// Gets or sets the location of ink stroke configuration flyout relative to the InkToolbar.
    /// - Returns: The location of the flyout relative to the ink toolbar.
    public func buttonFlyoutPlacement(_ value: WindowsUIXamlControls_InkToolbarButtonFlyoutPlacement) throws {
        try _iinkToolbar2.put_ButtonFlyoutPlacement(value)
    }

    /// Gets or sets the state of the InkToolbarStencilButton (and associated tool) to on or off.
    /// - Returns: **true** if the stencil button is selected and the stencil is active; otherwise, **false**.
    public var isStencilButtonChecked: Swift.Bool {
        get throws {
            try _iinkToolbar2.get_IsStencilButtonChecked()
        }
    }

    /// Gets or sets the state of the InkToolbarStencilButton (and associated tool) to on or off.
    /// - Returns: **true** if the stencil button is selected and the stencil is active; otherwise, **false**.
    public func isStencilButtonChecked(_ value: Swift.Bool) throws {
        try _iinkToolbar2.put_IsStencilButtonChecked(value)
    }

    /// Gets or sets the orientation of the InkToolbar.
    /// - Returns: The different orientations that ink toolbar can have.
    public var orientation: WindowsUIXamlControls_Orientation {
        get throws {
            try _iinkToolbar2.get_Orientation()
        }
    }

    /// Gets or sets the orientation of the InkToolbar.
    /// - Returns: The different orientations that ink toolbar can have.
    public func orientation(_ value: WindowsUIXamlControls_Orientation) throws {
        try _iinkToolbar2.put_Orientation(value)
    }

    /// Occurs when the toggled state of the InkToolbaStencilButton changes.
    public func isStencilButtonCheckedChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIXamlControls_InkToolbar?, WindowsUIXamlControls_InkToolbarIsStencilButtonCheckedChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _iinkToolbar2.add_IsStencilButtonCheckedChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: isStencilButtonCheckedChanged)
    }

    public func isStencilButtonCheckedChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _iinkToolbar2.remove_IsStencilButtonCheckedChanged(token)
    }

    /// Retrieves a reference to an InkToolbarMenuButton object from the menu button group of the InkToolbar.
    /// - Parameter menu: Indicates the type of InkToolbarMenuButton to retrieve.
    /// - Returns: The InkToolbarMenuButton specified.
    public func getMenuButton(_ menu: WindowsUIXamlControls_InkToolbarMenuKind) throws -> WindowsUIXamlControls_InkToolbarMenuButton {
        try COM.NullResult.unwrap(_iinkToolbar2.getMenuButton(menu))
    }

    // MARK: Windows.UI.Xaml.Controls.IInkToolbar3 members

    /// Gets or sets the InkPresenter object associated with the InkToolbar.
    /// - Returns: The InkPresenter object associated with the InkToolbar.
    public var targetInkPresenter: WindowsUIInputInking_InkPresenter {
        get throws {
            try COM.NullResult.unwrap(_iinkToolbar3.get_TargetInkPresenter())
        }
    }

    /// Gets or sets the InkPresenter object associated with the InkToolbar.
    /// - Returns: The InkPresenter object associated with the InkToolbar.
    public func targetInkPresenter(_ value: WindowsUIInputInking_InkPresenter?) throws {
        try _iinkToolbar3.put_TargetInkPresenter(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IInkToolbarStatics3 members

    /// Identifies the TargetInkPresenter dependency property.
    /// - Returns: The identifier for the TargetInkPresenter dependency property.
    public static var targetInkPresenterProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iinkToolbarStatics3.get_TargetInkPresenterProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IInkToolbarStatics2 members

    /// Identifies the ButtonFlyoutPlacement dependency property.
    public static var buttonFlyoutPlacementProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iinkToolbarStatics2.get_ButtonFlyoutPlacementProperty())
        }
    }

    /// Identifies the IsStencilButtonChecked dependency property.
    /// - Returns: The identifier for the IsStencilButtonChecked dependency property.
    public static var isStencilButtonCheckedProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iinkToolbarStatics2.get_IsStencilButtonCheckedProperty())
        }
    }

    /// Identifies the InkToolbar.Orientation dependency property.
    /// - Returns: The identifier for the InkToolbar.Orientation dependency property.
    public static var orientationProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iinkToolbarStatics2.get_OrientationProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IInkToolbarStatics members

    /// Identifies the ActiveTool dependency property.
    /// - Returns: The identifier for the ActiveTool dependency property.
    public static var activeToolProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iinkToolbarStatics.get_ActiveToolProperty())
        }
    }

    /// Identifies the Children dependency property.
    /// - Returns: The identifier for the Children dependency property.
    public static var childrenProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iinkToolbarStatics.get_ChildrenProperty())
        }
    }

    /// Identifies the InitialControls dependency property.
    /// - Returns: The identifier for the InitialControls dependency property.
    public static var initialControlsProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iinkToolbarStatics.get_InitialControlsProperty())
        }
    }

    /// Identifies the InkDrawingAttributes dependency property.
    /// - Returns: The identifier for the InkDrawingAttributes dependency property.
    public static var inkDrawingAttributesProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iinkToolbarStatics.get_InkDrawingAttributesProperty())
        }
    }

    /// Identifies the IsRulerButtonChecked dependency property.
    /// - Returns: The identifier for the IsRulerButtonChecked dependency property.
    public static var isRulerButtonCheckedProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iinkToolbarStatics.get_IsRulerButtonCheckedProperty())
        }
    }

    /// Identifies the TargetInkCanvas dependency property.
    /// - Returns: The identifier for the TargetInkCanvas dependency property.
    public static var targetInkCanvasProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iinkToolbarStatics.get_TargetInkCanvasProperty())
        }
    }

    // MARK: Implementation details

    private var _iinkToolbar_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbar>? = nil

    internal var _iinkToolbar: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbar> {
        get throws {
            try _iinkToolbar_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IInkToolbar.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IInkToolbar.self)
            }
        }
    }

    private var _iinkToolbar2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbar2>? = nil

    internal var _iinkToolbar2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbar2> {
        get throws {
            try _iinkToolbar2_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IInkToolbar2.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IInkToolbar2.self)
            }
        }
    }

    private var _iinkToolbar3_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbar3>? = nil

    internal var _iinkToolbar3: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbar3> {
        get throws {
            try _iinkToolbar3_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IInkToolbar3.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IInkToolbar3.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbar>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _iinkToolbar_storage?.release()
        _iinkToolbar2_storage?.release()
        _iinkToolbar3_storage?.release()
    }

    private static var _iinkToolbarFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarFactory>? = nil

    internal static var _iinkToolbarFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarFactory> {
        get throws {
            try _iinkToolbarFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.InkToolbar", id: CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarFactory.iid)
            }
        }
    }

    private static var _iinkToolbarStatics3_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarStatics3>? = nil

    internal static var _iinkToolbarStatics3: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarStatics3> {
        get throws {
            try _iinkToolbarStatics3_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.InkToolbar", id: CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarStatics3.iid)
            }
        }
    }

    private static var _iinkToolbarStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarStatics2>? = nil

    internal static var _iinkToolbarStatics2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarStatics2> {
        get throws {
            try _iinkToolbarStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.InkToolbar", id: CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarStatics2.iid)
            }
        }
    }

    private static var _iinkToolbarStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarStatics>? = nil

    internal static var _iinkToolbarStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarStatics> {
        get throws {
            try _iinkToolbarStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.InkToolbar", id: CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarStatics.iid)
            }
        }
    }
}