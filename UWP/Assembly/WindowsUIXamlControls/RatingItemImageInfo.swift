// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents information about the visual states of image elements that represent a rating.
open class WindowsUIXamlControls_RatingItemImageInfo: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.IRatingItemImageInfoFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_RatingItemImageInfo.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._iratingItemImageInfoFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IRatingItemImageInfo members

    /// Gets or sets an image that represents a rating element that is disabled.
    /// - Returns: An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.
    public var disabledImage: WindowsUIXamlMedia_ImageSource {
        get throws {
            try COM.NullResult.unwrap(_iratingItemImageInfo.get_DisabledImage())
        }
    }

    /// Gets or sets an image that represents a rating element that is disabled.
    /// - Returns: An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.
    public func disabledImage(_ value: WindowsUIXamlMedia_ImageSource?) throws {
        try _iratingItemImageInfo.put_DisabledImage(value)
    }

    /// Gets or sets an image that represents a rating element that has been set by the user.
    /// - Returns: An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.
    public var image: WindowsUIXamlMedia_ImageSource {
        get throws {
            try COM.NullResult.unwrap(_iratingItemImageInfo.get_Image())
        }
    }

    /// Gets or sets an image that represents a rating element that has been set by the user.
    /// - Returns: An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.
    public func image(_ value: WindowsUIXamlMedia_ImageSource?) throws {
        try _iratingItemImageInfo.put_Image(value)
    }

    /// Gets or sets an image that represents a rating element that is showing a placeholder value.
    /// - Returns: An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.
    public var placeholderImage: WindowsUIXamlMedia_ImageSource {
        get throws {
            try COM.NullResult.unwrap(_iratingItemImageInfo.get_PlaceholderImage())
        }
    }

    /// Gets or sets an image that represents a rating element that is showing a placeholder value.
    /// - Returns: An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.
    public func placeholderImage(_ value: WindowsUIXamlMedia_ImageSource?) throws {
        try _iratingItemImageInfo.put_PlaceholderImage(value)
    }

    /// Gets or sets an image that represents a rating element that has the pointer over it.
    /// - Returns: An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.
    public var pointerOverImage: WindowsUIXamlMedia_ImageSource {
        get throws {
            try COM.NullResult.unwrap(_iratingItemImageInfo.get_PointerOverImage())
        }
    }

    /// Gets or sets an image that represents a rating element that has the pointer over it.
    /// - Returns: An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.
    public func pointerOverImage(_ value: WindowsUIXamlMedia_ImageSource?) throws {
        try _iratingItemImageInfo.put_PointerOverImage(value)
    }

    /// Gets or sets an image that represents a rating element showing a placeholder value with the pointer over it.
    /// - Returns: An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.
    public var pointerOverPlaceholderImage: WindowsUIXamlMedia_ImageSource {
        get throws {
            try COM.NullResult.unwrap(_iratingItemImageInfo.get_PointerOverPlaceholderImage())
        }
    }

    /// Gets or sets an image that represents a rating element showing a placeholder value with the pointer over it.
    /// - Returns: An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.
    public func pointerOverPlaceholderImage(_ value: WindowsUIXamlMedia_ImageSource?) throws {
        try _iratingItemImageInfo.put_PointerOverPlaceholderImage(value)
    }

    /// Gets or sets an image that represents a rating element that has not been set.
    /// - Returns: An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.
    public var unsetImage: WindowsUIXamlMedia_ImageSource {
        get throws {
            try COM.NullResult.unwrap(_iratingItemImageInfo.get_UnsetImage())
        }
    }

    /// Gets or sets an image that represents a rating element that has not been set.
    /// - Returns: An object that represents the image source file for the drawn image. Typically you set this with a BitmapImage object, constructed with the Uniform Resource Identifier (URI) that describes the path to a valid image source file. Or, you can initialize a BitmapSource with a stream, perhaps a stream from a storage file.
    public func unsetImage(_ value: WindowsUIXamlMedia_ImageSource?) throws {
        try _iratingItemImageInfo.put_UnsetImage(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IRatingItemImageInfoStatics members

    /// Identifies the DisabledImage dependency property.
    /// - Returns: The identifier for DisabledImage dependency property.
    public static var disabledImageProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iratingItemImageInfoStatics.get_DisabledImageProperty())
        }
    }

    /// Identifies the Image dependency property.
    /// - Returns: The identifier for Image dependency property.
    public static var imageProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iratingItemImageInfoStatics.get_ImageProperty())
        }
    }

    /// Identifies the PlaceholderImage dependency property.
    /// - Returns: The identifier for PlaceholderImage dependency property.
    public static var placeholderImageProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iratingItemImageInfoStatics.get_PlaceholderImageProperty())
        }
    }

    /// Identifies the PointerOverImage dependency property.
    /// - Returns: The identifier for PointerOverImage dependency property.
    public static var pointerOverImageProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iratingItemImageInfoStatics.get_PointerOverImageProperty())
        }
    }

    /// Identifies the PointerOverPlaceholderImage dependency property.
    /// - Returns: The identifier for PointerOverPlaceholderImage dependency property.
    public static var pointerOverPlaceholderImageProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iratingItemImageInfoStatics.get_PointerOverPlaceholderImageProperty())
        }
    }

    /// Identifies the UnsetImage dependency property.
    /// - Returns: The identifier for UnsetImage dependency property.
    public static var unsetImageProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iratingItemImageInfoStatics.get_UnsetImageProperty())
        }
    }

    // MARK: Implementation details

    private var _iratingItemImageInfo_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IRatingItemImageInfo>? = nil

    internal var _iratingItemImageInfo: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IRatingItemImageInfo> {
        get throws {
            try _iratingItemImageInfo_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IRatingItemImageInfo.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IRatingItemImageInfo.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_IRatingItemImageInfo>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _iratingItemImageInfo_storage?.release()
    }

    private static var _iratingItemImageInfoFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IRatingItemImageInfoFactory>? = nil

    internal static var _iratingItemImageInfoFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IRatingItemImageInfoFactory> {
        get throws {
            try _iratingItemImageInfoFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.RatingItemImageInfo", id: CWinRT.SWRT_WindowsUIXamlControls_IRatingItemImageInfoFactory.iid)
            }
        }
    }

    private static var _iratingItemImageInfoStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IRatingItemImageInfoStatics>? = nil

    internal static var _iratingItemImageInfoStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IRatingItemImageInfoStatics> {
        get throws {
            try _iratingItemImageInfoStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.RatingItemImageInfo", id: CWinRT.SWRT_WindowsUIXamlControls_IRatingItemImageInfoStatics.iid)
            }
        }
    }
}