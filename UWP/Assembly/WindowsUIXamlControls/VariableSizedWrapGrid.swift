// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides a grid-style layout panel where each tile/cell can be variable size based on content.
public final class WindowsUIXamlControls_VariableSizedWrapGrid: WindowsRuntime.WinRTImport<WindowsUIXamlControls_VariableSizedWrapGridProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlControls_VariableSizedWrapGridProjection.self))
    }

    // MARK: Windows.UI.Xaml.Controls.IVariableSizedWrapGrid members

    /// Gets or sets the alignment rules by which child elements are arranged for the horizontal dimension.
    /// - Returns: A value of the enumeration. The default is **Left**.
    public var horizontalChildrenAlignment: WindowsUIXaml_HorizontalAlignment {
        get throws {
            try _interop.get_HorizontalChildrenAlignment()
        }
    }

    /// Gets or sets the alignment rules by which child elements are arranged for the horizontal dimension.
    /// - Returns: A value of the enumeration. The default is **Left**.
    public func horizontalChildrenAlignment(_ value: WindowsUIXaml_HorizontalAlignment) throws {
        try _interop.put_HorizontalChildrenAlignment(value)
    }

    /// Gets or sets the height of the layout area for each item that is contained in a VariableSizedWrapGrid.
    /// - Returns: The height of the layout area for each item that is contained in a VariableSizedWrapGrid. The default is Double.NaN, which results in the "Auto" layout behavior.
    public var itemHeight: Swift.Double {
        get throws {
            try _interop.get_ItemHeight()
        }
    }

    /// Gets or sets the height of the layout area for each item that is contained in a VariableSizedWrapGrid.
    /// - Returns: The height of the layout area for each item that is contained in a VariableSizedWrapGrid. The default is Double.NaN, which results in the "Auto" layout behavior.
    public func itemHeight(_ value: Swift.Double) throws {
        try _interop.put_ItemHeight(value)
    }

    /// Gets or sets the width of the layout area for each item that is contained in a VariableSizedWrapGrid.
    /// - Returns: The width of the layout area for each item that is contained in a VariableSizedWrapGrid. The default is Double.NaN, which results in the "Auto" layout behavior.
    public var itemWidth: Swift.Double {
        get throws {
            try _interop.get_ItemWidth()
        }
    }

    /// Gets or sets the width of the layout area for each item that is contained in a VariableSizedWrapGrid.
    /// - Returns: The width of the layout area for each item that is contained in a VariableSizedWrapGrid. The default is Double.NaN, which results in the "Auto" layout behavior.
    public func itemWidth(_ value: Swift.Double) throws {
        try _interop.put_ItemWidth(value)
    }

    /// Gets or sets a value that influences the wrap point, also accounting for Orientation.
    /// - Returns: The maximum rows or columns that this VariableSizedWrapGrid should present before it introduces wrapping to the layout. The default is -1, which is a special value that indicates no maximum.
    public var maximumRowsOrColumns: Swift.Int32 {
        get throws {
            try _interop.get_MaximumRowsOrColumns()
        }
    }

    /// Gets or sets a value that influences the wrap point, also accounting for Orientation.
    /// - Returns: The maximum rows or columns that this VariableSizedWrapGrid should present before it introduces wrapping to the layout. The default is -1, which is a special value that indicates no maximum.
    public func maximumRowsOrColumns(_ value: Swift.Int32) throws {
        try _interop.put_MaximumRowsOrColumns(value)
    }

    /// Gets or sets the direction in which child elements are arranged.
    /// - Returns: A value of the enumeration. The default is **Vertical**.
    public var orientation: WindowsUIXamlControls_Orientation {
        get throws {
            try _interop.get_Orientation()
        }
    }

    /// Gets or sets the direction in which child elements are arranged.
    /// - Returns: A value of the enumeration. The default is **Vertical**.
    public func orientation(_ value: WindowsUIXamlControls_Orientation) throws {
        try _interop.put_Orientation(value)
    }

    /// Gets or sets the alignment rules by which child elements are arranged for the vertical dimension.
    /// - Returns: A value of the enumeration. The default is **Top**.
    public var verticalChildrenAlignment: WindowsUIXaml_VerticalAlignment {
        get throws {
            try _interop.get_VerticalChildrenAlignment()
        }
    }

    /// Gets or sets the alignment rules by which child elements are arranged for the vertical dimension.
    /// - Returns: A value of the enumeration. The default is **Top**.
    public func verticalChildrenAlignment(_ value: WindowsUIXaml_VerticalAlignment) throws {
        try _interop.put_VerticalChildrenAlignment(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IVariableSizedWrapGridStatics members

    /// Identifies the VariableSizedWrapGrid.ColumnSpan XAML attached property.
    /// - Returns: The identifier for the VariableSizedWrapGrid.ColumnSpan XAML attached property.
    public static var columnSpanProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ivariableSizedWrapGridStatics.get_ColumnSpanProperty())
        }
    }

    /// Identifies the HorizontalChildrenAlignment dependency property.
    /// - Returns: The identifier for the HorizontalChildrenAlignment dependency property.
    public static var horizontalChildrenAlignmentProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ivariableSizedWrapGridStatics.get_HorizontalChildrenAlignmentProperty())
        }
    }

    /// Identifies the ItemHeight dependency property.
    /// - Returns: The identifier for the ItemHeight dependency property.
    public static var itemHeightProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ivariableSizedWrapGridStatics.get_ItemHeightProperty())
        }
    }

    /// Identifies the ItemWidth dependency property.
    /// - Returns: The identifier for the ItemWidth dependency property.
    public static var itemWidthProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ivariableSizedWrapGridStatics.get_ItemWidthProperty())
        }
    }

    /// Identifies the MaximumRowsOrColumns dependency property.
    /// - Returns: The identifier for the MaximumRowsOrColumns dependency property.
    public static var maximumRowsOrColumnsProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ivariableSizedWrapGridStatics.get_MaximumRowsOrColumnsProperty())
        }
    }

    /// Identifies the Orientation dependency property.
    /// - Returns: The identifier for the Orientation dependency property.
    public static var orientationProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ivariableSizedWrapGridStatics.get_OrientationProperty())
        }
    }

    /// Identifies the VariableSizedWrapGrid.RowSpan XAML attached property.
    /// - Returns: The identifier for the VariableSizedWrapGrid.RowSpan XAML attached property.
    public static var rowSpanProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ivariableSizedWrapGridStatics.get_RowSpanProperty())
        }
    }

    /// Identifies the VerticalChildrenAlignment dependency property.
    /// - Returns: The identifier for the VerticalChildrenAlignment dependency property.
    public static var verticalChildrenAlignmentProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ivariableSizedWrapGridStatics.get_VerticalChildrenAlignmentProperty())
        }
    }

    /// Gets the value of the VariableSizedWrapGrid.RowSpan XAML attached property from a target element.
    /// - Parameter element: The target element.
    /// - Returns: The obtained value.
    public static func getRowSpan(_ element: WindowsUIXaml_UIElement?) throws -> Swift.Int32 {
        try _ivariableSizedWrapGridStatics.getRowSpan(element)
    }

    /// Sets the value of the VariableSizedWrapGrid.RowSpan XAML attached property on a target element.
    /// - Parameter element: The target element.
    /// - Parameter value: The value to set.
    public static func setRowSpan(_ element: WindowsUIXaml_UIElement?, _ value: Swift.Int32) throws {
        try _ivariableSizedWrapGridStatics.setRowSpan(element, value)
    }

    /// Gets the value of the VariableSizedWrapGrid.ColumnSpan XAML attached property from a target element.
    /// - Parameter element: The target element.
    /// - Returns: The obtained value.
    public static func getColumnSpan(_ element: WindowsUIXaml_UIElement?) throws -> Swift.Int32 {
        try _ivariableSizedWrapGridStatics.getColumnSpan(element)
    }

    /// Sets the value of the VariableSizedWrapGrid.ColumnSpan XAML attached property on a target element.
    /// - Parameter element: The target element.
    /// - Parameter value: The value to set.
    public static func setColumnSpan(_ element: WindowsUIXaml_UIElement?, _ value: Swift.Int32) throws {
        try _ivariableSizedWrapGridStatics.setColumnSpan(element, value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.VariableSizedWrapGrid", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _ivariableSizedWrapGridStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IVariableSizedWrapGridStatics>? = nil

    internal static var _ivariableSizedWrapGridStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IVariableSizedWrapGridStatics> {
        get throws {
            try _ivariableSizedWrapGridStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.VariableSizedWrapGrid", id: CWinRT.SWRT_WindowsUIXamlControls_IVariableSizedWrapGridStatics.iid)
            }
        }
    }
}