// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides event data for the ViewChangeStarted and ViewChangeCompleted events.
public final class WindowsUIXamlControls_SemanticZoomViewChangedEventArgs: WindowsRuntime.WinRTImport<WindowsUIXamlControls_SemanticZoomViewChangedEventArgsProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlControls_SemanticZoomViewChangedEventArgsProjection.self))
    }

    // MARK: Windows.UI.Xaml.Controls.ISemanticZoomViewChangedEventArgs members

    /// Provides information about the item and its bounds, once the view change is complete.
    /// - Returns: Information about the item and its bounds.
    public var destinationItem: WindowsUIXamlControls_SemanticZoomLocation {
        get throws {
            try COM.NullResult.unwrap(_interop.get_DestinationItem())
        }
    }

    /// Provides information about the item and its bounds, once the view change is complete.
    /// - Returns: Information about the item and its bounds.
    public func destinationItem(_ value: WindowsUIXamlControls_SemanticZoomLocation?) throws {
        try _interop.put_DestinationItem(value)
    }

    /// Gets or sets a value that indicates whether the starting view is the ZoomedInView.
    /// - Returns: **true** if the starting view is the ZoomedInView; otherwise, **false**.
    public var isSourceZoomedInView: Swift.Bool {
        get throws {
            try _interop.get_IsSourceZoomedInView()
        }
    }

    /// Gets or sets a value that indicates whether the starting view is the ZoomedInView.
    /// - Returns: **true** if the starting view is the ZoomedInView; otherwise, **false**.
    public func isSourceZoomedInView(_ value: Swift.Bool) throws {
        try _interop.put_IsSourceZoomedInView(value)
    }

    /// Provides information about the item and its bounds, for the item as represented in the previous view.
    /// - Returns: Information about the item and its bounds.
    public var sourceItem: WindowsUIXamlControls_SemanticZoomLocation {
        get throws {
            try COM.NullResult.unwrap(_interop.get_SourceItem())
        }
    }

    /// Provides information about the item and its bounds, for the item as represented in the previous view.
    /// - Returns: Information about the item and its bounds.
    public func sourceItem(_ value: WindowsUIXamlControls_SemanticZoomLocation?) throws {
        try _interop.put_SourceItem(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}