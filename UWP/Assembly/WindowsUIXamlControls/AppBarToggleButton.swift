// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a button control that can switch states and be displayed in an AppBar.
open class WindowsUIXamlControls_AppBarToggleButton: WindowsRuntime.WinRTComposableClass, WindowsUIXamlControls_ICommandBarElementProtocol, WindowsUIXamlControls_ICommandBarElement2Protocol {
    // MARK: Windows.UI.Xaml.Controls.IAppBarToggleButtonFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_AppBarToggleButton.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._iappBarToggleButtonFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IAppBarToggleButton members

    /// Gets or sets the graphic content of the app bar toggle button.
    /// - Returns: The graphic content of the app bar toggle button.
    public var icon: WindowsUIXamlControls_IconElement {
        get throws {
            try COM.NullResult.unwrap(_iappBarToggleButton.get_Icon())
        }
    }

    /// Gets or sets the graphic content of the app bar toggle button.
    /// - Returns: The graphic content of the app bar toggle button.
    public func icon(_ value: WindowsUIXamlControls_IconElement?) throws {
        try _iappBarToggleButton.put_Icon(value)
    }

    /// Gets or sets the text description displayed on the app bar toggle button.
    /// - Returns: The text description displayed on the app bar toggle button.
    public var label: Swift.String {
        get throws {
            try _iappBarToggleButton.get_Label()
        }
    }

    /// Gets or sets the text description displayed on the app bar toggle button.
    /// - Returns: The text description displayed on the app bar toggle button.
    public func label(_ value: Swift.String) throws {
        try _iappBarToggleButton.put_Label(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IAppBarToggleButton3 members

    /// Gets or sets a value that indicates the placement and visibility of the button's label.
    /// - Returns: An enumeration value that specifies the placement and visibility of the button's label. The default is **Default**.
    public var labelPosition: WindowsUIXamlControls_CommandBarLabelPosition {
        get throws {
            try _iappBarToggleButton3.get_LabelPosition()
        }
    }

    /// Gets or sets a value that indicates the placement and visibility of the button's label.
    /// - Returns: An enumeration value that specifies the placement and visibility of the button's label. The default is **Default**.
    public func labelPosition(_ value: WindowsUIXamlControls_CommandBarLabelPosition) throws {
        try _iappBarToggleButton3.put_LabelPosition(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IAppBarToggleButton4 members

    /// Gets or sets a string that overrides the default key combination string associated with a keyboard accelerator.
    /// - Returns: The string to replace the default key combination string. The default is null.
    public var keyboardAcceleratorTextOverride: Swift.String {
        get throws {
            try _iappBarToggleButton4.get_KeyboardAcceleratorTextOverride()
        }
    }

    /// Gets or sets a string that overrides the default key combination string associated with a keyboard accelerator.
    /// - Returns: The string to replace the default key combination string. The default is null.
    public func keyboardAcceleratorTextOverride(_ value: Swift.String) throws {
        try _iappBarToggleButton4.put_KeyboardAcceleratorTextOverride(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IAppBarToggleButton5 members

    /// Gets an object that provides calculated values that can be referenced as {TemplateBinding} markup extension sources when defining templates for an AppBarToggleButton control.
    /// - Returns: An object that provides calculated values for templates.
    public var templateSettings: WindowsUIXamlControlsPrimitives_AppBarToggleButtonTemplateSettings {
        get throws {
            try COM.NullResult.unwrap(_iappBarToggleButton5.get_TemplateSettings())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.ICommandBarElement members

    /// Gets or sets a value that indicates whether the button is shown with no label and reduced padding.
    /// - Returns: **True** if the button is shown in its compact state; otherwise, **false**. The default is **false**.
    public var isCompact: Swift.Bool {
        get throws {
            try _icommandBarElement.get_IsCompact()
        }
    }

    /// Gets or sets a value that indicates whether the button is shown with no label and reduced padding.
    /// - Returns: **True** if the button is shown in its compact state; otherwise, **false**. The default is **false**.
    public func isCompact(_ value: Swift.Bool) throws {
        try _icommandBarElement.put_IsCompact(value)
    }

    // MARK: Windows.UI.Xaml.Controls.ICommandBarElement2 members

    /// Gets or sets the order in which this item is moved to the CommandBar overflow menu.
    /// - Returns: The order in which this item is moved to the overflow menu relative to other items.
    public var dynamicOverflowOrder: Swift.Int32 {
        get throws {
            try _icommandBarElement2.get_DynamicOverflowOrder()
        }
    }

    /// Gets or sets the order in which this item is moved to the CommandBar overflow menu.
    /// - Returns: The order in which this item is moved to the overflow menu relative to other items.
    public func dynamicOverflowOrder(_ value: Swift.Int32) throws {
        try _icommandBarElement2.put_DynamicOverflowOrder(value)
    }

    /// Gets a value that indicates whether this item is in the overflow menu.
    /// - Returns: **true** if this item is in the overflow menu; otherwise, **false**.
    public var isInOverflow: Swift.Bool {
        get throws {
            try _icommandBarElement2.get_IsInOverflow()
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IAppBarToggleButtonStatics4 members

    /// Identifies the AppBarToggleButton.KeyboardAcceleratorTextOverride dependency property.
    /// - Returns: The identifier for the AppBarToggleButton.KeyboardAcceleratorTextOverride dependency property.
    public static var keyboardAcceleratorTextOverrideProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iappBarToggleButtonStatics4.get_KeyboardAcceleratorTextOverrideProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IAppBarToggleButtonStatics3 members

    /// Identifies the DynamicOverflowOrder dependency property.
    /// - Returns: The identifier for the DynamicOverflowOrder dependency property.
    public static var dynamicOverflowOrderProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iappBarToggleButtonStatics3.get_DynamicOverflowOrderProperty())
        }
    }

    /// Identifies the IsInOverflow dependency property.
    /// - Returns: The identifier for the IsInOverflow dependency property.
    public static var isInOverflowProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iappBarToggleButtonStatics3.get_IsInOverflowProperty())
        }
    }

    /// Identifies the LabelPosition dependency property.
    /// - Returns: The identifier for the LabelPosition dependency property.
    public static var labelPositionProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iappBarToggleButtonStatics3.get_LabelPositionProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IAppBarToggleButtonStatics members

    /// Identifies the Icon dependency property.
    /// - Returns: The identifier for the Icon dependency property.
    public static var iconProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iappBarToggleButtonStatics.get_IconProperty())
        }
    }

    /// Identifies the IsCompact dependency property.
    /// - Returns: The identifier for the IsCompact dependency property.
    public static var isCompactProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iappBarToggleButtonStatics.get_IsCompactProperty())
        }
    }

    /// Identifies the Label dependency property.
    /// - Returns: The identifier for the Label dependency property.
    public static var labelProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iappBarToggleButtonStatics.get_LabelProperty())
        }
    }

    // MARK: Implementation details

    private var _iappBarToggleButton_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButton>? = nil

    internal var _iappBarToggleButton: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButton> {
        get throws {
            try _iappBarToggleButton_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButton.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButton.self)
            }
        }
    }

    private var _iappBarToggleButton3_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButton3>? = nil

    internal var _iappBarToggleButton3: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButton3> {
        get throws {
            try _iappBarToggleButton3_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButton3.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButton3.self)
            }
        }
    }

    private var _iappBarToggleButton4_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButton4>? = nil

    internal var _iappBarToggleButton4: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButton4> {
        get throws {
            try _iappBarToggleButton4_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButton4.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButton4.self)
            }
        }
    }

    private var _iappBarToggleButton5_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButton5>? = nil

    internal var _iappBarToggleButton5: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButton5> {
        get throws {
            try _iappBarToggleButton5_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButton5.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButton5.self)
            }
        }
    }

    private var _icommandBarElement_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ICommandBarElement>? = nil

    internal var _icommandBarElement: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ICommandBarElement> {
        get throws {
            try _icommandBarElement_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_ICommandBarElement.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_ICommandBarElement.self)
            }
        }
    }

    private var _icommandBarElement2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ICommandBarElement2>? = nil

    internal var _icommandBarElement2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ICommandBarElement2> {
        get throws {
            try _icommandBarElement2_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_ICommandBarElement2.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_ICommandBarElement2.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButton>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _iappBarToggleButton_storage?.release()
        _iappBarToggleButton3_storage?.release()
        _iappBarToggleButton4_storage?.release()
        _iappBarToggleButton5_storage?.release()
        _icommandBarElement_storage?.release()
        _icommandBarElement2_storage?.release()
    }

    private static var _iappBarToggleButtonFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButtonFactory>? = nil

    internal static var _iappBarToggleButtonFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButtonFactory> {
        get throws {
            try _iappBarToggleButtonFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.AppBarToggleButton", id: CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButtonFactory.iid)
            }
        }
    }

    private static var _iappBarToggleButtonStatics4_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButtonStatics4>? = nil

    internal static var _iappBarToggleButtonStatics4: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButtonStatics4> {
        get throws {
            try _iappBarToggleButtonStatics4_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.AppBarToggleButton", id: CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButtonStatics4.iid)
            }
        }
    }

    private static var _iappBarToggleButtonStatics3_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButtonStatics3>? = nil

    internal static var _iappBarToggleButtonStatics3: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButtonStatics3> {
        get throws {
            try _iappBarToggleButtonStatics3_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.AppBarToggleButton", id: CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButtonStatics3.iid)
            }
        }
    }

    private static var _iappBarToggleButtonStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButtonStatics>? = nil

    internal static var _iappBarToggleButtonStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButtonStatics> {
        get throws {
            try _iappBarToggleButtonStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.AppBarToggleButton", id: CWinRT.SWRT_WindowsUIXamlControls_IAppBarToggleButtonStatics.iid)
            }
        }
    }
}