// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Enables custom item style selection logic as a function of the content data and its specific item container.
open class WindowsUIXamlControls_StyleSelector: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.IStyleSelectorFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_StyleSelector.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._istyleSelectorFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IStyleSelector members

    /// Returns a specific Style based on custom logic.
    /// - Parameter item: The content.
    /// - Parameter container: The element to which the style is applied.
    /// - Returns: An application-specific style to apply; may also return null.
    public func selectStyle(_ item: WindowsRuntime.IInspectable?, _ container: WindowsUIXaml_DependencyObject?) throws -> WindowsUIXaml_Style {
        try COM.NullResult.unwrap(_istyleSelector.selectStyle(item, container))
    }

    // MARK: Windows.UI.Xaml.Controls.IStyleSelectorOverrides members

    /// When implemented by a derived class, returns a specific Style based on custom logic.
    /// - Parameter item: The content.
    /// - Parameter container: The element to which the style is applied.
    /// - Returns: An application-specific style to apply; may also return null.
    open func selectStyleCore(_ item: WindowsRuntime.IInspectable?, _ container: WindowsUIXaml_DependencyObject?) throws -> WindowsUIXaml_Style {
        try COM.NullResult.unwrap(_istyleSelectorOverrides.selectStyleCore(item, container))
    }

    // MARK: Implementation details

    private var _istyleSelector_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IStyleSelector>? = nil

    internal var _istyleSelector: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IStyleSelector> {
        get throws {
            try _istyleSelector_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IStyleSelector.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IStyleSelector.self)
            }
        }
    }

    private var _istyleSelectorOverrides_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IStyleSelectorOverrides>? = nil

    internal var _istyleSelectorOverrides: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IStyleSelectorOverrides> {
        get throws {
            try _istyleSelectorOverrides_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IStyleSelectorOverrides.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IStyleSelectorOverrides.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_IStyleSelector>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _istyleSelector_storage?.release()
        _istyleSelectorOverrides_storage?.release()
    }

    private static var _istyleSelectorFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IStyleSelectorFactory>? = nil

    internal static var _istyleSelectorFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IStyleSelectorFactory> {
        get throws {
            try _istyleSelectorFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.StyleSelector", id: CWinRT.SWRT_WindowsUIXamlControls_IStyleSelectorFactory.iid)
            }
        }
    }

    // MARK: Override support

    private var _istyleSelectorOverrides_outer: COM.COMExportedInterface = .uninitialized

    public override func _queryOverridesInterfacePointer(_ id: COM.COMInterfaceID) throws -> COM.IUnknownPointer? {
        if id == CWinRT.SWRT_WindowsUIXamlControls_IStyleSelectorOverrides.iid {
            if !_istyleSelectorOverrides_outer.isInitialized {
                _istyleSelectorOverrides_outer = COM.COMExportedInterface(
                    swiftObject: self, virtualTable: &WindowsUIXamlControls_StyleSelectorProjection.VirtualTables.istyleSelectorOverrides)
            }
            return _istyleSelectorOverrides_outer.unknownPointer.addingRef()
        }
        return nil
    }
}