// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the container for an item in a ListView control.
open class WindowsUIXamlControls_ListViewItem: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.IListViewItemFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_ListViewItem.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._ilistViewItemFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IListViewItem members

    /// Gets an object that provides calculated values that can be referenced as **TemplateBinding** sources when you're defining templates for a ListViewItem class.
    /// - Returns: An object that provides calculated values for templates.
    public var templateSettings: WindowsUIXamlControlsPrimitives_ListViewItemTemplateSettings {
        get throws {
            try COM.NullResult.unwrap(_ilistViewItem.get_TemplateSettings())
        }
    }

    // MARK: Implementation details

    private var _ilistViewItem_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IListViewItem>? = nil

    internal var _ilistViewItem: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IListViewItem> {
        get throws {
            try _ilistViewItem_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IListViewItem.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IListViewItem.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_IListViewItem>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _ilistViewItem_storage?.release()
    }

    private static var _ilistViewItemFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IListViewItemFactory>? = nil

    internal static var _ilistViewItemFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IListViewItemFactory> {
        get throws {
            try _ilistViewItemFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ListViewItem", id: CWinRT.SWRT_WindowsUIXamlControls_IListViewItemFactory.iid)
            }
        }
    }
}