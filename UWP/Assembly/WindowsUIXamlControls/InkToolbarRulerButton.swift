// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents an InkToolbar button that sets the state of the built-in ruler tool to on or off.
open class WindowsUIXamlControls_InkToolbarRulerButton: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.IInkToolbarRulerButtonFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_InkToolbarRulerButton.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._iinkToolbarRulerButtonFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IInkToolbarRulerButton members

    /// Gets the stencil associated with the InkToolbarRulerButton.
    /// - Returns: The stencil associated with the InkToolbarRulerButton.
    public var ruler: WindowsUIInputInking_InkPresenterRuler {
        get throws {
            try COM.NullResult.unwrap(_iinkToolbarRulerButton.get_Ruler())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IInkToolbarRulerButtonStatics members

    /// Identifies the Ruler dependency property.
    /// - Returns: The identifier for the Ruler dependency property.
    public static var rulerProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iinkToolbarRulerButtonStatics.get_RulerProperty())
        }
    }

    // MARK: Implementation details

    private var _iinkToolbarRulerButton_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarRulerButton>? = nil

    internal var _iinkToolbarRulerButton: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarRulerButton> {
        get throws {
            try _iinkToolbarRulerButton_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarRulerButton.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarRulerButton.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarRulerButton>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _iinkToolbarRulerButton_storage?.release()
    }

    private static var _iinkToolbarRulerButtonFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarRulerButtonFactory>? = nil

    internal static var _iinkToolbarRulerButtonFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarRulerButtonFactory> {
        get throws {
            try _iinkToolbarRulerButtonFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.InkToolbarRulerButton", id: CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarRulerButtonFactory.iid)
            }
        }
    }

    private static var _iinkToolbarRulerButtonStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarRulerButtonStatics>? = nil

    internal static var _iinkToolbarRulerButtonStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarRulerButtonStatics> {
        get throws {
            try _iinkToolbarRulerButtonStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.InkToolbarRulerButton", id: CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarRulerButtonStatics.iid)
            }
        }
    }
}