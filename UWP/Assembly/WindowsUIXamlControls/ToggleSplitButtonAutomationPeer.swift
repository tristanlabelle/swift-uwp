// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Exposes ToggleSplitButton types to Microsoft UI Automation.
open class WindowsUIXamlControls_ToggleSplitButtonAutomationPeer: WindowsRuntime.WinRTComposableClass, WindowsUIXamlAutomationProvider_IExpandCollapseProviderProtocol, WindowsUIXamlAutomationProvider_IToggleProviderProtocol {
    // MARK: Windows.UI.Xaml.Controls.IToggleSplitButtonAutomationPeerFactory members

    public convenience init(_ owner: WindowsUIXamlControls_ToggleSplitButton?) throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_ToggleSplitButtonAutomationPeer.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._itoggleSplitButtonAutomationPeerFactory.createInstance(owner, baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider members

    /// Gets the state, expanded or collapsed, of the control.
    /// - Returns: A value of the enumeration.
    public var expandCollapseState: WindowsUIXamlAutomation_ExpandCollapseState {
        get throws {
            try _iexpandCollapseProvider.get_ExpandCollapseState()
        }
    }

    /// Hides the control's drop down menu.
    public func collapse() throws {
        try _iexpandCollapseProvider.collapse()
    }

    /// Displays the control's drop down menu.
    public func expand() throws {
        try _iexpandCollapseProvider.expand()
    }

    // MARK: Windows.UI.Xaml.Automation.Provider.IToggleProvider members

    /// Gets the toggle state of the control.
    /// - Returns: A value of the enumeration.
    public var toggleState: WindowsUIXamlAutomation_ToggleState {
        get throws {
            try _itoggleProvider.get_ToggleState()
        }
    }

    /// Cycles through the toggle states of a control.
    public func toggle() throws {
        try _itoggleProvider.toggle()
    }

    // MARK: Implementation details

    private var _itoggleSplitButtonAutomationPeer_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IToggleSplitButtonAutomationPeer>? = nil

    internal var _itoggleSplitButtonAutomationPeer: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IToggleSplitButtonAutomationPeer> {
        get throws {
            try _itoggleSplitButtonAutomationPeer_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IToggleSplitButtonAutomationPeer.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IToggleSplitButtonAutomationPeer.self)
            }
        }
    }

    private var _iexpandCollapseProvider_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationProvider_IExpandCollapseProvider>? = nil

    internal var _iexpandCollapseProvider: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationProvider_IExpandCollapseProvider> {
        get throws {
            try _iexpandCollapseProvider_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlAutomationProvider_IExpandCollapseProvider.iid).cast(to: CWinRT.SWRT_WindowsUIXamlAutomationProvider_IExpandCollapseProvider.self)
            }
        }
    }

    private var _itoggleProvider_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationProvider_IToggleProvider>? = nil

    internal var _itoggleProvider: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationProvider_IToggleProvider> {
        get throws {
            try _itoggleProvider_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlAutomationProvider_IToggleProvider.iid).cast(to: CWinRT.SWRT_WindowsUIXamlAutomationProvider_IToggleProvider.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_IToggleSplitButtonAutomationPeer>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _itoggleSplitButtonAutomationPeer_storage?.release()
        _iexpandCollapseProvider_storage?.release()
        _itoggleProvider_storage?.release()
    }

    private static var _itoggleSplitButtonAutomationPeerFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IToggleSplitButtonAutomationPeerFactory>? = nil

    internal static var _itoggleSplitButtonAutomationPeerFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IToggleSplitButtonAutomationPeerFactory> {
        get throws {
            try _itoggleSplitButtonAutomationPeerFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ToggleSplitButtonAutomationPeer", id: CWinRT.SWRT_WindowsUIXamlControls_IToggleSplitButtonAutomationPeerFactory.iid)
            }
        }
    }
}