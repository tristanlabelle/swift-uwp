// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a specialized container that presents a set of menus in a horizontal row, typically at the top of an app window.
open class WindowsUIXamlControls_MenuBar: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.IMenuBarFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_MenuBar.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._imenuBarFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IMenuBar members

    /// Gets the collection of top-level menu items.
    /// - Returns: The collection of top-level menu items.
    public var items: WindowsFoundationCollections_IVector<WindowsUIXamlControls_MenuBarItem?> {
        get throws {
            try COM.NullResult.unwrap(_imenuBar.get_Items())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IMenuBarStatics members

    /// Identifies the Items dependency property.
    /// - Returns: The identifier for the Items dependency property.
    public static var itemsProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_imenuBarStatics.get_ItemsProperty())
        }
    }

    // MARK: Implementation details

    private var _imenuBar_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IMenuBar>? = nil

    internal var _imenuBar: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IMenuBar> {
        get throws {
            try _imenuBar_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IMenuBar.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IMenuBar.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_IMenuBar>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _imenuBar_storage?.release()
    }

    private static var _imenuBarFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IMenuBarFactory>? = nil

    internal static var _imenuBarFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IMenuBarFactory> {
        get throws {
            try _imenuBarFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.MenuBar", id: CWinRT.SWRT_WindowsUIXamlControls_IMenuBarFactory.iid)
            }
        }
    }

    private static var _imenuBarStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IMenuBarStatics>? = nil

    internal static var _imenuBarStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IMenuBarStatics> {
        get throws {
            try _imenuBarStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.MenuBar", id: CWinRT.SWRT_WindowsUIXamlControls_IMenuBarStatics.iid)
            }
        }
    }
}