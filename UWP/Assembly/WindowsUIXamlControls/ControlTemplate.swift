// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Defines the element tree that is used as the control template for a control.
public final class WindowsUIXamlControls_ControlTemplate: WindowsRuntime.WinRTImport<WindowsUIXamlControls_ControlTemplateProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlControls_ControlTemplateProjection.self))
    }

    // MARK: Windows.UI.Xaml.Controls.IControlTemplate members

    /// Gets or sets the type to which the ControlTemplate is applied.
    /// - Returns: The type to which the ControlTemplate is applied. This value is usually set in XAML, not code. See Remarks.
    public var targetType: WindowsUIXamlInterop_TypeName {
        get throws {
            try _interop.get_TargetType()
        }
    }

    /// Gets or sets the type to which the ControlTemplate is applied.
    /// - Returns: The type to which the ControlTemplate is applied. This value is usually set in XAML, not code. See Remarks.
    public func targetType(_ value: WindowsUIXamlInterop_TypeName) throws {
        try _interop.put_TargetType(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ControlTemplate", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}