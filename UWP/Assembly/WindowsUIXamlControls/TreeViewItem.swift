// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the container for an item in a TreeView control.
open class WindowsUIXamlControls_TreeViewItem: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.ITreeViewItemFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_TreeViewItem.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._itreeViewItemFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.ITreeViewItem members

    /// Gets or sets the glyph to show for a collapsed tree node.
    /// - Returns: The glyph to show for a collapsed tree node.
    public var collapsedGlyph: Swift.String {
        get throws {
            try _itreeViewItem.get_CollapsedGlyph()
        }
    }

    /// Gets or sets the glyph to show for a collapsed tree node.
    /// - Returns: The glyph to show for a collapsed tree node.
    public func collapsedGlyph(_ value: Swift.String) throws {
        try _itreeViewItem.put_CollapsedGlyph(value)
    }

    /// Gets or sets the glyph to show for an expanded tree node.
    /// - Returns: The glyph to show for an expanded tree node.
    public var expandedGlyph: Swift.String {
        get throws {
            try _itreeViewItem.get_ExpandedGlyph()
        }
    }

    /// Gets or sets the glyph to show for an expanded tree node.
    /// - Returns: The glyph to show for an expanded tree node.
    public func expandedGlyph(_ value: Swift.String) throws {
        try _itreeViewItem.put_ExpandedGlyph(value)
    }

    /// Gets or sets the Brush used to paint node glyphs on a TreeView.
    /// - Returns: The Brush used to paint node glyphs on a TreeView.
    public var glyphBrush: WindowsUIXamlMedia_Brush {
        get throws {
            try COM.NullResult.unwrap(_itreeViewItem.get_GlyphBrush())
        }
    }

    /// Gets or sets the Brush used to paint node glyphs on a TreeView.
    /// - Returns: The Brush used to paint node glyphs on a TreeView.
    public func glyphBrush(_ value: WindowsUIXamlMedia_Brush?) throws {
        try _itreeViewItem.put_GlyphBrush(value)
    }

    /// Gets or sets the opacity of node glyphs on a TreeView.
    /// - Returns: The opacity of node glyphs on a TreeView.
    public var glyphOpacity: Swift.Double {
        get throws {
            try _itreeViewItem.get_GlyphOpacity()
        }
    }

    /// Gets or sets the opacity of node glyphs on a TreeView.
    /// - Returns: The opacity of node glyphs on a TreeView.
    public func glyphOpacity(_ value: Swift.Double) throws {
        try _itreeViewItem.put_GlyphOpacity(value)
    }

    /// Gets or sets the size of node glyphs on a TreeView.
    /// - Returns: The opacity of size glyphs on a TreeView.
    public var glyphSize: Swift.Double {
        get throws {
            try _itreeViewItem.get_GlyphSize()
        }
    }

    /// Gets or sets the size of node glyphs on a TreeView.
    /// - Returns: The opacity of size glyphs on a TreeView.
    public func glyphSize(_ value: Swift.Double) throws {
        try _itreeViewItem.put_GlyphSize(value)
    }

    /// Gets or sets a value that indicates whether a tree node is expanded.
    /// - Returns: **true** if the tree node is expanded; otherwise, **false**.
    public var isExpanded: Swift.Bool {
        get throws {
            try _itreeViewItem.get_IsExpanded()
        }
    }

    /// Gets or sets a value that indicates whether a tree node is expanded.
    /// - Returns: **true** if the tree node is expanded; otherwise, **false**.
    public func isExpanded(_ value: Swift.Bool) throws {
        try _itreeViewItem.put_IsExpanded(value)
    }

    /// Gets an object that provides calculated values that can be referenced as {TemplateBinding} markup extension sources when defining templates for a TreeViewItem control.
    /// - Returns: An object that provides calculated values for templates.
    public var treeViewItemTemplateSettings: WindowsUIXamlControls_TreeViewItemTemplateSettings {
        get throws {
            try COM.NullResult.unwrap(_itreeViewItem.get_TreeViewItemTemplateSettings())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.ITreeViewItem2 members

    /// Gets or sets a value that indicates whether the current item has child items that haven't been shown.
    /// - Returns: **true** of the current item has child items that haven't been shown; otherwise, **false**.
    public var hasUnrealizedChildren: Swift.Bool {
        get throws {
            try _itreeViewItem2.get_HasUnrealizedChildren()
        }
    }

    /// Gets or sets a value that indicates whether the current item has child items that haven't been shown.
    /// - Returns: **true** of the current item has child items that haven't been shown; otherwise, **false**.
    public func hasUnrealizedChildren(_ value: Swift.Bool) throws {
        try _itreeViewItem2.put_HasUnrealizedChildren(value)
    }

    /// Gets or sets an object source used to generate the content of the TreeView.
    /// - Returns: The object that is used to generate the content of the TreeViewItem. The default is **null**.
    public var itemsSource: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_itreeViewItem2.get_ItemsSource())
        }
    }

    /// Gets or sets an object source used to generate the content of the TreeView.
    /// - Returns: The object that is used to generate the content of the TreeViewItem. The default is **null**.
    public func itemsSource(_ value: WindowsRuntime.IInspectable?) throws {
        try _itreeViewItem2.put_ItemsSource(value)
    }

    // MARK: Windows.UI.Xaml.Controls.ITreeViewItemStatics2 members

    /// Identifies the HasUnrealizedChildren dependency property.
    /// - Returns: The identifier for the HasUnrealizedChildren dependency property.
    public static var hasUnrealizedChildrenProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itreeViewItemStatics2.get_HasUnrealizedChildrenProperty())
        }
    }

    /// Identifies the ItemsSource dependency property.
    /// - Returns: The identifier for the ItemsSource dependency property.
    public static var itemsSourceProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itreeViewItemStatics2.get_ItemsSourceProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.ITreeViewItemStatics members

    /// Identifies the CollapsedGlyph dependency property.
    /// - Returns: The identifier for the CollapsedGlyph dependency property.
    public static var collapsedGlyphProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itreeViewItemStatics.get_CollapsedGlyphProperty())
        }
    }

    /// Identifies the ExpandedGlyph dependency property.
    /// - Returns: The identifier for the ExpandedGlyph dependency property.
    public static var expandedGlyphProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itreeViewItemStatics.get_ExpandedGlyphProperty())
        }
    }

    /// Identifies the GlyphBrush dependency property.
    /// - Returns: The identifier for the GlyphBrush dependency property.
    public static var glyphBrushProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itreeViewItemStatics.get_GlyphBrushProperty())
        }
    }

    /// Identifies the GlyphOpacity dependency property.
    /// - Returns: The identifier for the GlyphOpacity dependency property.
    public static var glyphOpacityProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itreeViewItemStatics.get_GlyphOpacityProperty())
        }
    }

    /// Identifies the GlyphSize dependency property.
    /// - Returns: The identifier for the GlyphSize dependency property.
    public static var glyphSizeProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itreeViewItemStatics.get_GlyphSizeProperty())
        }
    }

    /// Identifies the IsExpanded dependency property.
    /// - Returns: The identifier for the IsExpanded dependency property.
    public static var isExpandedProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itreeViewItemStatics.get_IsExpandedProperty())
        }
    }

    /// Identifies the TreeViewItemTemplateSettings dependency property.
    /// - Returns: The identifier for the TreeViewItemTemplateSettings dependency property.
    public static var treeViewItemTemplateSettingsProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_itreeViewItemStatics.get_TreeViewItemTemplateSettingsProperty())
        }
    }

    // MARK: Implementation details

    private var _itreeViewItem_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewItem>? = nil

    internal var _itreeViewItem: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewItem> {
        get throws {
            try _itreeViewItem_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_ITreeViewItem.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_ITreeViewItem.self)
            }
        }
    }

    private var _itreeViewItem2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewItem2>? = nil

    internal var _itreeViewItem2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewItem2> {
        get throws {
            try _itreeViewItem2_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_ITreeViewItem2.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_ITreeViewItem2.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewItem>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _itreeViewItem_storage?.release()
        _itreeViewItem2_storage?.release()
    }

    private static var _itreeViewItemFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewItemFactory>? = nil

    internal static var _itreeViewItemFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewItemFactory> {
        get throws {
            try _itreeViewItemFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.TreeViewItem", id: CWinRT.SWRT_WindowsUIXamlControls_ITreeViewItemFactory.iid)
            }
        }
    }

    private static var _itreeViewItemStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewItemStatics2>? = nil

    internal static var _itreeViewItemStatics2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewItemStatics2> {
        get throws {
            try _itreeViewItemStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.TreeViewItem", id: CWinRT.SWRT_WindowsUIXamlControls_ITreeViewItemStatics2.iid)
            }
        }
    }

    private static var _itreeViewItemStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewItemStatics>? = nil

    internal static var _itreeViewItemStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_ITreeViewItemStatics> {
        get throws {
            try _itreeViewItemStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.TreeViewItem", id: CWinRT.SWRT_WindowsUIXamlControls_ITreeViewItemStatics.iid)
            }
        }
    }
}