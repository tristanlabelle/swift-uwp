// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides data for the ContainerContentChanging event.
public final class WindowsUIXamlControls_ContainerContentChangingEventArgs: WindowsRuntime.WinRTImport<WindowsUIXamlControls_ContainerContentChangingEventArgsProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlControls_ContainerContentChangingEventArgsProjection.self))
    }

    // MARK: Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs members

    /// Gets or sets a value that marks the routed event as handled. A **true** value for Handled prevents most handlers along the event route from handling the same event again.
    /// - Returns: **true** to mark the routed event handled. **false** to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is **false**.
    public var handled: Swift.Bool {
        get throws {
            try _interop.get_Handled()
        }
    }

    /// Gets or sets a value that marks the routed event as handled. A **true** value for Handled prevents most handlers along the event route from handling the same event again.
    /// - Returns: **true** to mark the routed event handled. **false** to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is **false**.
    public func handled(_ value: Swift.Bool) throws {
        try _interop.put_Handled(value)
    }

    /// Gets a value that indicates whether this container is in the recycle queue of the ListViewBase and is not being used to visualize a data item.
    /// - Returns: **true** if the container is in the recycle queue of the ListViewBase; otherwise, **false**.
    public var inRecycleQueue: Swift.Bool {
        get throws {
            try _interop.get_InRecycleQueue()
        }
    }

    /// Gets the data item associated with this container.
    /// - Returns: The data item associated with this container, or **null** if no data is associated with this container.
    public var item: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Item())
        }
    }

    /// Gets the UI container used to display the current data item.
    /// - Returns: The UI container used to display the current data item.
    public var itemContainer: WindowsUIXamlControlsPrimitives_SelectorItem {
        get throws {
            try COM.NullResult.unwrap(_interop.get_ItemContainer())
        }
    }

    /// Gets the index in the ItemsSource of the data item associated with this container.
    /// - Returns: The index in the ItemsSource of the data item associated with this container. The default is -1.
    public var itemIndex: Swift.Int32 {
        get throws {
            try _interop.get_ItemIndex()
        }
    }

    /// Gets the number of times this container and data item pair has been called.
    /// - Returns: The number of times this container and data item pair has been called.
    public var phase: Swift.UInt32 {
        get throws {
            try _interop.get_Phase()
        }
    }

    public func registerUpdateCallback(_ callback: WindowsFoundation_TypedEventHandler<WindowsUIXamlControls_ListViewBase?, WindowsUIXamlControls_ContainerContentChangingEventArgs?>?) throws {
        try _interop.registerUpdateCallback(callback)
    }

    public func registerUpdateCallback(_ callbackPhase: Swift.UInt32, _ callback: WindowsFoundation_TypedEventHandler<WindowsUIXamlControls_ListViewBase?, WindowsUIXamlControls_ContainerContentChangingEventArgs?>?) throws {
        try _interop.registerUpdateCallbackWithPhase(callbackPhase, callback)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}