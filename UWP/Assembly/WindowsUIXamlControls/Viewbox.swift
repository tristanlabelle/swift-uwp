// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Defines a content decorator that can stretch and scale a single child to fill the available space.
public final class WindowsUIXamlControls_Viewbox: WindowsRuntime.WinRTImport<WindowsUIXamlControls_ViewboxProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlControls_ViewboxProjection.self))
    }

    // MARK: Windows.UI.Xaml.Controls.IViewbox members

    /// Gets or sets the single child element of a Viewbox element.
    /// - Returns: The single child element of a Viewbox element.
    public var child: WindowsUIXaml_UIElement {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Child())
        }
    }

    /// Gets or sets the single child element of a Viewbox element.
    /// - Returns: The single child element of a Viewbox element.
    public func child(_ value: WindowsUIXaml_UIElement?) throws {
        try _interop.put_Child(value)
    }

    /// Gets or sets the Stretch mode, which determines how content fits into the available space.
    /// - Returns: A Stretch mode, which determines how content fits in the available space. The default is **Uniform**.
    public var stretch: WindowsUIXamlMedia_Stretch {
        get throws {
            try _interop.get_Stretch()
        }
    }

    /// Gets or sets the Stretch mode, which determines how content fits into the available space.
    /// - Returns: A Stretch mode, which determines how content fits in the available space. The default is **Uniform**.
    public func stretch(_ value: WindowsUIXamlMedia_Stretch) throws {
        try _interop.put_Stretch(value)
    }

    /// Gets or sets the StretchDirection, which determines how scaling is applied to the contents of a Viewbox.
    /// - Returns: A StretchDirection, which determines how scaling is applied to the contents of a Viewbox. The default is **Both**.
    public var stretchDirection: WindowsUIXamlControls_StretchDirection {
        get throws {
            try _interop.get_StretchDirection()
        }
    }

    /// Gets or sets the StretchDirection, which determines how scaling is applied to the contents of a Viewbox.
    /// - Returns: A StretchDirection, which determines how scaling is applied to the contents of a Viewbox. The default is **Both**.
    public func stretchDirection(_ value: WindowsUIXamlControls_StretchDirection) throws {
        try _interop.put_StretchDirection(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IViewboxStatics members

    /// Identifies the StretchDirection dependency property.
    /// - Returns: The identifier for the StretchDirection dependency property.
    public static var stretchDirectionProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iviewboxStatics.get_StretchDirectionProperty())
        }
    }

    /// Identifies the Stretch dependency property.
    /// - Returns: The identifier for the Stretch dependency property.
    public static var stretchProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iviewboxStatics.get_StretchProperty())
        }
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.Viewbox", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _iviewboxStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IViewboxStatics>? = nil

    internal static var _iviewboxStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IViewboxStatics> {
        get throws {
            try _iviewboxStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.Viewbox", id: CWinRT.SWRT_WindowsUIXamlControls_IViewboxStatics.iid)
            }
        }
    }
}