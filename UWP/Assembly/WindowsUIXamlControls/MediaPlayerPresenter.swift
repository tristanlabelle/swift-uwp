// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents an object that displays a MediaPlayer.
open class WindowsUIXamlControls_MediaPlayerPresenter: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.IMediaPlayerPresenterFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_MediaPlayerPresenter.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._imediaPlayerPresenterFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IMediaPlayerPresenter members

    /// Gets or sets a value that specifies if the MediaPlayerPresenter is rendering in full window mode.
    /// - Returns: **true** if the MediaPlayerPresenter is in full window mode; otherwise, **false**. The default is **false**.
    public var isFullWindow: Swift.Bool {
        get throws {
            try _imediaPlayerPresenter.get_IsFullWindow()
        }
    }

    /// Gets or sets a value that specifies if the MediaPlayerPresenter is rendering in full window mode.
    /// - Returns: **true** if the MediaPlayerPresenter is in full window mode; otherwise, **false**. The default is **false**.
    public func isFullWindow(_ value: Swift.Bool) throws {
        try _imediaPlayerPresenter.put_IsFullWindow(value)
    }

    /// Gets or sets the MediaPlayer instance used to render media.
    /// - Returns: The MediaPlayer instance used to render media.
    public var mediaPlayer: WindowsMediaPlayback_MediaPlayer {
        get throws {
            try COM.NullResult.unwrap(_imediaPlayerPresenter.get_MediaPlayer())
        }
    }

    /// Gets or sets the MediaPlayer instance used to render media.
    /// - Returns: The MediaPlayer instance used to render media.
    public func mediaPlayer(_ value: WindowsMediaPlayback_MediaPlayer?) throws {
        try _imediaPlayerPresenter.put_MediaPlayer(value)
    }

    /// Gets or sets a value that describes how an MediaPlayerPresenter should be stretched to fill the destination rectangle.
    /// - Returns: A value of the Stretch enumeration that specifies how the source visual media is rendered. The default value is **Uniform**.
    public var stretch: WindowsUIXamlMedia_Stretch {
        get throws {
            try _imediaPlayerPresenter.get_Stretch()
        }
    }

    /// Gets or sets a value that describes how an MediaPlayerPresenter should be stretched to fill the destination rectangle.
    /// - Returns: A value of the Stretch enumeration that specifies how the source visual media is rendered. The default value is **Uniform**.
    public func stretch(_ value: WindowsUIXamlMedia_Stretch) throws {
        try _imediaPlayerPresenter.put_Stretch(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IMediaPlayerPresenterStatics members

    /// Identifies the IsFullWindow dependency property.
    /// - Returns: The identifier for the IsFullWindow dependency property.
    public static var isFullWindowProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_imediaPlayerPresenterStatics.get_IsFullWindowProperty())
        }
    }

    /// Identifies the MediaPlayer dependency property.
    /// - Returns: The identifier for the MediaPlayer dependency property.
    public static var mediaPlayerProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_imediaPlayerPresenterStatics.get_MediaPlayerProperty())
        }
    }

    /// Identifies the Stretch dependency property.
    /// - Returns: The identifier for the Stretch dependency property.
    public static var stretchProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_imediaPlayerPresenterStatics.get_StretchProperty())
        }
    }

    // MARK: Implementation details

    private var _imediaPlayerPresenter_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IMediaPlayerPresenter>? = nil

    internal var _imediaPlayerPresenter: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IMediaPlayerPresenter> {
        get throws {
            try _imediaPlayerPresenter_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IMediaPlayerPresenter.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IMediaPlayerPresenter.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_IMediaPlayerPresenter>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _imediaPlayerPresenter_storage?.release()
    }

    private static var _imediaPlayerPresenterFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IMediaPlayerPresenterFactory>? = nil

    internal static var _imediaPlayerPresenterFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IMediaPlayerPresenterFactory> {
        get throws {
            try _imediaPlayerPresenterFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.MediaPlayerPresenter", id: CWinRT.SWRT_WindowsUIXamlControls_IMediaPlayerPresenterFactory.iid)
            }
        }
    }

    private static var _imediaPlayerPresenterStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IMediaPlayerPresenterStatics>? = nil

    internal static var _imediaPlayerPresenterStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IMediaPlayerPresenterStatics> {
        get throws {
            try _imediaPlayerPresenterStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.MediaPlayerPresenter", id: CWinRT.SWRT_WindowsUIXamlControls_IMediaPlayerPresenterStatics.iid)
            }
        }
    }
}