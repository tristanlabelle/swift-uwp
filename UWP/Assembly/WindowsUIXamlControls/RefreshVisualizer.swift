// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a control that provides animated state indicators for content refresh.
open class WindowsUIXamlControls_RefreshVisualizer: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.IRefreshVisualizerFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_RefreshVisualizer.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._irefreshVisualizerFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IRefreshVisualizer members

    /// Gets or sets the content of the visualizer.
    /// - Returns: The content of the visualizer.
    public var content: WindowsUIXaml_UIElement {
        get throws {
            try COM.NullResult.unwrap(_irefreshVisualizer.get_Content())
        }
    }

    /// Gets or sets the content of the visualizer.
    /// - Returns: The content of the visualizer.
    public func content(_ value: WindowsUIXaml_UIElement?) throws {
        try _irefreshVisualizer.put_Content(value)
    }

    /// Gets or sets a value that indicates the orientation of the visualizer.
    /// - Returns: A value of the enumeration that indicates the orientation of the visualizer. The default is **Top**.
    public var orientation: WindowsUIXamlControls_RefreshVisualizerOrientation {
        get throws {
            try _irefreshVisualizer.get_Orientation()
        }
    }

    /// Gets or sets a value that indicates the orientation of the visualizer.
    /// - Returns: A value of the enumeration that indicates the orientation of the visualizer. The default is **Top**.
    public func orientation(_ value: WindowsUIXamlControls_RefreshVisualizerOrientation) throws {
        try _irefreshVisualizer.put_Orientation(value)
    }

    /// Gets a value that indicates the state of the visualizer.
    /// - Returns: A value of the enumeration that indicates the state of the visualizer.
    public var state: WindowsUIXamlControls_RefreshVisualizerState {
        get throws {
            try _irefreshVisualizer.get_State()
        }
    }

    /// Occurs when an update of the content has been initiated.
    public func refreshRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIXamlControls_RefreshVisualizer?, WindowsUIXamlControls_RefreshRequestedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _irefreshVisualizer.add_RefreshRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: refreshRequested)
    }

    public func refreshRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _irefreshVisualizer.remove_RefreshRequested(token)
    }

    /// Occurs when the state of the visualizer changes.
    public func refreshStateChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIXamlControls_RefreshVisualizer?, WindowsUIXamlControls_RefreshStateChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _irefreshVisualizer.add_RefreshStateChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: refreshStateChanged)
    }

    public func refreshStateChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _irefreshVisualizer.remove_RefreshStateChanged(token)
    }

    /// Initiates an update of the content.
    public func requestRefresh() throws {
        try _irefreshVisualizer.requestRefresh()
    }

    // MARK: Windows.UI.Xaml.Controls.IRefreshVisualizerStatics members

    /// Identifies the Content dependency property.
    /// - Returns: The identifier for the Content dependency property.
    public static var contentProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_irefreshVisualizerStatics.get_ContentProperty())
        }
    }

    /// Identifies the InfoProvider dependency property.
    /// - Returns: The identifier for the InfoProvider dependency property.
    public static var infoProviderProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_irefreshVisualizerStatics.get_InfoProviderProperty())
        }
    }

    /// Identifies the Orientation dependency property.
    /// - Returns: The identifier for the Orientation dependency property.
    public static var orientationProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_irefreshVisualizerStatics.get_OrientationProperty())
        }
    }

    /// Identifies the State dependency property.
    /// - Returns: The identifier for the State dependency property.
    public static var stateProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_irefreshVisualizerStatics.get_StateProperty())
        }
    }

    // MARK: Implementation details

    private var _irefreshVisualizer_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IRefreshVisualizer>? = nil

    internal var _irefreshVisualizer: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IRefreshVisualizer> {
        get throws {
            try _irefreshVisualizer_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IRefreshVisualizer.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IRefreshVisualizer.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_IRefreshVisualizer>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _irefreshVisualizer_storage?.release()
    }

    private static var _irefreshVisualizerFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IRefreshVisualizerFactory>? = nil

    internal static var _irefreshVisualizerFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IRefreshVisualizerFactory> {
        get throws {
            try _irefreshVisualizerFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.RefreshVisualizer", id: CWinRT.SWRT_WindowsUIXamlControls_IRefreshVisualizerFactory.iid)
            }
        }
    }

    private static var _irefreshVisualizerStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IRefreshVisualizerStatics>? = nil

    internal static var _irefreshVisualizerStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IRefreshVisualizerStatics> {
        get throws {
            try _irefreshVisualizerStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.RefreshVisualizer", id: CWinRT.SWRT_WindowsUIXamlControls_IRefreshVisualizerStatics.iid)
            }
        }
    }
}