// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Arranges child elements of an ItemsControl into a single line that can be oriented horizontally or vertically. Supports pixel-based UI virtualization and grouped layouts.
public final class WindowsUIXamlControls_ItemsStackPanel: WindowsRuntime.WinRTImport<WindowsUIXamlControls_ItemsStackPanelProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlControls_ItemsStackPanelProjection.self))
    }

    // MARK: Windows.UI.Xaml.Controls.IItemsStackPanel members

    /// Gets or sets the size of the buffers for items outside the viewport, in multiples of the viewport size.
    /// - Returns: The size of the buffers for items outside the viewport, in multiples of the viewport size. The default is 4.0.
    public var cacheLength: Swift.Double {
        get throws {
            try _interop.get_CacheLength()
        }
    }

    /// Gets or sets the size of the buffers for items outside the viewport, in multiples of the viewport size.
    /// - Returns: The size of the buffers for items outside the viewport, in multiples of the viewport size. The default is 4.0.
    public func cacheLength(_ value: Swift.Double) throws {
        try _interop.put_CacheLength(value)
    }

    /// Gets the index in the data collection of the first item in the cache.
    /// - Returns: The index in the data collection of the first item in the cache. The default is -1.
    public var firstCacheIndex: Swift.Int32 {
        get throws {
            try _interop.get_FirstCacheIndex()
        }
    }

    /// Gets the index in the data collection of the first item on the screen. Partially visible items are considered to be on screen.
    /// - Returns: The index in the data collection of the first item on the screen. The default is -1.
    public var firstVisibleIndex: Swift.Int32 {
        get throws {
            try _interop.get_FirstVisibleIndex()
        }
    }

    /// Gets or sets a value that specifies where group headers are positioned in relation to the group.
    /// - Returns: An enumeration value that specifies where group headers are positioned in relation to the group. The default is **Top**.
    public var groupHeaderPlacement: WindowsUIXamlControlsPrimitives_GroupHeaderPlacement {
        get throws {
            try _interop.get_GroupHeaderPlacement()
        }
    }

    /// Gets or sets a value that specifies where group headers are positioned in relation to the group.
    /// - Returns: An enumeration value that specifies where group headers are positioned in relation to the group. The default is **Top**.
    public func groupHeaderPlacement(_ value: WindowsUIXamlControlsPrimitives_GroupHeaderPlacement) throws {
        try _interop.put_GroupHeaderPlacement(value)
    }

    /// Gets or sets the amount of space around a group.
    /// - Returns: The amount of space around a group as a Thickness value. Thickness is a structure that stores dimension values using pixel measures. The default is a uniform Thickness of 0.
    public var groupPadding: WindowsUIXaml_Thickness {
        get throws {
            try _interop.get_GroupPadding()
        }
    }

    /// Gets or sets the amount of space around a group.
    /// - Returns: The amount of space around a group as a Thickness value. Thickness is a structure that stores dimension values using pixel measures. The default is a uniform Thickness of 0.
    public func groupPadding(_ value: WindowsUIXaml_Thickness) throws {
        try _interop.put_GroupPadding(value)
    }

    /// Gets or sets a value that specifies scrolling behavior when the ItemsSource is updated.
    /// - Returns: A value of the enumeration. The default is **KeepItemsInView**.
    public var itemsUpdatingScrollMode: WindowsUIXamlControls_ItemsUpdatingScrollMode {
        get throws {
            try _interop.get_ItemsUpdatingScrollMode()
        }
    }

    /// Gets or sets a value that specifies scrolling behavior when the ItemsSource is updated.
    /// - Returns: A value of the enumeration. The default is **KeepItemsInView**.
    public func itemsUpdatingScrollMode(_ value: WindowsUIXamlControls_ItemsUpdatingScrollMode) throws {
        try _interop.put_ItemsUpdatingScrollMode(value)
    }

    /// Gets the index in the data collection of the last item in the cache.
    /// - Returns: The index in the data collection of the last item in the cache. The default is -1.
    public var lastCacheIndex: Swift.Int32 {
        get throws {
            try _interop.get_LastCacheIndex()
        }
    }

    /// Gets the index in the data collection of the last item on the screen. Partially visible items are considered to be on screen.
    /// - Returns: The index in the data collection of the last item on the screen. The default is -1.
    public var lastVisibleIndex: Swift.Int32 {
        get throws {
            try _interop.get_LastVisibleIndex()
        }
    }

    /// Gets or sets the dimension by which child elements are stacked.
    /// - Returns: One of the enumeration values that specifies the orientation of child elements. The default is **Vertical**.
    public var orientation: WindowsUIXamlControls_Orientation {
        get throws {
            try _interop.get_Orientation()
        }
    }

    /// Gets or sets the dimension by which child elements are stacked.
    /// - Returns: One of the enumeration values that specifies the orientation of child elements. The default is **Vertical**.
    public func orientation(_ value: WindowsUIXamlControls_Orientation) throws {
        try _interop.put_Orientation(value)
    }

    /// Gets a value that indicates whether items are panning forward or backward, or aren't panning.
    /// - Returns: An enumeration value that indicates whether the items are panning **Forward** or **Backward**, or **None** if the items are not panning.
    public var scrollingDirection: WindowsUIXamlControls_PanelScrollingDirection {
        get throws {
            try _interop.get_ScrollingDirection()
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IItemsStackPanel2 members

    /// Gets or sets a value that specifies whether a group header moves with the group when the group is panned vertically.
    /// - Returns: **true** if the group header moves with the group when the group is panned vertically; otherwise, **false**. The default is **true**.
    public var areStickyGroupHeadersEnabled: Swift.Bool {
        get throws {
            try _iitemsStackPanel2.get_AreStickyGroupHeadersEnabled()
        }
    }

    /// Gets or sets a value that specifies whether a group header moves with the group when the group is panned vertically.
    /// - Returns: **true** if the group header moves with the group when the group is panned vertically; otherwise, **false**. The default is **true**.
    public func areStickyGroupHeadersEnabled(_ value: Swift.Bool) throws {
        try _iitemsStackPanel2.put_AreStickyGroupHeadersEnabled(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IItemsStackPanelStatics members

    /// Identifies the CacheLength dependency property.
    /// - Returns: The identifier for the CacheLength dependency property.
    public static var cacheLengthProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iitemsStackPanelStatics.get_CacheLengthProperty())
        }
    }

    /// Identifies the GroupHeaderPlacement dependency property.
    /// - Returns: The identifier for the GroupHeaderPlacement dependency property.
    public static var groupHeaderPlacementProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iitemsStackPanelStatics.get_GroupHeaderPlacementProperty())
        }
    }

    /// Identifies the GroupPadding dependency property.
    /// - Returns: The identifier for the GroupPadding dependency property.
    public static var groupPaddingProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iitemsStackPanelStatics.get_GroupPaddingProperty())
        }
    }

    /// Identifies the Orientation dependency property.
    /// - Returns: The identifier for the Orientation dependency property.
    public static var orientationProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iitemsStackPanelStatics.get_OrientationProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IItemsStackPanelStatics2 members

    /// Identifies the AreStickyGroupHeadersEnabled dependency property.
    /// - Returns: The identifier for the AreStickyGroupHeadersEnabled dependency property.
    public static var areStickyGroupHeadersEnabledProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iitemsStackPanelStatics2.get_AreStickyGroupHeadersEnabledProperty())
        }
    }

    // MARK: Implementation details

    private var _iitemsStackPanel2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IItemsStackPanel2>? = nil

    internal var _iitemsStackPanel2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IItemsStackPanel2> {
        get throws {
            try _iitemsStackPanel2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IItemsStackPanel2.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IItemsStackPanel2.self)
            }
        }
    }

    deinit {
        _iitemsStackPanel2_storage?.release()
    }

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ItemsStackPanel", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _iitemsStackPanelStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IItemsStackPanelStatics>? = nil

    internal static var _iitemsStackPanelStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IItemsStackPanelStatics> {
        get throws {
            try _iitemsStackPanelStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ItemsStackPanel", id: CWinRT.SWRT_WindowsUIXamlControls_IItemsStackPanelStatics.iid)
            }
        }
    }

    private static var _iitemsStackPanelStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IItemsStackPanelStatics2>? = nil

    internal static var _iitemsStackPanelStatics2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IItemsStackPanelStatics2> {
        get throws {
            try _iitemsStackPanelStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ItemsStackPanel", id: CWinRT.SWRT_WindowsUIXamlControls_IItemsStackPanelStatics2.iid)
            }
        }
    }
}