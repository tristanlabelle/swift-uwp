// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides event data for the **ContextMenuOpening** event that exists on several text-related UI elements.
public final class WindowsUIXamlControls_ContextMenuEventArgs: WindowsRuntime.WinRTImport<WindowsUIXamlControls_ContextMenuEventArgsProjection> {
    // MARK: Windows.UI.Xaml.Controls.IContextMenuEventArgs members

    /// Gets the pixel offset of the text cursor horizontal position.
    /// - Returns: A value in pixels.
    public var cursorLeft: Swift.Double {
        get throws {
            try _interop.get_CursorLeft()
        }
    }

    /// Gets the pixel offset of the text cursor vertical position.
    /// - Returns: A value in pixels.
    public var cursorTop: Swift.Double {
        get throws {
            try _interop.get_CursorTop()
        }
    }

    /// Gets or sets a value that marks the routed event as handled. A **true** value for Handled prevents most handlers along the event route from handling the same event again.
    /// - Returns: **True** to mark the routed event handled. **False** to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is **false**.
    public var handled: Swift.Bool {
        get throws {
            try _interop.get_Handled()
        }
    }

    /// Gets or sets a value that marks the routed event as handled. A **true** value for Handled prevents most handlers along the event route from handling the same event again.
    /// - Returns: **True** to mark the routed event handled. **False** to leave the routed event unhandled, which permits the event to potentially route further and be acted on by other handlers. The default is **false**.
    public func handled(_ value: Swift.Bool) throws {
        try _interop.put_Handled(value)
    }

    // MARK: Implementation details
}