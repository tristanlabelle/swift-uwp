// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Specifies where items are placed in a control, usually an ItemsControl.
public final class WindowsUIXamlControls_ItemsPresenter: WindowsRuntime.WinRTImport<WindowsUIXamlControls_ItemsPresenterProjection>, WindowsUIXamlControlsPrimitives_IScrollSnapPointsInfoProtocol {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlControls_ItemsPresenterProjection.self))
    }

    // MARK: Windows.UI.Xaml.Controls.IItemsPresenter members

    /// Gets or sets the content for the items header.
    /// - Returns: The content of the items header. The default value is **null**.
    public var header: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Header())
        }
    }

    /// Gets or sets the content for the items header.
    /// - Returns: The content of the items header. The default value is **null**.
    public func header(_ value: WindowsRuntime.IInspectable?) throws {
        try _interop.put_Header(value)
    }

    /// Gets or sets the DataTemplate used to display the content of the items header.
    /// - Returns: The template that specifies the visualization of the header object. The default is **null**.
    public var headerTemplate: WindowsUIXaml_DataTemplate {
        get throws {
            try COM.NullResult.unwrap(_interop.get_HeaderTemplate())
        }
    }

    /// Gets or sets the DataTemplate used to display the content of the items header.
    /// - Returns: The template that specifies the visualization of the header object. The default is **null**.
    public func headerTemplate(_ value: WindowsUIXaml_DataTemplate?) throws {
        try _interop.put_HeaderTemplate(value)
    }

    /// Gets or sets the collection of Transition style elements that apply to the header of an ItemsPresenter.
    /// - Returns: The collection of Transition style elements that apply to the header of an ItemsPresenter.
    public var headerTransitions: WindowsUIXamlMediaAnimation_TransitionCollection {
        get throws {
            try COM.NullResult.unwrap(_interop.get_HeaderTransitions())
        }
    }

    /// Gets or sets the collection of Transition style elements that apply to the header of an ItemsPresenter.
    /// - Returns: The collection of Transition style elements that apply to the header of an ItemsPresenter.
    public func headerTransitions(_ value: WindowsUIXamlMediaAnimation_TransitionCollection?) throws {
        try _interop.put_HeaderTransitions(value)
    }

    /// Gets or sets the distance between the ItemsPresenter and its child objects.
    /// - Returns: The dimensions of the space between the presenter and its children as a Thickness value. Thickness is a structure that stores dimension values using pixel measures.
    public var padding: WindowsUIXaml_Thickness {
        get throws {
            try _interop.get_Padding()
        }
    }

    /// Gets or sets the distance between the ItemsPresenter and its child objects.
    /// - Returns: The dimensions of the space between the presenter and its children as a Thickness value. Thickness is a structure that stores dimension values using pixel measures.
    public func padding(_ value: WindowsUIXaml_Thickness) throws {
        try _interop.put_Padding(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IItemsPresenter2 members

    /// Gets or sets the content for the items footer.
    /// - Returns: The content of the items footer. The default is **null**.
    public var footer: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_iitemsPresenter2.get_Footer())
        }
    }

    /// Gets or sets the content for the items footer.
    /// - Returns: The content of the items footer. The default is **null**.
    public func footer(_ value: WindowsRuntime.IInspectable?) throws {
        try _iitemsPresenter2.put_Footer(value)
    }

    /// Gets or sets the DataTemplate used to display the content of the items header.
    /// - Returns: The template that specifies the visualization of the header object. The default is **null**.
    public var footerTemplate: WindowsUIXaml_DataTemplate {
        get throws {
            try COM.NullResult.unwrap(_iitemsPresenter2.get_FooterTemplate())
        }
    }

    /// Gets or sets the DataTemplate used to display the content of the items header.
    /// - Returns: The template that specifies the visualization of the header object. The default is **null**.
    public func footerTemplate(_ value: WindowsUIXaml_DataTemplate?) throws {
        try _iitemsPresenter2.put_FooterTemplate(value)
    }

    /// Gets or sets the collection of Transition style elements that apply to the footer of an ItemsPresenter.
    /// - Returns: The collection of Transition style elements that apply to the footer of an ItemsPresenter.
    public var footerTransitions: WindowsUIXamlMediaAnimation_TransitionCollection {
        get throws {
            try COM.NullResult.unwrap(_iitemsPresenter2.get_FooterTransitions())
        }
    }

    /// Gets or sets the collection of Transition style elements that apply to the footer of an ItemsPresenter.
    /// - Returns: The collection of Transition style elements that apply to the footer of an ItemsPresenter.
    public func footerTransitions(_ value: WindowsUIXamlMediaAnimation_TransitionCollection?) throws {
        try _iitemsPresenter2.put_FooterTransitions(value)
    }

    // MARK: Windows.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo members

    /// Gets a value that indicates whether the horizontal snap points for the ItemsPresenter are equidistant from each other.
    /// - Returns: **True** if the horizontal snap points for the ItemsPresenter are equidistant from each other; otherwise, **false**.
    public var areHorizontalSnapPointsRegular: Swift.Bool {
        get throws {
            try _iscrollSnapPointsInfo.get_AreHorizontalSnapPointsRegular()
        }
    }

    /// Gets a value that indicates whether the vertical snap points for the ItemsPresenter are equidistant from each other.
    /// - Returns: **True** if the vertical snap points for the ItemsPresenter are equidistant from each other; otherwise, **false**.
    public var areVerticalSnapPointsRegular: Swift.Bool {
        get throws {
            try _iscrollSnapPointsInfo.get_AreVerticalSnapPointsRegular()
        }
    }

    /// Occurs when the horizontal snap points change.
    public func horizontalSnapPointsChanged(adding handler: WindowsFoundation_EventHandler<WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _iscrollSnapPointsInfo.add_HorizontalSnapPointsChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: horizontalSnapPointsChanged)
    }

    public func horizontalSnapPointsChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _iscrollSnapPointsInfo.remove_HorizontalSnapPointsChanged(token)
    }

    /// Occurs when the vertical snap points change.
    public func verticalSnapPointsChanged(adding handler: WindowsFoundation_EventHandler<WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _iscrollSnapPointsInfo.add_VerticalSnapPointsChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: verticalSnapPointsChanged)
    }

    public func verticalSnapPointsChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _iscrollSnapPointsInfo.remove_VerticalSnapPointsChanged(token)
    }

    /// Returns a read-only collection of numbers that represent the snap points for the specified orientation.
    /// - Parameter orientation: The orientation of the requested snap points.
    /// - Parameter alignment: The alignment used by the caller when applying the requested snap points.
    /// - Returns: A read-only collection of numbers that represent the snap points for the specified orientation, or an empty collection when no snap points are present.
    public func getIrregularSnapPoints(_ orientation: WindowsUIXamlControls_Orientation, _ alignment: WindowsUIXamlControlsPrimitives_SnapPointsAlignment) throws -> WindowsFoundationCollections_IVectorView<Swift.Float> {
        try COM.NullResult.unwrap(_iscrollSnapPointsInfo.getIrregularSnapPoints(orientation, alignment))
    }

    /// Returns an original offset and interval for equidistant snap points for the specified orientation.
    /// - Parameter orientation: The orientation of the requested snap points.
    /// - Parameter alignment: The alignment used by the caller when applying the requested snap points.
    /// - Parameter offset: The offset of the first snap point.
    /// - Returns: The interval between equidistant snap points for the specified orientation or 0 when no snap points are present.
    public func getRegularSnapPoints(_ orientation: WindowsUIXamlControls_Orientation, _ alignment: WindowsUIXamlControlsPrimitives_SnapPointsAlignment, _ offset: inout Swift.Float) throws -> Swift.Float {
        try _iscrollSnapPointsInfo.getRegularSnapPoints(orientation, alignment, &offset)
    }

    // MARK: Windows.UI.Xaml.Controls.IItemsPresenterStatics members

    /// Identifies the Header dependency property.
    /// - Returns: The identifier for the Header dependency property.
    public static var headerProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iitemsPresenterStatics.get_HeaderProperty())
        }
    }

    /// Identifies the HeaderTemplate dependency property.
    /// - Returns: The identifier for the HeaderTemplate dependency property.
    public static var headerTemplateProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iitemsPresenterStatics.get_HeaderTemplateProperty())
        }
    }

    /// Identifies the HeaderTransitions dependency property.
    /// - Returns: The identifier for the HeaderTransitions dependency property.
    public static var headerTransitionsProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iitemsPresenterStatics.get_HeaderTransitionsProperty())
        }
    }

    /// Identifies the Padding dependency property.
    /// - Returns: The identifier for the Padding dependency property.
    public static var paddingProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iitemsPresenterStatics.get_PaddingProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IItemsPresenterStatics2 members

    /// Identifies the Footer dependency property.
    /// - Returns: The identifier for the Footer dependency property.
    public static var footerProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iitemsPresenterStatics2.get_FooterProperty())
        }
    }

    /// Identifies the FooterTemplate dependency property.
    /// - Returns: The identifier for the FooterTemplate dependency property.
    public static var footerTemplateProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iitemsPresenterStatics2.get_FooterTemplateProperty())
        }
    }

    /// Identifies the FooterTransitions dependency property.
    /// - Returns: The identifier for the FooterTransitions dependency property.
    public static var footerTransitionsProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iitemsPresenterStatics2.get_FooterTransitionsProperty())
        }
    }

    // MARK: Implementation details

    private var _iitemsPresenter2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IItemsPresenter2>? = nil

    internal var _iitemsPresenter2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IItemsPresenter2> {
        get throws {
            try _iitemsPresenter2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IItemsPresenter2.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IItemsPresenter2.self)
            }
        }
    }

    private var _iscrollSnapPointsInfo_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControlsPrimitives_IScrollSnapPointsInfo>? = nil

    internal var _iscrollSnapPointsInfo: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControlsPrimitives_IScrollSnapPointsInfo> {
        get throws {
            try _iscrollSnapPointsInfo_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIXamlControlsPrimitives_IScrollSnapPointsInfo.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControlsPrimitives_IScrollSnapPointsInfo.self)
            }
        }
    }

    deinit {
        _iitemsPresenter2_storage?.release()
        _iscrollSnapPointsInfo_storage?.release()
    }

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ItemsPresenter", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _iitemsPresenterStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IItemsPresenterStatics>? = nil

    internal static var _iitemsPresenterStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IItemsPresenterStatics> {
        get throws {
            try _iitemsPresenterStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ItemsPresenter", id: CWinRT.SWRT_WindowsUIXamlControls_IItemsPresenterStatics.iid)
            }
        }
    }

    private static var _iitemsPresenterStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IItemsPresenterStatics2>? = nil

    internal static var _iitemsPresenterStatics2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IItemsPresenterStatics2> {
        get throws {
            try _iitemsPresenterStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.ItemsPresenter", id: CWinRT.SWRT_WindowsUIXamlControls_IItemsPresenterStatics2.iid)
            }
        }
    }
}