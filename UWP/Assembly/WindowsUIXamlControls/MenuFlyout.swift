// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a flyout that displays a menu of commands.
open class WindowsUIXamlControls_MenuFlyout: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.IMenuFlyoutFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControls_MenuFlyout.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._imenuFlyoutFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IMenuFlyout members

    /// Gets the collection used to generate the content of the menu.
    /// - Returns: The collection that is used to generate the content of the menu, if it exists; otherwise, **null**. The default is an empty collection.
    public var items: WindowsFoundationCollections_IVector<WindowsUIXamlControls_MenuFlyoutItemBase?> {
        get throws {
            try COM.NullResult.unwrap(_imenuFlyout.get_Items())
        }
    }

    /// Gets or sets the style that is used when rendering the MenuFlyout.
    /// - Returns: The style that is used when rendering the MenuFlyout.
    public var menuFlyoutPresenterStyle: WindowsUIXaml_Style {
        get throws {
            try COM.NullResult.unwrap(_imenuFlyout.get_MenuFlyoutPresenterStyle())
        }
    }

    /// Gets or sets the style that is used when rendering the MenuFlyout.
    /// - Returns: The style that is used when rendering the MenuFlyout.
    public func menuFlyoutPresenterStyle(_ value: WindowsUIXaml_Style?) throws {
        try _imenuFlyout.put_MenuFlyoutPresenterStyle(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IMenuFlyout2 members

    /// Shows the flyout placed at the specified offset in relation to the specified target element.
    /// - Parameter targetElement: The element to use as the flyout's placement target.
    /// - Parameter point: The point at which to offset the flyout from the specified target element.
    public func showAt(_ targetElement: WindowsUIXaml_UIElement?, _ point: WindowsFoundation_Point) throws {
        try _imenuFlyout2.showAt(targetElement, point)
    }

    // MARK: Windows.UI.Xaml.Controls.IMenuFlyoutStatics members

    /// Identifies the MenuFlyoutPresenterStyle dependency property.
    /// - Returns: The identifier for the MenuFlyoutPresenterStyle dependency property.
    public static var menuFlyoutPresenterStyleProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_imenuFlyoutStatics.get_MenuFlyoutPresenterStyleProperty())
        }
    }

    // MARK: Implementation details

    private var _imenuFlyout_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IMenuFlyout>? = nil

    internal var _imenuFlyout: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IMenuFlyout> {
        get throws {
            try _imenuFlyout_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IMenuFlyout.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IMenuFlyout.self)
            }
        }
    }

    private var _imenuFlyout2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IMenuFlyout2>? = nil

    internal var _imenuFlyout2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IMenuFlyout2> {
        get throws {
            try _imenuFlyout2_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IMenuFlyout2.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IMenuFlyout2.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_IMenuFlyout>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _imenuFlyout_storage?.release()
        _imenuFlyout2_storage?.release()
    }

    private static var _imenuFlyoutFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IMenuFlyoutFactory>? = nil

    internal static var _imenuFlyoutFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IMenuFlyoutFactory> {
        get throws {
            try _imenuFlyoutFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.MenuFlyout", id: CWinRT.SWRT_WindowsUIXamlControls_IMenuFlyoutFactory.iid)
            }
        }
    }

    private static var _imenuFlyoutStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IMenuFlyoutStatics>? = nil

    internal static var _imenuFlyoutStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IMenuFlyoutStatics> {
        get throws {
            try _imenuFlyoutStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.MenuFlyout", id: CWinRT.SWRT_WindowsUIXamlControls_IMenuFlyoutStatics.iid)
            }
        }
    }
}