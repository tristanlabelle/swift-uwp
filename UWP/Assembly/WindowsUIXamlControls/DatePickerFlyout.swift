// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a control that allows a user to pick a date.
public final class WindowsUIXamlControls_DatePickerFlyout: WindowsRuntime.WinRTImport<WindowsUIXamlControls_DatePickerFlyoutProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlControls_DatePickerFlyoutProjection.self))
    }

    // MARK: Windows.UI.Xaml.Controls.IDatePickerFlyout members

    /// Gets or sets the calendar system to use.
    /// - Returns: The name of the calendar system to use. For a list of supported calendar systems, see CalendarIdentifiers.
    public var calendarIdentifier: Swift.String {
        get throws {
            try _interop.get_CalendarIdentifier()
        }
    }

    /// Gets or sets the calendar system to use.
    /// - Returns: The name of the calendar system to use. For a list of supported calendar systems, see CalendarIdentifiers.
    public func calendarIdentifier(_ value: Swift.String) throws {
        try _interop.put_CalendarIdentifier(value)
    }

    /// Gets or sets the date currently set in the date picker.
    /// - Returns: The date currently set in the picker.
    public var date: WindowsFoundation_DateTime {
        get throws {
            try _interop.get_Date()
        }
    }

    /// Gets or sets the date currently set in the date picker.
    /// - Returns: The date currently set in the picker.
    public func date(_ value: WindowsFoundation_DateTime) throws {
        try _interop.put_Date(value)
    }

    /// Gets or sets a value that indicates whether the day selector is shown.
    /// - Returns: True if the day selector is shown; otherwise, false. The default is true.
    public var dayVisible: Swift.Bool {
        get throws {
            try _interop.get_DayVisible()
        }
    }

    /// Gets or sets a value that indicates whether the day selector is shown.
    /// - Returns: True if the day selector is shown; otherwise, false. The default is true.
    public func dayVisible(_ value: Swift.Bool) throws {
        try _interop.put_DayVisible(value)
    }

    /// Gets or sets the maximum Gregorian year available for picking.
    /// - Returns: The maximum Gregorian year available for picking.S
    public var maxYear: WindowsFoundation_DateTime {
        get throws {
            try _interop.get_MaxYear()
        }
    }

    /// Gets or sets the maximum Gregorian year available for picking.
    /// - Returns: The maximum Gregorian year available for picking.S
    public func maxYear(_ value: WindowsFoundation_DateTime) throws {
        try _interop.put_MaxYear(value)
    }

    /// Gets or sets the minimum Gregorian year available for picking.
    /// - Returns: The minimum Gregorian year available for picking.
    public var minYear: WindowsFoundation_DateTime {
        get throws {
            try _interop.get_MinYear()
        }
    }

    /// Gets or sets the minimum Gregorian year available for picking.
    /// - Returns: The minimum Gregorian year available for picking.
    public func minYear(_ value: WindowsFoundation_DateTime) throws {
        try _interop.put_MinYear(value)
    }

    /// Gets or sets a value that indicates whether the month selector is shown.
    /// - Returns: True if the month selector is shown; otherwise, false. The default is true.
    public var monthVisible: Swift.Bool {
        get throws {
            try _interop.get_MonthVisible()
        }
    }

    /// Gets or sets a value that indicates whether the month selector is shown.
    /// - Returns: True if the month selector is shown; otherwise, false. The default is true.
    public func monthVisible(_ value: Swift.Bool) throws {
        try _interop.put_MonthVisible(value)
    }

    /// Gets or sets a value that indicates whether the year selector is shown.
    /// - Returns: True if the year selector is shown; otherwise, false. The default is true.
    public var yearVisible: Swift.Bool {
        get throws {
            try _interop.get_YearVisible()
        }
    }

    /// Gets or sets a value that indicates whether the year selector is shown.
    /// - Returns: True if the year selector is shown; otherwise, false. The default is true.
    public func yearVisible(_ value: Swift.Bool) throws {
        try _interop.put_YearVisible(value)
    }

    /// Occurs when a date has been picked by the user.
    public func datePicked(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIXamlControls_DatePickerFlyout?, WindowsUIXamlControls_DatePickedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_DatePicked(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: datePicked)
    }

    public func datePicked(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_DatePicked(token)
    }

    /// Begins an asynchronous operation to show the date picker placed in relation to the specified element.
    /// - Parameter target: The element to use as the flyout's placement target.
    /// - Returns: An asynchronous operation
    public func showAtAsync(_ target: WindowsUIXaml_FrameworkElement?) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundation_IReference<WindowsFoundation_DateTime>?> {
        try COM.NullResult.unwrap(_interop.showAtAsync(target))
    }

    // MARK: Windows.UI.Xaml.Controls.IDatePickerFlyout2 members

    /// Gets or sets the display format for the day value.
    /// - Returns: The display format for the day value.
    public var dayFormat: Swift.String {
        get throws {
            try _idatePickerFlyout2.get_DayFormat()
        }
    }

    /// Gets or sets the display format for the day value.
    /// - Returns: The display format for the day value.
    public func dayFormat(_ value: Swift.String) throws {
        try _idatePickerFlyout2.put_DayFormat(value)
    }

    /// Gets or sets the display format for the month value.
    /// - Returns: The display format for the month value.
    public var monthFormat: Swift.String {
        get throws {
            try _idatePickerFlyout2.get_MonthFormat()
        }
    }

    /// Gets or sets the display format for the month value.
    /// - Returns: The display format for the month value.
    public func monthFormat(_ value: Swift.String) throws {
        try _idatePickerFlyout2.put_MonthFormat(value)
    }

    /// Gets or sets the display format for the year value.
    /// - Returns: The display format for the year value.
    public var yearFormat: Swift.String {
        get throws {
            try _idatePickerFlyout2.get_YearFormat()
        }
    }

    /// Gets or sets the display format for the year value.
    /// - Returns: The display format for the year value.
    public func yearFormat(_ value: Swift.String) throws {
        try _idatePickerFlyout2.put_YearFormat(value)
    }

    // MARK: Windows.UI.Xaml.Controls.IDatePickerFlyoutStatics2 members

    /// Identifies the DayFormat dependency property.
    /// - Returns: The identifier for the DayFormat dependency property.
    public static var dayFormatProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_idatePickerFlyoutStatics2.get_DayFormatProperty())
        }
    }

    /// Identifies the MonthFormat dependency property.
    /// - Returns: The identifier for the MonthFormat dependency property.
    public static var monthFormatProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_idatePickerFlyoutStatics2.get_MonthFormatProperty())
        }
    }

    /// Identifies the YearFormat dependency property.
    /// - Returns: The identifier for the YearFormat dependency property.
    public static var yearFormatProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_idatePickerFlyoutStatics2.get_YearFormatProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IDatePickerFlyoutStatics members

    /// Gets the identifier for the CalendarIdentifier dependency property.
    /// - Returns: The identifier for the CalendarIdentifier dependency property.
    public static var calendarIdentifierProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_idatePickerFlyoutStatics.get_CalendarIdentifierProperty())
        }
    }

    /// Gets the identifier for the Date dependency property.
    /// - Returns: The identifier for the Date dependency property.
    public static var dateProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_idatePickerFlyoutStatics.get_DateProperty())
        }
    }

    /// Gets the identifier for the DayVisible dependency property.
    /// - Returns: The identifier for the DayVisible dependency property.
    public static var dayVisibleProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_idatePickerFlyoutStatics.get_DayVisibleProperty())
        }
    }

    /// Gets the identifier for the MaxYear dependency property.
    /// - Returns: The identifier for the MaxYear dependency property.
    public static var maxYearProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_idatePickerFlyoutStatics.get_MaxYearProperty())
        }
    }

    /// Gets the identifier for the MinYear dependency property.
    /// - Returns: The identifier for the MinYear dependency property.
    public static var minYearProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_idatePickerFlyoutStatics.get_MinYearProperty())
        }
    }

    /// Gets the identifier for the MonthVisible dependency property.
    /// - Returns: The identifier for the MonthVisible dependency property.
    public static var monthVisibleProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_idatePickerFlyoutStatics.get_MonthVisibleProperty())
        }
    }

    /// Gets the identifier for the YearVisible dependency property.
    /// - Returns: The identifier for the YearVisible dependency property.
    public static var yearVisibleProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_idatePickerFlyoutStatics.get_YearVisibleProperty())
        }
    }

    // MARK: Implementation details

    private var _idatePickerFlyout2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IDatePickerFlyout2>? = nil

    internal var _idatePickerFlyout2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IDatePickerFlyout2> {
        get throws {
            try _idatePickerFlyout2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IDatePickerFlyout2.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IDatePickerFlyout2.self)
            }
        }
    }

    deinit {
        _idatePickerFlyout2_storage?.release()
    }

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.DatePickerFlyout", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _idatePickerFlyoutStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IDatePickerFlyoutStatics2>? = nil

    internal static var _idatePickerFlyoutStatics2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IDatePickerFlyoutStatics2> {
        get throws {
            try _idatePickerFlyoutStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.DatePickerFlyout", id: CWinRT.SWRT_WindowsUIXamlControls_IDatePickerFlyoutStatics2.iid)
            }
        }
    }

    private static var _idatePickerFlyoutStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IDatePickerFlyoutStatics>? = nil

    internal static var _idatePickerFlyoutStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IDatePickerFlyoutStatics> {
        get throws {
            try _idatePickerFlyoutStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.DatePickerFlyout", id: CWinRT.SWRT_WindowsUIXamlControls_IDatePickerFlyoutStatics.iid)
            }
        }
    }
}