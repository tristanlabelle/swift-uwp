// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides a base class for all built-in and custom buttons on an InkToolbar.
open class WindowsUIXamlControls_InkToolbarToolButton: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.IInkToolbarToolButton members

    /// Gets or sets whether a glyph is shown on the InkToolbarToolButton to indicate the presence of an ink stroke configuration flyout.
    /// - Returns: **true** if the glyph is shown; otherwise, **false**.
    public var isExtensionGlyphShown: Swift.Bool {
        get throws {
            try _iinkToolbarToolButton.get_IsExtensionGlyphShown()
        }
    }

    /// Gets or sets whether a glyph is shown on the InkToolbarToolButton to indicate the presence of an ink stroke configuration flyout.
    /// - Returns: **true** if the glyph is shown; otherwise, **false**.
    public func isExtensionGlyphShown(_ value: Swift.Bool) throws {
        try _iinkToolbarToolButton.put_IsExtensionGlyphShown(value)
    }

    /// Gets the type of built-in or custom tool associated with the InkToolbarToolButton.
    /// - Returns: The type of tool.
    public var toolKind: WindowsUIXamlControls_InkToolbarTool {
        get throws {
            try _iinkToolbarToolButton.get_ToolKind()
        }
    }

    // MARK: Windows.UI.Xaml.Controls.IInkToolbarToolButtonStatics members

    /// Identifies the IsExtensionGlyphShown dependency property.
    /// - Returns: The identifier for the IsExtensionGlyphShown dependency property.
    public static var isExtensionGlyphShownProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iinkToolbarToolButtonStatics.get_IsExtensionGlyphShownProperty())
        }
    }

    // MARK: Implementation details

    private var _iinkToolbarToolButton_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarToolButton>? = nil

    internal var _iinkToolbarToolButton: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarToolButton> {
        get throws {
            try _iinkToolbarToolButton_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarToolButton.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarToolButton.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarToolButton>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _iinkToolbarToolButton_storage?.release()
    }

    private static var _iinkToolbarToolButtonFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarToolButtonFactory>? = nil

    internal static var _iinkToolbarToolButtonFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarToolButtonFactory> {
        get throws {
            try _iinkToolbarToolButtonFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.InkToolbarToolButton", id: CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarToolButtonFactory.iid)
            }
        }
    }

    private static var _iinkToolbarToolButtonStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarToolButtonStatics>? = nil

    internal static var _iinkToolbarToolButtonStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarToolButtonStatics> {
        get throws {
            try _iinkToolbarToolButtonStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.InkToolbarToolButton", id: CWinRT.SWRT_WindowsUIXamlControls_IInkToolbarToolButtonStatics.iid)
            }
        }
    }
}