// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Used to either chain multiple effects together, or to start effects simultaneously.
public final class WindowsDevicesLightsEffects_LampArrayEffectPlaylist: WindowsRuntime.WinRTImport<WindowsDevicesLightsEffects_LampArrayEffectPlaylistProjection>, WindowsFoundationCollections_IVectorViewProtocol, WindowsFoundationCollections_IIterableProtocol {
    public typealias T = WindowsDevicesLightsEffects_ILampArrayEffect?

    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsDevicesLightsEffects_LampArrayEffectPlaylistProjection.self))
    }

    // MARK: Windows.Devices.Lights.Effects.ILampArrayEffectPlaylist members

    /// Gets or sets the starting behavior for the effects.
    /// - Returns: A lamp array effect start mode specifying the starting behavior for the effects. The default is Sequential.
    public var effectStartMode: WindowsDevicesLightsEffects_LampArrayEffectStartMode {
        get throws {
            try _interop.get_EffectStartMode()
        }
    }

    /// Gets or sets the starting behavior for the effects.
    /// - Returns: A lamp array effect start mode specifying the starting behavior for the effects. The default is Sequential.
    public func effectStartMode(_ value: WindowsDevicesLightsEffects_LampArrayEffectStartMode) throws {
        try _interop.put_EffectStartMode(value)
    }

    /// Gets or sets the number of occurrences that this playlist will play.
    /// - Returns: Number of occurrences. Default is 0.
    public var occurrences: Swift.Int32 {
        get throws {
            try _interop.get_Occurrences()
        }
    }

    /// Gets or sets the number of occurrences that this playlist will play.
    /// - Returns: Number of occurrences. Default is 0.
    public func occurrences(_ value: Swift.Int32) throws {
        try _interop.put_Occurrences(value)
    }

    /// Gets or sets the repetition behavior for playlist.
    /// - Returns: A LampArrayRepetitionMode value. Default is **Occurrences**.
    public var repetitionMode: WindowsDevicesLightsEffects_LampArrayRepetitionMode {
        get throws {
            try _interop.get_RepetitionMode()
        }
    }

    /// Gets or sets the repetition behavior for playlist.
    /// - Returns: A LampArrayRepetitionMode value. Default is **Occurrences**.
    public func repetitionMode(_ value: WindowsDevicesLightsEffects_LampArrayRepetitionMode) throws {
        try _interop.put_RepetitionMode(value)
    }

    /// Appends the effect to the end of the playlist.
    /// - Parameter effect: Effect to append to the playlist.
    public func append(_ effect: WindowsDevicesLightsEffects_ILampArrayEffect?) throws {
        try _interop.append(effect)
    }

    /// Overrides the zIndex for all contained effects.
    /// - Parameter zIndex: The overriding zIndex.
    public func overrideZIndex(_ zIndex: Swift.Int32) throws {
        try _interop.overrideZIndex(zIndex)
    }

    /// Starts this playlist from the beginning, unless it was previously paused, which will then resuming playing from the paused position.
    public func start() throws {
        try _interop.start()
    }

    /// Stops playing this playlist.
    public func stop() throws {
        try _interop.stop()
    }

    /// Pauses the playlist, and persists the last state set by the internally playing effect.
    public func pause() throws {
        try _interop.pause()
    }

    // MARK: Windows.Foundation.Collections.IVectorView`1<Windows.Devices.Lights.Effects.ILampArrayEffect> members

    /// Gets the size of (the number of elements in) the playlist.
    /// - Returns: The size of (the number of elements in) the playlist.
    public var size: Swift.UInt32 {
        get throws {
            try _ivectorView.get_Size()
        }
    }

    /// Retrieves the lamp array effect at the specified index within a playlist.
    /// - Parameter index: The zero-based index of the lamp array effect to retrieve.
    /// - Returns: An ILampArrayEffect representing the lamp array effect at the specified index within the playlist.
    public func getAt(_ index: Swift.UInt32) throws -> WindowsDevicesLightsEffects_ILampArrayEffect? {
        try _ivectorView.getAt(index)
    }

    /// Retrieves the index, within a playlist, of the specified lamp array effect.
    /// - Parameter value: An ILampArrayEffect representing the lamp array effect whose index to retrieve.
    /// - Parameter index: The index of the effect within the playlist, as an out parameter. If the *value* is found, then the method will update *index* with the zero-based index of the effect within the playlist.
    /// - Returns: `true` if the effect is found, otherwise `false`.
    public func indexOf(_ value: WindowsDevicesLightsEffects_ILampArrayEffect?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        try _ivectorView.indexOf(value, &index)
    }

    /// Retrieves a range of lamp array effects, beginning at the specified index within a playlist.
    /// - Parameter startIndex: The zero-based index of the first lamp array effect to retrieve.
    /// - Parameter items: An array of ILampArrayEffect, which the method will update with the requested effects.
    /// - Returns: The number of effects returned in *items*.
    public func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsDevicesLightsEffects_ILampArrayEffect?]) throws -> Swift.UInt32 {
        try _ivectorView.getMany(startIndex, items)
    }

    // MARK: Windows.Foundation.Collections.IIterable`1<Windows.Devices.Lights.Effects.ILampArrayEffect> members

    /// Retrieves an iterator representing the first item in a lamp array effect playlist.
    /// - Returns: An iterator (of ILampArrayEffect ) representing the first item in a lamp array effect playlist.
    public func first() throws -> WindowsFoundationCollections_IIterator<WindowsDevicesLightsEffects_ILampArrayEffect?> {
        try COM.NullResult.unwrap(_iiterable.first())
    }

    // MARK: Windows.Devices.Lights.Effects.ILampArrayEffectPlaylistStatics members

    public static func startAll(_ value: WindowsFoundationCollections_IIterable<WindowsDevicesLightsEffects_LampArrayEffectPlaylist?>?) throws {
        try _ilampArrayEffectPlaylistStatics.startAll(value)
    }

    public static func stopAll(_ value: WindowsFoundationCollections_IIterable<WindowsDevicesLightsEffects_LampArrayEffectPlaylist?>?) throws {
        try _ilampArrayEffectPlaylistStatics.stopAll(value)
    }

    public static func pauseAll(_ value: WindowsFoundationCollections_IIterable<WindowsDevicesLightsEffects_LampArrayEffectPlaylist?>?) throws {
        try _ilampArrayEffectPlaylistStatics.pauseAll(value)
    }

    // MARK: Implementation details

    private var _ivectorView_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IVectorView_WindowsDevicesLightsEffects_ILampArrayEffect>? = nil

    internal var _ivectorView: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IVectorView_WindowsDevicesLightsEffects_ILampArrayEffect> {
        get throws {
            try _ivectorView_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundationCollections_IVectorView_WindowsDevicesLightsEffects_ILampArrayEffect.iid).cast(to: CWinRT.SWRT_WindowsFoundationCollections_IVectorView_WindowsDevicesLightsEffects_ILampArrayEffect.self)
            }
        }
    }

    private var _iiterable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsDevicesLightsEffects_ILampArrayEffect>? = nil

    internal var _iiterable: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsDevicesLightsEffects_ILampArrayEffect> {
        get throws {
            try _iiterable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsDevicesLightsEffects_ILampArrayEffect.iid).cast(to: CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsDevicesLightsEffects_ILampArrayEffect.self)
            }
        }
    }

    deinit {
        _ivectorView_storage?.release()
        _iiterable_storage?.release()
    }

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Lights.Effects.LampArrayEffectPlaylist", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _ilampArrayEffectPlaylistStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesLightsEffects_ILampArrayEffectPlaylistStatics>? = nil

    internal static var _ilampArrayEffectPlaylistStatics: COM.COMInterop<CWinRT.SWRT_WindowsDevicesLightsEffects_ILampArrayEffectPlaylistStatics> {
        get throws {
            try _ilampArrayEffectPlaylistStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Lights.Effects.LampArrayEffectPlaylist", id: CWinRT.SWRT_WindowsDevicesLightsEffects_ILampArrayEffectPlaylistStatics.iid)
            }
        }
    }
}