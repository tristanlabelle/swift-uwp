// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// This effect provides an entry-point for developer-defined custom effects into the effect framework; allowing it to be included and scheduled within playlists.
public final class WindowsDevicesLightsEffects_LampArrayCustomEffect: WindowsRuntime.WinRTImport<WindowsDevicesLightsEffects_LampArrayCustomEffectProjection>, WindowsDevicesLightsEffects_ILampArrayEffectProtocol {
    // MARK: Windows.Devices.Lights.Effects.ILampArrayCustomEffectFactory members

    public convenience init(_ lampArray: WindowsDevicesLights_LampArray?, _ lampIndexes: [Swift.Int32]) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ilampArrayCustomEffectFactory.createInstance(lampArray, lampIndexes)))
    }

    // MARK: Windows.Devices.Lights.Effects.ILampArrayCustomEffect members

    /// Gets or sets the duration of the effect.
    /// - Returns: Time value of the duration. Default value is 0.
    public var duration: WindowsFoundation_TimeSpan {
        get throws {
            try _interop.get_Duration()
        }
    }

    /// Gets or sets the duration of the effect.
    /// - Returns: Time value of the duration. Default value is 0.
    public func duration(_ value: WindowsFoundation_TimeSpan) throws {
        try _interop.put_Duration(value)
    }

    /// Gets or sets the interval between the triggering of the UpdateRequested event.  The supplied image will be displayed until the event is next triggered.
    /// - Returns: Time span value of the update interval. Default value is 0.
    public var updateInterval: WindowsFoundation_TimeSpan {
        get throws {
            try _interop.get_UpdateInterval()
        }
    }

    /// Gets or sets the interval between the triggering of the UpdateRequested event.  The supplied image will be displayed until the event is next triggered.
    /// - Returns: Time span value of the update interval. Default value is 0.
    public func updateInterval(_ value: WindowsFoundation_TimeSpan) throws {
        try _interop.put_UpdateInterval(value)
    }

    /// Event triggered by the system to indicate that lamp state should be modified.
    public func updateRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsDevicesLightsEffects_LampArrayCustomEffect?, WindowsDevicesLightsEffects_LampArrayUpdateRequestedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_UpdateRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: updateRequested)
    }

    public func updateRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_UpdateRequested(token)
    }

    // MARK: Windows.Devices.Lights.Effects.ILampArrayEffect members

    /// The global precedence for two effects that modify the same lamp.
    /// - Returns: Value of the global precedence. Default value is 0.
    public var zindex: Swift.Int32 {
        get throws {
            try _ilampArrayEffect.get_ZIndex()
        }
    }

    /// The global precedence for two effects that modify the same lamp.
    /// - Returns: Value of the global precedence. Default value is 0.
    public func zindex(_ value: Swift.Int32) throws {
        try _ilampArrayEffect.put_ZIndex(value)
    }

    // MARK: Implementation details

    private var _ilampArrayEffect_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesLightsEffects_ILampArrayEffect>? = nil

    internal var _ilampArrayEffect: COM.COMInterop<CWinRT.SWRT_WindowsDevicesLightsEffects_ILampArrayEffect> {
        get throws {
            try _ilampArrayEffect_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsDevicesLightsEffects_ILampArrayEffect.iid).cast(to: CWinRT.SWRT_WindowsDevicesLightsEffects_ILampArrayEffect.self)
            }
        }
    }

    deinit {
        _ilampArrayEffect_storage?.release()
    }

    private static var _ilampArrayCustomEffectFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesLightsEffects_ILampArrayCustomEffectFactory>? = nil

    internal static var _ilampArrayCustomEffectFactory: COM.COMInterop<CWinRT.SWRT_WindowsDevicesLightsEffects_ILampArrayCustomEffectFactory> {
        get throws {
            try _ilampArrayCustomEffectFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Lights.Effects.LampArrayCustomEffect", id: CWinRT.SWRT_WindowsDevicesLightsEffects_ILampArrayCustomEffectFactory.iid)
            }
        }
    }
}