// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Specifies an exact hardware representation used to scan out; such as the pixel encoding, bits per channel, color space, and HDR metadata format.
public final class WindowsDevicesDisplayCore_DisplayWireFormat: WindowsRuntime.WinRTImport<WindowsDevicesDisplayCore_DisplayWireFormatProjection> {
    // MARK: Windows.Devices.Display.Core.IDisplayWireFormatFactory members

    public convenience init(_ pixelEncoding: WindowsDevicesDisplayCore_DisplayWireFormatPixelEncoding, _ bitsPerChannel: Swift.Int32, _ colorSpace: WindowsDevicesDisplayCore_DisplayWireFormatColorSpace, _ eotf: WindowsDevicesDisplayCore_DisplayWireFormatEotf, _ hdrMetadata: WindowsDevicesDisplayCore_DisplayWireFormatHdrMetadata) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._idisplayWireFormatFactory.createInstance(pixelEncoding, bitsPerChannel, colorSpace, eotf, hdrMetadata)))
    }

    // MARK: Windows.Devices.Display.Core.IDisplayWireFormat members

    /// Gets the number of bits used for each channel, without regard for chroma subsampling.
    /// - Returns: A value containing the number of bits used for each channel, without regard for chroma subsampling.
    public var bitsPerChannel: Swift.Int32 {
        get throws {
            try _interop.get_BitsPerChannel()
        }
    }

    /// Gets the color format.
    /// - Returns: A DisplayWireFormatColorSpace value.
    public var colorSpace: WindowsDevicesDisplayCore_DisplayWireFormatColorSpace {
        get throws {
            try _interop.get_ColorSpace()
        }
    }

    /// Specifies the electro-optical transfer function (EOTF) that pixels are encoded for.
    public var eotf: WindowsDevicesDisplayCore_DisplayWireFormatEotf {
        get throws {
            try _interop.get_Eotf()
        }
    }

    /// Specifies the format for static or dynamic HDR mastering metadata.
    public var hdrMetadata: WindowsDevicesDisplayCore_DisplayWireFormatHdrMetadata {
        get throws {
            try _interop.get_HdrMetadata()
        }
    }

    /// Describes how pixels are encoded by the display pipeline, including chroma subsampling.
    public var pixelEncoding: WindowsDevicesDisplayCore_DisplayWireFormatPixelEncoding {
        get throws {
            try _interop.get_PixelEncoding()
        }
    }

    /// Reserved for future use.
    public var properties: WindowsFoundationCollections_IMapView<Foundation.UUID, WindowsRuntime.IInspectable?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Properties())
        }
    }

    // MARK: Windows.Devices.Display.Core.IDisplayWireFormatStatics members

    public static func createWithProperties(_ extraProperties: WindowsFoundationCollections_IIterable<WindowsFoundationCollections_IKeyValuePair<Foundation.UUID, WindowsRuntime.IInspectable?>?>?, _ pixelEncoding: WindowsDevicesDisplayCore_DisplayWireFormatPixelEncoding, _ bitsPerChannel: Swift.Int32, _ colorSpace: WindowsDevicesDisplayCore_DisplayWireFormatColorSpace, _ eotf: WindowsDevicesDisplayCore_DisplayWireFormatEotf, _ hdrMetadata: WindowsDevicesDisplayCore_DisplayWireFormatHdrMetadata) throws -> WindowsDevicesDisplayCore_DisplayWireFormat {
        try COM.NullResult.unwrap(_idisplayWireFormatStatics.createWithProperties(extraProperties, pixelEncoding, bitsPerChannel, colorSpace, eotf, hdrMetadata))
    }

    // MARK: Implementation details

    private static var _idisplayWireFormatFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesDisplayCore_IDisplayWireFormatFactory>? = nil

    internal static var _idisplayWireFormatFactory: COM.COMInterop<CWinRT.SWRT_WindowsDevicesDisplayCore_IDisplayWireFormatFactory> {
        get throws {
            try _idisplayWireFormatFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Display.Core.DisplayWireFormat", id: CWinRT.SWRT_WindowsDevicesDisplayCore_IDisplayWireFormatFactory.iid)
            }
        }
    }

    private static var _idisplayWireFormatStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesDisplayCore_IDisplayWireFormatStatics>? = nil

    internal static var _idisplayWireFormatStatics: COM.COMInterop<CWinRT.SWRT_WindowsDevicesDisplayCore_IDisplayWireFormatStatics> {
        get throws {
            try _idisplayWireFormatStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Display.Core.DisplayWireFormat", id: CWinRT.SWRT_WindowsDevicesDisplayCore_IDisplayWireFormatStatics.iid)
            }
        }
    }
}