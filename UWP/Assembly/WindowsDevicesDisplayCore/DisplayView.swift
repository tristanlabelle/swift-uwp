// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a group of DisplayPath objects that are logically cloned together.
public final class WindowsDevicesDisplayCore_DisplayView: WindowsRuntime.WinRTImport<WindowsDevicesDisplayCore_DisplayViewProjection> {
    // MARK: Windows.Devices.Display.Core.IDisplayView members

    /// The logical content resolution of this group of cloned DisplayPath objects. For a DisplayView in hardware clone, this will be the same value as each path's SourceResolution property.
    public var contentResolution: WindowsFoundation_IReference<WindowsGraphics_SizeInt32>? {
        get throws {
            try _interop.get_ContentResolution()
        }
    }

    /// The logical content resolution of this group of cloned DisplayPath objects. For a DisplayView in hardware clone, this will be the same value as each path's SourceResolution property.
    public func contentResolution(_ value: WindowsFoundation_IReference<WindowsGraphics_SizeInt32>?) throws {
        try _interop.put_ContentResolution(value)
    }

    /// Gets the set of paths making up this DisplayView.
    /// - Returns: A collection containing the paths making up this DisplayView.
    public var paths: WindowsFoundationCollections_IVectorView<WindowsDevicesDisplayCore_DisplayPath?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Paths())
        }
    }

    /// Reserved for future use.
    public var properties: WindowsFoundationCollections_IMap<Foundation.UUID, WindowsRuntime.IInspectable?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Properties())
        }
    }

    /// Sets a path in this view to be the "primary clone path" in the view, which causes clone-unaware apps to see the refresh rate and target properties of this path by default.
    /// - Parameter path: A path that is already present in this DisplayView.
    public func setPrimaryPath(_ path: WindowsDevicesDisplayCore_DisplayPath?) throws {
        try _interop.setPrimaryPath(path)
    }

    // MARK: Implementation details
}