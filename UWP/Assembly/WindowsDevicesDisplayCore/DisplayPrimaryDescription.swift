// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Describes a set of properties that are used for allocating DisplaySurface objects using CreatePrimary.
public final class WindowsDevicesDisplayCore_DisplayPrimaryDescription: WindowsRuntime.WinRTImport<WindowsDevicesDisplayCore_DisplayPrimaryDescriptionProjection> {
    // MARK: Windows.Devices.Display.Core.IDisplayPrimaryDescriptionFactory members

    public convenience init(_ width: Swift.UInt32, _ height: Swift.UInt32, _ pixelFormat: WindowsGraphicsDirectX_DirectXPixelFormat, _ colorSpace: WindowsGraphicsDirectX_DirectXColorSpace, _ isStereo: Swift.Bool, _ multisampleDescription: WindowsGraphicsDirectXDirect3D11_Direct3DMultisampleDescription) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._idisplayPrimaryDescriptionFactory.createInstance(width, height, pixelFormat, colorSpace, isStereo, multisampleDescription)))
    }

    // MARK: Windows.Devices.Display.Core.IDisplayPrimaryDescription members

    /// Gets the DXGI-compatible color space of a surface.
    /// - Returns: A DirectXColorSpace value.
    public var colorSpace: WindowsGraphicsDirectX_DirectXColorSpace {
        get throws {
            try _interop.get_ColorSpace()
        }
    }

    /// Gets the DXGI-compatible format of a surface.
    /// - Returns: A DirectXPixelFormat value.
    public var format: WindowsGraphicsDirectX_DirectXPixelFormat {
        get throws {
            try _interop.get_Format()
        }
    }

    /// Gets the height of a surface.
    /// - Returns: A value containing the height of a surface.
    public var height: Swift.UInt32 {
        get throws {
            try _interop.get_Height()
        }
    }

    /// Gets a value indicating whether the description is of a stereoscopic 3D surface.
    /// - Returns: `true` if the description is of a stereoscopic 3D surface, otherwise `false`.
    public var isStereo: Swift.Bool {
        get throws {
            try _interop.get_IsStereo()
        }
    }

    /// Gets the multisampling properties of a surface.
    /// - Returns: A Direct3DMultisampleDescription value specifying the multisampling properties of a surface.
    public var multisampleDescription: WindowsGraphicsDirectXDirect3D11_Direct3DMultisampleDescription {
        get throws {
            try _interop.get_MultisampleDescription()
        }
    }

    /// Reserved for future use.
    public var properties: WindowsFoundationCollections_IMapView<Foundation.UUID, WindowsRuntime.IInspectable?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Properties())
        }
    }

    /// Gets the width of a surface.
    /// - Returns: A value containing the width of a surface.
    public var width: Swift.UInt32 {
        get throws {
            try _interop.get_Width()
        }
    }

    // MARK: Windows.Devices.Display.Core.IDisplayPrimaryDescriptionStatics members

    public static func createWithProperties(_ extraProperties: WindowsFoundationCollections_IIterable<WindowsFoundationCollections_IKeyValuePair<Foundation.UUID, WindowsRuntime.IInspectable?>?>?, _ width: Swift.UInt32, _ height: Swift.UInt32, _ pixelFormat: WindowsGraphicsDirectX_DirectXPixelFormat, _ colorSpace: WindowsGraphicsDirectX_DirectXColorSpace, _ isStereo: Swift.Bool, _ multisampleDescription: WindowsGraphicsDirectXDirect3D11_Direct3DMultisampleDescription) throws -> WindowsDevicesDisplayCore_DisplayPrimaryDescription {
        try COM.NullResult.unwrap(_idisplayPrimaryDescriptionStatics.createWithProperties(extraProperties, width, height, pixelFormat, colorSpace, isStereo, multisampleDescription))
    }

    // MARK: Implementation details

    private static var _idisplayPrimaryDescriptionFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesDisplayCore_IDisplayPrimaryDescriptionFactory>? = nil

    internal static var _idisplayPrimaryDescriptionFactory: COM.COMInterop<CWinRT.SWRT_WindowsDevicesDisplayCore_IDisplayPrimaryDescriptionFactory> {
        get throws {
            try _idisplayPrimaryDescriptionFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Display.Core.DisplayPrimaryDescription", id: CWinRT.SWRT_WindowsDevicesDisplayCore_IDisplayPrimaryDescriptionFactory.iid)
            }
        }
    }

    private static var _idisplayPrimaryDescriptionStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesDisplayCore_IDisplayPrimaryDescriptionStatics>? = nil

    internal static var _idisplayPrimaryDescriptionStatics: COM.COMInterop<CWinRT.SWRT_WindowsDevicesDisplayCore_IDisplayPrimaryDescriptionStatics> {
        get throws {
            try _idisplayPrimaryDescriptionStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Display.Core.DisplayPrimaryDescription", id: CWinRT.SWRT_WindowsDevicesDisplayCore_IDisplayPrimaryDescriptionStatics.iid)
            }
        }
    }
}