// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a random-access collection of file name extensions.
public final class WindowsStoragePickers_FileExtensionVector: WindowsRuntime.WinRTImport<WindowsStoragePickers_FileExtensionVectorProjection>, WindowsFoundationCollections_IVectorProtocol, WindowsFoundationCollections_IIterableProtocol {
    public typealias T = Swift.String

    // MARK: Windows.Foundation.Collections.IVector`1<String> members

    /// Gets the number of file name extensions in the collection.
    /// - Returns: The number of file name extensions.
    public var size: Swift.UInt32 {
        get throws {
            try _interop.get_Size()
        }
    }

    /// Retrieves the file name extension at the specified index in the collection.
    /// - Parameter index: The zero-based index of the file name extension to retrieve.
    /// - Returns: The file name extension at the specified index.
    public func getAt(_ index: Swift.UInt32) throws -> Swift.String {
        try _interop.getAt(index)
    }

    /// Retrieves an immutable view of the collection of file name extensions.
    /// - Returns: The view of the collection.
    public func getView() throws -> WindowsFoundationCollections_IVectorView<Swift.String> {
        try COM.NullResult.unwrap(_interop.getView())
    }

    /// Retrieves the index of a specified file name extension in the collection.
    /// - Parameter value: The file name extension to find in the collection.
    /// - Parameter index: The zero-based index of the file name extension if found. This parameter is set to zero if the file name extension is not found.
    /// - Returns: True if the file name extension is found; otherwise FALSE.
    public func indexOf(_ value: Swift.String, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        try _interop.indexOf(value, &index)
    }

    /// Sets the file name extension at the specified index of the collection.
    /// - Parameter index: The zero-based index of the location at which to set the file name extension.
    /// - Parameter value: The file name extension.
    public func setAt(_ index: Swift.UInt32, _ value: Swift.String) throws {
        try _interop.setAt(index, value)
    }

    /// Inserts a file name extension into a collection at a specified index.
    /// - Parameter index: Zero-based index of the location at which to insert the file name extension.
    /// - Parameter value: The file name extension to insert.
    public func insertAt(_ index: Swift.UInt32, _ value: Swift.String) throws {
        try _interop.insertAt(index, value)
    }

    /// Removes the file name extension at the specified index in the collection.
    /// - Parameter index: The zero-based index of the file name extension to remove.
    public func removeAt(_ index: Swift.UInt32) throws {
        try _interop.removeAt(index)
    }

    /// Appends a file name extension to the end of the collection.
    /// - Parameter value: The file name extension to append.
    public func append(_ value: Swift.String) throws {
        try _interop.append(value)
    }

    /// Removes the last file name extension from the collection.
    public func removeAtEnd() throws {
        try _interop.removeAtEnd()
    }

    /// Removes all file name extensions from the collection.
    public func clear() throws {
        try _interop.clear()
    }

    /// Retrieves the file name extensions that start at the specified index in the collection.
    /// - Parameter startIndex: The zero-based index of the start of the file name extensions in the collection to retrieve.
    /// - Parameter items: The file name extensions in the collection that start at *startIndex*.
    /// - Returns: The number of items retrieved.
    public func getMany(_ startIndex: Swift.UInt32, _ items: [Swift.String]) throws -> Swift.UInt32 {
        try _interop.getMany(startIndex, items)
    }

    /// Replaces all file name extensions in the collection with the specified file name extensions.
    /// - Parameter items: The collection of file name extensions to put in the vector.
    public func replaceAll(_ items: [Swift.String]) throws {
        try _interop.replaceAll(items)
    }

    // MARK: Windows.Foundation.Collections.IIterable`1<String> members

    /// Retrieves an iterator that iterates through the file name extensions in the collection.
    /// - Returns: The iterator.
    public func first() throws -> WindowsFoundationCollections_IIterator<Swift.String> {
        try COM.NullResult.unwrap(_iiterable.first())
    }

    // MARK: Implementation details

    private var _iiterable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_String>? = nil

    internal var _iiterable: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_String> {
        get throws {
            try _iiterable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundationCollections_IIterable_String.iid).cast(to: CWinRT.SWRT_WindowsFoundationCollections_IIterable_String.self)
            }
        }
    }

    deinit {
        _iiterable_storage?.release()
    }
}