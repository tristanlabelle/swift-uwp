// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a trigger that applies a set of actions (animation storyboards) in response to an event. Not commonly used. See Remarks.
public final class WindowsUIXaml_EventTrigger: WindowsRuntime.WinRTImport<WindowsUIXaml_EventTriggerProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXaml_EventTriggerProjection.self))
    }

    // MARK: Windows.UI.Xaml.IEventTrigger members

    /// Gets the collection of BeginStoryboard objects that this EventTrigger maintains.
    /// - Returns: The existing TriggerActionCollection.
    public var actions: WindowsUIXaml_TriggerActionCollection {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Actions())
        }
    }

    /// Gets or sets the name of the event that initiates the trigger. Not commonly set, see Remarks.
    /// - Returns: The name or identifier of the event.
    public var routedEvent: WindowsUIXaml_RoutedEvent {
        get throws {
            try COM.NullResult.unwrap(_interop.get_RoutedEvent())
        }
    }

    /// Gets or sets the name of the event that initiates the trigger. Not commonly set, see Remarks.
    /// - Returns: The name or identifier of the event.
    public func routedEvent(_ value: WindowsUIXaml_RoutedEvent?) throws {
        try _interop.put_RoutedEvent(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.EventTrigger", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}