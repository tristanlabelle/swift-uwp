// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides data for the UnhandledException event.
public final class WindowsUIXaml_UnhandledExceptionEventArgs: WindowsRuntime.WinRTImport<WindowsUIXaml_UnhandledExceptionEventArgsProjection> {
    // MARK: Windows.UI.Xaml.IUnhandledExceptionEventArgs members

    /// Gets the **HRESULT** code associated with the unhandled exception.
    /// - Returns: The **HRESULT** code (for VisualÂ C++ component extensions (C++/CX)), or a mapped common language runtime (CLR)  System.Exception.
    public var exception: COM.HResult {
        get throws {
            try _interop.get_Exception()
        }
    }

    /// Gets or sets a value that indicates whether the exception is handled.
    /// - Returns: **true** to mark the exception as handled, which indicates that the event system should not process it further; otherwise, **false**.
    public var handled: Swift.Bool {
        get throws {
            try _interop.get_Handled()
        }
    }

    /// Gets or sets a value that indicates whether the exception is handled.
    /// - Returns: **true** to mark the exception as handled, which indicates that the event system should not process it further; otherwise, **false**.
    public func handled(_ value: Swift.Bool) throws {
        try _interop.put_Handled(value)
    }

    /// Gets the message string as passed by the originating unhandled exception.
    /// - Returns: The message string, which may be useful for debugging.
    public var message: Swift.String {
        get throws {
            try _interop.get_Message()
        }
    }

    // MARK: Implementation details
}