// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the UI window of an application.
public final class WindowsUIXaml_FrameworkView: WindowsRuntime.WinRTImport<WindowsUIXaml_FrameworkViewProjection>, WindowsApplicationModelCore_IFrameworkViewProtocol {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXaml_FrameworkViewProjection.self))
    }

    // MARK: Windows.ApplicationModel.Core.IFrameworkView members

    /// Initializes the view.
    /// - Parameter applicationView: The view object.
    public func initialize(_ applicationView: WindowsApplicationModelCore_CoreApplicationView?) throws {
        try _iframeworkView.initialize(applicationView)
    }

    /// Associates a Window with a view.
    /// - Parameter window: The Window to associate.
    public func setWindow(_ window: WindowsUICore_CoreWindow?) throws {
        try _iframeworkView.setWindow(window)
    }

    /// Loads the view.
    /// - Parameter entryPoint: An identifier, such as a class name from the application code, that provides additional information about the view.
    public func load(_ entryPoint: Swift.String) throws {
        try _iframeworkView.load(entryPoint)
    }

    /// Passes execution to the view provider.
    public func run() throws {
        try _iframeworkView.run()
    }

    /// Returns the view to the uninitialized state.
    public func uninitialize() throws {
        try _iframeworkView.uninitialize()
    }

    // MARK: Implementation details

    private var _iframeworkView_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelCore_IFrameworkView>? = nil

    internal var _iframeworkView: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelCore_IFrameworkView> {
        get throws {
            try _iframeworkView_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelCore_IFrameworkView.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelCore_IFrameworkView.self)
            }
        }
    }

    deinit {
        _iframeworkView_storage?.release()
    }

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.FrameworkView", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}