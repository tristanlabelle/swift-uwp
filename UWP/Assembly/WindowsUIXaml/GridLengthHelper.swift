// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides helper methods to evaluate or set GridLength values. C# and Microsoft Visual Basic code should use methods of GridLength instead.
public final class WindowsUIXaml_GridLengthHelper: WindowsRuntime.WinRTImport<WindowsUIXaml_GridLengthHelperProjection> {
    // MARK: Windows.UI.Xaml.IGridLengthHelperStatics members

    /// Gets a static GridLength value that corresponds to the special "Auto" value. C# and Microsoft Visual Basic code should use GridLength.Auto instead.
    /// - Returns: A GridLength value that corresponds to the special "Auto" value.
    public static var auto: WindowsUIXaml_GridLength {
        get throws {
            try _igridLengthHelperStatics.get_Auto()
        }
    }

    /// Creates a new GridLength value based on a fixed number of pixels. C# and Microsoft Visual Basic code should use the GridLength(Double) constructor instead.
    /// - Parameter pixels: The pixel height or width to specify.
    /// - Returns: The created GridLength.
    public static func fromPixels(_ pixels: Swift.Double) throws -> WindowsUIXaml_GridLength {
        try _igridLengthHelperStatics.fromPixels(pixels)
    }

    /// Creates a new GridLength value based on a possible number of pixels, and a GridUnitType. C# and Microsoft Visual Basic code should use the  GridLength(Double,GridUnitType) constructor instead.
    /// - Parameter value: A numeric value. This might be a pixel height or width to specify, if *type* is specified as **Pixel**, or a factor, if *type* is specified as **Star**. This value is ignored if *type* is specified as **Auto**.
    /// - Parameter type: A value of the enumeration that specifies which unit type the GridLength represents.
    /// - Returns: The created GridLength.
    public static func fromValueAndType(_ value: Swift.Double, _ type: WindowsUIXaml_GridUnitType) throws -> WindowsUIXaml_GridLength {
        try _igridLengthHelperStatics.fromValueAndType(value, type)
    }

    /// Returns whether the evaluated GridLength is the special "Absolute" value. C# and Microsoft Visual Basic code should use GridLength.IsAbsolute instead.
    /// - Parameter target: The GridLength to evaluate.
    /// - Returns: **true** if the evaluated GridLength is the special "Absolute" value; otherwise, **false**.
    public static func getIsAbsolute(_ target: WindowsUIXaml_GridLength) throws -> Swift.Bool {
        try _igridLengthHelperStatics.getIsAbsolute(target)
    }

    /// Returns whether the evaluated GridLength is the special "Auto" value. C# and Microsoft Visual Basic code should use GridLength.IsAuto instead.
    /// - Parameter target: The GridLength to evaluate.
    /// - Returns: **true** if the evaluated GridLength is the special "Auto" value; otherwise, **false**.
    public static func getIsAuto(_ target: WindowsUIXaml_GridLength) throws -> Swift.Bool {
        try _igridLengthHelperStatics.getIsAuto(target)
    }

    /// Returns whether the evaluated GridLength is the special "*" (star sizing) value. C# and Microsoft Visual Basic code should use GridLength.IsStar instead.
    /// - Parameter target: The GridLength to evaluate.
    /// - Returns: **true** if the evaluated GridLength is the special "*" (star sizing) value; otherwise, **false**.
    public static func getIsStar(_ target: WindowsUIXaml_GridLength) throws -> Swift.Bool {
        try _igridLengthHelperStatics.getIsStar(target)
    }

    /// Provides comparison of the values of two GridLength values. C# and Microsoft Visual Basic code should use the Equality operator or GridLength.Equals method instead.
    /// - Parameter target: The first GridLength to compare.
    /// - Parameter value: The second GridLength to compare.
    /// - Returns: **true** if the two GridLength values hold equivalent values as their structure value information; otherwise, **false**.
    public static func equals(_ target: WindowsUIXaml_GridLength, _ value: WindowsUIXaml_GridLength) throws -> Swift.Bool {
        try _igridLengthHelperStatics.equals(target, value)
    }

    // MARK: Implementation details

    private static var _igridLengthHelperStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXaml_IGridLengthHelperStatics>? = nil

    internal static var _igridLengthHelperStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXaml_IGridLengthHelperStatics> {
        get throws {
            try _igridLengthHelperStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.GridLengthHelper", id: CWinRT.SWRT_WindowsUIXaml_IGridLengthHelperStatics.iid)
            }
        }
    }
}