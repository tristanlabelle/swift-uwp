// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the base class for state triggers.
open class WindowsUIXaml_StateTriggerBase: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.IStateTriggerBaseFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXaml_StateTriggerBase.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._istateTriggerBaseFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.IStateTriggerBaseProtected members

    /// Sets the value that indicates whether the state trigger is active.
    /// - Parameter IsActive: **true** if the system should apply the trigger; otherwise, **false**.
    public func setActive(_ IsActive: Swift.Bool) throws {
        try _istateTriggerBaseProtected.setActive(IsActive)
    }

    // MARK: Implementation details

    private var _istateTriggerBase_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXaml_IStateTriggerBase>? = nil

    internal var _istateTriggerBase: COM.COMInterop<CWinRT.SWRT_WindowsUIXaml_IStateTriggerBase> {
        get throws {
            try _istateTriggerBase_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXaml_IStateTriggerBase.iid).cast(to: CWinRT.SWRT_WindowsUIXaml_IStateTriggerBase.self)
            }
        }
    }

    private var _istateTriggerBaseProtected_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXaml_IStateTriggerBaseProtected>? = nil

    internal var _istateTriggerBaseProtected: COM.COMInterop<CWinRT.SWRT_WindowsUIXaml_IStateTriggerBaseProtected> {
        get throws {
            try _istateTriggerBaseProtected_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXaml_IStateTriggerBaseProtected.iid).cast(to: CWinRT.SWRT_WindowsUIXaml_IStateTriggerBaseProtected.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXaml_IStateTriggerBase>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _istateTriggerBase_storage?.release()
        _istateTriggerBaseProtected_storage?.release()
    }

    private static var _istateTriggerBaseFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXaml_IStateTriggerBaseFactory>? = nil

    internal static var _istateTriggerBaseFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXaml_IStateTriggerBaseFactory> {
        get throws {
            try _istateTriggerBaseFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.StateTriggerBase", id: CWinRT.SWRT_WindowsUIXaml_IStateTriggerBaseFactory.iid)
            }
        }
    }
}