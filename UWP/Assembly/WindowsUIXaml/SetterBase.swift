// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the base class for value setters.
open class WindowsUIXaml_SetterBase: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.ISetterBase members

    /// Gets a value that indicates whether this object is in an immutable state.
    /// - Returns: **true** if this object is in an immutable state; otherwise, **false**.
    public var isSealed: Swift.Bool {
        get throws {
            try _isetterBase.get_IsSealed()
        }
    }

    // MARK: Implementation details

    private var _isetterBase_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXaml_ISetterBase>? = nil

    internal var _isetterBase: COM.COMInterop<CWinRT.SWRT_WindowsUIXaml_ISetterBase> {
        get throws {
            try _isetterBase_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXaml_ISetterBase.iid).cast(to: CWinRT.SWRT_WindowsUIXaml_ISetterBase.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXaml_ISetterBase>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _isetterBase_storage?.release()
    }

    private static var _isetterBaseFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXaml_ISetterBaseFactory>? = nil

    internal static var _isetterBaseFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXaml_ISetterBaseFactory> {
        get throws {
            try _isetterBaseFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.SetterBase", id: CWinRT.SWRT_WindowsUIXaml_ISetterBaseFactory.iid)
            }
        }
    }
}