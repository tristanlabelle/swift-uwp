// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Specifies the different types of Bluetooth LE advertisement payloads.
public struct WindowsDevicesBluetoothAdvertisement_BluetoothLEAdvertisementType: RawRepresentable, Hashable, Codable {
    public var rawValue: Swift.Int32

    public init(rawValue: Swift.Int32 = 0) {
        self.rawValue = rawValue
    }

    /// The advertisement is undirected and indicates that the device is connectable and scannable. This advertisement type can carry data.
    public static let connectableUndirected = Self()

    /// The advertisement is directed and indicates that the device is connectable but not scannable. This advertisement type cannot carry data.
    public static let connectableDirected = Self(rawValue: 1)

    /// The advertisement is undirected and indicates that the device is scannable but not connectable. This advertisement type can carry data.
    public static let scannableUndirected = Self(rawValue: 2)

    /// The advertisement is undirected and indicates that the device is not connectable nor scannable. This advertisement type can carry data.
    public static let nonConnectableUndirected = Self(rawValue: 3)

    /// This advertisement is a scan response to a scan request issued for a scannable advertisement. This advertisement type can carry data.
    public static let scanResponse = Self(rawValue: 4)

    /// This advertisement is a 5.0 extended advertisement. This advertisement type may have different properties, and is not necessarily directed, connected, scannable, nor a scan response.
    public static let extended = Self(rawValue: 5)
}