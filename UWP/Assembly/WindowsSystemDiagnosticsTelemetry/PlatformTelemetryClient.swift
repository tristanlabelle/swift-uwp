// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides functionality to register a client with the Connected User Experience and Telemetry component.
public enum WindowsSystemDiagnosticsTelemetry_PlatformTelemetryClient {
    // MARK: Windows.System.Diagnostics.Telemetry.IPlatformTelemetryClientStatics members

    /// Registers a client with the Connected User Experience and Telemetry component.
    /// - Parameter id: Unique string value that identifies the client.
    public static func register(_ id: Swift.String) throws -> WindowsSystemDiagnosticsTelemetry_PlatformTelemetryRegistrationResult {
        try COM.NullResult.unwrap(_iplatformTelemetryClientStatics.register(id))
    }

    /// Registers a client with the Connected User Experience and Telemetry component.
    /// - Parameter id: Unique string value that identifies the client.
    /// - Parameter settings: PlatformTelemetryRegistrationSettings for registering a client.
    public static func register(_ id: Swift.String, _ settings: WindowsSystemDiagnosticsTelemetry_PlatformTelemetryRegistrationSettings?) throws -> WindowsSystemDiagnosticsTelemetry_PlatformTelemetryRegistrationResult {
        try COM.NullResult.unwrap(_iplatformTelemetryClientStatics.registerWithSettings(id, settings))
    }

    // MARK: Implementation details

    private static var _iplatformTelemetryClientStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsSystemDiagnosticsTelemetry_IPlatformTelemetryClientStatics>? = nil

    internal static var _iplatformTelemetryClientStatics: COM.COMInterop<CWinRT.SWRT_WindowsSystemDiagnosticsTelemetry_IPlatformTelemetryClientStatics> {
        get throws {
            try _iplatformTelemetryClientStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.System.Diagnostics.Telemetry.PlatformTelemetryClient", id: CWinRT.SWRT_WindowsSystemDiagnosticsTelemetry_IPlatformTelemetryClientStatics.iid)
            }
        }
    }
}