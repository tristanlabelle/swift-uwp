// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Describes the settings for registering an app with the Connected User Experience and Telemetry component.
public final class WindowsSystemDiagnosticsTelemetry_PlatformTelemetryRegistrationSettings: WindowsRuntime.WinRTImport<WindowsSystemDiagnosticsTelemetry_PlatformTelemetryRegistrationSettingsProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsSystemDiagnosticsTelemetry_PlatformTelemetryRegistrationSettingsProjection.self))
    }

    // MARK: Windows.System.Diagnostics.Telemetry.IPlatformTelemetryRegistrationSettings members

    /// Gets the storage size of the client.
    /// - Returns: Storage size of the client, in bytes. Value must be greater than 0 and less than 100 megabytes.
    public var storageSize: Swift.UInt32 {
        get throws {
            try _interop.get_StorageSize()
        }
    }

    /// Gets the storage size of the client.
    /// - Returns: Storage size of the client, in bytes. Value must be greater than 0 and less than 100 megabytes.
    public func storageSize(_ value: Swift.UInt32) throws {
        try _interop.put_StorageSize(value)
    }

    /// Gets the upload quota size of the client.
    /// - Returns: Upload quota for the client, in bytes. A value of 0 indicates no upload limitation.
    public var uploadQuotaSize: Swift.UInt32 {
        get throws {
            try _interop.get_UploadQuotaSize()
        }
    }

    /// Gets the upload quota size of the client.
    /// - Returns: Upload quota for the client, in bytes. A value of 0 indicates no upload limitation.
    public func uploadQuotaSize(_ value: Swift.UInt32) throws {
        try _interop.put_UploadQuotaSize(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.System.Diagnostics.Telemetry.PlatformTelemetryRegistrationSettings", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}