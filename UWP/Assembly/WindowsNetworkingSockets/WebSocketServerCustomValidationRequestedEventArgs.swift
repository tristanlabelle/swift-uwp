// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides data for a ServerCustomValidationRequested event on a WebSocket. This event occurs when a new, secure connection to a WebSocket is being made, and gives your code the opportunity to perform custom validation of the server certificates before the connection has been established.
public final class WindowsNetworkingSockets_WebSocketServerCustomValidationRequestedEventArgs: WindowsRuntime.WinRTImport<WindowsNetworkingSockets_WebSocketServerCustomValidationRequestedEventArgsProjection> {
    // MARK: Windows.Networking.Sockets.IWebSocketServerCustomValidationRequestedEventArgs members

    /// The certificate being offered by the server for validation.
    /// - Returns: The server certificate.
    public var serverCertificate: WindowsSecurityCryptographyCertificates_Certificate {
        get throws {
            try COM.NullResult.unwrap(_interop.get_ServerCertificate())
        }
    }

    /// Gets the category of an error that occurred making an SSL connection with this WebSocket server.
    /// - Returns: A value describing the severity of errors encountered so far in validating this connection.
    public var serverCertificateErrorSeverity: WindowsNetworkingSockets_SocketSslErrorSeverity {
        get throws {
            try _interop.get_ServerCertificateErrorSeverity()
        }
    }

    /// A list of errors encountered in validating the server certificate.
    /// - Returns: A list of enumeration values giving validation results.
    public var serverCertificateErrors: WindowsFoundationCollections_IVectorView<WindowsSecurityCryptographyCertificates_ChainValidationResult> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_ServerCertificateErrors())
        }
    }

    /// Gets a list of intermediate certificates from the validation process currently being validated.
    /// - Returns: A list of intermediate certificates.
    public var serverIntermediateCertificates: WindowsFoundationCollections_IVectorView<WindowsSecurityCryptographyCertificates_Certificate?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_ServerIntermediateCertificates())
        }
    }

    /// Rejects validation of this server. Call this method when your validation has determined that you should not connect to the server.
    public func reject() throws {
        try _interop.reject()
    }

    /// Gets the Deferral object that manages the validation operation. Call this method when you begin your validation operation, and call Deferral.Complete when the operation is complete.
    /// - Returns: The Deferral object.
    public func getDeferral() throws -> WindowsFoundation_Deferral {
        try COM.NullResult.unwrap(_interop.getDeferral())
    }

    // MARK: Implementation details
}