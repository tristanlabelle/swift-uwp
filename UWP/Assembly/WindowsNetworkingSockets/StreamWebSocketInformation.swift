// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides socket information on a StreamWebSocket object.
public final class WindowsNetworkingSockets_StreamWebSocketInformation: WindowsRuntime.WinRTImport<WindowsNetworkingSockets_StreamWebSocketInformationProjection>, WindowsNetworkingSockets_IWebSocketInformationProtocol, WindowsNetworkingSockets_IWebSocketInformation2Protocol {
    // MARK: Windows.Networking.Sockets.IWebSocketInformation members

    /// Gets bandwidth information for network data transfer on a StreamWebSocket object.
    /// - Returns: Bandwidth information for network data transfer on a StreamWebSocket object.
    public var bandwidthStatistics: WindowsNetworkingSockets_BandwidthStatistics {
        get throws {
            try _interop.get_BandwidthStatistics()
        }
    }

    /// Gets the IP address associated with a StreamWebSocket object.
    /// - Returns: The IP address associated with a StreamWebSocket object.
    public var localAddress: WindowsNetworking_HostName {
        get throws {
            try COM.NullResult.unwrap(_interop.get_LocalAddress())
        }
    }

    /// <!--Info taken from published (now removed) StreamWebSocket.Protocol page - needs review.-->
    /// - Returns: The sub-protocol negotiated with the server during WebSocket handshake.
    public var `protocol`: Swift.String {
        get throws {
            try _interop.get_Protocol()
        }
    }

    // MARK: Windows.Networking.Sockets.IWebSocketInformation2 members

    /// Gets the certificate provided by the server when a secure WebSocket connection has been established.
    /// - Returns: The server certificate.
    public var serverCertificate: WindowsSecurityCryptographyCertificates_Certificate {
        get throws {
            try COM.NullResult.unwrap(_iwebSocketInformation2.get_ServerCertificate())
        }
    }

    /// Gets the category of an error that occurred making an SSL connection with a StreamWebSocket server.
    /// - Returns: The category of error on an SSL connection.
    public var serverCertificateErrorSeverity: WindowsNetworkingSockets_SocketSslErrorSeverity {
        get throws {
            try _iwebSocketInformation2.get_ServerCertificateErrorSeverity()
        }
    }

    /// Gets a list of the errors that occurred while establishing a secure StreamWebSocket connection.
    /// - Returns: A list of values describing secure connection errors.
    public var serverCertificateErrors: WindowsFoundationCollections_IVectorView<WindowsSecurityCryptographyCertificates_ChainValidationResult> {
        get throws {
            try COM.NullResult.unwrap(_iwebSocketInformation2.get_ServerCertificateErrors())
        }
    }

    /// Gets the intermediate certificates sent by the server during SSL negotiation when making an SSL connection with a StreamWebSocket server.
    /// - Returns: The set of certificates sent by the server during SSL negotiation.
    public var serverIntermediateCertificates: WindowsFoundationCollections_IVectorView<WindowsSecurityCryptographyCertificates_Certificate?> {
        get throws {
            try COM.NullResult.unwrap(_iwebSocketInformation2.get_ServerIntermediateCertificates())
        }
    }

    // MARK: Implementation details

    private var _iwebSocketInformation2_storage: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingSockets_IWebSocketInformation2>? = nil

    internal var _iwebSocketInformation2: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingSockets_IWebSocketInformation2> {
        get throws {
            try _iwebSocketInformation2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsNetworkingSockets_IWebSocketInformation2.iid).cast(to: CWinRT.SWRT_WindowsNetworkingSockets_IWebSocketInformation2.self)
            }
        }
    }

    deinit {
        _iwebSocketInformation2_storage?.release()
    }
}