// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides information on the transferred socket from the Socket Broker.
public final class WindowsNetworkingSockets_SocketActivityInformation: WindowsRuntime.WinRTImport<WindowsNetworkingSockets_SocketActivityInformationProjection> {
    // MARK: Windows.Networking.Sockets.ISocketActivityInformation members

    /// Get the context associated while transferring ownership of the socket.
    /// - Returns: The context associated while transferring ownership of the socket.
    public var context: WindowsNetworkingSockets_SocketActivityContext {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Context())
        }
    }

    /// Based on the socket type, the app can reclaim the ownership of the appropriate DatagramSocket.
    /// - Returns: The DatagramSocket to reclaim.
    public var datagramSocket: WindowsNetworkingSockets_DatagramSocket {
        get throws {
            try COM.NullResult.unwrap(_interop.get_DatagramSocket())
        }
    }

    /// A unique string for this app used to identify the transferred socket. This is passed by the app while transferring the socket ownership to the service.
    /// - Returns: A unique string to identify the transferred socket.
    public var id: Swift.String {
        get throws {
            try _interop.get_Id()
        }
    }

    /// Gets a SocketActivityKind enumeration value that identifies socket kind.
    /// - Returns: The socket kind.
    public var socketKind: WindowsNetworkingSockets_SocketActivityKind {
        get throws {
            try _interop.get_SocketKind()
        }
    }

    /// Based on the socket type, the app can reclaim the ownership of the appropriate StreamSocket.
    /// - Returns: The StreamSocket to reclaim.
    public var streamSocket: WindowsNetworkingSockets_StreamSocket {
        get throws {
            try COM.NullResult.unwrap(_interop.get_StreamSocket())
        }
    }

    /// Based on the socket type, the app can reclaim the ownership of the appropriate StreamSocketListener.
    /// - Returns: The StreamSocketListener to reclaim.
    public var streamSocketListener: WindowsNetworkingSockets_StreamSocketListener {
        get throws {
            try COM.NullResult.unwrap(_interop.get_StreamSocketListener())
        }
    }

    /// The background task ID used while transferring ownership of the socket.
    /// - Returns: The background task ID.
    public var taskId: Foundation.UUID {
        get throws {
            try _interop.get_TaskId()
        }
    }

    // MARK: Windows.Networking.Sockets.ISocketActivityInformationStatics members

    /// Gets a list of all the sockets transferred to the socket brokering service by this app.
    /// - Returns: A list of all the sockets transferred to the socket brokering service by this app.
    public static var allSockets: WindowsFoundationCollections_IMapView<Swift.String, WindowsNetworkingSockets_SocketActivityInformation?> {
        get throws {
            try COM.NullResult.unwrap(_isocketActivityInformationStatics.get_AllSockets())
        }
    }

    // MARK: Implementation details

    private static var _isocketActivityInformationStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingSockets_ISocketActivityInformationStatics>? = nil

    internal static var _isocketActivityInformationStatics: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingSockets_ISocketActivityInformationStatics> {
        get throws {
            try _isocketActivityInformationStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Networking.Sockets.SocketActivityInformation", id: CWinRT.SWRT_WindowsNetworkingSockets_ISocketActivityInformationStatics.iid)
            }
        }
    }
}