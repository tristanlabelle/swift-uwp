// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides the means to report XAML-type system specifics about XAML types. Using this interface contract, XAML parsers can load any custom types and members thereof that are defined in your app and are referenced in XAML files.
public protocol WindowsUIXamlMarkup_IXamlTypeProtocol: IInspectableProtocol {
    /// Gets the IXamlType for the immediate base type of the XAML type. Determination of this value is based on the underlying type for core types.
    /// - Returns: The IXamlType for the immediate base type of the XAML type.
    var baseType: WindowsUIXamlMarkup_IXamlType { get throws }

    /// Gets the IXamlMember information for the XAML content property of this IXamlType.
    /// - Returns: IXamlMember information for the XAML content property of the IXamlType. May be null if no XAML content property exists.
    var contentProperty: WindowsUIXamlMarkup_IXamlMember { get throws }

    /// Gets the full class name of the underlying type.
    /// - Returns: The full class name of the underlying type.
    var fullName: Swift.String { get throws }

    /// Gets a value that indicates whether the IXamlType represents an array.
    /// - Returns: **true** if the IXamlType represents an array; otherwise, **false**.
    var isArray: Swift.Bool { get throws }

    /// Gets a value that declares whether the type is bindable.
    /// - Returns: **true** if the type is bindable, **false** if the type is not bindable.
    var isBindable: Swift.Bool { get throws }

    /// Gets a value that indicates whether this IXamlType represents a collection.
    /// - Returns: **true** if this IXamlType represents a collection; otherwise, **false**.
    var isCollection: Swift.Bool { get throws }

    /// Gets a value that indicates whether this IXamlType represents a constructible type, as per the XAML definition.
    /// - Returns: **true** if this IXamlType represents a constructible type; otherwise, **false**.
    var isConstructible: Swift.Bool { get throws }

    /// Gets a value that indicates whether this IXamlType represents a dictionary/map.
    /// - Returns: **true** if this IXamlType represents a dictionary/map; otherwise, **false**.
    var isDictionary: Swift.Bool { get throws }

    /// Gets a value that indicates whether the IXamlType represents a markup extension.
    /// - Returns: **true** if the IXamlType represents a markup extension; otherwise, **false**.
    var isMarkupExtension: Swift.Bool { get throws }

    /// Gets a value that provides the type information for the **Items** property of this IXamlType.
    /// - Returns: The IXamlType information for the type of the items in the collection; otherwise, null if this IXamlType does not represent a collection.
    var itemType: WindowsUIXamlMarkup_IXamlType { get throws }

    /// Gets a value that provides the type information for the **Key** property of this IXamlType, if this IXamlType represents a dictionary/map.
    /// - Returns: The IXamlType information for the type of the key for dictionary usage; otherwise, null if this IXamlType does not represent a dictionary/map.
    var keyType: WindowsUIXamlMarkup_IXamlType { get throws }

    /// Gets information for the backing type.
    /// - Returns: The backing type as represented by the relevant type system or interop support type. This is a type reference (System.Type for Microsoft .NET, a TypeName helper struct for VisualÂ C++ component extensions (C++/CX)).
    var underlyingType: WindowsUIXamlInterop_TypeName { get throws }

    /// Given a XAML type, sets its values for initialization and returns a usable instance.
    /// - Returns: The usable instance.
    func activateInstance() throws -> WindowsRuntime.IInspectable

    /// Creates a type system representation based on a string. The main scenario for this usage is creating an enumeration value and mapping the appropriate enumeration.
    /// - Parameter value: The string to create from.
    /// - Returns: The resulting type system representation.
    func createFromString(_ value: Swift.String) throws -> WindowsRuntime.IInspectable

    /// Returns the IXamlMember information for a specific named member from this IXamlType.
    /// - Parameter name: The name of the member to get (as a string).
    /// - Returns: The IXamlMember information for the member, if a member as specified by *name* was found; otherwise, null.
    func getMember(_ name: Swift.String) throws -> WindowsUIXamlMarkup_IXamlMember

    /// Adds an item to a custom vector type.
    /// - Parameter instance: The type instance to set the item to.
    /// - Parameter value: The value of the item to add.
    func addToVector(_ instance: WindowsRuntime.IInspectable?, _ value: WindowsRuntime.IInspectable?) throws

    /// Adds an item to a custom map type.
    /// - Parameter instance: The type instance to set the map item to.
    /// - Parameter key: The key of the map item to add.
    /// - Parameter value: The value of the map item to add.
    func addToMap(_ instance: WindowsRuntime.IInspectable?, _ key: WindowsRuntime.IInspectable?, _ value: WindowsRuntime.IInspectable?) throws

    /// Invokes any necessary pre-activation logic as required by the XAML schema context and its platform dependencies.
    func runInitializer() throws
}

/// Provides the means to report XAML-type system specifics about XAML types. Using this interface contract, XAML parsers can load any custom types and members thereof that are defined in your app and are referenced in XAML files.
public typealias WindowsUIXamlMarkup_IXamlType = any WindowsUIXamlMarkup_IXamlTypeProtocol