// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides synchronous access to the properties exposed off StorageFolder and lets an app perform asynchronous management operations such as copy, delete, move, and rename.
public final class WindowsStorageBulkAccess_FolderInformation: WindowsRuntime.WinRTImport<WindowsStorageBulkAccess_FolderInformationProjection>, WindowsStorageBulkAccess_IStorageItemInformationProtocol, WindowsStorage_IStorageFolderProtocol, WindowsStorage_IStorageItemProtocol, WindowsStorage_IStorageItemPropertiesProtocol, WindowsStorageSearch_IStorageFolderQueryOperationsProtocol, WindowsStorage_IStorageItem2Protocol, WindowsStorage_IStorageFolder2Protocol, WindowsStorage_IStorageItemPropertiesWithProviderProtocol {
    // MARK: Windows.Storage.BulkAccess.IStorageItemInformation members

    /// Gets an object that contains the basic properties information of the folder.
    /// - Returns: The basic properties object.
    public var basicProperties: WindowsStorageFileProperties_BasicProperties {
        get throws {
            try COM.NullResult.unwrap(_interop.get_BasicProperties())
        }
    }

    /// Gets the document properties of the StorageFolder.
    /// - Returns: The document properties.
    public var documentProperties: WindowsStorageFileProperties_DocumentProperties {
        get throws {
            try COM.NullResult.unwrap(_interop.get_DocumentProperties())
        }
    }

    /// Gets the image properties of the StorageFolder.
    /// - Returns: The image properties.
    public var imageProperties: WindowsStorageFileProperties_ImageProperties {
        get throws {
            try COM.NullResult.unwrap(_interop.get_ImageProperties())
        }
    }

    /// Gets the music properties associated with the StorageFolder.
    /// - Returns: The music properties.
    public var musicProperties: WindowsStorageFileProperties_MusicProperties {
        get throws {
            try COM.NullResult.unwrap(_interop.get_MusicProperties())
        }
    }

    /// Gets the thumbnail for the StorageFile.
    /// - Returns: The thumbnail.
    public var thumbnail: WindowsStorageFileProperties_StorageItemThumbnail {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Thumbnail())
        }
    }

    /// Gets the video properties that are associated with the StorageFolder.
    /// - Returns: The video properties.
    public var videoProperties: WindowsStorageFileProperties_VideoProperties {
        get throws {
            try COM.NullResult.unwrap(_interop.get_VideoProperties())
        }
    }

    /// Occurs when one or more of the StorageFolder 's properties is updated.
    public func propertiesUpdated(adding changedHandler: WindowsFoundation_TypedEventHandler<WindowsStorageBulkAccess_IStorageItemInformation?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_PropertiesUpdated(changedHandler)
        return WindowsRuntime.EventRegistration(token: _token, remover: propertiesUpdated)
    }

    public func propertiesUpdated(removing eventCookie: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_PropertiesUpdated(eventCookie)
    }

    /// Fires when the StorageFolder 's thumbnail is updated or a better quality thumbnail is available.
    public func thumbnailUpdated(adding changedHandler: WindowsFoundation_TypedEventHandler<WindowsStorageBulkAccess_IStorageItemInformation?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_ThumbnailUpdated(changedHandler)
        return WindowsRuntime.EventRegistration(token: _token, remover: thumbnailUpdated)
    }

    public func thumbnailUpdated(removing eventCookie: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_ThumbnailUpdated(eventCookie)
    }

    // MARK: Windows.Storage.IStorageFolder members

    /// Creates a new file in the current folder.
    /// - Parameter desiredName: The name of the new file.
    /// - Returns: When this method completes successfully, it returns a StorageFile that represents the new file.
    public func createFileAsync(_ desiredName: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFile?> {
        try COM.NullResult.unwrap(_istorageFolder.createFileAsyncOverloadDefaultOptions(desiredName))
    }

    /// Creates a new file in the current folder, and specifies what to do if a file with the same name already exists in the current folder.
    /// - Parameter desiredName: The name of the new file.
    /// - Parameter options: A value that indicates what to do if the file name already exists in the current folder.
    /// - Returns: When this method completes successfully, it returns a StorageFile that represents the new file.
    public func createFileAsync(_ desiredName: Swift.String, _ options: WindowsStorage_CreationCollisionOption) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFile?> {
        try COM.NullResult.unwrap(_istorageFolder.createFileAsync(desiredName, options))
    }

    /// Creates a new child folder of the current folder.
    /// - Parameter desiredName: The name of the new folder.
    /// - Returns: When this method completes successfully, it returns a StorageFolder that represents the new file.
    public func createFolderAsync(_ desiredName: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFolder?> {
        try COM.NullResult.unwrap(_istorageFolder.createFolderAsyncOverloadDefaultOptions(desiredName))
    }

    /// Creates a new child folder of the current folder, and specifies what to do if a folder with the same name already exists in the current folder.
    /// - Parameter desiredName: The name of the new folder.
    /// - Parameter options: A value that indicates what to do if the child folder already exists in the current folder.
    /// - Returns: When this method completes successfully, it returns a StorageFolder that represents the new file.
    public func createFolderAsync(_ desiredName: Swift.String, _ options: WindowsStorage_CreationCollisionOption) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFolder?> {
        try COM.NullResult.unwrap(_istorageFolder.createFolderAsync(desiredName, options))
    }

    /// Retrieves a file from the current folder.
    /// - Parameter name: The name of the file to retrieve.
    /// - Returns: When this method completes successfully, it returns a StorageFile.
    public func getFileAsync(_ name: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFile?> {
        try COM.NullResult.unwrap(_istorageFolder.getFileAsync(name))
    }

    /// Retrieves the specified child folder from the current folder.
    /// - Parameter name: The name of the child folder to retrieve.
    /// - Returns: When this method completes successfully, it returns a StorageFolder that represents the specified child folder.
    public func getFolderAsync(_ name: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFolder?> {
        try COM.NullResult.unwrap(_istorageFolder.getFolderAsync(name))
    }

    /// Retrieves an item from the folder.
    /// - Parameter name: The name of the item to retrieve.
    /// - Returns: When this method completes successfully, it returns the item (type IStorageItem ).
    public func getItemAsync(_ name: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_IStorageItem?> {
        try COM.NullResult.unwrap(_istorageFolder.getItemAsync(name))
    }

    /// Retrieves all files from the current folder.
    /// - Returns: When this method completes successfully, it returns the list (type IVectorView ) of StorageFile objects in the folder.
    public func getFilesAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFile?>?> {
        try COM.NullResult.unwrap(_istorageFolder.getFilesAsyncOverloadDefaultOptionsStartAndCount())
    }

    /// Retrieves all child folders from the current folder.
    /// - Returns: When this method completes successfully, it returns the list (type IVectorView ) of child folders. Each child folder in this list is represented by a StorageFolder object.
    public func getFoldersAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFolder?>?> {
        try COM.NullResult.unwrap(_istorageFolder.getFoldersAsyncOverloadDefaultOptionsStartAndCount())
    }

    /// Retrieves all items from the current folder.
    /// - Returns: When this method completes successfully, it returns the list (type IVectorView ) of items.
    public func getItemsAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_IStorageItem?>?> {
        try COM.NullResult.unwrap(_istorageFolder.getItemsAsyncOverloadDefaultStartAndCount())
    }

    // MARK: Windows.Storage.IStorageItem members

    /// Gets the attributes of a loaded folder.
    /// - Returns: The folder attributes.
    public var attributes: WindowsStorage_FileAttributes {
        get throws {
            try _istorageItem.get_Attributes()
        }
    }

    /// Gets the date that the folder was created.
    /// - Returns: The folder creation date.
    public var dateCreated: WindowsFoundation_DateTime {
        get throws {
            try _istorageItem.get_DateCreated()
        }
    }

    /// Gets the name of the StorageFolder.
    /// - Returns: The StorageFolder name.
    public var name: Swift.String {
        get throws {
            try _istorageItem.get_Name()
        }
    }

    /// Gets the path of the StorageFolder.
    /// - Returns: The path.
    public var path: Swift.String {
        get throws {
            try _istorageItem.get_Path()
        }
    }

    /// Renames the StorageFolder.
    /// - Parameter desiredName: The new name.
    /// - Returns: No object or value is returned when this method completes.
    public func renameAsync(_ desiredName: Swift.String) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_istorageItem.renameAsyncOverloadDefaultOptions(desiredName))
    }

    /// Renames the StorageFolder, and specifies what to do if a folder with the same name already exists.
    /// - Parameter desiredName: The new name.
    /// - Parameter option: A value that indicates what to do if a folder with *desiredName* already exists.
    /// - Returns: No object or value is returned when this method completes.
    public func renameAsync(_ desiredName: Swift.String, _ option: WindowsStorage_NameCollisionOption) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_istorageItem.renameAsync(desiredName, option))
    }

    /// Deletes the current folder.
    /// - Returns: No object or value is returned when this method completes.
    public func deleteAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_istorageItem.deleteAsyncOverloadDefaultOptions())
    }

    /// Deletes the current folder, optionally moving the deleted folder to the recycle bin.
    /// - Parameter option: A value that specifies whether to move the deleted folder to the recycle bin.
    /// - Returns: No object or value is returned when this method completes.
    public func deleteAsync(_ option: WindowsStorage_StorageDeleteOption) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_istorageItem.deleteAsync(option))
    }

    /// Retrieves the basic properties of the StorageFolder object.
    /// - Returns: When this method completes successfully, it returns a BasicProperties object.
    public func getBasicPropertiesAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_BasicProperties?> {
        try COM.NullResult.unwrap(_istorageItem.getBasicPropertiesAsync())
    }

    /// Determines whether the loaded StorageFolder is the specified type.
    /// - Parameter type: The type of item to check against.
    /// - Returns: True if the loaded StorageFolder is the specified type; otherwise false.
    public func isOfType(_ type: WindowsStorage_StorageItemTypes) throws -> Swift.Bool {
        try _istorageItem.isOfType(type)
    }

    // MARK: Windows.Storage.IStorageItemProperties members

    /// Gets the user-friendly name of the StorageFolder.
    /// - Returns: The user-friendly name of the StorageFolder.
    public var displayName: Swift.String {
        get throws {
            try _istorageItemProperties.get_DisplayName()
        }
    }

    /// Gets the display type of the StorageFolder.
    /// - Returns: The display type.
    public var displayType: Swift.String {
        get throws {
            try _istorageItemProperties.get_DisplayType()
        }
    }

    /// Gets the identifier that uniquely identifies the StorageFolder relative to other items in the same folder.
    /// - Returns: The folder-relative identifier.
    public var folderRelativeId: Swift.String {
        get throws {
            try _istorageItemProperties.get_FolderRelativeId()
        }
    }

    /// Gets an object for retrieving the properties of the StorageFolder.
    /// - Returns: The object for retrieving StorageFolder properties.
    public var properties: WindowsStorageFileProperties_StorageItemContentProperties {
        get throws {
            try COM.NullResult.unwrap(_istorageItemProperties.get_Properties())
        }
    }

    /// Retrieves the thumbnail that is associated with the StorageFolder.
    /// - Parameter mode: The thumbnail mode to retrieve.
    /// - Returns: When this method completes successfully, it returns the thumbnail image as a StorageItemThumbnail object.
    public func getThumbnailAsync(_ mode: WindowsStorageFileProperties_ThumbnailMode) throws -> WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_StorageItemThumbnail?> {
        try COM.NullResult.unwrap(_istorageItemProperties.getThumbnailAsyncOverloadDefaultSizeDefaultOptions(mode))
    }

    /// Retrieves the thumbnail that is associated with the StorageFolder, scaling it to the specified size.
    /// - Parameter mode: The thumbnail mode to retrieve.
    /// - Parameter requestedSize: The requested size in pixels of thumbnail to retrieve.
    /// - Returns: When this method completes successfully, it returns the thumbnail image as a StorageItemThumbnail object.
    public func getThumbnailAsync(_ mode: WindowsStorageFileProperties_ThumbnailMode, _ requestedSize: Swift.UInt32) throws -> WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_StorageItemThumbnail?> {
        try COM.NullResult.unwrap(_istorageItemProperties.getThumbnailAsyncOverloadDefaultOptions(mode, requestedSize))
    }

    /// Retrieves the thumbnail that is associated with the StorageFolder, based on the specified options.
    /// - Parameter mode: The thumbnail mode to retrieve.
    /// - Parameter requestedSize: The requested size in pixels of thumbnail to retrieve.
    /// - Parameter options: The thumbnail retrieval options.
    /// - Returns: When this method completes successfully, it returns the thumbnail image as a StorageItemThumbnail object.
    public func getThumbnailAsync(_ mode: WindowsStorageFileProperties_ThumbnailMode, _ requestedSize: Swift.UInt32, _ options: WindowsStorageFileProperties_ThumbnailOptions) throws -> WindowsFoundation_IAsyncOperation<WindowsStorageFileProperties_StorageItemThumbnail?> {
        try COM.NullResult.unwrap(_istorageItemProperties.getThumbnailAsync(mode, requestedSize, options))
    }

    // MARK: Windows.Storage.Search.IStorageFolderQueryOperations members

    /// Retrieves the indexed state of the folder.
    /// - Returns: When this method completes successfully, it returns an IndexedState enumeration value.
    public func getIndexedStateAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsStorageSearch_IndexedState> {
        try COM.NullResult.unwrap(_istorageFolderQueryOperations.getIndexedStateAsync())
    }

    /// Creates an object for performing filtered search queries for StorageFile in the current folder.
    /// - Returns: An object for managing the search queries and accessing the results.
    public func createFileQuery() throws -> WindowsStorageSearch_StorageFileQueryResult {
        try COM.NullResult.unwrap(_istorageFolderQueryOperations.createFileQueryOverloadDefault())
    }

    /// Creates an object for performing filtered search queries for StorageFile objects in the current folder. Search results are grouped based on the specified file attribute.
    /// - Parameter query: A value that specifies the folder attribute to use to group the search results.
    /// - Returns: An object for managing the search queries and accessing the results.
    public func createFileQuery(_ query: WindowsStorageSearch_CommonFileQuery) throws -> WindowsStorageSearch_StorageFileQueryResult {
        try COM.NullResult.unwrap(_istorageFolderQueryOperations.createFileQuery(query))
    }

    /// Creates an object used to perform filtered search queries for StorageFile objects in the folder. The object is initialized with the specified query options.
    /// - Parameter queryOptions: The initial query options.
    /// - Returns: An object for managing the search queries and accessing the results.
    public func createFileQueryWithOptions(_ queryOptions: WindowsStorageSearch_QueryOptions?) throws -> WindowsStorageSearch_StorageFileQueryResult {
        try COM.NullResult.unwrap(_istorageFolderQueryOperations.createFileQueryWithOptions(queryOptions))
    }

    /// Creates an object for performing filtered search queries for child StorageFolder objects of the current folder.
    /// - Returns: An object for managing the search queries and accessing the results.
    public func createFolderQuery() throws -> WindowsStorageSearch_StorageFolderQueryResult {
        try COM.NullResult.unwrap(_istorageFolderQueryOperations.createFolderQueryOverloadDefault())
    }

    /// Creates an object for performing filtered search queries for child StorageFolder objects of the current folder. Search results are grouped based on the specified folder attribute.
    /// - Parameter query: A value that specifies the folder attribute to use to group the search results.
    /// - Returns: An object for managing the search queries and accessing the results.
    public func createFolderQuery(_ query: WindowsStorageSearch_CommonFolderQuery) throws -> WindowsStorageSearch_StorageFolderQueryResult {
        try COM.NullResult.unwrap(_istorageFolderQueryOperations.createFolderQuery(query))
    }

    /// Creates an object used to perform filtered search queries for child StorageFolder objects of the current folder. The object is initialized with the specified query options.
    /// - Parameter queryOptions: The initial query options.
    /// - Returns: An object for managing the search queries and accessing the results.
    public func createFolderQueryWithOptions(_ queryOptions: WindowsStorageSearch_QueryOptions?) throws -> WindowsStorageSearch_StorageFolderQueryResult {
        try COM.NullResult.unwrap(_istorageFolderQueryOperations.createFolderQueryWithOptions(queryOptions))
    }

    /// Creates an object used to perform filtered search queries for items in the folder.
    /// - Returns: An object for managing the search queries and accessing the results.
    public func createItemQuery() throws -> WindowsStorageSearch_StorageItemQueryResult {
        try COM.NullResult.unwrap(_istorageFolderQueryOperations.createItemQuery())
    }

    /// Creates an object used to perform filtered search queries for items in the folder. The object is initialized with the specified query options.
    /// - Parameter queryOptions: The initial query options.
    /// - Returns: An object for managing the search queries and accessing the results.
    public func createItemQueryWithOptions(_ queryOptions: WindowsStorageSearch_QueryOptions?) throws -> WindowsStorageSearch_StorageItemQueryResult {
        try COM.NullResult.unwrap(_istorageFolderQueryOperations.createItemQueryWithOptions(queryOptions))
    }

    /// Retrieves a range of files from the current folder based on a common file query.
    /// - Parameter query: The common file query.
    /// - Parameter startIndex: The zero-based index of the first file in the range.
    /// - Parameter maxItemsToRetrieve: The maximum number of files to retrieve.
    /// - Returns: When this method completes successfully, it returns the list (type IVectorView ) of StorageFile objects in the folder.
    public func getFilesAsync(_ query: WindowsStorageSearch_CommonFileQuery, _ startIndex: Swift.UInt32, _ maxItemsToRetrieve: Swift.UInt32) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFile?>?> {
        try COM.NullResult.unwrap(_istorageFolderQueryOperations.getFilesAsync(query, startIndex, maxItemsToRetrieve))
    }

    /// Retrieves files from the current folder based on a common folder query.
    /// - Parameter query: The common file query.
    /// - Returns: When this method completes successfully, it returns the list (type IVectorView ) of StorageFile objects in the folder.
    public func getFilesAsync(_ query: WindowsStorageSearch_CommonFileQuery) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFile?>?> {
        try COM.NullResult.unwrap(_istorageFolderQueryOperations.getFilesAsyncOverloadDefaultStartAndCount(query))
    }

    /// Retrieves a range of child folders from the current folder based on a common folder query.
    /// - Parameter query: The common folder query.
    /// - Parameter startIndex: The zero-based index of the first child folder in the range.
    /// - Parameter maxItemsToRetrieve: The maximum number of child folders to retrieve.
    /// - Returns: When this method completes successfully, it returns the list (type IVectorView ) of child folders. Each child folder in this list is represented by a StorageFolder object.
    public func getFoldersAsync(_ query: WindowsStorageSearch_CommonFolderQuery, _ startIndex: Swift.UInt32, _ maxItemsToRetrieve: Swift.UInt32) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFolder?>?> {
        try COM.NullResult.unwrap(_istorageFolderQueryOperations.getFoldersAsync(query, startIndex, maxItemsToRetrieve))
    }

    /// Retrieves child folders from the current folder based on a common folder query.
    /// - Parameter query: The common folder query.
    /// - Returns: When this method completes successfully, it returns the list (type IVectorView ) of child folders. Each child folder in this list is represented by a StorageFolder object.
    public func getFoldersAsync(_ query: WindowsStorageSearch_CommonFolderQuery) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageFolder?>?> {
        try COM.NullResult.unwrap(_istorageFolderQueryOperations.getFoldersAsyncOverloadDefaultStartAndCount(query))
    }

    /// Retrieves a range of items from the current folder.
    /// - Parameter startIndex: The zero-based index of the first item in the range.
    /// - Parameter maxItemsToRetrieve: The maximum number of items to retrieve.
    /// - Returns: When this method completes successfully, it returns the list (type IVectorView ) of items.
    public func getItemsAsync(_ startIndex: Swift.UInt32, _ maxItemsToRetrieve: Swift.UInt32) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_IStorageItem?>?> {
        try COM.NullResult.unwrap(_istorageFolderQueryOperations.getItemsAsync(startIndex, maxItemsToRetrieve))
    }

    /// Retrieves a value that indicates whether the folder supports the specified search query options.
    /// - Parameter queryOptions: The search query options to test.
    /// - Returns: True if the folder supports the specified search query options; otherwise false.
    public func areQueryOptionsSupported(_ queryOptions: WindowsStorageSearch_QueryOptions?) throws -> Swift.Bool {
        try _istorageFolderQueryOperations.areQueryOptionsSupported(queryOptions)
    }

    /// Retrieves a value that indicates whether the current folder supports the specified common folder query.
    /// - Parameter query: The common folder query to test.
    /// - Returns: True if the folder supports the specified common folder query; otherwise false.
    public func isCommonFolderQuerySupported(_ query: WindowsStorageSearch_CommonFolderQuery) throws -> Swift.Bool {
        try _istorageFolderQueryOperations.isCommonFolderQuerySupported(query)
    }

    /// Retrieves a value that indicates whether the current folder supports the specified common file query.
    /// - Parameter query: The common file query to test.
    /// - Returns: True if the folder supports the specified common file query; otherwise false.
    public func isCommonFileQuerySupported(_ query: WindowsStorageSearch_CommonFileQuery) throws -> Swift.Bool {
        try _istorageFolderQueryOperations.isCommonFileQuerySupported(query)
    }

    // MARK: Windows.Storage.IStorageItem2 members

    /// Gets the parent folder of the current folder.
    /// - Returns: When this method completes, it returns the parent folder as a StorageFolder.
    public func getParentAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFolder?> {
        try COM.NullResult.unwrap(_istorageItem2.getParentAsync())
    }

    /// Indicates whether the current folder is equal to the specified folder.
    /// - Parameter item: The IStorageItem object that represents the folder to compare against.
    /// - Returns: Returns **true** if the current folder is equal to the specified folder; otherwise **false**.
    public func isEqual(_ item: WindowsStorage_IStorageItem?) throws -> Swift.Bool {
        try _istorageItem2.isEqual(item)
    }

    // MARK: Windows.Storage.IStorageFolder2 members

    /// Try to get a specific file or sub-folder from the current folder using the name of the file or folder to get.
    /// - Parameter name: The name (or path relative to the current folder) of the file or sub-folder to try to retrieve.
    /// - Returns: When this method completes successfully, it returns the file or folder (type IStorageItem ).
    public func tryGetItemAsync(_ name: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_IStorageItem?> {
        try COM.NullResult.unwrap(_istorageFolder2.tryGetItemAsync(name))
    }

    // MARK: Windows.Storage.IStorageItemPropertiesWithProvider members

    /// Gets the StorageProvider object that contains info about the service that stores the current folder.
    /// - Returns: The StorageProvider object that contains info about the service that stores the current folder. The file may be stored by the local file system or by a remote service like Microsoft OneDrive.
    public var provider: WindowsStorage_StorageProvider {
        get throws {
            try COM.NullResult.unwrap(_istorageItemPropertiesWithProvider.get_Provider())
        }
    }

    // MARK: Implementation details

    private var _istorageFolder_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IStorageFolder>? = nil

    internal var _istorageFolder: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IStorageFolder> {
        get throws {
            try _istorageFolder_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsStorage_IStorageFolder.iid).cast(to: CWinRT.SWRT_WindowsStorage_IStorageFolder.self)
            }
        }
    }

    private var _istorageItem_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IStorageItem>? = nil

    internal var _istorageItem: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IStorageItem> {
        get throws {
            try _istorageItem_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsStorage_IStorageItem.iid).cast(to: CWinRT.SWRT_WindowsStorage_IStorageItem.self)
            }
        }
    }

    private var _istorageItemProperties_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IStorageItemProperties>? = nil

    internal var _istorageItemProperties: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IStorageItemProperties> {
        get throws {
            try _istorageItemProperties_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsStorage_IStorageItemProperties.iid).cast(to: CWinRT.SWRT_WindowsStorage_IStorageItemProperties.self)
            }
        }
    }

    private var _istorageFolderQueryOperations_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorageSearch_IStorageFolderQueryOperations>? = nil

    internal var _istorageFolderQueryOperations: COM.COMInterop<CWinRT.SWRT_WindowsStorageSearch_IStorageFolderQueryOperations> {
        get throws {
            try _istorageFolderQueryOperations_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsStorageSearch_IStorageFolderQueryOperations.iid).cast(to: CWinRT.SWRT_WindowsStorageSearch_IStorageFolderQueryOperations.self)
            }
        }
    }

    private var _istorageItem2_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IStorageItem2>? = nil

    internal var _istorageItem2: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IStorageItem2> {
        get throws {
            try _istorageItem2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsStorage_IStorageItem2.iid).cast(to: CWinRT.SWRT_WindowsStorage_IStorageItem2.self)
            }
        }
    }

    private var _istorageFolder2_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IStorageFolder2>? = nil

    internal var _istorageFolder2: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IStorageFolder2> {
        get throws {
            try _istorageFolder2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsStorage_IStorageFolder2.iid).cast(to: CWinRT.SWRT_WindowsStorage_IStorageFolder2.self)
            }
        }
    }

    private var _istorageItemPropertiesWithProvider_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IStorageItemPropertiesWithProvider>? = nil

    internal var _istorageItemPropertiesWithProvider: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IStorageItemPropertiesWithProvider> {
        get throws {
            try _istorageItemPropertiesWithProvider_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsStorage_IStorageItemPropertiesWithProvider.iid).cast(to: CWinRT.SWRT_WindowsStorage_IStorageItemPropertiesWithProvider.self)
            }
        }
    }

    deinit {
        _istorageFolder_storage?.release()
        _istorageItem_storage?.release()
        _istorageItemProperties_storage?.release()
        _istorageFolderQueryOperations_storage?.release()
        _istorageItem2_storage?.release()
        _istorageFolder2_storage?.release()
        _istorageItemPropertiesWithProvider_storage?.release()
    }
}