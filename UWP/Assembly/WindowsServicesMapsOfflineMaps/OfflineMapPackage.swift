// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the map data for a particular geographical region. The data can be downloaded and used offline.
public final class WindowsServicesMapsOfflineMaps_OfflineMapPackage: WindowsRuntime.WinRTImport<WindowsServicesMapsOfflineMaps_OfflineMapPackageProjection> {
    // MARK: Windows.Services.Maps.OfflineMaps.IOfflineMapPackage members

    /// Gets the display name of a geographic location for the offline map package.
    /// - Returns: Gets the display name of a geographic location for the offline map package.
    public var displayName: Swift.String {
        get throws {
            try _interop.get_DisplayName()
        }
    }

    /// Gets the surrounding or containing region of the offline map package (for example: USA).
    /// - Returns: The surrounding or containing region of the offline map package (for example: USA).
    public var enclosingRegionName: Swift.String {
        get throws {
            try _interop.get_EnclosingRegionName()
        }
    }

    /// Gets the estimated size in bytes of the offline map package.
    /// - Returns: The estimated size in bytes of the offline map package.
    public var estimatedSizeInBytes: Swift.UInt64 {
        get throws {
            try _interop.get_EstimatedSizeInBytes()
        }
    }

    /// Gets the status of a map package (For example, whether the package is downloaded to your local system or not).
    /// - Returns: The status of a map package.
    public var status: WindowsServicesMapsOfflineMaps_OfflineMapPackageStatus {
        get throws {
            try _interop.get_Status()
        }
    }

    /// Occurs when the status of an OfflineMapPackageQueryResult changes.
    public func statusChanged(adding value: WindowsFoundation_TypedEventHandler<WindowsServicesMapsOfflineMaps_OfflineMapPackage?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_StatusChanged(value)
        return WindowsRuntime.EventRegistration(token: _token, remover: statusChanged)
    }

    public func statusChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_StatusChanged(token)
    }

    /// Starts an asynchronous operation to request the download of a map package to your local system.
    /// - Returns: An OfflineMapPackageStartDownloadResult that contains the result of the operation.
    public func requestStartDownloadAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsServicesMapsOfflineMaps_OfflineMapPackageStartDownloadResult?> {
        try COM.NullResult.unwrap(_interop.requestStartDownloadAsync())
    }

    // MARK: Windows.Services.Maps.OfflineMaps.IOfflineMapPackageStatics members

    /// Starts an asynchronous operation to find a map package that contains map data for specified geographical location.
    /// - Parameter queryPoint: The geographical location that you want to locate a map package for.
    /// - Returns: An OfflineMapPackageQueryResult that contains the result of the query.
    public static func findPackagesAsync(_ queryPoint: WindowsDevicesGeolocation_Geopoint?) throws -> WindowsFoundation_IAsyncOperation<WindowsServicesMapsOfflineMaps_OfflineMapPackageQueryResult?> {
        try COM.NullResult.unwrap(_iofflineMapPackageStatics.findPackagesAsync(queryPoint))
    }

    /// Starts an asynchronous operation to find a map package that contains map data for specified four-sided geographic area.
    /// - Parameter queryBoundingBox: A specified four-sided geographic area that defines the area that you want to locate a map package for.
    /// - Returns: An OfflineMapPackageQueryResult that contains the result of the query.
    public static func findPackagesInBoundingBoxAsync(_ queryBoundingBox: WindowsDevicesGeolocation_GeoboundingBox?) throws -> WindowsFoundation_IAsyncOperation<WindowsServicesMapsOfflineMaps_OfflineMapPackageQueryResult?> {
        try COM.NullResult.unwrap(_iofflineMapPackageStatics.findPackagesInBoundingBoxAsync(queryBoundingBox))
    }

    /// Starts an asynchronous operation to find a map package that contains map data for specified geographic area.
    /// - Parameter queryCircle: The geographic area that defines the area that you want to locate a map package for.
    /// - Returns: An OfflineMapPackageQueryResult that contains the result of the query.
    public static func findPackagesInGeocircleAsync(_ queryCircle: WindowsDevicesGeolocation_Geocircle?) throws -> WindowsFoundation_IAsyncOperation<WindowsServicesMapsOfflineMaps_OfflineMapPackageQueryResult?> {
        try COM.NullResult.unwrap(_iofflineMapPackageStatics.findPackagesInGeocircleAsync(queryCircle))
    }

    // MARK: Implementation details

    private static var _iofflineMapPackageStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsServicesMapsOfflineMaps_IOfflineMapPackageStatics>? = nil

    internal static var _iofflineMapPackageStatics: COM.COMInterop<CWinRT.SWRT_WindowsServicesMapsOfflineMaps_IOfflineMapPackageStatics> {
        get throws {
            try _iofflineMapPackageStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Services.Maps.OfflineMaps.OfflineMapPackage", id: CWinRT.SWRT_WindowsServicesMapsOfflineMaps_IOfflineMapPackageStatics.iid)
            }
        }
    }
}