// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a port used to receive MIDI messages from a MIDI device.
public final class WindowsDevicesMidi_MidiInPort: WindowsRuntime.WinRTImport<WindowsDevicesMidi_MidiInPortProjection>, WindowsFoundation_IClosableProtocol {
    // MARK: Windows.Devices.Midi.IMidiInPort members

    /// Gets the id of the device that was used to initialize the MidiInPort.
    /// - Returns: The ID of the device.
    public var deviceId: Swift.String {
        get throws {
            try _interop.get_DeviceId()
        }
    }

    /// Occurs when the MidiInPort receives data.
    public func messageReceived(adding handler: WindowsFoundation_TypedEventHandler<WindowsDevicesMidi_MidiInPort?, WindowsDevicesMidi_MidiMessageReceivedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_MessageReceived(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: messageReceived)
    }

    public func messageReceived(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_MessageReceived(token)
    }

    // MARK: Windows.Foundation.IClosable members

    /// Closes the MidiInPort.
    public func close() throws {
        try _iclosable.close()
    }

    // MARK: Windows.Devices.Midi.IMidiInPortStatics members

    /// Creates a MidiInPort object for the specified device.
    /// - Parameter deviceId: The device ID, which can be obtained by enumerating the devices on the system Windows.Devices.Enumeration.DeviceInformation.FindAllAsync.
    /// - Returns: The asynchronous operation. Upon completion, IAsyncOperation.GetResults returns a MidiInPort object.
    public static func fromIdAsync(_ deviceId: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesMidi_MidiInPort?> {
        try COM.NullResult.unwrap(_imidiInPortStatics.fromIdAsync(deviceId))
    }

    /// Gets a query string that can be used to enumerate all MidiInPort objects on the system.
    /// - Returns: The query string used to enumerate the MidiInPort objects on the system.
    public static func getDeviceSelector() throws -> Swift.String {
        try _imidiInPortStatics.getDeviceSelector()
    }

    // MARK: Implementation details

    private var _iclosable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable>? = nil

    internal var _iclosable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable> {
        get throws {
            try _iclosable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IClosable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IClosable.self)
            }
        }
    }

    deinit {
        _iclosable_storage?.release()
    }

    private static var _imidiInPortStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesMidi_IMidiInPortStatics>? = nil

    internal static var _imidiInPortStatics: COM.COMInterop<CWinRT.SWRT_WindowsDevicesMidi_IMidiInPortStatics> {
        get throws {
            try _imidiInPortStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Midi.MidiInPort", id: CWinRT.SWRT_WindowsDevicesMidi_IMidiInPortStatics.iid)
            }
        }
    }
}