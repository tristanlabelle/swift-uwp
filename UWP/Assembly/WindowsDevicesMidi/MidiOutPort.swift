// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a port used to send MIDI messages to a MIDI device.
public final class WindowsDevicesMidi_MidiOutPort: WindowsRuntime.WinRTImport<WindowsDevicesMidi_MidiOutPortProjection>, WindowsDevicesMidi_IMidiOutPortProtocol, WindowsFoundation_IClosableProtocol {
    // MARK: Windows.Devices.Midi.IMidiOutPort members

    /// Gets the id of the device that was used to initialize the MidiOutPort.
    /// - Returns: The ID of the device.
    public var deviceId: Swift.String {
        get throws {
            try _interop.get_DeviceId()
        }
    }

    /// Send the data in the specified MIDI message to the device associated with this MidiOutPort.
    /// - Parameter midiMessage: The MIDI message to send to the device.
    public func sendMessage(_ midiMessage: WindowsDevicesMidi_IMidiMessage?) throws {
        try _interop.sendMessage(midiMessage)
    }

    /// Send the specified data buffer to the device associated with this MidiOutPort.
    /// - Parameter midiData: The data to send to the device.
    public func sendBuffer(_ midiData: WindowsStorageStreams_IBuffer?) throws {
        try _interop.sendBuffer(midiData)
    }

    // MARK: Windows.Foundation.IClosable members

    /// Closes the MidiOutPort.
    public func close() throws {
        try _iclosable.close()
    }

    // MARK: Windows.Devices.Midi.IMidiOutPortStatics members

    /// Creates a MidiOutPort object for the specified device.
    /// - Parameter deviceId: The device ID, which can be obtained by enumerating the devices on the system Windows.Devices.Enumeration.DeviceInformation.FindAllAsync.
    /// - Returns: The asynchronous operation. Upon completion, IAsyncOperation.GetResults returns a MidiOutPort object.
    public static func fromIdAsync(_ deviceId: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesMidi_IMidiOutPort?> {
        try COM.NullResult.unwrap(_imidiOutPortStatics.fromIdAsync(deviceId))
    }

    /// Gets a query string that can be used to enumerate all MidiOutPort objects on the system.
    /// - Returns: The query string used to enumerate the MidiOutPort objects on the system.
    public static func getDeviceSelector() throws -> Swift.String {
        try _imidiOutPortStatics.getDeviceSelector()
    }

    // MARK: Implementation details

    private var _iclosable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable>? = nil

    internal var _iclosable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable> {
        get throws {
            try _iclosable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IClosable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IClosable.self)
            }
        }
    }

    deinit {
        _iclosable_storage?.release()
    }

    private static var _imidiOutPortStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesMidi_IMidiOutPortStatics>? = nil

    internal static var _imidiOutPortStatics: COM.COMInterop<CWinRT.SWRT_WindowsDevicesMidi_IMidiOutPortStatics> {
        get throws {
            try _imidiOutPortStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Midi.MidiOutPort", id: CWinRT.SWRT_WindowsDevicesMidi_IMidiOutPortStatics.iid)
            }
        }
    }
}