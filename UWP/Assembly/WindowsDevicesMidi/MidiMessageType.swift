// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Specifies constants used to map MIDI message types into their corresponding byte codes.
public struct WindowsDevicesMidi_MidiMessageType: RawRepresentable, Hashable, Codable {
    public var rawValue: Swift.Int32

    public init(rawValue: Swift.Int32 = 0) {
        self.rawValue = rawValue
    }

    /// Specifies no message type.
    public static let none = Self()

    /// A MidiNoteOffMessage.
    public static let noteOff = Self(rawValue: 128)

    /// A MidiNoteOnMessage.
    public static let noteOn = Self(rawValue: 144)

    /// A MidiPolyphonicKeyPressureMessage.
    public static let polyphonicKeyPressure = Self(rawValue: 160)

    /// A MidiControlChangeMessage.
    public static let controlChange = Self(rawValue: 176)

    /// A MidiControlChangeMessage.
    public static let programChange = Self(rawValue: 192)

    /// A MidiChannelPressureMessage.
    public static let channelPressure = Self(rawValue: 208)

    /// A MidiPitchBendChangeMessage.
    public static let pitchBendChange = Self(rawValue: 224)

    /// A MidiSystemExclusiveMessage.
    public static let systemExclusive = Self(rawValue: 240)

    /// A MidiTimeCodeMessage.
    public static let midiTimeCode = Self(rawValue: 241)

    /// A MidiSongPositionPointerMessage.
    public static let songPositionPointer = Self(rawValue: 242)

    /// A MidiSongSelectMessage.
    public static let songSelect = Self(rawValue: 243)

    /// A MidiTuneRequestMessage.
    public static let tuneRequest = Self(rawValue: 246)

    /// A MidiSystemExclusiveMessage.
    public static let endSystemExclusive = Self(rawValue: 247)

    /// A MidiTimingClockMessage.
    public static let timingClock = Self(rawValue: 248)

    /// A MidiStartMessage.
    public static let start = Self(rawValue: 250)

    /// A MidiContinueMessage.
    public static let `continue` = Self(rawValue: 251)

    /// A MidiStopMessage.
    public static let stop = Self(rawValue: 252)

    /// A MidiActiveSensingMessage.
    public static let activeSensing = Self(rawValue: 254)

    /// A SystemResetMessage.
    public static let systemReset = Self(rawValue: 255)
}