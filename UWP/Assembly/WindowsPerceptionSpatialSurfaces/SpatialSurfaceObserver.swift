// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides methods for observing surfaces in the user's surroundings.
public final class WindowsPerceptionSpatialSurfaces_SpatialSurfaceObserver: WindowsRuntime.WinRTImport<WindowsPerceptionSpatialSurfaces_SpatialSurfaceObserverProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsPerceptionSpatialSurfaces_SpatialSurfaceObserverProjection.self))
    }

    // MARK: Windows.Perception.Spatial.Surfaces.ISpatialSurfaceObserver members

    /// Occurs when the set of surface metadata observed within the bounding volume has changed.
    public func observedSurfacesChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsPerceptionSpatialSurfaces_SpatialSurfaceObserver?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_ObservedSurfacesChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: observedSurfacesChanged)
    }

    public func observedSurfacesChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_ObservedSurfacesChanged(token)
    }

    /// Gets metadata for the set of surfaces observed within the bounding volume at the moment.
    /// - Returns: The observed surfaces.
    public func getObservedSurfaces() throws -> WindowsFoundationCollections_IMapView<Foundation.UUID, WindowsPerceptionSpatialSurfaces_SpatialSurfaceInfo?> {
        try COM.NullResult.unwrap(_interop.getObservedSurfaces())
    }

    /// Sets the single bounding volume that this observer will track for new, updated or removed surfaces.
    /// - Parameter bounds: The new bounding volume for this observer to track for surface updates.
    public func setBoundingVolume(_ bounds: WindowsPerceptionSpatial_SpatialBoundingVolume?) throws {
        try _interop.setBoundingVolume(bounds)
    }

    public func setBoundingVolumes(_ bounds: WindowsFoundationCollections_IIterable<WindowsPerceptionSpatial_SpatialBoundingVolume?>?) throws {
        try _interop.setBoundingVolumes(bounds)
    }

    // MARK: Windows.Perception.Spatial.Surfaces.ISpatialSurfaceObserverStatics members

    /// Requests access for an app to use spatial mapping. This requires the spatialPerception capability.
    /// - Returns: Operation that triggers once the user has completed any consent dialog, providing the access status.
    public static func requestAccessAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsPerceptionSpatial_SpatialPerceptionAccessStatus> {
        try COM.NullResult.unwrap(_ispatialSurfaceObserverStatics.requestAccessAsync())
    }

    // MARK: Windows.Perception.Spatial.Surfaces.ISpatialSurfaceObserverStatics2 members

    /// Gets whether spatial mapping is supported on the current system.
    /// - Returns: Whether spatial mapping is supported.
    public static func isSupported() throws -> Swift.Bool {
        try _ispatialSurfaceObserverStatics2.isSupported()
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Perception.Spatial.Surfaces.SpatialSurfaceObserver", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _ispatialSurfaceObserverStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsPerceptionSpatialSurfaces_ISpatialSurfaceObserverStatics>? = nil

    internal static var _ispatialSurfaceObserverStatics: COM.COMInterop<CWinRT.SWRT_WindowsPerceptionSpatialSurfaces_ISpatialSurfaceObserverStatics> {
        get throws {
            try _ispatialSurfaceObserverStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Perception.Spatial.Surfaces.SpatialSurfaceObserver", id: CWinRT.SWRT_WindowsPerceptionSpatialSurfaces_ISpatialSurfaceObserverStatics.iid)
            }
        }
    }

    private static var _ispatialSurfaceObserverStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsPerceptionSpatialSurfaces_ISpatialSurfaceObserverStatics2>? = nil

    internal static var _ispatialSurfaceObserverStatics2: COM.COMInterop<CWinRT.SWRT_WindowsPerceptionSpatialSurfaces_ISpatialSurfaceObserverStatics2> {
        get throws {
            try _ispatialSurfaceObserverStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Perception.Spatial.Surfaces.SpatialSurfaceObserver", id: CWinRT.SWRT_WindowsPerceptionSpatialSurfaces_ISpatialSurfaceObserverStatics2.iid)
            }
        }
    }
}