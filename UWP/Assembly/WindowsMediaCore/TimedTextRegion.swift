// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Exposes properties for customizing the appearance of the rendering area of a TimedTextCue.
public final class WindowsMediaCore_TimedTextRegion: WindowsRuntime.WinRTImport<WindowsMediaCore_TimedTextRegionProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsMediaCore_TimedTextRegionProjection.self))
    }

    // MARK: Windows.Media.Core.ITimedTextRegion members

    /// Gets or sets the background color of the TimedTextRegion.
    /// - Returns: The background color of the TimedTextRegion.
    public var background: WindowsUI_Color {
        get throws {
            try _interop.get_Background()
        }
    }

    /// Gets or sets the background color of the TimedTextRegion.
    /// - Returns: The background color of the TimedTextRegion.
    public func background(_ value: WindowsUI_Color) throws {
        try _interop.put_Background(value)
    }

    /// Gets or sets the display alignment of the TimedTextRegion.
    /// - Returns: The display alignment of the TimedTextRegion.
    public var displayAlignment: WindowsMediaCore_TimedTextDisplayAlignment {
        get throws {
            try _interop.get_DisplayAlignment()
        }
    }

    /// Gets or sets the display alignment of the TimedTextRegion.
    /// - Returns: The display alignment of the TimedTextRegion.
    public func displayAlignment(_ value: WindowsMediaCore_TimedTextDisplayAlignment) throws {
        try _interop.put_DisplayAlignment(value)
    }

    /// Gets or sets the extent of the TimedTextRegion, which is the rendered size of the region either in pixels or in percentage of available space.
    /// - Returns: The extent of the TimedTextRegion.
    public var extent: WindowsMediaCore_TimedTextSize {
        get throws {
            try _interop.get_Extent()
        }
    }

    /// Gets or sets the extent of the TimedTextRegion, which is the rendered size of the region either in pixels or in percentage of available space.
    /// - Returns: The extent of the TimedTextRegion.
    public func extent(_ value: WindowsMediaCore_TimedTextSize) throws {
        try _interop.put_Extent(value)
    }

    /// Gets or sets a value indicating whether text overflowing the region is clipped.
    /// - Returns: True if overflowing text is clipped; otherwise, false.
    public var isOverflowClipped: Swift.Bool {
        get throws {
            try _interop.get_IsOverflowClipped()
        }
    }

    /// Gets or sets a value indicating whether text overflowing the region is clipped.
    /// - Returns: True if overflowing text is clipped; otherwise, false.
    public func isOverflowClipped(_ value: Swift.Bool) throws {
        try _interop.put_IsOverflowClipped(value)
    }

    /// Gets or sets a value that indicates the height of each line of content.
    /// - Returns: A value that indicates the height of each line of content.
    public var lineHeight: WindowsMediaCore_TimedTextDouble {
        get throws {
            try _interop.get_LineHeight()
        }
    }

    /// Gets or sets a value that indicates the height of each line of content.
    /// - Returns: A value that indicates the height of each line of content.
    public func lineHeight(_ value: WindowsMediaCore_TimedTextDouble) throws {
        try _interop.put_LineHeight(value)
    }

    /// Gets or sets a string representing the name of the TimedTextRegion.
    /// - Returns: The name of the TimedTextRegion.
    public var name: Swift.String {
        get throws {
            try _interop.get_Name()
        }
    }

    /// Gets or sets a string representing the name of the TimedTextRegion.
    /// - Returns: The name of the TimedTextRegion.
    public func name(_ value: Swift.String) throws {
        try _interop.put_Name(value)
    }

    /// Gets or sets a value that indicates the thickness of padding space between the boundaries of the content area and the content displayed by a TimedTextRegion.
    /// - Returns: A value that indicates the thickness of padding space between the boundaries of the content area and the content displayed by a TimedTextRegion.
    public var padding: WindowsMediaCore_TimedTextPadding {
        get throws {
            try _interop.get_Padding()
        }
    }

    /// Gets or sets a value that indicates the thickness of padding space between the boundaries of the content area and the content displayed by a TimedTextRegion.
    /// - Returns: A value that indicates the thickness of padding space between the boundaries of the content area and the content displayed by a TimedTextRegion.
    public func padding(_ value: WindowsMediaCore_TimedTextPadding) throws {
        try _interop.put_Padding(value)
    }

    /// Gets or sets the position of the TimedTextRegion, relative to the top left corner of the video frame.
    /// - Returns: The position of the TimedTextRegion
    public var position: WindowsMediaCore_TimedTextPoint {
        get throws {
            try _interop.get_Position()
        }
    }

    /// Gets or sets the position of the TimedTextRegion, relative to the top left corner of the video frame.
    /// - Returns: The position of the TimedTextRegion
    public func position(_ value: WindowsMediaCore_TimedTextPoint) throws {
        try _interop.put_Position(value)
    }

    /// Gets a value indicating the method in which lines of text scroll through the region.
    /// - Returns: A value indicating the method in which lines of text scroll through the region.
    public var scrollMode: WindowsMediaCore_TimedTextScrollMode {
        get throws {
            try _interop.get_ScrollMode()
        }
    }

    /// Gets a value indicating the method in which lines of text scroll through the region.
    /// - Returns: A value indicating the method in which lines of text scroll through the region.
    public func scrollMode(_ value: WindowsMediaCore_TimedTextScrollMode) throws {
        try _interop.put_ScrollMode(value)
    }

    /// Gets or sets a value indicating whether text wraps when it reaches the edge of the TimedTextRegion.
    /// - Returns: A value indicating whether text wraps when it reaches the edge of the region.
    public var textWrapping: WindowsMediaCore_TimedTextWrapping {
        get throws {
            try _interop.get_TextWrapping()
        }
    }

    /// Gets or sets a value indicating whether text wraps when it reaches the edge of the TimedTextRegion.
    /// - Returns: A value indicating whether text wraps when it reaches the edge of the region.
    public func textWrapping(_ value: WindowsMediaCore_TimedTextWrapping) throws {
        try _interop.put_TextWrapping(value)
    }

    /// Gets or sets a value indicating the direction that text flows within the TimedTextRegion.
    /// - Returns: A value indicating the direction that text flows within the region.
    public var writingMode: WindowsMediaCore_TimedTextWritingMode {
        get throws {
            try _interop.get_WritingMode()
        }
    }

    /// Gets or sets a value indicating the direction that text flows within the TimedTextRegion.
    /// - Returns: A value indicating the direction that text flows within the region.
    public func writingMode(_ value: WindowsMediaCore_TimedTextWritingMode) throws {
        try _interop.put_WritingMode(value)
    }

    /// Gets or sets the Z-order of the TimedTextRegion, relative to other active regions on the screen, in case they overlap.
    /// - Returns: The Z-order of the TimedTextRegion.
    public var zindex: Swift.Int32 {
        get throws {
            try _interop.get_ZIndex()
        }
    }

    /// Gets or sets the Z-order of the TimedTextRegion, relative to other active regions on the screen, in case they overlap.
    /// - Returns: The Z-order of the TimedTextRegion.
    public func zindex(_ value: Swift.Int32) throws {
        try _interop.put_ZIndex(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.Core.TimedTextRegion", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}