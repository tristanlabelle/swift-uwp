// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a speech cue that can be included in a TimedMetadataTrack. This cue can be used to receive events based on metadata included in a text-to-speech (TTS) stream, such as word boundaries, sentence boundaries, and Speech Sythesis Markup Language (SSML) bookmarks.
public final class WindowsMediaCore_SpeechCue: WindowsRuntime.WinRTImport<WindowsMediaCore_SpeechCueProjection>, WindowsMediaCore_IMediaCueProtocol {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsMediaCore_SpeechCueProjection.self))
    }

    // MARK: Windows.Media.Core.ISpeechCue members

    /// Gets or sets the offset into the string contained in the Text property of the last character in the word or sentence associated with the cue.
    /// - Returns: The offset into the string contained in the Text property of the last character in the word or sentence associated with the cue.
    public var endPositionInInput: Swift.Int32? {
        get throws {
            try _interop.get_EndPositionInInput()
        }
    }

    /// Gets or sets the offset into the string contained in the Text property of the last character in the word or sentence associated with the cue.
    /// - Returns: The offset into the string contained in the Text property of the last character in the word or sentence associated with the cue.
    public func endPositionInInput(_ value: Swift.Int32?) throws {
        try _interop.put_EndPositionInInput(value)
    }

    /// Gets or sets the offset into the string contained in the Text property of the first character in the word or sentence associated with the cue.
    /// - Returns: The offset into the string contained in the Text property of the first character in the word or sentence associated with the cue.
    public var startPositionInInput: Swift.Int32? {
        get throws {
            try _interop.get_StartPositionInInput()
        }
    }

    /// Gets or sets the offset into the string contained in the Text property of the first character in the word or sentence associated with the cue.
    /// - Returns: The offset into the string contained in the Text property of the first character in the word or sentence associated with the cue.
    public func startPositionInInput(_ value: Swift.Int32?) throws {
        try _interop.put_StartPositionInInput(value)
    }

    /// Gets or sets the text associated with the speech cue.
    /// - Returns: The text associated with the speech cue.
    public var text: Swift.String {
        get throws {
            try _interop.get_Text()
        }
    }

    /// Gets or sets the text associated with the speech cue.
    /// - Returns: The text associated with the speech cue.
    public func text(_ value: Swift.String) throws {
        try _interop.put_Text(value)
    }

    // MARK: Windows.Media.Core.IMediaCue members

    /// Gets or sets the duration of the cue.
    /// - Returns: The duration of the cue.
    public var duration: WindowsFoundation_TimeSpan {
        get throws {
            try _imediaCue.get_Duration()
        }
    }

    /// Gets or sets the duration of the cue.
    /// - Returns: The duration of the cue.
    public func duration(_ value: WindowsFoundation_TimeSpan) throws {
        try _imediaCue.put_Duration(value)
    }

    /// Gets the identifier for the timed metadata track
    /// - Returns: The identifier for the timed metadata track
    public var id: Swift.String {
        get throws {
            try _imediaCue.get_Id()
        }
    }

    /// Gets the identifier for the timed metadata track
    /// - Returns: The identifier for the timed metadata track
    public func id(_ value: Swift.String) throws {
        try _imediaCue.put_Id(value)
    }

    /// Gets the start time of the cue.
    /// - Returns: The start time of the cue.
    public var startTime: WindowsFoundation_TimeSpan {
        get throws {
            try _imediaCue.get_StartTime()
        }
    }

    /// Gets the start time of the cue.
    /// - Returns: The start time of the cue.
    public func startTime(_ value: WindowsFoundation_TimeSpan) throws {
        try _imediaCue.put_StartTime(value)
    }

    // MARK: Implementation details

    private var _imediaCue_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaCore_IMediaCue>? = nil

    internal var _imediaCue: COM.COMInterop<CWinRT.SWRT_WindowsMediaCore_IMediaCue> {
        get throws {
            try _imediaCue_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaCore_IMediaCue.iid).cast(to: CWinRT.SWRT_WindowsMediaCore_IMediaCue.self)
            }
        }
    }

    deinit {
        _imediaCue_storage?.release()
    }

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.Core.SpeechCue", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}