// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents an effect that attempts to detect faces in a video stream.
public final class WindowsMediaCore_FaceDetectionEffect: WindowsRuntime.WinRTImport<WindowsMediaCore_FaceDetectionEffectProjection>, WindowsMedia_IMediaExtensionProtocol {
    // MARK: Windows.Media.Core.IFaceDetectionEffect members

    /// Gets or sets the time span for which face detection should be performed.
    /// - Returns: The time span for which face detection should be performed.
    public var desiredDetectionInterval: WindowsFoundation_TimeSpan {
        get throws {
            try _interop.get_DesiredDetectionInterval()
        }
    }

    /// Gets or sets the time span for which face detection should be performed.
    /// - Returns: The time span for which face detection should be performed.
    public func desiredDetectionInterval(_ value: WindowsFoundation_TimeSpan) throws {
        try _interop.put_DesiredDetectionInterval(value)
    }

    /// Gets or sets a value indicating whether face detection is enabled.
    /// - Returns: True if face detection is enabled; otherwise, false.
    public var enabled: Swift.Bool {
        get throws {
            try _interop.get_Enabled()
        }
    }

    /// Gets or sets a value indicating whether face detection is enabled.
    /// - Returns: True if face detection is enabled; otherwise, false.
    public func enabled(_ value: Swift.Bool) throws {
        try _interop.put_Enabled(value)
    }

    /// Occurs when a face is detected. See FaceDetectedEventArgs.
    public func faceDetected(adding handler: WindowsFoundation_TypedEventHandler<WindowsMediaCore_FaceDetectionEffect?, WindowsMediaCore_FaceDetectedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_FaceDetected(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: faceDetected)
    }

    public func faceDetected(removing cookie: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_FaceDetected(cookie)
    }

    // MARK: Windows.Media.IMediaExtension members

    /// Sets properties on the IMediaExtension.
    /// - Parameter configuration: The property set.
    public func setProperties(_ configuration: WindowsFoundationCollections_IPropertySet?) throws {
        try _imediaExtension.setProperties(configuration)
    }

    // MARK: Implementation details

    private var _imediaExtension_storage: COM.COMInterop<CWinRT.SWRT_WindowsMedia_IMediaExtension>? = nil

    internal var _imediaExtension: COM.COMInterop<CWinRT.SWRT_WindowsMedia_IMediaExtension> {
        get throws {
            try _imediaExtension_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMedia_IMediaExtension.iid).cast(to: CWinRT.SWRT_WindowsMedia_IMediaExtension.self)
            }
        }
    }

    deinit {
        _imediaExtension_storage?.release()
    }
}