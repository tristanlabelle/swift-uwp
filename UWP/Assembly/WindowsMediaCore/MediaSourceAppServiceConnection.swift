// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Enables the implementation of an app service that provides a custom media source that can be consumed by UWP apps.
public final class WindowsMediaCore_MediaSourceAppServiceConnection: WindowsRuntime.WinRTImport<WindowsMediaCore_MediaSourceAppServiceConnectionProjection> {
    // MARK: Windows.Media.Core.IMediaSourceAppServiceConnectionFactory members

    public convenience init(_ appServiceConnection: WindowsApplicationModelAppService_AppServiceConnection?) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._imediaSourceAppServiceConnectionFactory.create(appServiceConnection)))
    }

    // MARK: Windows.Media.Core.IMediaSourceAppServiceConnection members

    /// Raised by the system to request the initialization of a new MediaStreamSource.
    public func initializeMediaStreamSourceRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsMediaCore_MediaSourceAppServiceConnection?, WindowsMediaCore_InitializeMediaStreamSourceRequestedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_InitializeMediaStreamSourceRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: initializeMediaStreamSourceRequested)
    }

    public func initializeMediaStreamSourceRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_InitializeMediaStreamSourceRequested(token)
    }

    /// Notifies the system that the app service is ready to receive media stream source requests.
    public func start() throws {
        try _interop.start()
    }

    // MARK: Implementation details

    private static var _imediaSourceAppServiceConnectionFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaCore_IMediaSourceAppServiceConnectionFactory>? = nil

    internal static var _imediaSourceAppServiceConnectionFactory: COM.COMInterop<CWinRT.SWRT_WindowsMediaCore_IMediaSourceAppServiceConnectionFactory> {
        get throws {
            try _imediaSourceAppServiceConnectionFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.Core.MediaSourceAppServiceConnection", id: CWinRT.SWRT_WindowsMediaCore_IMediaSourceAppServiceConnectionFactory.iid)
            }
        }
    }
}