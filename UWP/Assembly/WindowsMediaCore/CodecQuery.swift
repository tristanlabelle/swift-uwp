// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides the FindAllAsync method which allows you to enumerate all media codecs installed on the system.
public final class WindowsMediaCore_CodecQuery: WindowsRuntime.WinRTImport<WindowsMediaCore_CodecQueryProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsMediaCore_CodecQueryProjection.self))
    }

    // MARK: Windows.Media.Core.ICodecQuery members

    /// Returns a read-only list of all media codecs installed on the system that meet the specified requirements.
    /// - Parameter kind: A value that specifies whether the method should return codecs that operate on video or audio data.
    /// - Parameter category: A value that specifies whether the method should return codecs that are encoders or decoders.
    /// - Parameter subType: A value specifying the media encoding subtype that all returned codecs must support. This value can be a string representation of one of the subtype GUIDs listed in Audio Subtype GUIDs or Video Subtyp GUIDs. The CodecSubtypes class provides properties for most supported media subtypes that return the string representation of the subtype GUID. You can also specify a FOURCC code for this parameter. For more information, see FOURCC Codes.
    public func findAllAsync(_ kind: WindowsMediaCore_CodecKind, _ category: WindowsMediaCore_CodecCategory, _ subType: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsMediaCore_CodecInfo?>?> {
        try COM.NullResult.unwrap(_interop.findAllAsync(kind, category, subType))
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.Core.CodecQuery", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}