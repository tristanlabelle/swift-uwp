// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents an effect that analyzes video frames to determine if any of the supported variable photo sequence capture techniques may produce a higher-quality captured image.
public final class WindowsMediaCore_SceneAnalysisEffect: WindowsRuntime.WinRTImport<WindowsMediaCore_SceneAnalysisEffectProjection>, WindowsMedia_IMediaExtensionProtocol {
    // MARK: Windows.Media.Core.ISceneAnalysisEffect members

    /// Gets or sets the duration of the time window during which video frames are analyzed.
    /// - Returns: The duration of the time window during which video frames are analyzed.
    public var desiredAnalysisInterval: WindowsFoundation_TimeSpan {
        get throws {
            try _interop.get_DesiredAnalysisInterval()
        }
    }

    /// Gets or sets the duration of the time window during which video frames are analyzed.
    /// - Returns: The duration of the time window during which video frames are analyzed.
    public func desiredAnalysisInterval(_ value: WindowsFoundation_TimeSpan) throws {
        try _interop.put_DesiredAnalysisInterval(value)
    }

    /// Gets a HighDynamicRangeControl object that is used to enable or disable High Dynamic Range (HDR) analysis.
    /// - Returns: A HighDynamicRangeControl object that is used to enable or disable High Dynamic Range (HDR) analysis.
    public var highDynamicRangeAnalyzer: WindowsMediaCore_HighDynamicRangeControl {
        get throws {
            try COM.NullResult.unwrap(_interop.get_HighDynamicRangeAnalyzer())
        }
    }

    /// Raised when the scene analysis is complete. See SceneAnalyzedEventArgs
    public func sceneAnalyzed(adding handler: WindowsFoundation_TypedEventHandler<WindowsMediaCore_SceneAnalysisEffect?, WindowsMediaCore_SceneAnalyzedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_SceneAnalyzed(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: sceneAnalyzed)
    }

    public func sceneAnalyzed(removing cookie: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_SceneAnalyzed(cookie)
    }

    // MARK: Windows.Media.IMediaExtension members

    /// Sets properties on the IMediaExtension.
    /// - Parameter configuration: The property set.
    public func setProperties(_ configuration: WindowsFoundationCollections_IPropertySet?) throws {
        try _imediaExtension.setProperties(configuration)
    }

    // MARK: Implementation details

    private var _imediaExtension_storage: COM.COMInterop<CWinRT.SWRT_WindowsMedia_IMediaExtension>? = nil

    internal var _imediaExtension: COM.COMInterop<CWinRT.SWRT_WindowsMedia_IMediaExtension> {
        get throws {
            try _imediaExtension_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMedia_IMediaExtension.iid).cast(to: CWinRT.SWRT_WindowsMedia_IMediaExtension.self)
            }
        }
    }

    deinit {
        _imediaExtension_storage?.release()
    }
}