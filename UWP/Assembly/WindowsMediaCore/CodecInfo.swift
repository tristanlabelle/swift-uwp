// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides information about a media codec that is installed on the system.
public final class WindowsMediaCore_CodecInfo: WindowsRuntime.WinRTImport<WindowsMediaCore_CodecInfoProjection> {
    // MARK: Windows.Media.Core.ICodecInfo members

    /// Gets a value that specifies whether the codec is an encoder or a decoder.
    /// - Returns: A value that specifies whether the codec is an encoder or a decoder.
    public var category: WindowsMediaCore_CodecCategory {
        get throws {
            try _interop.get_Category()
        }
    }

    /// Gets the friendly display name for the codec.
    /// - Returns: The friendly display name for the codec.
    public var displayName: Swift.String {
        get throws {
            try _interop.get_DisplayName()
        }
    }

    /// Gets a value that indicates whether the codec runs in your app's process space rather than in a separate app service.
    /// - Returns: True if the codec is runs in the app process space; false if the codec runs in a separate app service.
    public var isTrusted: Swift.Bool {
        get throws {
            try _interop.get_IsTrusted()
        }
    }

    /// Gets a value specifying whether the codec operates on audio or video data.
    /// - Returns: A value specifying whether the codec operates on audio or video data.
    public var kind: WindowsMediaCore_CodecKind {
        get throws {
            try _interop.get_Kind()
        }
    }

    /// Gets a read-only list of values that specify the media subtypes supported by the codec.
    /// - Returns: A read-only list of values that specify the media subtypes supported by the codec.
    public var subtypes: WindowsFoundationCollections_IVectorView<Swift.String> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Subtypes())
        }
    }

    // MARK: Implementation details
}