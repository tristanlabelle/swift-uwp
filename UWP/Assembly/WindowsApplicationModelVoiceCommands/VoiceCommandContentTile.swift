// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// An asset, containing image, text, and link data, provided by the background app service for display on the **Cortana** canvas.
public final class WindowsApplicationModelVoiceCommands_VoiceCommandContentTile: WindowsRuntime.WinRTImport<WindowsApplicationModelVoiceCommands_VoiceCommandContentTileProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsApplicationModelVoiceCommands_VoiceCommandContentTileProjection.self))
    }

    // MARK: Windows.ApplicationModel.VoiceCommands.IVoiceCommandContentTile members

    /// Gets or sets supplementary information the background app service can associate with the content tile. This information is not used by **Cortana**.
    /// - Returns: Supplementary information associated with the content tile.
    public var appContext: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_interop.get_AppContext())
        }
    }

    /// Gets or sets supplementary information the background app service can associate with the content tile. This information is not used by **Cortana**.
    /// - Returns: Supplementary information associated with the content tile.
    public func appContext(_ value: WindowsRuntime.IInspectable?) throws {
        try _interop.put_AppContext(value)
    }

    /// Gets or sets a string as a launch parameter that can be associated with the response by the background app service.
    /// - Returns: The key/value pair.
    public var appLaunchArgument: Swift.String {
        get throws {
            try _interop.get_AppLaunchArgument()
        }
    }

    /// Gets or sets a string as a launch parameter that can be associated with the response by the background app service.
    /// - Returns: The key/value pair.
    public func appLaunchArgument(_ value: Swift.String) throws {
        try _interop.put_AppLaunchArgument(value)
    }

    /// Gets or sets the layout template used for the content tiles on the **Cortana** canvas.
    /// - Returns: The content tile template.
    public var contentTileType: WindowsApplicationModelVoiceCommands_VoiceCommandContentTileType {
        get throws {
            try _interop.get_ContentTileType()
        }
    }

    /// Gets or sets the layout template used for the content tiles on the **Cortana** canvas.
    /// - Returns: The content tile template.
    public func contentTileType(_ value: WindowsApplicationModelVoiceCommands_VoiceCommandContentTileType) throws {
        try _interop.put_ContentTileType(value)
    }

    /// Gets or sets the image used on the content tile.
    /// - Returns: The image associated with the content tile.
    public var image: WindowsStorage_IStorageFile {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Image())
        }
    }

    /// Gets or sets the image used on the content tile.
    /// - Returns: The image associated with the content tile.
    public func image(_ value: WindowsStorage_IStorageFile?) throws {
        try _interop.put_Image(value)
    }

    /// Gets or sets the first line of text used on the content tile.
    /// - Returns: The first line of text associated with the content tile.
    public var textLine1: Swift.String {
        get throws {
            try _interop.get_TextLine1()
        }
    }

    /// Gets or sets the first line of text used on the content tile.
    /// - Returns: The first line of text associated with the content tile.
    public func textLine1(_ value: Swift.String) throws {
        try _interop.put_TextLine1(value)
    }

    /// Gets or sets the second line of text used on the content tile.
    /// - Returns: The second line of text associated with the content tile.
    public var textLine2: Swift.String {
        get throws {
            try _interop.get_TextLine2()
        }
    }

    /// Gets or sets the second line of text used on the content tile.
    /// - Returns: The second line of text associated with the content tile.
    public func textLine2(_ value: Swift.String) throws {
        try _interop.put_TextLine2(value)
    }

    /// Gets or sets the third line of text used on the content tile.
    /// - Returns: The third line of text associated with the content tile.
    public var textLine3: Swift.String {
        get throws {
            try _interop.get_TextLine3()
        }
    }

    /// Gets or sets the third line of text used on the content tile.
    /// - Returns: The third line of text associated with the content tile.
    public func textLine3(_ value: Swift.String) throws {
        try _interop.put_TextLine3(value)
    }

    /// Gets or sets the title used on the content tile.
    /// - Returns: The title associated with the content tile.
    public var title: Swift.String {
        get throws {
            try _interop.get_Title()
        }
    }

    /// Gets or sets the title used on the content tile.
    /// - Returns: The title associated with the content tile.
    public func title(_ value: Swift.String) throws {
        try _interop.put_Title(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.VoiceCommands.VoiceCommandContentTile", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}