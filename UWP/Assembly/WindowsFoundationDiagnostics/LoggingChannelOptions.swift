// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents advanced settings that you can use to configure a LoggingChannel object.
public final class WindowsFoundationDiagnostics_LoggingChannelOptions: WindowsRuntime.WinRTImport<WindowsFoundationDiagnostics_LoggingChannelOptionsProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsFoundationDiagnostics_LoggingChannelOptionsProjection.self))
    }

    // MARK: Windows.Foundation.Diagnostics.ILoggingChannelOptionsFactory members

    public convenience init(_ group: Foundation.UUID) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iloggingChannelOptionsFactory.create(group)))
    }

    // MARK: Windows.Foundation.Diagnostics.ILoggingChannelOptions members

    /// Gets or sets the channel group identifier.
    /// - Returns: The group identifier.
    public var group: Foundation.UUID {
        get throws {
            try _interop.get_Group()
        }
    }

    /// Gets or sets the channel group identifier.
    /// - Returns: The group identifier.
    public func group(_ value: Foundation.UUID) throws {
        try _interop.put_Group(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Foundation.Diagnostics.LoggingChannelOptions", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _iloggingChannelOptionsFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundationDiagnostics_ILoggingChannelOptionsFactory>? = nil

    internal static var _iloggingChannelOptionsFactory: COM.COMInterop<CWinRT.SWRT_WindowsFoundationDiagnostics_ILoggingChannelOptionsFactory> {
        get throws {
            try _iloggingChannelOptionsFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Foundation.Diagnostics.LoggingChannelOptions", id: CWinRT.SWRT_WindowsFoundationDiagnostics_ILoggingChannelOptionsFactory.iid)
            }
        }
    }
}