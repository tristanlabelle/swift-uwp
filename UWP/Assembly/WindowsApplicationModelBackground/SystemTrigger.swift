// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a system event that triggers a background task to run.
public final class WindowsApplicationModelBackground_SystemTrigger: WindowsRuntime.WinRTImport<WindowsApplicationModelBackground_SystemTriggerProjection>, WindowsApplicationModelBackground_IBackgroundTriggerProtocol {
    // MARK: Windows.ApplicationModel.Background.ISystemTriggerFactory members

    public convenience init(_ triggerType: WindowsApplicationModelBackground_SystemTriggerType, _ oneShot: Swift.Bool) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._isystemTriggerFactory.create(triggerType, oneShot)))
    }

    // MARK: Windows.ApplicationModel.Background.ISystemTrigger members

    /// Gets whether a system event trigger will be used only once.
    /// - Returns: True if the system event trigger will be used only once; false if it will be used every time the event occurs.
    public var oneShot: Swift.Bool {
        get throws {
            try _interop.get_OneShot()
        }
    }

    /// Gets the system event type of a system event trigger.
    /// - Returns: A system event type.
    public var triggerType: WindowsApplicationModelBackground_SystemTriggerType {
        get throws {
            try _interop.get_TriggerType()
        }
    }

    // MARK: Implementation details

    private var _ibackgroundTrigger_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger>? = nil

    internal var _ibackgroundTrigger: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger> {
        get throws {
            try _ibackgroundTrigger_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger.self)
            }
        }
    }

    deinit {
        _ibackgroundTrigger_storage?.release()
    }

    private static var _isystemTriggerFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_ISystemTriggerFactory>? = nil

    internal static var _isystemTriggerFactory: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_ISystemTriggerFactory> {
        get throws {
            try _isystemTriggerFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Background.SystemTrigger", id: CWinRT.SWRT_WindowsApplicationModelBackground_ISystemTriggerFactory.iid)
            }
        }
    }
}