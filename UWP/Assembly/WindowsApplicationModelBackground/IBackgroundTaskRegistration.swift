// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides access to a registered background task.
public protocol WindowsApplicationModelBackground_IBackgroundTaskRegistrationProtocol: IInspectableProtocol {
    /// Gets the name of a registered background task.
    /// - Returns: The description specified with BackgroundTaskBuilder.Name when the task was created.
    var name: Swift.String { get throws }

    /// Gets the identifier of a registered background task.
    /// - Returns: The unique identifier for the task. This identifier is generated by the system when the task is registered.
    var taskId: Foundation.UUID { get throws }

    /// Attaches a completed event handler to the registered background task.
    func completed(adding handler: WindowsApplicationModelBackground_BackgroundTaskCompletedEventHandler?) throws -> WindowsRuntime.EventRegistration
    func completed(removing cookie: WindowsRuntime.EventRegistrationToken) throws

    /// Attaches a progress event handler to the registered background task.
    func progress(adding handler: WindowsApplicationModelBackground_BackgroundTaskProgressEventHandler?) throws -> WindowsRuntime.EventRegistration
    func progress(removing cookie: WindowsRuntime.EventRegistrationToken) throws

    /// Unregisters a registered background task.
    /// - Parameter cancelTask: True if currently running instances of this background task should be canceled. If this parameter is false, currently running instances of this background task should be allowed to finish. Canceled instances receive a Canceled event with a BackgroundTaskCancellationReason of **Abort**.
    func unregister(_ cancelTask: Swift.Bool) throws
}

/// Provides access to a registered background task.
public typealias WindowsApplicationModelBackground_IBackgroundTaskRegistration = any WindowsApplicationModelBackground_IBackgroundTaskRegistrationProtocol