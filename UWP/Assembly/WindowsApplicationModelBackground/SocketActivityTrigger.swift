// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a trigger that launches a background task for handling socket activity.
public final class WindowsApplicationModelBackground_SocketActivityTrigger: WindowsRuntime.WinRTImport<WindowsApplicationModelBackground_SocketActivityTriggerProjection>, WindowsApplicationModelBackground_IBackgroundTriggerProtocol {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsApplicationModelBackground_SocketActivityTriggerProjection.self))
    }

    // MARK: Windows.ApplicationModel.Background.ISocketActivityTrigger members

    /// Gets whether a SocketActivityTrigger can wake the machine from a low power state.
    /// - Returns: **True** indicates that this trigger can wake the machine from a low power state; **false** otherwise.
    public var isWakeFromLowPowerSupported: Swift.Bool {
        get throws {
            try _isocketActivityTrigger.get_IsWakeFromLowPowerSupported()
        }
    }

    // MARK: Implementation details

    private var _isocketActivityTrigger_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_ISocketActivityTrigger>? = nil

    internal var _isocketActivityTrigger: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_ISocketActivityTrigger> {
        get throws {
            try _isocketActivityTrigger_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelBackground_ISocketActivityTrigger.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelBackground_ISocketActivityTrigger.self)
            }
        }
    }

    deinit {
        _isocketActivityTrigger_storage?.release()
    }

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Background.SocketActivityTrigger", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}