// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides the ability to run custom handlers when prefetching web resources.
public final class WindowsApplicationModelBackground_ContentPrefetchTrigger: WindowsRuntime.WinRTImport<WindowsApplicationModelBackground_ContentPrefetchTriggerProjection>, WindowsApplicationModelBackground_IBackgroundTriggerProtocol {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsApplicationModelBackground_ContentPrefetchTriggerProjection.self))
    }

    // MARK: Windows.ApplicationModel.Background.IContentPrefetchTriggerFactory members

    public convenience init(_ waitInterval: WindowsFoundation_TimeSpan) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._icontentPrefetchTriggerFactory.create(waitInterval)))
    }

    // MARK: Windows.ApplicationModel.Background.IContentPrefetchTrigger members

    /// Retrieves the time interval for prefetching web content.
    /// - Returns: The time interval set for refreshing web content.
    public var waitInterval: WindowsFoundation_TimeSpan {
        get throws {
            try _interop.get_WaitInterval()
        }
    }

    // MARK: Implementation details

    private var _ibackgroundTrigger_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger>? = nil

    internal var _ibackgroundTrigger: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger> {
        get throws {
            try _ibackgroundTrigger_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger.self)
            }
        }
    }

    deinit {
        _ibackgroundTrigger_storage?.release()
    }

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Background.ContentPrefetchTrigger", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _icontentPrefetchTriggerFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_IContentPrefetchTriggerFactory>? = nil

    internal static var _icontentPrefetchTriggerFactory: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_IContentPrefetchTriggerFactory> {
        get throws {
            try _icontentPrefetchTriggerFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Background.ContentPrefetchTrigger", id: CWinRT.SWRT_WindowsApplicationModelBackground_IContentPrefetchTriggerFactory.iid)
            }
        }
    }
}