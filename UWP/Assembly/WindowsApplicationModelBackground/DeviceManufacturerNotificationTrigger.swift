// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a trigger that launches a background task to enable device manufacturer operations.
public final class WindowsApplicationModelBackground_DeviceManufacturerNotificationTrigger: WindowsRuntime.WinRTImport<WindowsApplicationModelBackground_DeviceManufacturerNotificationTriggerProjection>, WindowsApplicationModelBackground_IBackgroundTriggerProtocol {
    // MARK: Windows.ApplicationModel.Background.IDeviceManufacturerNotificationTriggerFactory members

    public convenience init(_ triggerQualifier: Swift.String, _ oneShot: Swift.Bool) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ideviceManufacturerNotificationTriggerFactory.create(triggerQualifier, oneShot)))
    }

    // MARK: Windows.ApplicationModel.Background.IDeviceManufacturerNotificationTrigger members

    /// Gets whether the trigger is used only once.
    /// - Returns: True if the trigger is used only once.
    public var oneShot: Swift.Bool {
        get throws {
            try _interop.get_OneShot()
        }
    }

    /// Gets an app-defined string that qualifies the trigger.
    /// - Returns: An app-defined string that qualifies the trigger.
    public var triggerQualifier: Swift.String {
        get throws {
            try _interop.get_TriggerQualifier()
        }
    }

    // MARK: Implementation details

    private var _ibackgroundTrigger_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger>? = nil

    internal var _ibackgroundTrigger: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger> {
        get throws {
            try _ibackgroundTrigger_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger.self)
            }
        }
    }

    deinit {
        _ibackgroundTrigger_storage?.release()
    }

    private static var _ideviceManufacturerNotificationTriggerFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_IDeviceManufacturerNotificationTriggerFactory>? = nil

    internal static var _ideviceManufacturerNotificationTriggerFactory: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_IDeviceManufacturerNotificationTriggerFactory> {
        get throws {
            try _ideviceManufacturerNotificationTriggerFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Background.DeviceManufacturerNotificationTrigger", id: CWinRT.SWRT_WindowsApplicationModelBackground_IDeviceManufacturerNotificationTriggerFactory.iid)
            }
        }
    }
}