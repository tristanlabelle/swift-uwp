// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Constructs a Generic Attributes (GATT) service that can be persisted in the background.
public final class WindowsApplicationModelBackground_GattServiceProviderTrigger: WindowsRuntime.WinRTImport<WindowsApplicationModelBackground_GattServiceProviderTriggerProjection>, WindowsApplicationModelBackground_IBackgroundTriggerProtocol {
    // MARK: Windows.ApplicationModel.Background.IGattServiceProviderTrigger members

    /// Gets the advertising parameters which control whether the radio is connected/discoverable.
    public var advertisingParameters: WindowsDevicesBluetoothGenericAttributeProfile_GattServiceProviderAdvertisingParameters {
        get throws {
            try COM.NullResult.unwrap(_interop.get_AdvertisingParameters())
        }
    }

    /// Gets the advertising parameters which control whether the radio is connected/discoverable.
    public func advertisingParameters(_ value: WindowsDevicesBluetoothGenericAttributeProfile_GattServiceProviderAdvertisingParameters?) throws {
        try _interop.put_AdvertisingParameters(value)
    }

    /// Gets the service associated with this trigger.
    /// - Returns: The service.
    public var service: WindowsDevicesBluetoothGenericAttributeProfile_GattLocalService {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Service())
        }
    }

    /// Gets the trigger identifier.
    /// - Returns: The trigger ID.
    public var triggerId: Swift.String {
        get throws {
            try _interop.get_TriggerId()
        }
    }

    // MARK: Windows.ApplicationModel.Background.IGattServiceProviderTriggerStatics members

    /// Creates a GATT provider service.
    /// - Parameter triggerId: The identifier for the trigger.
    /// - Parameter serviceUuid: The universally unique identifier for the trigger.
    /// - Returns: Await the asynchronous operation to get the **GattServiceProviderTriggerResult**.
    public static func createAsync(_ triggerId: Swift.String, _ serviceUuid: Foundation.UUID) throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelBackground_GattServiceProviderTriggerResult?> {
        try COM.NullResult.unwrap(_igattServiceProviderTriggerStatics.createAsync(triggerId, serviceUuid))
    }

    // MARK: Implementation details

    private var _ibackgroundTrigger_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger>? = nil

    internal var _ibackgroundTrigger: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger> {
        get throws {
            try _ibackgroundTrigger_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger.self)
            }
        }
    }

    deinit {
        _ibackgroundTrigger_storage?.release()
    }

    private static var _igattServiceProviderTriggerStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_IGattServiceProviderTriggerStatics>? = nil

    internal static var _igattServiceProviderTriggerStatics: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_IGattServiceProviderTriggerStatics> {
        get throws {
            try _igattServiceProviderTriggerStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Background.GattServiceProviderTrigger", id: CWinRT.SWRT_WindowsApplicationModelBackground_IGattServiceProviderTriggerStatics.iid)
            }
        }
    }
}