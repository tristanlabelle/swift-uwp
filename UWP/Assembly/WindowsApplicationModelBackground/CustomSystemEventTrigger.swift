// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// This class allows you to specify a custom system trigger so that you can register it and respond when it is triggered by the system.
public final class WindowsApplicationModelBackground_CustomSystemEventTrigger: WindowsRuntime.WinRTImport<WindowsApplicationModelBackground_CustomSystemEventTriggerProjection>, WindowsApplicationModelBackground_IBackgroundTriggerProtocol {
    // MARK: Windows.ApplicationModel.Background.ICustomSystemEventTriggerFactory members

    public convenience init(_ triggerId: Swift.String, _ recurrence: WindowsApplicationModelBackground_CustomSystemEventTriggerRecurrence) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._icustomSystemEventTriggerFactory.create(triggerId, recurrence)))
    }

    // MARK: Windows.ApplicationModel.Background.ICustomSystemEventTrigger members

    /// Gets when this custom system event trigger may be activated.
    /// - Returns: An enum that specifies when this custom system event trigger may be activated.
    public var recurrence: WindowsApplicationModelBackground_CustomSystemEventTriggerRecurrence {
        get throws {
            try _interop.get_Recurrence()
        }
    }

    /// The trigger identifier that uniquely identifies the background task that needs to be started by this trigger.
    /// - Returns: The trigger identifier string.
    public var triggerId: Swift.String {
        get throws {
            try _interop.get_TriggerId()
        }
    }

    // MARK: Implementation details

    private var _ibackgroundTrigger_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger>? = nil

    internal var _ibackgroundTrigger: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger> {
        get throws {
            try _ibackgroundTrigger_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger.self)
            }
        }
    }

    deinit {
        _ibackgroundTrigger_storage?.release()
    }

    private static var _icustomSystemEventTriggerFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_ICustomSystemEventTriggerFactory>? = nil

    internal static var _icustomSystemEventTriggerFactory: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_ICustomSystemEventTriggerFactory> {
        get throws {
            try _icustomSystemEventTriggerFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Background.CustomSystemEventTrigger", id: CWinRT.SWRT_WindowsApplicationModelBackground_ICustomSystemEventTriggerFactory.iid)
            }
        }
    }
}