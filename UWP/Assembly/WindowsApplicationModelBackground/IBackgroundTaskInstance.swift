// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides access to a background task instance.
public protocol WindowsApplicationModelBackground_IBackgroundTaskInstanceProtocol: IInspectableProtocol {
    /// Gets the instance ID of the background task instance.
    /// - Returns: A unique identifier for the background task instance. This identifier is generated by the system when the instance is created.
    var instanceId: Foundation.UUID { get throws }

    /// Gets or sets progress status for a background task instance.
    /// - Returns: A value defined by the application to indicate the task's progress.
    var progress: Swift.UInt32 { get throws }
    func progress(_ value: Swift.UInt32) throws

    /// Gets the number of times resource management policy caused the background task to be suspended.
    /// - Returns: The number of times the background task has been suspended.
    var suspendedCount: Swift.UInt32 { get throws }

    /// Gets access to the registered background task for this background task instance.
    /// - Returns: An interface that provides access to the registered background task.
    var task: WindowsApplicationModelBackground_BackgroundTaskRegistration { get throws }

    /// Gets additional information associated with a background task instance.
    /// - Returns: Represents additional information for the background task. If the background task is triggered by a mobile network operator notification, this property is an instance of a NetworkOperatorNotificationEventDetails class. If the background task is triggered by a system event or time event, this property is not used.
    var triggerDetails: WindowsRuntime.IInspectable { get throws }

    /// Attaches a cancellation event handler to the background task instance.
    func canceled(adding cancelHandler: WindowsApplicationModelBackground_BackgroundTaskCanceledEventHandler?) throws -> WindowsRuntime.EventRegistration
    func canceled(removing cookie: WindowsRuntime.EventRegistrationToken) throws

    /// Informs the system that the background task might continue to perform work after the IBackgroundTask.Run method returns.
    /// - Returns: A background task deferral.
    func getDeferral() throws -> WindowsApplicationModelBackground_BackgroundTaskDeferral
}

/// Provides access to a background task instance.
public typealias WindowsApplicationModelBackground_IBackgroundTaskInstance = any WindowsApplicationModelBackground_IBackgroundTaskInstanceProtocol