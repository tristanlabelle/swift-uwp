// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a trigger that responds when a threshold limit for a sensor is crossed.
public final class WindowsApplicationModelBackground_SensorDataThresholdTrigger: WindowsRuntime.WinRTImport<WindowsApplicationModelBackground_SensorDataThresholdTriggerProjection>, WindowsApplicationModelBackground_IBackgroundTriggerProtocol {
    // MARK: Windows.ApplicationModel.Background.ISensorDataThresholdTriggerFactory members

    public convenience init(_ threshold: WindowsDevicesSensors_ISensorDataThreshold?) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._isensorDataThresholdTriggerFactory.create(threshold)))
    }

    // MARK: Implementation details

    private var _ibackgroundTrigger_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger>? = nil

    internal var _ibackgroundTrigger: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger> {
        get throws {
            try _ibackgroundTrigger_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundTrigger.self)
            }
        }
    }

    deinit {
        _ibackgroundTrigger_storage?.release()
    }

    private static var _isensorDataThresholdTriggerFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_ISensorDataThresholdTriggerFactory>? = nil

    internal static var _isensorDataThresholdTriggerFactory: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_ISensorDataThresholdTriggerFactory> {
        get throws {
            try _isensorDataThresholdTriggerFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Background.SensorDataThresholdTrigger", id: CWinRT.SWRT_WindowsApplicationModelBackground_ISensorDataThresholdTriggerFactory.iid)
            }
        }
    }
}