// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a system condition that must be in effect for a background task to run.
public final class WindowsApplicationModelBackground_SystemCondition: WindowsRuntime.WinRTImport<WindowsApplicationModelBackground_SystemConditionProjection>, WindowsApplicationModelBackground_IBackgroundConditionProtocol {
    // MARK: Windows.ApplicationModel.Background.ISystemConditionFactory members

    public convenience init(_ conditionType: WindowsApplicationModelBackground_SystemConditionType) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._isystemConditionFactory.create(conditionType)))
    }

    // MARK: Windows.ApplicationModel.Background.ISystemCondition members

    /// Gets the condition type of a system condition.
    /// - Returns: The condition that must be in effect for the background task to run.
    public var conditionType: WindowsApplicationModelBackground_SystemConditionType {
        get throws {
            try _interop.get_ConditionType()
        }
    }

    // MARK: Implementation details

    private var _ibackgroundCondition_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundCondition>? = nil

    internal var _ibackgroundCondition: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundCondition> {
        get throws {
            try _ibackgroundCondition_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundCondition.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelBackground_IBackgroundCondition.self)
            }
        }
    }

    deinit {
        _ibackgroundCondition_storage?.release()
    }

    private static var _isystemConditionFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_ISystemConditionFactory>? = nil

    internal static var _isystemConditionFactory: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelBackground_ISystemConditionFactory> {
        get throws {
            try _isystemConditionFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Background.SystemCondition", id: CWinRT.SWRT_WindowsApplicationModelBackground_ISystemConditionFactory.iid)
            }
        }
    }
}