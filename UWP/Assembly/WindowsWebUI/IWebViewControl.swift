// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides a control that hosts HTML content in an app.
public protocol WindowsWebUI_IWebViewControlProtocol: IInspectableProtocol {
    /// Gets a value that indicates whether there is at least one page in the backward navigation history.
    /// - Returns: **true** if the IWebViewControl can navigate backward; otherwise, **false**.
    var canGoBack: Swift.Bool { get throws }

    /// Gets a value that indicates whether there is at least one page in the forward navigation history.
    /// - Returns: **true** if the IWebViewControl can navigate forward; otherwise, **false**.
    var canGoForward: Swift.Bool { get throws }

    /// Gets a value that indicates whether the IWebViewControl contains an element that supports full screen.
    /// - Returns: A value that indicates whether the IWebViewControl contains an element that supports full screen.
    var containsFullScreenElement: Swift.Bool { get throws }

    /// Gets or sets the color to use as the IWebViewControl background when the HTML content does not specify a color.
    /// - Returns: The background color.
    var defaultBackgroundColor: WindowsUI_Color { get throws }
    func defaultBackgroundColor(_ value: WindowsUI_Color) throws

    /// Gets a collection of permission requests that are waiting to be granted or denied.
    /// - Returns: A collection of WebViewDeferredPermissionRequest objects that are waiting to be granted or denied.
    var deferredPermissionRequests: WindowsFoundationCollections_IVectorView<WindowsWebUI_WebViewControlDeferredPermissionRequest?> { get throws }

    /// Gets the title of the page currently displayed in the IWebViewControl.
    /// - Returns: The page title.
    var documentTitle: Swift.String { get throws }

    /// Gets a WebViewControlSettings object that contains properties to enable or disable IWebViewControl features.
    /// - Returns: A WebViewControlSettings object that contains properties to enable or disable IWebViewControl features.
    var settings: WindowsWebUI_WebViewControlSettings { get throws }

    /// Gets or sets the Uniform Resource Identifier (URI) source of the HTML content to display in the IWebViewControl.
    /// - Returns: The Uniform Resource Identifier (URI) source of the HTML content to display in the IWebViewControl.
    var source: WindowsFoundation_Uri { get throws }
    func source(_ source: WindowsFoundation_Uri?) throws

    /// Occurs when the status of whether the IWebViewControl currently contains a full screen element or not changes.
    func containsFullScreenElementChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsWebUI_IWebViewControl?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration
    func containsFullScreenElementChanged(removing token: WindowsRuntime.EventRegistrationToken) throws

    /// Occurs when the IWebViewControl has started loading new content.
    func contentLoading(adding handler: WindowsFoundation_TypedEventHandler<WindowsWebUI_IWebViewControl?, WindowsWebUI_WebViewControlContentLoadingEventArgs?>?) throws -> WindowsRuntime.EventRegistration
    func contentLoading(removing token: WindowsRuntime.EventRegistrationToken) throws

    /// Occurs when the IWebViewControl has finished parsing the current HTML content.
    func domcontentLoaded(adding handler: WindowsFoundation_TypedEventHandler<WindowsWebUI_IWebViewControl?, WindowsWebUI_WebViewControlDOMContentLoadedEventArgs?>?) throws -> WindowsRuntime.EventRegistration
    func domcontentLoaded(removing token: WindowsRuntime.EventRegistrationToken) throws

    /// Occurs when a frame in the IWebViewControl has finished parsing its current HTML content.
    func frameContentLoading(adding handler: WindowsFoundation_TypedEventHandler<WindowsWebUI_IWebViewControl?, WindowsWebUI_WebViewControlContentLoadingEventArgs?>?) throws -> WindowsRuntime.EventRegistration
    func frameContentLoading(removing token: WindowsRuntime.EventRegistrationToken) throws

    /// Occurs when a frame in the IWebViewControl has finished parsing its current HTML content.
    func frameDOMContentLoaded(adding handler: WindowsFoundation_TypedEventHandler<WindowsWebUI_IWebViewControl?, WindowsWebUI_WebViewControlDOMContentLoadedEventArgs?>?) throws -> WindowsRuntime.EventRegistration
    func frameDOMContentLoaded(removing token: WindowsRuntime.EventRegistrationToken) throws

    /// Occurs when a frame in the IWebViewControl has finished loading its content.
    func frameNavigationCompleted(adding handler: WindowsFoundation_TypedEventHandler<WindowsWebUI_IWebViewControl?, WindowsWebUI_WebViewControlNavigationCompletedEventArgs?>?) throws -> WindowsRuntime.EventRegistration
    func frameNavigationCompleted(removing token: WindowsRuntime.EventRegistrationToken) throws

    /// Occurs before a frame in the IWebViewControl navigates to new content.
    func frameNavigationStarting(adding handler: WindowsFoundation_TypedEventHandler<WindowsWebUI_IWebViewControl?, WindowsWebUI_WebViewControlNavigationStartingEventArgs?>?) throws -> WindowsRuntime.EventRegistration
    func frameNavigationStarting(removing token: WindowsRuntime.EventRegistrationToken) throws

    /// Occurs periodically while the IWebViewControl executes JavaScript, letting you halt the script.
    func longRunningScriptDetected(adding handler: WindowsFoundation_TypedEventHandler<WindowsWebUI_IWebViewControl?, WindowsWebUI_WebViewControlLongRunningScriptDetectedEventArgs?>?) throws -> WindowsRuntime.EventRegistration
    func longRunningScriptDetected(removing token: WindowsRuntime.EventRegistrationToken) throws

    /// Occurs when the IWebViewControl has finished loading the current content or if navigation has failed.
    func navigationCompleted(adding handler: WindowsFoundation_TypedEventHandler<WindowsWebUI_IWebViewControl?, WindowsWebUI_WebViewControlNavigationCompletedEventArgs?>?) throws -> WindowsRuntime.EventRegistration
    func navigationCompleted(removing token: WindowsRuntime.EventRegistrationToken) throws

    /// Occurs before the IWebViewControl navigates to new content.
    func navigationStarting(adding handler: WindowsFoundation_TypedEventHandler<WindowsWebUI_IWebViewControl?, WindowsWebUI_WebViewControlNavigationStartingEventArgs?>?) throws -> WindowsRuntime.EventRegistration
    func navigationStarting(removing token: WindowsRuntime.EventRegistrationToken) throws

    /// Occurs when a user performs an action in the IWebViewControl that causes content to be opened in a new window.
    func newWindowRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsWebUI_IWebViewControl?, WindowsWebUI_WebViewControlNewWindowRequestedEventArgs?>?) throws -> WindowsRuntime.EventRegistration
    func newWindowRequested(removing token: WindowsRuntime.EventRegistrationToken) throws

    /// Occurs when an action in an IWebViewControl requires that permission be granted.
    func permissionRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsWebUI_IWebViewControl?, WindowsWebUI_WebViewControlPermissionRequestedEventArgs?>?) throws -> WindowsRuntime.EventRegistration
    func permissionRequested(removing token: WindowsRuntime.EventRegistrationToken) throws

    /// Occurs when the content contained in the IWebViewControl passes a string to the application by using JavaScript.
    func scriptNotify(adding handler: WindowsFoundation_TypedEventHandler<WindowsWebUI_IWebViewControl?, WindowsWebUI_WebViewControlScriptNotifyEventArgs?>?) throws -> WindowsRuntime.EventRegistration
    func scriptNotify(removing token: WindowsRuntime.EventRegistrationToken) throws

    /// Occurs when the IWebViewControl shows a warning page for content that was reported as unsafe by SmartScreen Filter.
    func unsafeContentWarningDisplaying(adding handler: WindowsFoundation_TypedEventHandler<WindowsWebUI_IWebViewControl?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration
    func unsafeContentWarningDisplaying(removing token: WindowsRuntime.EventRegistrationToken) throws

    /// Occurs when an attempt is made to navigate to a Uniform Resource Identifier (URI) using a scheme that IWebViewControl doesn't support.
    func unsupportedUriSchemeIdentified(adding handler: WindowsFoundation_TypedEventHandler<WindowsWebUI_IWebViewControl?, WindowsWebUI_WebViewControlUnsupportedUriSchemeIdentifiedEventArgs?>?) throws -> WindowsRuntime.EventRegistration
    func unsupportedUriSchemeIdentified(removing token: WindowsRuntime.EventRegistrationToken) throws

    /// Occurs when the IWebViewControl attempts to download an unsupported file.
    func unviewableContentIdentified(adding handler: WindowsFoundation_TypedEventHandler<WindowsWebUI_IWebViewControl?, WindowsWebUI_WebViewControlUnviewableContentIdentifiedEventArgs?>?) throws -> WindowsRuntime.EventRegistration
    func unviewableContentIdentified(removing token: WindowsRuntime.EventRegistrationToken) throws

    /// Allows the interception of an HTTP request. This event is triggered every time an HTTP request is made.
    func webResourceRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsWebUI_IWebViewControl?, WindowsWebUI_WebViewControlWebResourceRequestedEventArgs?>?) throws -> WindowsRuntime.EventRegistration
    func webResourceRequested(removing token: WindowsRuntime.EventRegistrationToken) throws

    /// Navigates the IWebViewControl to the next page in the navigation history.
    func goForward() throws

    /// Navigates the IWebViewControl to the previous page in the navigation history.
    func goBack() throws

    /// Reloads the current content in the IWebViewControl.
    func refresh() throws

    /// Halts the current IWebViewControl navigation or download.
    func stop() throws

    /// Loads the HTML content at the specified Uniform Resource Identifier (URI).
    /// - Parameter source: The Uniform Resource Identifier (URI) to load.
    func navigate(_ source: WindowsFoundation_Uri?) throws

    /// Loads the specified HTML content as a new document.
    /// - Parameter text: The HTML content to display in the IWebViewControl.
    func navigateToString(_ text: Swift.String) throws

    /// Loads local web content at the specified URI using an IUriToStreamResolver.
    /// - Parameter source: A URI identifying the local HTML content to load.
    /// - Parameter streamResolver: A resolver that converts the URI into a stream to load.
    func navigateToLocalStreamUri(_ source: WindowsFoundation_Uri?, _ streamResolver: WindowsWeb_IUriToStreamResolver?) throws

    /// Navigates the IWebViewControl to a URI with a POST request and HTTP headers.
    /// - Parameter requestMessage: The details of the HTTP request.
    func navigateWithHttpRequestMessage(_ requestMessage: WindowsWebHttp_HttpRequestMessage?) throws
    func invokeScriptAsync(_ scriptName: Swift.String, _ arguments: WindowsFoundationCollections_IIterable<Swift.String>?) throws -> WindowsFoundation_IAsyncOperation<Swift.String>

    /// Creates an image of the current IWebViewControl contents and writes it to the specified stream.
    /// - Parameter stream: The stream to write the image to.
    /// - Returns: An asynchronous action to await the capture operation.
    func capturePreviewToStreamAsync(_ stream: WindowsStorageStreams_IRandomAccessStream?) throws -> WindowsFoundation_IAsyncAction

    /// Asynchronously gets a DataPackage that contains the selected content within the IWebViewControl.
    /// - Returns: When this method completes, it returns the selected content as a DataPackage.
    func captureSelectedContentToDataPackageAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelDataTransfer_DataPackage?>

    /// Creates a URI that you can pass to NavigateToLocalStreamUri
    /// - Parameter contentIdentifier: A unique identifier for the content the URI is referencing. This defines the root of the URI.
    /// - Parameter relativePath: The path to the resource, relative to the root.
    /// - Returns: The URI created by combining and normalizing the contentIdentifier and relativePath.
    func buildLocalStreamUri(_ contentIdentifier: Swift.String, _ relativePath: Swift.String) throws -> WindowsFoundation_Uri

    /// Returns the deferred permission request with the specified Id.
    /// - Parameter id: The Id of the deferred permission request.
    /// - Parameter result: The deferred permission request with the specified Id.
    func getDeferredPermissionRequestById(_ id: Swift.UInt32, _ result: inout WindowsWebUI_WebViewControlDeferredPermissionRequest?) throws
}

/// Provides a control that hosts HTML content in an app.
public typealias WindowsWebUI_IWebViewControl = any WindowsWebUI_IWebViewControlProtocol