// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides options to help identify the next element that can programmatically receive navigation focus.
public final class WindowsUIXamlInput_FindNextElementOptions: WindowsRuntime.WinRTImport<WindowsUIXamlInput_FindNextElementOptionsProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlInput_FindNextElementOptionsProjection.self))
    }

    // MARK: Windows.UI.Xaml.Input.IFindNextElementOptions members

    /// Gets or sets a bounding rectangle where all overlapping navigation candidates are excluded from navigation focus.
    /// - Returns: The bounding rectangle.
    public var exclusionRect: WindowsFoundation_Rect {
        get throws {
            try _interop.get_ExclusionRect()
        }
    }

    /// Gets or sets a bounding rectangle where all overlapping navigation candidates are excluded from navigation focus.
    /// - Returns: The bounding rectangle.
    public func exclusionRect(_ value: WindowsFoundation_Rect) throws {
        try _interop.put_ExclusionRect(value)
    }

    /// Gets or sets a bounding rectangle used to identify the focus candidates most likely to receive navigation focus.
    /// - Returns: The bounding rectangle.
    public var hintRect: WindowsFoundation_Rect {
        get throws {
            try _interop.get_HintRect()
        }
    }

    /// Gets or sets a bounding rectangle used to identify the focus candidates most likely to receive navigation focus.
    /// - Returns: The bounding rectangle.
    public func hintRect(_ value: WindowsFoundation_Rect) throws {
        try _interop.put_HintRect(value)
    }

    /// Gets or sets the object that must be the root from which to identify the next focus candidate to receive navigation focus.
    /// - Returns: The root object. 
    public var searchRoot: WindowsUIXaml_DependencyObject {
        get throws {
            try COM.NullResult.unwrap(_interop.get_SearchRoot())
        }
    }

    /// Gets or sets the object that must be the root from which to identify the next focus candidate to receive navigation focus.
    /// - Returns: The root object. 
    public func searchRoot(_ value: WindowsUIXaml_DependencyObject?) throws {
        try _interop.put_SearchRoot(value)
    }

    /// Gets or sets the focus navigation strategy used to identify the best candidate element to receive focus.
    /// - Returns: The focus navigation strategy.
    public var xyfocusNavigationStrategyOverride: WindowsUIXamlInput_XYFocusNavigationStrategyOverride {
        get throws {
            try _interop.get_XYFocusNavigationStrategyOverride()
        }
    }

    /// Gets or sets the focus navigation strategy used to identify the best candidate element to receive focus.
    /// - Returns: The focus navigation strategy.
    public func xyfocusNavigationStrategyOverride(_ value: WindowsUIXamlInput_XYFocusNavigationStrategyOverride) throws {
        try _interop.put_XYFocusNavigationStrategyOverride(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Input.FindNextElementOptions", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}