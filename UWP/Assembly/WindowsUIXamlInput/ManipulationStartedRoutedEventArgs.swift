// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides data for the ManipulationStarted event.
open class WindowsUIXamlInput_ManipulationStartedRoutedEventArgs: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgsFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlInput_ManipulationStartedRoutedEventArgs.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._imanipulationStartedRoutedEventArgsFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs members

    /// Gets the UIElement that is considered the container of the manipulation.
    /// - Returns: The UIElement that is considered the container of the manipulation.
    public var container: WindowsUIXaml_UIElement {
        get throws {
            try COM.NullResult.unwrap(_imanipulationStartedRoutedEventArgs.get_Container())
        }
    }

    /// Gets the overall changes since the beginning of the manipulation.
    /// - Returns: The overall changes since the beginning of the manipulation.
    public var cumulative: WindowsUIInput_ManipulationDelta {
        get throws {
            try _imanipulationStartedRoutedEventArgs.get_Cumulative()
        }
    }

    /// Gets or sets a value that marks the routed event as handled. Setting to **true** prevents most handlers along the event route from handling the same event again.
    /// - Returns: **true** to mark the routed event handled; **false** to leave the routed event unhandled, which permits the event to potentially route further. The default is **false**.
    public var handled: Swift.Bool {
        get throws {
            try _imanipulationStartedRoutedEventArgs.get_Handled()
        }
    }

    /// Gets or sets a value that marks the routed event as handled. Setting to **true** prevents most handlers along the event route from handling the same event again.
    /// - Returns: **true** to mark the routed event handled; **false** to leave the routed event unhandled, which permits the event to potentially route further. The default is **false**.
    public func handled(_ value: Swift.Bool) throws {
        try _imanipulationStartedRoutedEventArgs.put_Handled(value)
    }

    /// Gets the PointerDeviceType for the pointer device involved in the manipulation.
    /// - Returns: A value of the enumeration.
    public var pointerDeviceType: WindowsDevicesInput_PointerDeviceType {
        get throws {
            try _imanipulationStartedRoutedEventArgs.get_PointerDeviceType()
        }
    }

    /// Gets the point from which the manipulation originated.
    /// - Returns: The point from which the manipulation originated.
    public var position: WindowsFoundation_Point {
        get throws {
            try _imanipulationStartedRoutedEventArgs.get_Position()
        }
    }

    /// Completes the manipulation without inertia.
    public func complete() throws {
        try _imanipulationStartedRoutedEventArgs.complete()
    }

    // MARK: Implementation details

    private var _imanipulationStartedRoutedEventArgs_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlInput_IManipulationStartedRoutedEventArgs>? = nil

    internal var _imanipulationStartedRoutedEventArgs: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlInput_IManipulationStartedRoutedEventArgs> {
        get throws {
            try _imanipulationStartedRoutedEventArgs_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlInput_IManipulationStartedRoutedEventArgs.iid).cast(to: CWinRT.SWRT_WindowsUIXamlInput_IManipulationStartedRoutedEventArgs.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlInput_IManipulationStartedRoutedEventArgs>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _imanipulationStartedRoutedEventArgs_storage?.release()
    }

    private static var _imanipulationStartedRoutedEventArgsFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlInput_IManipulationStartedRoutedEventArgsFactory>? = nil

    internal static var _imanipulationStartedRoutedEventArgsFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlInput_IManipulationStartedRoutedEventArgsFactory> {
        get throws {
            try _imanipulationStartedRoutedEventArgsFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs", id: CWinRT.SWRT_WindowsUIXamlInput_IManipulationStartedRoutedEventArgsFactory.iid)
            }
        }
    }
}