// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Parses a URL query string, and exposes the results as a read-only vector (list) of name-value pairs from the query string.
public final class WindowsFoundation_WwwFormUrlDecoder: WindowsRuntime.WinRTImport<WindowsFoundation_WwwFormUrlDecoderProjection>, WindowsFoundationCollections_IVectorViewProtocol, WindowsFoundationCollections_IIterableProtocol {
    public typealias T = WindowsFoundation_IWwwFormUrlDecoderEntry?

    // MARK: Windows.Foundation.IWwwFormUrlDecoderRuntimeClassFactory members

    public convenience init(_ query: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iwwwFormUrlDecoderRuntimeClassFactory.createWwwFormUrlDecoder(query)))
    }

    // MARK: Windows.Foundation.IWwwFormUrlDecoderRuntimeClass members

    /// Gets the first name-value pair that has the specified name, as obtained from the constructing Uniform Resource Identifier (URI) query string.
    /// - Parameter name: The name of the value to get.
    /// - Returns: The first value in list order that corresponds with *name*.
    public func getFirstValueByName(_ name: Swift.String) throws -> Swift.String {
        try _interop.getFirstValueByName(name)
    }

    // MARK: Windows.Foundation.Collections.IVectorView`1<Windows.Foundation.IWwwFormUrlDecoderEntry> members

    /// Gets the number of the name-value pairs in the current URL query string.
    /// - Returns: The number of the name-value pairs.
    public var size: Swift.UInt32 {
        get throws {
            try _ivectorView.get_Size()
        }
    }

    /// Gets the name-value pair at the specified index in the current URL query string.
    /// - Parameter index: The index of the name-value pair.
    /// - Returns: The name-value pair at the position specified by *index*.
    public func getAt(_ index: Swift.UInt32) throws -> WindowsFoundation_IWwwFormUrlDecoderEntry? {
        try _ivectorView.getAt(index)
    }

    /// Gets a value indicating whether the specified IWwwFormUrlDecoderEntry is at the specified index in the current URL query string.
    /// - Parameter value: The name-value pair to get the index of.
    /// - Parameter index: The position in *value*.
    /// - Returns: **true** if *value* is at the position specified by *index*; otherwise, **false**.
    public func indexOf(_ value: WindowsFoundation_IWwwFormUrlDecoderEntry?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        try _ivectorView.indexOf(value, &index)
    }

    /// Gets name-value pairs starting at the specified index in the current URL query string.
    /// - Parameter startIndex: The index to start getting name-value pairs at.
    /// - Parameter items: The name-value pairs.
    /// - Returns: The number of name-value pairs in *items*.
    public func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsFoundation_IWwwFormUrlDecoderEntry?]) throws -> Swift.UInt32 {
        try _ivectorView.getMany(startIndex, items)
    }

    // MARK: Windows.Foundation.Collections.IIterable`1<Windows.Foundation.IWwwFormUrlDecoderEntry> members

    /// Gets an iterator that represents the first name-value pair in the current URL query string.
    /// - Returns: The first name-value pair.
    public func first() throws -> WindowsFoundationCollections_IIterator<WindowsFoundation_IWwwFormUrlDecoderEntry?> {
        try COM.NullResult.unwrap(_iiterable.first())
    }

    // MARK: Implementation details

    private var _ivectorView_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IVectorView_WindowsFoundation_IWwwFormUrlDecoderEntry>? = nil

    internal var _ivectorView: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IVectorView_WindowsFoundation_IWwwFormUrlDecoderEntry> {
        get throws {
            try _ivectorView_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundationCollections_IVectorView_WindowsFoundation_IWwwFormUrlDecoderEntry.iid).cast(to: CWinRT.SWRT_WindowsFoundationCollections_IVectorView_WindowsFoundation_IWwwFormUrlDecoderEntry.self)
            }
        }
    }

    private var _iiterable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsFoundation_IWwwFormUrlDecoderEntry>? = nil

    internal var _iiterable: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsFoundation_IWwwFormUrlDecoderEntry> {
        get throws {
            try _iiterable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsFoundation_IWwwFormUrlDecoderEntry.iid).cast(to: CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsFoundation_IWwwFormUrlDecoderEntry.self)
            }
        }
    }

    deinit {
        _ivectorView_storage?.release()
        _iiterable_storage?.release()
    }

    private static var _iwwwFormUrlDecoderRuntimeClassFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IWwwFormUrlDecoderRuntimeClassFactory>? = nil

    internal static var _iwwwFormUrlDecoderRuntimeClassFactory: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IWwwFormUrlDecoderRuntimeClassFactory> {
        get throws {
            try _iwwwFormUrlDecoderRuntimeClassFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Foundation.WwwFormUrlDecoder", id: CWinRT.SWRT_WindowsFoundation_IWwwFormUrlDecoderRuntimeClassFactory.iid)
            }
        }
    }
}