// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a location that may contain latitude and longitude data or venue data.
public final class WindowsDevicesGeolocation_Geoposition: WindowsRuntime.WinRTImport<WindowsDevicesGeolocation_GeopositionProjection> {
    // MARK: Windows.Devices.Geolocation.IGeoposition members

    /// Unsupported API.
    /// - Returns: Unsupported API. This property always returns **null**.
    public var civicAddress: WindowsDevicesGeolocation_CivicAddress {
        get throws {
            try COM.NullResult.unwrap(_interop.get_CivicAddress())
        }
    }

    /// The latitude and longitude associated with a geographic location.
    /// - Returns: The latitude and longitude associated with a geographic location.
    public var coordinate: WindowsDevicesGeolocation_Geocoordinate {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Coordinate())
        }
    }

    // MARK: Windows.Devices.Geolocation.IGeoposition2 members

    /// Represents the venue associated with a geographic location.
    /// - Returns: A VenueData object that represents the venue associated with the geographic location.
    public var venueData: WindowsDevicesGeolocation_VenueData {
        get throws {
            try COM.NullResult.unwrap(_igeoposition2.get_VenueData())
        }
    }

    // MARK: Implementation details

    private var _igeoposition2_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesGeolocation_IGeoposition2>? = nil

    internal var _igeoposition2: COM.COMInterop<CWinRT.SWRT_WindowsDevicesGeolocation_IGeoposition2> {
        get throws {
            try _igeoposition2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsDevicesGeolocation_IGeoposition2.iid).cast(to: CWinRT.SWRT_WindowsDevicesGeolocation_IGeoposition2.self)
            }
        }
    }

    deinit {
        _igeoposition2_storage?.release()
    }
}