// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents an ordered series of geographic points.
public final class WindowsDevicesGeolocation_Geopath: WindowsRuntime.WinRTImport<WindowsDevicesGeolocation_GeopathProjection>, WindowsDevicesGeolocation_IGeoshapeProtocol {
    // MARK: Windows.Devices.Geolocation.IGeopathFactory members

    public convenience init(_ positions: WindowsFoundationCollections_IIterable<WindowsDevicesGeolocation_BasicGeoposition>?) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._igeopathFactory.create(positions)))
    }

    public convenience init(_ positions: WindowsFoundationCollections_IIterable<WindowsDevicesGeolocation_BasicGeoposition>?, _ altitudeReferenceSystem: WindowsDevicesGeolocation_AltitudeReferenceSystem) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._igeopathFactory.createWithAltitudeReference(positions, altitudeReferenceSystem)))
    }

    public convenience init(_ positions: WindowsFoundationCollections_IIterable<WindowsDevicesGeolocation_BasicGeoposition>?, _ altitudeReferenceSystem: WindowsDevicesGeolocation_AltitudeReferenceSystem, _ spatialReferenceId: Swift.UInt32) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._igeopathFactory.createWithAltitudeReferenceAndSpatialReference(positions, altitudeReferenceSystem, spatialReferenceId)))
    }

    // MARK: Windows.Devices.Geolocation.IGeopath members

    /// Gets the collection of geographic points that define the Geopath.
    /// - Returns: The collection of geographic points that define the Geopath.
    public var positions: WindowsFoundationCollections_IVectorView<WindowsDevicesGeolocation_BasicGeoposition> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Positions())
        }
    }

    // MARK: Windows.Devices.Geolocation.IGeoshape members

    /// Gets the altitude reference system used by the Geopath.
    /// - Returns: The altitude reference system used by the Geopath.
    public var altitudeReferenceSystem: WindowsDevicesGeolocation_AltitudeReferenceSystem {
        get throws {
            try _igeoshape.get_AltitudeReferenceSystem()
        }
    }

    /// Gets the type of geographic shape represented by the Geopath.
    /// - Returns: The type of geographic shape represented by the Geopath.
    public var geoshapeType: WindowsDevicesGeolocation_GeoshapeType {
        get throws {
            try _igeoshape.get_GeoshapeType()
        }
    }

    /// Gets the spatial reference ID (SRID) used by the Geopath.
    /// - Returns: The spatial reference ID (SRID) used by the Geopath.
    public var spatialReferenceId: Swift.UInt32 {
        get throws {
            try _igeoshape.get_SpatialReferenceId()
        }
    }

    // MARK: Implementation details

    private var _igeoshape_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesGeolocation_IGeoshape>? = nil

    internal var _igeoshape: COM.COMInterop<CWinRT.SWRT_WindowsDevicesGeolocation_IGeoshape> {
        get throws {
            try _igeoshape_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsDevicesGeolocation_IGeoshape.iid).cast(to: CWinRT.SWRT_WindowsDevicesGeolocation_IGeoshape.self)
            }
        }
    }

    deinit {
        _igeoshape_storage?.release()
    }

    private static var _igeopathFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesGeolocation_IGeopathFactory>? = nil

    internal static var _igeopathFactory: COM.COMInterop<CWinRT.SWRT_WindowsDevicesGeolocation_IGeopathFactory> {
        get throws {
            try _igeopathFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Geolocation.Geopath", id: CWinRT.SWRT_WindowsDevicesGeolocation_IGeopathFactory.iid)
            }
        }
    }
}