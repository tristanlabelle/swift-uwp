// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a class containing methods which can be used to interact with the display.
public final class WindowsGraphicsDisplayCore_HdmiDisplayInformation: WindowsRuntime.WinRTImport<WindowsGraphicsDisplayCore_HdmiDisplayInformationProjection> {
    // MARK: Windows.Graphics.Display.Core.IHdmiDisplayInformation members

    /// Event raised when the display mode changes.
    public func displayModesChanged(adding value: WindowsFoundation_TypedEventHandler<WindowsGraphicsDisplayCore_HdmiDisplayInformation?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_DisplayModesChanged(value)
        return WindowsRuntime.EventRegistration(token: _token, remover: displayModesChanged)
    }

    public func displayModesChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_DisplayModesChanged(token)
    }

    /// Gets the display modes that are supported by your current display. This is determined in combination by your device type, specifications, and settings.
    /// - Returns: The list of display modes that are supported.
    public func getSupportedDisplayModes() throws -> WindowsFoundationCollections_IVectorView<WindowsGraphicsDisplayCore_HdmiDisplayMode?> {
        try COM.NullResult.unwrap(_interop.getSupportedDisplayModes())
    }

    /// Gets the HdmiDisplayMode object, which provides info about the current display mode of a connected device, like a TV.
    /// - Returns: The display mode.
    public func getCurrentDisplayMode() throws -> WindowsGraphicsDisplayCore_HdmiDisplayMode {
        try COM.NullResult.unwrap(_interop.getCurrentDisplayMode())
    }

    /// Sets the display to the back to default settings.
    public func setDefaultDisplayModeAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.setDefaultDisplayModeAsync())
    }

    /// Sends request to set only the display mode for the display.
    /// - Returns: Value that indicates whether the set request is successful.
    public func requestSetCurrentDisplayModeAsync(_ mode: WindowsGraphicsDisplayCore_HdmiDisplayMode?) throws -> WindowsFoundation_IAsyncOperation<Swift.Bool> {
        try COM.NullResult.unwrap(_interop.requestSetCurrentDisplayModeAsync(mode))
    }

    /// Sends request to set only the display mode and HDR option for the display.
    /// - Parameter mode: The display mode.
    /// - Parameter hdrOption: The electro-optical transfer function (EOTF) used to master the HDR content.
    /// - Returns: Value that indicates whether the set request is successful.
    public func requestSetCurrentDisplayModeAsync(_ mode: WindowsGraphicsDisplayCore_HdmiDisplayMode?, _ hdrOption: WindowsGraphicsDisplayCore_HdmiDisplayHdrOption) throws -> WindowsFoundation_IAsyncOperation<Swift.Bool> {
        try COM.NullResult.unwrap(_interop.requestSetCurrentDisplayModeWithHdrAsync(mode, hdrOption))
    }

    /// Sends request to set the display according to the input parameters.
    /// - Parameter mode: The display mode.
    /// - Parameter hdrOption: The electro-optical transfer function (EOTF) used to master the HDR content.
    /// - Parameter hdrMetadata: The 10 bit display metadata used to adjust the output.
    /// - Returns: Value that indicates whether the set request is successful.
    public func requestSetCurrentDisplayModeAsync(_ mode: WindowsGraphicsDisplayCore_HdmiDisplayMode?, _ hdrOption: WindowsGraphicsDisplayCore_HdmiDisplayHdrOption, _ hdrMetadata: WindowsGraphicsDisplayCore_HdmiDisplayHdr2086Metadata) throws -> WindowsFoundation_IAsyncOperation<Swift.Bool> {
        try COM.NullResult.unwrap(_interop.requestSetCurrentDisplayModeWithHdrAndMetadataAsync(mode, hdrOption, hdrMetadata))
    }

    // MARK: Windows.Graphics.Display.Core.IHdmiDisplayInformationStatics members

    /// Gets the HdmiDisplayInformation object which is the display info of a video content that is currently sent to a display, like a TV or monitor.
    /// - Returns: The display info of a video content that's currently on screen.
    public static func getForCurrentView() throws -> WindowsGraphicsDisplayCore_HdmiDisplayInformation {
        try COM.NullResult.unwrap(_ihdmiDisplayInformationStatics.getForCurrentView())
    }

    // MARK: Implementation details

    private static var _ihdmiDisplayInformationStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsDisplayCore_IHdmiDisplayInformationStatics>? = nil

    internal static var _ihdmiDisplayInformationStatics: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsDisplayCore_IHdmiDisplayInformationStatics> {
        get throws {
            try _ihdmiDisplayInformationStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Graphics.Display.Core.HdmiDisplayInformation", id: CWinRT.SWRT_WindowsGraphicsDisplayCore_IHdmiDisplayInformationStatics.iid)
            }
        }
    }
}