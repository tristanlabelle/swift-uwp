// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// An ordered collection of PlaybackMediaMarker objects.
public final class WindowsMediaPlayback_PlaybackMediaMarkerSequence: WindowsRuntime.WinRTImport<WindowsMediaPlayback_PlaybackMediaMarkerSequenceProjection>, WindowsFoundationCollections_IIterableProtocol {
    public typealias T = WindowsMediaPlayback_PlaybackMediaMarker?

    // MARK: Windows.Media.Playback.IPlaybackMediaMarkerSequence members

    /// Returns the number of items in the sequence.
    /// - Returns: The number of items in the sequence.
    public var size: Swift.UInt32 {
        get throws {
            try _interop.get_Size()
        }
    }

    /// Adds a PlaybackMediaMarker to the sequence in it's ordered position.
    /// - Parameter value: The media marker to insert into the sequence.
    public func insert(_ value: WindowsMediaPlayback_PlaybackMediaMarker?) throws {
        try _interop.insert(value)
    }

    /// Removes all elements from the sequence.
    public func clear() throws {
        try _interop.clear()
    }

    // MARK: Windows.Foundation.Collections.IIterable`1<Windows.Media.Playback.PlaybackMediaMarker> members

    /// Gets an IIterator pointing at the first PlaybackMediaMarker in the sequence.
    /// - Returns: Iterator pointing at the first media marker in the sequence.
    public func first() throws -> WindowsFoundationCollections_IIterator<WindowsMediaPlayback_PlaybackMediaMarker?> {
        try COM.NullResult.unwrap(_iiterable.first())
    }

    // MARK: Implementation details

    private var _iiterable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsMediaPlayback_PlaybackMediaMarker>? = nil

    internal var _iiterable: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsMediaPlayback_PlaybackMediaMarker> {
        get throws {
            try _iiterable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsMediaPlayback_PlaybackMediaMarker.iid).cast(to: CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsMediaPlayback_PlaybackMediaMarker.self)
            }
        }
    }

    deinit {
        _iiterable_storage?.release()
    }
}