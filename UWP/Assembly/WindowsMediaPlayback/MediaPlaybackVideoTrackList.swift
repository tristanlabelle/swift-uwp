// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a read-only list of VideoTrack objects, of which a single track can be selected at one time.
public final class WindowsMediaPlayback_MediaPlaybackVideoTrackList: WindowsRuntime.WinRTImport<WindowsMediaPlayback_MediaPlaybackVideoTrackListProjection>, WindowsFoundationCollections_IVectorViewProtocol, WindowsFoundationCollections_IIterableProtocol, WindowsMediaCore_ISingleSelectMediaTrackListProtocol {
    public typealias T = WindowsMediaCore_VideoTrack?

    // MARK: Windows.Foundation.Collections.IVectorView`1<Windows.Media.Core.VideoTrack> members

    /// Gets the number of video tracks in the list.
    /// - Returns: The number of video tracks in the list.
    public var size: Swift.UInt32 {
        get throws {
            try _interop.get_Size()
        }
    }

    /// Returns the video track at the specified index.
    /// - Parameter index: The zero-based index of the video track.
    /// - Returns: The video track at the specified index.
    public func getAt(_ index: Swift.UInt32) throws -> WindowsMediaCore_VideoTrack? {
        try _interop.getAt(index)
    }

    /// Retrieves the index of a specified video track in the list.
    /// - Parameter value: The video track to find in the vector view.
    /// - Parameter index: If the video track is found, this is the zero-based index of the audio track; otherwise, this parameter is 0.
    /// - Returns: True if the video track is found; otherwise, false.
    public func indexOf(_ value: WindowsMediaCore_VideoTrack?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        try _interop.indexOf(value, &index)
    }

    /// Retrieves the video tracks that start at the specified index in the list.
    /// - Parameter startIndex: The zero-based index of the start of the video tracks in the list.
    /// - Parameter items: The video tracks that start at *startIndex* in the list.
    /// - Returns: The number of video tracks retrieved.
    public func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsMediaCore_VideoTrack?]) throws -> Swift.UInt32 {
        try _interop.getMany(startIndex, items)
    }

    // MARK: Windows.Foundation.Collections.IIterable`1<Windows.Media.Core.VideoTrack> members

    /// Returns an iterator that iterates over the items in the collection.
    /// - Returns: The iterator.
    public func first() throws -> WindowsFoundationCollections_IIterator<WindowsMediaCore_VideoTrack?> {
        try COM.NullResult.unwrap(_iiterable.first())
    }

    // MARK: Windows.Media.Core.ISingleSelectMediaTrackList members

    /// Gets or sets the index of the currently selected video track in the list.
    /// - Returns: The index of the currently selected video track in the list.
    public var selectedIndex: Swift.Int32 {
        get throws {
            try _isingleSelectMediaTrackList.get_SelectedIndex()
        }
    }

    /// Gets or sets the index of the currently selected video track in the list.
    /// - Returns: The index of the currently selected video track in the list.
    public func selectedIndex(_ value: Swift.Int32) throws {
        try _isingleSelectMediaTrackList.put_SelectedIndex(value)
    }

    /// Occurs when the index of the currently selected video track changes.
    public func selectedIndexChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsMediaCore_ISingleSelectMediaTrackList?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _isingleSelectMediaTrackList.add_SelectedIndexChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: selectedIndexChanged)
    }

    public func selectedIndexChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _isingleSelectMediaTrackList.remove_SelectedIndexChanged(token)
    }

    // MARK: Implementation details

    private var _iiterable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsMediaCore_VideoTrack>? = nil

    internal var _iiterable: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsMediaCore_VideoTrack> {
        get throws {
            try _iiterable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsMediaCore_VideoTrack.iid).cast(to: CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsMediaCore_VideoTrack.self)
            }
        }
    }

    private var _isingleSelectMediaTrackList_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaCore_ISingleSelectMediaTrackList>? = nil

    internal var _isingleSelectMediaTrackList: COM.COMInterop<CWinRT.SWRT_WindowsMediaCore_ISingleSelectMediaTrackList> {
        get throws {
            try _isingleSelectMediaTrackList_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaCore_ISingleSelectMediaTrackList.iid).cast(to: CWinRT.SWRT_WindowsMediaCore_ISingleSelectMediaTrackList.self)
            }
        }
    }

    deinit {
        _iiterable_storage?.release()
        _isingleSelectMediaTrackList_storage?.release()
    }
}