// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a set of MediaBreak objects associated with a MediaPlaybackItem and the positions within the playback of the item that the media breaks are played.
public final class WindowsMediaPlayback_MediaBreakSchedule: WindowsRuntime.WinRTImport<WindowsMediaPlayback_MediaBreakScheduleProjection> {
    // MARK: Windows.Media.Playback.IMediaBreakSchedule members

    /// Gets the schedule's current list of MediaBreak objects that will be played at a point during the playback of the MediaPlaybackItem with which the MediaBreakSchedule is associated.
    /// - Returns: The schedule's current list of MediaBreak objects that will be played at a position within the playback of the MediaPlaybackItem with which the schedule is associated.
    public var midrollBreaks: WindowsFoundationCollections_IVectorView<WindowsMediaPlayback_MediaBreak?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_MidrollBreaks())
        }
    }

    /// Gets the MediaPlaybackItem with which the MediaBreakSchedule is associated.
    /// - Returns: The MediaPlaybackItem with which the MediaBreakSchedule is associated.
    public var playbackItem: WindowsMediaPlayback_MediaPlaybackItem {
        get throws {
            try COM.NullResult.unwrap(_interop.get_PlaybackItem())
        }
    }

    /// Gets or sets the MediaBreak to be played after the MediaPlaybackItem associated with the MediaBreakSchedule plays.
    /// - Returns: The MediaBreak to be played after the MediaPlaybackItem associated with the MediaBreakSchedule plays.
    public var postrollBreak: WindowsMediaPlayback_MediaBreak {
        get throws {
            try COM.NullResult.unwrap(_interop.get_PostrollBreak())
        }
    }

    /// Gets or sets the MediaBreak to be played after the MediaPlaybackItem associated with the MediaBreakSchedule plays.
    /// - Returns: The MediaBreak to be played after the MediaPlaybackItem associated with the MediaBreakSchedule plays.
    public func postrollBreak(_ value: WindowsMediaPlayback_MediaBreak?) throws {
        try _interop.put_PostrollBreak(value)
    }

    /// Gets or sets the MediaBreak to be played before the MediaPlaybackItem associated with the MediaBreakSchedule plays.
    /// - Returns: The MediaBreak to be played before the MediaPlaybackItem associated with the MediaBreakSchedule plays.
    public var prerollBreak: WindowsMediaPlayback_MediaBreak {
        get throws {
            try COM.NullResult.unwrap(_interop.get_PrerollBreak())
        }
    }

    /// Gets or sets the MediaBreak to be played before the MediaPlaybackItem associated with the MediaBreakSchedule plays.
    /// - Returns: The MediaBreak to be played before the MediaPlaybackItem associated with the MediaBreakSchedule plays.
    public func prerollBreak(_ value: WindowsMediaPlayback_MediaBreak?) throws {
        try _interop.put_PrerollBreak(value)
    }

    /// Occurs when the MediaBreakSchedule changes.
    public func scheduleChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsMediaPlayback_MediaBreakSchedule?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_ScheduleChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: scheduleChanged)
    }

    public func scheduleChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_ScheduleChanged(token)
    }

    /// Adds a MediaBreak to the schedule that will be played at a point during the playback of the MediaPlaybackItem with which the MediaBreakSchedule is associated.
    /// - Parameter mediaBreak: The MediaBreak to add to the schedule.
    public func insertMidrollBreak(_ mediaBreak: WindowsMediaPlayback_MediaBreak?) throws {
        try _interop.insertMidrollBreak(mediaBreak)
    }

    /// Removes a midroll MediaBreak from the MediaBreakSchedule.
    /// - Parameter mediaBreak: The MediaBreak to remove from the schedule.
    public func removeMidrollBreak(_ mediaBreak: WindowsMediaPlayback_MediaBreak?) throws {
        try _interop.removeMidrollBreak(mediaBreak)
    }

    // MARK: Implementation details
}