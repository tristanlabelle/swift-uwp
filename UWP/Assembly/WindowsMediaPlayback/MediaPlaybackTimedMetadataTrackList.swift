// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a read-only list of TimedMetadataTrack objects.
public final class WindowsMediaPlayback_MediaPlaybackTimedMetadataTrackList: WindowsRuntime.WinRTImport<WindowsMediaPlayback_MediaPlaybackTimedMetadataTrackListProjection>, WindowsFoundationCollections_IVectorViewProtocol, WindowsFoundationCollections_IIterableProtocol {
    public typealias T = WindowsMediaCore_TimedMetadataTrack?

    // MARK: Windows.Foundation.Collections.IVectorView`1<Windows.Media.Core.TimedMetadataTrack> members

    /// Gets the number of timed metadata tracks in the list.
    /// - Returns: the number of timed metadata tracks in the list.
    public var size: Swift.UInt32 {
        get throws {
            try _interop.get_Size()
        }
    }

    /// Returns the timed metadata track at the specified index.
    /// - Parameter index: The zero-based index of the timed metadata track.
    /// - Returns: The timed metadata track at the specified index.
    public func getAt(_ index: Swift.UInt32) throws -> WindowsMediaCore_TimedMetadataTrack? {
        try _interop.getAt(index)
    }

    /// Retrieves the index of a specified timed metadata track in the list.
    /// - Parameter value: The timed metadata track to find in the vector view.
    /// - Parameter index: If the timed metadata track is found, this is the zero-based index of the audio track; otherwise, this parameter is 0.
    /// - Returns: True if the timed metadata track is found; otherwise, false.
    public func indexOf(_ value: WindowsMediaCore_TimedMetadataTrack?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        try _interop.indexOf(value, &index)
    }

    /// Retrieves the timed metadata tracks that start at the specified index in the list.
    /// - Parameter startIndex: The zero-based index of the start of the timed metadata tracks in the list.
    /// - Parameter items: The timed metadata tracks that start at *startIndex* in the list.
    /// - Returns: The number of timed metadata tracks retrieved.
    public func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsMediaCore_TimedMetadataTrack?]) throws -> Swift.UInt32 {
        try _interop.getMany(startIndex, items)
    }

    // MARK: Windows.Foundation.Collections.IIterable`1<Windows.Media.Core.TimedMetadataTrack> members

    /// Returns an iterator that iterates over the items in the collection.
    /// - Returns: The iterator.
    public func first() throws -> WindowsFoundationCollections_IIterator<WindowsMediaCore_TimedMetadataTrack?> {
        try COM.NullResult.unwrap(_iiterable.first())
    }

    // MARK: Windows.Media.Playback.IMediaPlaybackTimedMetadataTrackList members

    /// Occurs when the presentation mode of the MediaPlaybackTimedMetadataTrackList changes.
    public func presentationModeChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsMediaPlayback_MediaPlaybackTimedMetadataTrackList?, WindowsMediaPlayback_TimedMetadataPresentationModeChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _imediaPlaybackTimedMetadataTrackList.add_PresentationModeChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: presentationModeChanged)
    }

    public func presentationModeChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _imediaPlaybackTimedMetadataTrackList.remove_PresentationModeChanged(token)
    }

    /// Gets the presentation mode of the timed metadata track with the specified index.
    /// - Parameter index: The index of the timed metadata track for which the presentation mode is queried.
    /// - Returns: The presentation mode.
    public func getPresentationMode(_ index: Swift.UInt32) throws -> WindowsMediaPlayback_TimedMetadataTrackPresentationMode {
        try _imediaPlaybackTimedMetadataTrackList.getPresentationMode(index)
    }

    /// Sets the presentation mode of the timed metadata track with the specified index.
    /// - Parameter index: The index of the timed metadata track for which the presentation mode is set.
    /// - Parameter value: The presentation mode to set.
    public func setPresentationMode(_ index: Swift.UInt32, _ value: WindowsMediaPlayback_TimedMetadataTrackPresentationMode) throws {
        try _imediaPlaybackTimedMetadataTrackList.setPresentationMode(index, value)
    }

    // MARK: Implementation details

    private var _iiterable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsMediaCore_TimedMetadataTrack>? = nil

    internal var _iiterable: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsMediaCore_TimedMetadataTrack> {
        get throws {
            try _iiterable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsMediaCore_TimedMetadataTrack.iid).cast(to: CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsMediaCore_TimedMetadataTrack.self)
            }
        }
    }

    private var _imediaPlaybackTimedMetadataTrackList_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaPlayback_IMediaPlaybackTimedMetadataTrackList>? = nil

    internal var _imediaPlaybackTimedMetadataTrackList: COM.COMInterop<CWinRT.SWRT_WindowsMediaPlayback_IMediaPlaybackTimedMetadataTrackList> {
        get throws {
            try _imediaPlaybackTimedMetadataTrackList_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaPlayback_IMediaPlaybackTimedMetadataTrackList.iid).cast(to: CWinRT.SWRT_WindowsMediaPlayback_IMediaPlaybackTimedMetadataTrackList.self)
            }
        }
    }

    deinit {
        _iiterable_storage?.release()
        _imediaPlaybackTimedMetadataTrackList_storage?.release()
    }
}