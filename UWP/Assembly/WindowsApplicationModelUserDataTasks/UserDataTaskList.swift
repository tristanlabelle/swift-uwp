// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a list of UserDataTask objects.
public final class WindowsApplicationModelUserDataTasks_UserDataTaskList: WindowsRuntime.WinRTImport<WindowsApplicationModelUserDataTasks_UserDataTaskListProjection> {
    // MARK: Windows.ApplicationModel.UserDataTasks.IUserDataTaskList members

    /// Gets or sets the name of the UserDataTaskList, suitable for display in the user interface.
    /// - Returns: The name of the UserDataTaskList, suitable for display in the user interface.
    public var displayName: Swift.String {
        get throws {
            try _interop.get_DisplayName()
        }
    }

    /// Gets or sets the name of the UserDataTaskList, suitable for display in the user interface.
    /// - Returns: The name of the UserDataTaskList, suitable for display in the user interface.
    public func displayName(_ value: Swift.String) throws {
        try _interop.put_DisplayName(value)
    }

    /// Gets the locally unique identifier for this UserDataTaskList.
    /// - Returns: The locally unique identifier for this UserDataTaskList.
    public var id: Swift.String {
        get throws {
            try _interop.get_Id()
        }
    }

    /// Gets an object that provides operations that an app can perform on a task list that it has not created.
    /// - Returns: An object that provides operations that an app can perform on a task list that it has not created.
    public var limitedWriteOperations: WindowsApplicationModelUserDataTasks_UserDataTaskListLimitedWriteOperations {
        get throws {
            try COM.NullResult.unwrap(_interop.get_LimitedWriteOperations())
        }
    }

    /// Gets or sets a value indicating the read access level to this UserDataTaskList for other apps on the system.
    /// - Returns: A value indicating the read access level to this UserDataTaskList for other apps on the system.
    public var otherAppReadAccess: WindowsApplicationModelUserDataTasks_UserDataTaskListOtherAppReadAccess {
        get throws {
            try _interop.get_OtherAppReadAccess()
        }
    }

    /// Gets or sets a value indicating the read access level to this UserDataTaskList for other apps on the system.
    /// - Returns: A value indicating the read access level to this UserDataTaskList for other apps on the system.
    public func otherAppReadAccess(_ value: WindowsApplicationModelUserDataTasks_UserDataTaskListOtherAppReadAccess) throws {
        try _interop.put_OtherAppReadAccess(value)
    }

    /// Gets or sets a value indicating the write access level to this UserDataTaskList for other apps on the system.
    /// - Returns: A value indicating the write access level to this UserDataTaskList for other apps on the system.
    public var otherAppWriteAccess: WindowsApplicationModelUserDataTasks_UserDataTaskListOtherAppWriteAccess {
        get throws {
            try _interop.get_OtherAppWriteAccess()
        }
    }

    /// Gets or sets a value indicating the write access level to this UserDataTaskList for other apps on the system.
    /// - Returns: A value indicating the write access level to this UserDataTaskList for other apps on the system.
    public func otherAppWriteAccess(_ value: WindowsApplicationModelUserDataTasks_UserDataTaskListOtherAppWriteAccess) throws {
        try _interop.put_OtherAppWriteAccess(value)
    }

    /// Gets the name of the source of the UserDataTaskList, suitable for display in the user interface.
    /// - Returns: The name of the source of the UserDataTaskList, suitable for display in the user interface.
    public var sourceDisplayName: Swift.String {
        get throws {
            try _interop.get_SourceDisplayName()
        }
    }

    /// Gets the UserDataTaskListSyncManager used to communicate with the server.
    /// - Returns: The UserDataTaskListSyncManager used to communicate with the server.
    public var syncManager: WindowsApplicationModelUserDataTasks_UserDataTaskListSyncManager {
        get throws {
            try COM.NullResult.unwrap(_interop.get_SyncManager())
        }
    }

    /// Gets a string that represents the ID of the user data account for this UserDataTaskList.
    /// - Returns: A string that represents the ID of the user data account for this UserDataTaskList.
    public var userDataAccountId: Swift.String {
        get throws {
            try _interop.get_UserDataAccountId()
        }
    }

    /// Adds a SyncManager to the UserDataTaskList.
    /// - Returns: An asynchronous registration operation that you can await.
    public func registerSyncManagerAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.registerSyncManagerAsync())
    }

    /// Gets a UserDataTaskReader object associated with this UserDataTaskList.
    /// - Returns: A UserDataTaskReader object associated with this UserDataTaskList.
    public func getTaskReader() throws -> WindowsApplicationModelUserDataTasks_UserDataTaskReader {
        try COM.NullResult.unwrap(_interop.getTaskReader())
    }

    /// Gets a UserDataTaskReader object associated with this UserDataTaskList by using the specified UserDataTaskQueryOptions.
    /// - Parameter options: The UserDataTaskQueryOptions to use when creating the UserDataTaskReader.
    /// - Returns: A UserDataTaskReader object associated with this UserDataTaskList.
    public func getTaskReader(_ options: WindowsApplicationModelUserDataTasks_UserDataTaskQueryOptions?) throws -> WindowsApplicationModelUserDataTasks_UserDataTaskReader {
        try COM.NullResult.unwrap(_interop.getTaskReaderWithOptions(options))
    }

    /// Asynchronously retrieves the specified UserDataTask object from the UserDataTaskList.
    /// - Parameter userDataTask: The string that identifies the UserDataTask to return.
    /// - Returns: The UserDataTask identified by the *UserDataTask* parameter.
    public func getTaskAsync(_ userDataTask: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelUserDataTasks_UserDataTask?> {
        try COM.NullResult.unwrap(_interop.getTaskAsync(userDataTask))
    }

    /// Asynchronously saves the specified UserDataTask to the UserDataTaskStore.
    /// - Parameter userDataTask: The task to save.
    public func saveTaskAsync(_ userDataTask: WindowsApplicationModelUserDataTasks_UserDataTask?) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.saveTaskAsync(userDataTask))
    }

    /// Asynchronously deletes and individual UserDataTask from this UserDataTaskList and the UserDataTaskStore.
    /// - Parameter userDataTaskId: The UserDataTask to delete.
    /// - Returns: An async action indicating that the method is complete.
    public func deleteTaskAsync(_ userDataTaskId: Swift.String) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.deleteTaskAsync(userDataTaskId))
    }

    /// Asynchronously deletes this UserDataTaskList, including all UserDataTask objects in the UserDataTaskStore.
    /// - Returns: An async action indicating that the method is complete.
    public func deleteAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.deleteAsync())
    }

    /// Asynchronously saves this UserDataTaskList.
    /// - Returns: An async action indicating that the method has completed.
    public func saveAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.saveAsync())
    }

    // MARK: Implementation details
}