// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a task.
public final class WindowsApplicationModelUserDataTasks_UserDataTask: WindowsRuntime.WinRTImport<WindowsApplicationModelUserDataTasks_UserDataTaskProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsApplicationModelUserDataTasks_UserDataTaskProjection.self))
    }

    // MARK: Windows.ApplicationModel.UserDataTasks.IUserDataTask members

    /// Gets or sets the completion date and time of the task.
    /// - Returns: The completion date and time of the task.
    public var completedDate: WindowsFoundation_IReference<WindowsFoundation_DateTime>? {
        get throws {
            try _interop.get_CompletedDate()
        }
    }

    /// Gets or sets the completion date and time of the task.
    /// - Returns: The completion date and time of the task.
    public func completedDate(_ value: WindowsFoundation_IReference<WindowsFoundation_DateTime>?) throws {
        try _interop.put_CompletedDate(value)
    }

    /// Gets or sets a string value. The string contains extended details that describe the task. Details is of type String and a maximum of 1,073,741,823 characters in length, which is the maximum length of a JET database string.
    /// - Returns: The extended details that describe the task.
    public var details: Swift.String {
        get throws {
            try _interop.get_Details()
        }
    }

    /// Gets or sets a string value. The string contains extended details that describe the task. Details is of type String and a maximum of 1,073,741,823 characters in length, which is the maximum length of a JET database string.
    /// - Returns: The extended details that describe the task.
    public func details(_ value: Swift.String) throws {
        try _interop.put_Details(value)
    }

    /// Gets or sets the type of task details, plain text or HTML.
    /// - Returns: The type of task details.
    public var detailsKind: WindowsApplicationModelUserDataTasks_UserDataTaskDetailsKind {
        get throws {
            try _interop.get_DetailsKind()
        }
    }

    /// Gets or sets the type of task details, plain text or HTML.
    /// - Returns: The type of task details.
    public func detailsKind(_ value: WindowsApplicationModelUserDataTasks_UserDataTaskDetailsKind) throws {
        try _interop.put_DetailsKind(value)
    }

    /// Gets or sets the due date of the task.
    /// - Returns: the due date of the task.
    public var dueDate: WindowsFoundation_IReference<WindowsFoundation_DateTime>? {
        get throws {
            try _interop.get_DueDate()
        }
    }

    /// Gets or sets the due date of the task.
    /// - Returns: the due date of the task.
    public func dueDate(_ value: WindowsFoundation_IReference<WindowsFoundation_DateTime>?) throws {
        try _interop.put_DueDate(value)
    }

    /// Gets the unique identifier of the task.
    /// - Returns: The unique identifier of the task.
    public var id: Swift.String {
        get throws {
            try _interop.get_Id()
        }
    }

    /// Gets the kind of task (For example: Recurring etc.).
    /// - Returns: The kind of task (For example: Recurring etc.).
    public var kind: WindowsApplicationModelUserDataTasks_UserDataTaskKind {
        get throws {
            try _interop.get_Kind()
        }
    }

    /// Gets the unique identifier for the task list associated with the task.
    /// - Returns: The unique identifier for the task list associated with the task.
    public var listId: Swift.String {
        get throws {
            try _interop.get_ListId()
        }
    }

    /// Gets or sets the priority of the task.
    /// - Returns: The priority of the task.
    public var priority: WindowsApplicationModelUserDataTasks_UserDataTaskPriority {
        get throws {
            try _interop.get_Priority()
        }
    }

    /// Gets or sets the priority of the task.
    /// - Returns: The priority of the task.
    public func priority(_ value: WindowsApplicationModelUserDataTasks_UserDataTaskPriority) throws {
        try _interop.put_Priority(value)
    }

    /// Gets or sets an object that represents when and how often a task occurs.
    /// - Returns: An object that represents when and how often a task occurs
    public var recurrenceProperties: WindowsApplicationModelUserDataTasks_UserDataTaskRecurrenceProperties {
        get throws {
            try COM.NullResult.unwrap(_interop.get_RecurrenceProperties())
        }
    }

    /// Gets or sets an object that represents when and how often a task occurs.
    /// - Returns: An object that represents when and how often a task occurs
    public func recurrenceProperties(_ value: WindowsApplicationModelUserDataTasks_UserDataTaskRecurrenceProperties?) throws {
        try _interop.put_RecurrenceProperties(value)
    }

    /// Gets or sets an object that represents how many times and at what interval the task is generated.
    /// - Returns: An object that represents how many times and at what interval the task is generated.
    public var regenerationProperties: WindowsApplicationModelUserDataTasks_UserDataTaskRegenerationProperties {
        get throws {
            try COM.NullResult.unwrap(_interop.get_RegenerationProperties())
        }
    }

    /// Gets or sets an object that represents how many times and at what interval the task is generated.
    /// - Returns: An object that represents how many times and at what interval the task is generated.
    public func regenerationProperties(_ value: WindowsApplicationModelUserDataTasks_UserDataTaskRegenerationProperties?) throws {
        try _interop.put_RegenerationProperties(value)
    }

    /// Gets or sets a time span value. The value declares the amount of time to subtract from the DueDate, and that time used as the issue time for a reminder for a task. A **null** value indicates that the task won't issue a reminder. Reminder is of type IReference(TimeSpan).
    /// - Returns: A time span value, or **null** to issue no reminder.
    public var reminder: WindowsFoundation_IReference<WindowsFoundation_DateTime>? {
        get throws {
            try _interop.get_Reminder()
        }
    }

    /// Gets or sets a time span value. The value declares the amount of time to subtract from the DueDate, and that time used as the issue time for a reminder for a task. A **null** value indicates that the task won't issue a reminder. Reminder is of type IReference(TimeSpan).
    /// - Returns: A time span value, or **null** to issue no reminder.
    public func reminder(_ value: WindowsFoundation_IReference<WindowsFoundation_DateTime>?) throws {
        try _interop.put_Reminder(value)
    }

    /// Gets or sets an ID that can be used by a service provider to access the UserDataTask in their remote system.
    /// - Returns: An ID that can be used by a service provider to access the UserDataTask in their remote system.
    public var remoteId: Swift.String {
        get throws {
            try _interop.get_RemoteId()
        }
    }

    /// Gets or sets an ID that can be used by a service provider to access the UserDataTask in their remote system.
    /// - Returns: An ID that can be used by a service provider to access the UserDataTask in their remote system.
    public func remoteId(_ value: Swift.String) throws {
        try _interop.put_RemoteId(value)
    }

    /// Gets or sets a UserDataTaskSensitivity -typed value that indicates the sensitivity of the task.
    /// - Returns: A UserDataTaskSensitivity -typed value that indicates the sensitivity of the task.
    public var sensitivity: WindowsApplicationModelUserDataTasks_UserDataTaskSensitivity {
        get throws {
            try _interop.get_Sensitivity()
        }
    }

    /// Gets or sets a UserDataTaskSensitivity -typed value that indicates the sensitivity of the task.
    /// - Returns: A UserDataTaskSensitivity -typed value that indicates the sensitivity of the task.
    public func sensitivity(_ value: WindowsApplicationModelUserDataTasks_UserDataTaskSensitivity) throws {
        try _interop.put_Sensitivity(value)
    }

    /// Gets or sets the starting date and time for the task.
    /// - Returns: The date and time to use as the starting time for the task.
    public var startDate: WindowsFoundation_IReference<WindowsFoundation_DateTime>? {
        get throws {
            try _interop.get_StartDate()
        }
    }

    /// Gets or sets the starting date and time for the task.
    /// - Returns: The date and time to use as the starting time for the task.
    public func startDate(_ value: WindowsFoundation_IReference<WindowsFoundation_DateTime>?) throws {
        try _interop.put_StartDate(value)
    }

    /// Gets or sets a string that communicates the subject of the task. Subject is of type String and a maximum of 255 characters in length.
    /// - Returns: The subject of the task.
    public var subject: Swift.String {
        get throws {
            try _interop.get_Subject()
        }
    }

    /// Gets or sets a string that communicates the subject of the task. Subject is of type String and a maximum of 255 characters in length.
    /// - Returns: The subject of the task.
    public func subject(_ value: Swift.String) throws {
        try _interop.put_Subject(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.UserDataTasks.UserDataTask", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}