// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a bounding volume of some kind in the user's surroundings, for example, a box, oriented box, sphere or frustum.
public final class WindowsPerceptionSpatial_SpatialBoundingVolume: WindowsRuntime.WinRTImport<WindowsPerceptionSpatial_SpatialBoundingVolumeProjection> {
    // MARK: Windows.Perception.Spatial.ISpatialBoundingVolumeStatics members

    /// Creates a bounding volume from the specified box, with its coordinates interpreted within the specified coordinate system.
    /// - Parameter coordinateSystem: The coordinate system within which to interpret the bounding box's coordinates.
    /// - Parameter box: The bounding box.
    /// - Returns: The new bounding volume.
    public static func fromBox(_ coordinateSystem: WindowsPerceptionSpatial_SpatialCoordinateSystem?, _ box: WindowsPerceptionSpatial_SpatialBoundingBox) throws -> WindowsPerceptionSpatial_SpatialBoundingVolume {
        try COM.NullResult.unwrap(_ispatialBoundingVolumeStatics.fromBox(coordinateSystem, box))
    }

    /// Creates a bounding volume from the specified oriented box, with its coordinates interpreted within the specified coordinate system.
    /// - Parameter coordinateSystem: The coordinate system within which to interpret the bounding box's coordinates.
    /// - Parameter box: The oriented bounding box.
    /// - Returns: The new bounding volume.
    public static func fromOrientedBox(_ coordinateSystem: WindowsPerceptionSpatial_SpatialCoordinateSystem?, _ box: WindowsPerceptionSpatial_SpatialBoundingOrientedBox) throws -> WindowsPerceptionSpatial_SpatialBoundingVolume {
        try COM.NullResult.unwrap(_ispatialBoundingVolumeStatics.fromOrientedBox(coordinateSystem, box))
    }

    /// Creates a bounding volume from the specified sphere, with its coordinates interpreted within the specified coordinate system.
    /// - Parameter coordinateSystem: The coordinate system within which to interpret the bounding sphere's coordinates.
    /// - Parameter sphere: The bounding sphere.
    /// - Returns: The new bounding volume.
    public static func fromSphere(_ coordinateSystem: WindowsPerceptionSpatial_SpatialCoordinateSystem?, _ sphere: WindowsPerceptionSpatial_SpatialBoundingSphere) throws -> WindowsPerceptionSpatial_SpatialBoundingVolume {
        try COM.NullResult.unwrap(_ispatialBoundingVolumeStatics.fromSphere(coordinateSystem, sphere))
    }

    /// Creates a bounding volume from the specified frustum, with its coordinates interpreted within the specified coordinate system.
    /// - Parameter coordinateSystem: The coordinate system within which to interpret the bounding frustum's coordinates.
    /// - Parameter frustum: The bounding frustum.
    /// - Returns: The new bounding volume.
    public static func fromFrustum(_ coordinateSystem: WindowsPerceptionSpatial_SpatialCoordinateSystem?, _ frustum: WindowsPerceptionSpatial_SpatialBoundingFrustum) throws -> WindowsPerceptionSpatial_SpatialBoundingVolume {
        try COM.NullResult.unwrap(_ispatialBoundingVolumeStatics.fromFrustum(coordinateSystem, frustum))
    }

    // MARK: Implementation details

    private static var _ispatialBoundingVolumeStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsPerceptionSpatial_ISpatialBoundingVolumeStatics>? = nil

    internal static var _ispatialBoundingVolumeStatics: COM.COMInterop<CWinRT.SWRT_WindowsPerceptionSpatial_ISpatialBoundingVolumeStatics> {
        get throws {
            try _ispatialBoundingVolumeStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Perception.Spatial.SpatialBoundingVolume", id: CWinRT.SWRT_WindowsPerceptionSpatial_ISpatialBoundingVolumeStatics.iid)
            }
        }
    }
}