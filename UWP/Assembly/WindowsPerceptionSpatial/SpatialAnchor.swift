// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a coordinate system that is strongly anchored to a point in the user's surroundings.
public final class WindowsPerceptionSpatial_SpatialAnchor: WindowsRuntime.WinRTImport<WindowsPerceptionSpatial_SpatialAnchorProjection> {
    // MARK: Windows.Perception.Spatial.ISpatialAnchor members

    /// Gets the coordinate system of the anchor, with easing adjustments applied.
    /// - Returns: The eased coordinate system.
    public var coordinateSystem: WindowsPerceptionSpatial_SpatialCoordinateSystem {
        get throws {
            try COM.NullResult.unwrap(_interop.get_CoordinateSystem())
        }
    }

    /// Gets the coordinate system of the anchor, without easing applied.
    /// - Returns: The raw coordinate system.
    public var rawCoordinateSystem: WindowsPerceptionSpatial_SpatialCoordinateSystem {
        get throws {
            try COM.NullResult.unwrap(_interop.get_RawCoordinateSystem())
        }
    }

    /// Occurs when the device adjusts the anchor's precise location, which updates the RawCoordinateSystem.
    public func rawCoordinateSystemAdjusted(adding handler: WindowsFoundation_TypedEventHandler<WindowsPerceptionSpatial_SpatialAnchor?, WindowsPerceptionSpatial_SpatialAnchorRawCoordinateSystemAdjustedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_RawCoordinateSystemAdjusted(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: rawCoordinateSystemAdjusted)
    }

    public func rawCoordinateSystemAdjusted(removing cookie: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_RawCoordinateSystemAdjusted(cookie)
    }

    // MARK: Windows.Perception.Spatial.ISpatialAnchor2 members

    /// Gets a value indicating whether the persisted anchor was removed by the user.
    /// - Returns: **True**, if the anchor was removed; otherwise, **false**.
    public var removedByUser: Swift.Bool {
        get throws {
            try _ispatialAnchor2.get_RemovedByUser()
        }
    }

    // MARK: Windows.Perception.Spatial.ISpatialAnchorStatics members

    /// Creates an anchor at the origin of the specified coordinate system.
    /// - Parameter coordinateSystem: The reference SpatialCoordinateSystem object.
    /// - Returns: The new anchor, if the creation attempt is successful; otherwise, null.
    public static func tryCreateRelativeTo(_ coordinateSystem: WindowsPerceptionSpatial_SpatialCoordinateSystem?) throws -> WindowsPerceptionSpatial_SpatialAnchor {
        try COM.NullResult.unwrap(_ispatialAnchorStatics.tryCreateRelativeTo(coordinateSystem))
    }

    /// Creates an anchor at a specific position within the specified coordinate system.
    /// - Parameter coordinateSystem: The reference SpatialCoordinateSystem object.
    /// - Parameter position: A point specified relative to the coordinate system of the source SpatialCoordinateSystem object.
    /// - Returns: The new anchor, if the creation attempt is successful; otherwise, null.
    public static func tryCreateRelativeTo(_ coordinateSystem: WindowsPerceptionSpatial_SpatialCoordinateSystem?, _ position: WindowsFoundationNumerics_Vector3) throws -> WindowsPerceptionSpatial_SpatialAnchor {
        try COM.NullResult.unwrap(_ispatialAnchorStatics.tryCreateWithPositionRelativeTo(coordinateSystem, position))
    }

    /// Creates an anchor at a specific position and orientation within the specified coordinate system.
    /// - Parameter coordinateSystem: The reference SpatialCoordinateSystem object.
    /// - Parameter position: A point specified relative to the coordinate system of the source SpatialCoordinateSystem object.
    /// - Parameter orientation: A rotation specified relative to the coordinate system of the source SpatialCoordinateSystem object. The orientation of the created anchor's coordinate system is offset by this rotation relative to the source coordinate system.
    /// - Returns: The new anchor, if the creation attempt is successful; otherwise, null.
    public static func tryCreateRelativeTo(_ coordinateSystem: WindowsPerceptionSpatial_SpatialCoordinateSystem?, _ position: WindowsFoundationNumerics_Vector3, _ orientation: WindowsFoundationNumerics_Quaternion) throws -> WindowsPerceptionSpatial_SpatialAnchor {
        try COM.NullResult.unwrap(_ispatialAnchorStatics.tryCreateWithPositionAndOrientationRelativeTo(coordinateSystem, position, orientation))
    }

    // MARK: Implementation details

    private var _ispatialAnchor2_storage: COM.COMInterop<CWinRT.SWRT_WindowsPerceptionSpatial_ISpatialAnchor2>? = nil

    internal var _ispatialAnchor2: COM.COMInterop<CWinRT.SWRT_WindowsPerceptionSpatial_ISpatialAnchor2> {
        get throws {
            try _ispatialAnchor2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsPerceptionSpatial_ISpatialAnchor2.iid).cast(to: CWinRT.SWRT_WindowsPerceptionSpatial_ISpatialAnchor2.self)
            }
        }
    }

    deinit {
        _ispatialAnchor2_storage?.release()
    }

    private static var _ispatialAnchorStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsPerceptionSpatial_ISpatialAnchorStatics>? = nil

    internal static var _ispatialAnchorStatics: COM.COMInterop<CWinRT.SWRT_WindowsPerceptionSpatial_ISpatialAnchorStatics> {
        get throws {
            try _ispatialAnchorStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Perception.Spatial.SpatialAnchor", id: CWinRT.SWRT_WindowsPerceptionSpatial_ISpatialAnchorStatics.iid)
            }
        }
    }
}