// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the location of the device in the user's surroundings at a point in time.
public final class WindowsPerceptionSpatial_SpatialLocation: WindowsRuntime.WinRTImport<WindowsPerceptionSpatial_SpatialLocationProjection> {
    // MARK: Windows.Perception.Spatial.ISpatialLocation members

    /// Gets the absolute angular acceleration of the device in a clamped quaternion representation of the rotation per second squared. This acceleration is expressed in the supplied coordinate system, although the motion is measured relative to the user's surroundings.
    /// - Returns: The angular acceleration as a clamped quaternion.
    public var absoluteAngularAcceleration: WindowsFoundationNumerics_Quaternion {
        get throws {
            try _interop.get_AbsoluteAngularAcceleration()
        }
    }

    /// Gets the absolute angular velocity of the device in a clamped quaternion representation of the rotation per second. This velocity is expressed in the supplied coordinate system, although the motion is measured relative to the user's surroundings.
    /// - Returns: The angular velocity as a clamped quaternion.
    public var absoluteAngularVelocity: WindowsFoundationNumerics_Quaternion {
        get throws {
            try _interop.get_AbsoluteAngularVelocity()
        }
    }

    /// Gets the absolute acceleration vector of the device in units of meters per second squared. This acceleration is expressed in the supplied coordinate system, although the motion is measured relative to the user's surroundings.
    /// - Returns: The acceleration.
    public var absoluteLinearAcceleration: WindowsFoundationNumerics_Vector3 {
        get throws {
            try _interop.get_AbsoluteLinearAcceleration()
        }
    }

    /// Gets the absolute velocity vector of the device in units of meters per second. This velocity is expressed in the supplied coordinate system, although the motion is measured relative to the user's surroundings.
    /// - Returns: The velocity.
    public var absoluteLinearVelocity: WindowsFoundationNumerics_Vector3 {
        get throws {
            try _interop.get_AbsoluteLinearVelocity()
        }
    }

    /// Gets the orientation of the device within the supplied coordinate system.
    /// - Returns: The orientation.
    public var orientation: WindowsFoundationNumerics_Quaternion {
        get throws {
            try _interop.get_Orientation()
        }
    }

    /// Gets the position of the device within the supplied coordinate system.
    /// - Returns: The position.
    public var position: WindowsFoundationNumerics_Vector3 {
        get throws {
            try _interop.get_Position()
        }
    }

    // MARK: Windows.Perception.Spatial.ISpatialLocation2 members

    /// Gets the absolute angular acceleration of the device in an axis-angle representation in units of radians per second squared. This acceleration is expressed in the supplied coordinate system, although the motion is measured relative to the user's surroundings.
    /// - Returns: The angular acceleration as an axis-angle.
    public var absoluteAngularAccelerationAxisAngle: WindowsFoundationNumerics_Vector3 {
        get throws {
            try _ispatialLocation2.get_AbsoluteAngularAccelerationAxisAngle()
        }
    }

    /// Gets the absolute angular velocity of the device in an axis-angle representation in units of radians per second. This velocity is expressed in the supplied coordinate system, although the motion is measured relative to the user's surroundings.
    /// - Returns: The angular velocity as an axis-angle.
    public var absoluteAngularVelocityAxisAngle: WindowsFoundationNumerics_Vector3 {
        get throws {
            try _ispatialLocation2.get_AbsoluteAngularVelocityAxisAngle()
        }
    }

    // MARK: Implementation details

    private var _ispatialLocation2_storage: COM.COMInterop<CWinRT.SWRT_WindowsPerceptionSpatial_ISpatialLocation2>? = nil

    internal var _ispatialLocation2: COM.COMInterop<CWinRT.SWRT_WindowsPerceptionSpatial_ISpatialLocation2> {
        get throws {
            try _ispatialLocation2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsPerceptionSpatial_ISpatialLocation2.iid).cast(to: CWinRT.SWRT_WindowsPerceptionSpatial_ISpatialLocation2.self)
            }
        }
    }

    deinit {
        _ispatialLocation2_storage?.release()
    }
}