// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a physical location in the user's surroundings and its metadata, which an app intends to share with other devices.
public final class WindowsPerceptionSpatial_SpatialEntity: WindowsRuntime.WinRTImport<WindowsPerceptionSpatial_SpatialEntityProjection> {
    // MARK: Windows.Perception.Spatial.ISpatialEntityFactory members

    public convenience init(_ spatialAnchor: WindowsPerceptionSpatial_SpatialAnchor?) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ispatialEntityFactory.createWithSpatialAnchor(spatialAnchor)))
    }

    public convenience init(_ spatialAnchor: WindowsPerceptionSpatial_SpatialAnchor?, _ propertySet: WindowsFoundationCollections_ValueSet?) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ispatialEntityFactory.createWithSpatialAnchorAndProperties(spatialAnchor, propertySet)))
    }

    // MARK: Windows.Perception.Spatial.ISpatialEntity members

    /// Gets the spatial anchor representing the shared location in the user's surroundings.
    /// - Returns: The anchor.
    public var anchor: WindowsPerceptionSpatial_SpatialAnchor {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Anchor())
        }
    }

    /// Gets the globally-unique ID for this spatial entity.
    /// - Returns: The ID.
    public var id: Swift.String {
        get throws {
            try _interop.get_Id()
        }
    }

    /// Gets the key/value store of metadata for this spatial entity.
    /// - Returns: The metadata.
    public var properties: WindowsFoundationCollections_ValueSet {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Properties())
        }
    }

    // MARK: Implementation details

    private static var _ispatialEntityFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsPerceptionSpatial_ISpatialEntityFactory>? = nil

    internal static var _ispatialEntityFactory: COM.COMInterop<CWinRT.SWRT_WindowsPerceptionSpatial_ISpatialEntityFactory> {
        get throws {
            try _ispatialEntityFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Perception.Spatial.SpatialEntity", id: CWinRT.SWRT_WindowsPerceptionSpatial_ISpatialEntityFactory.iid)
            }
        }
    }
}