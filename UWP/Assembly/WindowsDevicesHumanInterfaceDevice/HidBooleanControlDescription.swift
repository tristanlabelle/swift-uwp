// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Describes a Boolean control for a given HID device.
public final class WindowsDevicesHumanInterfaceDevice_HidBooleanControlDescription: WindowsRuntime.WinRTImport<WindowsDevicesHumanInterfaceDevice_HidBooleanControlDescriptionProjection> {
    // MARK: Windows.Devices.HumanInterfaceDevice.IHidBooleanControlDescription members

    /// Gets the identifier for a given Boolean control.
    /// - Returns: The control identifier.
    public var id: Swift.UInt32 {
        get throws {
            try _interop.get_Id()
        }
    }

    /// Gets the parent collection for a given Boolean control.
    /// - Returns: The control's parent collection.
    public var parentCollections: WindowsFoundationCollections_IVectorView<WindowsDevicesHumanInterfaceDevice_HidCollection?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_ParentCollections())
        }
    }

    /// Gets the report ID of the HID report that contains the usage or usage range for the given Boolean control.
    /// - Returns: The report identifier.
    public var reportId: Swift.UInt16 {
        get throws {
            try _interop.get_ReportId()
        }
    }

    /// Gets the type of HID report associated with the given Boolean control.
    /// - Returns: One of the report types: HidFeatureReport, HidInputReport, or HidOutputReport.
    public var reportType: WindowsDevicesHumanInterfaceDevice_HidReportType {
        get throws {
            try _interop.get_ReportType()
        }
    }

    /// Gets the usage identifier associated with the given Boolean control.
    /// - Returns: The usage identifier.
    public var usageId: Swift.UInt16 {
        get throws {
            try _interop.get_UsageId()
        }
    }

    /// Gets the usage page associated with the given Boolean control.
    /// - Returns: The usage page.
    public var usagePage: Swift.UInt16 {
        get throws {
            try _interop.get_UsagePage()
        }
    }

    // MARK: Windows.Devices.HumanInterfaceDevice.IHidBooleanControlDescription2 members

    /// Gets a value indicating whether the given boolean control values are absolute or relative (change in value from that previously reported).
    /// - Returns: True if the values are absolute; false if the values are relative.
    public var isAbsolute: Swift.Bool {
        get throws {
            try _ihidBooleanControlDescription2.get_IsAbsolute()
        }
    }

    // MARK: Implementation details

    private var _ihidBooleanControlDescription2_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesHumanInterfaceDevice_IHidBooleanControlDescription2>? = nil

    internal var _ihidBooleanControlDescription2: COM.COMInterop<CWinRT.SWRT_WindowsDevicesHumanInterfaceDevice_IHidBooleanControlDescription2> {
        get throws {
            try _ihidBooleanControlDescription2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsDevicesHumanInterfaceDevice_IHidBooleanControlDescription2.iid).cast(to: CWinRT.SWRT_WindowsDevicesHumanInterfaceDevice_IHidBooleanControlDescription2.self)
            }
        }
    }

    deinit {
        _ihidBooleanControlDescription2_storage?.release()
    }
}