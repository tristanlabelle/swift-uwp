// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a simple Boolean control on a HID device that returns on/off values. An example would be the LED light on a keyboard.
public final class WindowsDevicesHumanInterfaceDevice_HidBooleanControl: WindowsRuntime.WinRTImport<WindowsDevicesHumanInterfaceDevice_HidBooleanControlProjection> {
    // MARK: Windows.Devices.HumanInterfaceDevice.IHidBooleanControl members

    /// Gets a description of the given Boolean control.
    /// - Returns: A **HidBooleanControlDescription** object.
    public var controlDescription: WindowsDevicesHumanInterfaceDevice_HidBooleanControlDescription {
        get throws {
            try COM.NullResult.unwrap(_interop.get_ControlDescription())
        }
    }

    /// Gets the identifier for a given Boolean control.
    /// - Returns: The control identifier.
    public var id: Swift.UInt32 {
        get throws {
            try _interop.get_Id()
        }
    }

    /// Gets a Boolean value indicating whether the given Boolean control is active.
    /// - Returns: True, if the control is active; otherwise, false.
    public var isActive: Swift.Bool {
        get throws {
            try _interop.get_IsActive()
        }
    }

    /// Gets a Boolean value indicating whether the given Boolean control is active.
    /// - Returns: True, if the control is active; otherwise, false.
    public func isActive(_ value: Swift.Bool) throws {
        try _interop.put_IsActive(value)
    }

    /// Gets the usage identifier associated with the given Boolean control.
    /// - Returns: The usage identifier.
    public var usageId: Swift.UInt16 {
        get throws {
            try _interop.get_UsageId()
        }
    }

    /// Gets the usage page for a given Boolean control.
    /// - Returns: The usage page.
    public var usagePage: Swift.UInt16 {
        get throws {
            try _interop.get_UsagePage()
        }
    }

    // MARK: Implementation details
}