// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides access to the image-related properties of an item (like a file or folder).
public final class WindowsStorageFileProperties_ImageProperties: WindowsRuntime.WinRTImport<WindowsStorageFileProperties_ImagePropertiesProjection>, WindowsStorageFileProperties_IStorageItemExtraPropertiesProtocol {
    // MARK: Windows.Storage.FileProperties.IImageProperties members

    /// Gets or sets the manufacturer of the camera that took the photo.
    /// - Returns: The manufacturer of the camera that took the photo.
    public var cameraManufacturer: Swift.String {
        get throws {
            try _interop.get_CameraManufacturer()
        }
    }

    /// Gets or sets the manufacturer of the camera that took the photo.
    /// - Returns: The manufacturer of the camera that took the photo.
    public func cameraManufacturer(_ value: Swift.String) throws {
        try _interop.put_CameraManufacturer(value)
    }

    /// Gets or sets the model of the camera that took the photo.
    /// - Returns: The model of the camera that took the photo.
    public var cameraModel: Swift.String {
        get throws {
            try _interop.get_CameraModel()
        }
    }

    /// Gets or sets the model of the camera that took the photo.
    /// - Returns: The model of the camera that took the photo.
    public func cameraModel(_ value: Swift.String) throws {
        try _interop.put_CameraModel(value)
    }

    /// Gets or sets the date when the image was taken.
    /// - Returns: The date when the image was taken.
    public var dateTaken: WindowsFoundation_DateTime {
        get throws {
            try _interop.get_DateTaken()
        }
    }

    /// Gets or sets the date when the image was taken.
    /// - Returns: The date when the image was taken.
    public func dateTaken(_ value: WindowsFoundation_DateTime) throws {
        try _interop.put_DateTaken(value)
    }

    /// Gets the height of the image.
    /// - Returns: The height of the image, in pixels.
    public var height: Swift.UInt32 {
        get throws {
            try _interop.get_Height()
        }
    }

    /// Gets the collection of keywords associated with the image.
    /// - Returns: The collection of keywords.
    public var keywords: WindowsFoundationCollections_IVector<Swift.String> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Keywords())
        }
    }

    /// Gets the latitude coordinate where the photo was taken.
    /// - Returns: The latitude coordinate where the photo was taken.
    public var latitude: Swift.Double? {
        get throws {
            try _interop.get_Latitude()
        }
    }

    /// Gets the longitude coordinate where the photo was taken.
    /// - Returns: The longitude coordinate where the photo was taken.
    public var longitude: Swift.Double? {
        get throws {
            try _interop.get_Longitude()
        }
    }

    /// Gets the Exchangeable Image File (EXIF) orientation flag of the photo.
    /// - Returns: The photo's Exchangeable Image File (EXIF) orientation flag.
    public var orientation: WindowsStorageFileProperties_PhotoOrientation {
        get throws {
            try _interop.get_Orientation()
        }
    }

    /// Gets the names of people who are tagged in the photo.
    /// - Returns: A list of the names of people who are tagged in the photo.
    public var peopleNames: WindowsFoundationCollections_IVectorView<Swift.String> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_PeopleNames())
        }
    }

    /// Gets or sets the rating associated with an image file.
    /// - Returns: The media file rating, as a value between 0 and 99.
    public var rating: Swift.UInt32 {
        get throws {
            try _interop.get_Rating()
        }
    }

    /// Gets or sets the rating associated with an image file.
    /// - Returns: The media file rating, as a value between 0 and 99.
    public func rating(_ value: Swift.UInt32) throws {
        try _interop.put_Rating(value)
    }

    /// Gets or sets the title of the image.
    /// - Returns: The image title.
    public var title: Swift.String {
        get throws {
            try _interop.get_Title()
        }
    }

    /// Gets or sets the title of the image.
    /// - Returns: The image title.
    public func title(_ value: Swift.String) throws {
        try _interop.put_Title(value)
    }

    /// Gets the width of the image.
    /// - Returns: The width of the image
    public var width: Swift.UInt32 {
        get throws {
            try _interop.get_Width()
        }
    }

    // MARK: Windows.Storage.FileProperties.IStorageItemExtraProperties members

    public func retrievePropertiesAsync(_ propertiesToRetrieve: WindowsFoundationCollections_IIterable<Swift.String>?) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IMap<Swift.String, WindowsRuntime.IInspectable?>?> {
        try COM.NullResult.unwrap(_istorageItemExtraProperties.retrievePropertiesAsync(propertiesToRetrieve))
    }

    public func savePropertiesAsync(_ propertiesToSave: WindowsFoundationCollections_IIterable<WindowsFoundationCollections_IKeyValuePair<Swift.String, WindowsRuntime.IInspectable?>?>?) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_istorageItemExtraProperties.savePropertiesAsync(propertiesToSave))
    }

    /// Saves all properties associated with the item.
    /// - Returns: No object or value is returned when this method completes.
    public func savePropertiesAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_istorageItemExtraProperties.savePropertiesAsyncOverloadDefault())
    }

    // MARK: Implementation details

    private var _istorageItemExtraProperties_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorageFileProperties_IStorageItemExtraProperties>? = nil

    internal var _istorageItemExtraProperties: COM.COMInterop<CWinRT.SWRT_WindowsStorageFileProperties_IStorageItemExtraProperties> {
        get throws {
            try _istorageItemExtraProperties_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsStorageFileProperties_IStorageItemExtraProperties.iid).cast(to: CWinRT.SWRT_WindowsStorageFileProperties_IStorageItemExtraProperties.self)
            }
        }
    }

    deinit {
        _istorageItemExtraProperties_storage?.release()
    }
}