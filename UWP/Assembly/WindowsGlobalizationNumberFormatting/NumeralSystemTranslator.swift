// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Translates digits of the Latin numerical system into digits of another numerical system.
public final class WindowsGlobalizationNumberFormatting_NumeralSystemTranslator: WindowsRuntime.WinRTImport<WindowsGlobalizationNumberFormatting_NumeralSystemTranslatorProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsGlobalizationNumberFormatting_NumeralSystemTranslatorProjection.self))
    }

    // MARK: Windows.Globalization.NumberFormatting.INumeralSystemTranslatorFactory members

    public convenience init(_ languages: WindowsFoundationCollections_IIterable<Swift.String>?) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._inumeralSystemTranslatorFactory.create(languages)))
    }

    // MARK: Windows.Globalization.NumberFormatting.INumeralSystemTranslator members

    /// Gets the BCP-47 language tag(s) used to initialize this NumeralSystemTranslator object.
    /// - Returns: The BCP-47 language tag(s) used to initialize this NumeralSystemTranslator object. There is always at least one.
    public var languages: WindowsFoundationCollections_IVectorView<Swift.String> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Languages())
        }
    }

    /// Gets or sets the numeral system that Latin digits will be converted to on calls to TranslateNumerals.
    /// - Returns: A string that indicates the target numeral system of the translator, such as "Arab" for the Arabic-Indic numeral system (٠١٢٣٤٥٦٧٨٩). See the supported [NumeralSystem values](https://docs.microsoft.com/previous-versions/windows/apps/jj236471(v=win.10)).
    public var numeralSystem: Swift.String {
        get throws {
            try _interop.get_NumeralSystem()
        }
    }

    /// Gets or sets the numeral system that Latin digits will be converted to on calls to TranslateNumerals.
    /// - Returns: A string that indicates the target numeral system of the translator, such as "Arab" for the Arabic-Indic numeral system (٠١٢٣٤٥٦٧٨٩). See the supported [NumeralSystem values](https://docs.microsoft.com/previous-versions/windows/apps/jj236471(v=win.10)).
    public func numeralSystem(_ value: Swift.String) throws {
        try _interop.put_NumeralSystem(value)
    }

    /// Gets the language used to determine the numeral system when this object was initialized.
    /// - Returns: The particular BCP-47 language tag used during the construction of this object to determine the initial value of NumeralSystem.
    public var resolvedLanguage: Swift.String {
        get throws {
            try _interop.get_ResolvedLanguage()
        }
    }

    /// Converts a string of characters containing Latin digits to a string containing the corresponding digits of NumeralSystem.
    /// - Parameter value: A string of characters containing Latin digits to be converted.
    /// - Returns: A string containing the converted digits. This string may be a different length than *value*.
    public func translateNumerals(_ value: Swift.String) throws -> Swift.String {
        try _interop.translateNumerals(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Globalization.NumberFormatting.NumeralSystemTranslator", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _inumeralSystemTranslatorFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsGlobalizationNumberFormatting_INumeralSystemTranslatorFactory>? = nil

    internal static var _inumeralSystemTranslatorFactory: COM.COMInterop<CWinRT.SWRT_WindowsGlobalizationNumberFormatting_INumeralSystemTranslatorFactory> {
        get throws {
            try _inumeralSystemTranslatorFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Globalization.NumberFormatting.NumeralSystemTranslator", id: CWinRT.SWRT_WindowsGlobalizationNumberFormatting_INumeralSystemTranslatorFactory.iid)
            }
        }
    }
}