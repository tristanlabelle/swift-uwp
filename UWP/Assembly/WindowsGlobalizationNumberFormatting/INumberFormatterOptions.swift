// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// An interface that gets and sets options for formatting numbers.
public protocol WindowsGlobalizationNumberFormatting_INumberFormatterOptionsProtocol: IInspectableProtocol {
    /// Gets or sets the minimum number of digits to display for the fraction part of the number.
    /// - Returns: The minimum number of digits to display.
    var fractionDigits: Swift.Int32 { get throws }
    func fractionDigits(_ value: Swift.Int32) throws

    /// Gets the region that is used when formatting and parsing numbers.
    /// - Returns: The region that is used.
    var geographicRegion: Swift.String { get throws }

    /// Gets or sets the minimum number of digits to display for the integer part of the number.
    /// - Returns: The minimum number of digits to display.
    var integerDigits: Swift.Int32 { get throws }
    func integerDigits(_ value: Swift.Int32) throws

    /// Gets or sets whether the decimal point of the number should always be displayed.
    /// - Returns: **True** if the decimal point of the number should always be displayed, and **false** otherwise.
    var isDecimalPointAlwaysDisplayed: Swift.Bool { get throws }
    func isDecimalPointAlwaysDisplayed(_ value: Swift.Bool) throws

    /// Gets or sets whether the integer part of the number should be grouped.
    /// - Returns: **True** if the integer part of the number should be grouped, and **false** otherwise.
    var isGrouped: Swift.Bool { get throws }
    func isGrouped(_ value: Swift.Bool) throws

    /// Gets the priority list of language identifiers that is used when formatting and parsing numbers.
    /// - Returns: The priority list of language identifiers.
    var languages: WindowsFoundationCollections_IVectorView<Swift.String> { get throws }

    /// Gets or sets the numbering system that is used to format and parse numbers.
    /// - Returns: A string that indicates the numeral system of the formatter, such as "Latn" for the Latin numeral system (0123456789) or "Arab" for the Arabic-Indic numeral system (٠١٢٣٤٥٦٧٨٩). See the supported [NumeralSystem values](https://docs.microsoft.com/previous-versions/windows/apps/jj236471(v=win.10)).
    var numeralSystem: Swift.String { get throws }
    func numeralSystem(_ value: Swift.String) throws

    /// Gets the geographic region that was most recently used to format or parse numbers.
    /// - Returns: The geographic region that was most recently used to format or parse numbers.
    var resolvedGeographicRegion: Swift.String { get throws }

    /// Gets the language that was most recently used to format or parse numbers.
    /// - Returns: The language from the priority list of language identifiers that was most recently used to format or parse numbers.
    var resolvedLanguage: Swift.String { get throws }
}

/// An interface that gets and sets options for formatting numbers.
public typealias WindowsGlobalizationNumberFormatting_INumberFormatterOptions = any WindowsGlobalizationNumberFormatting_INumberFormatterOptionsProtocol