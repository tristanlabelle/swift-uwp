// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Defines the methods necessary for a custom Gip controller interface.
public protocol WindowsGamingInputCustom_IGipGameControllerInputSinkProtocol: WindowsGamingInputCustom_IGameControllerInputSinkProtocol {
    /// Event raised when a key is received.
    /// - Parameter timestamp: Timestamp for the event.
    /// - Parameter keyCode: The key code for the button that raised the event.
    /// - Parameter isPressed: Boolean indicating whether the key is pressed or released.
    func onKeyReceived(_ timestamp: Swift.UInt64, _ keyCode: Swift.UInt8, _ isPressed: Swift.Bool) throws

    /// Event raised when a message is received.
    /// - Parameter timestamp: Timestamp of the event.
    /// - Parameter messageClass: The class of the message.
    /// - Parameter messageId: The ID of the message.
    /// - Parameter sequenceId: Sequence ID of the message.
    /// - Parameter messageBuffer: Buffer containing the message.
    func onMessageReceived(_ timestamp: Swift.UInt64, _ messageClass: WindowsGamingInputCustom_GipMessageClass, _ messageId: Swift.UInt8, _ sequenceId: Swift.UInt8, _ messageBuffer: [Swift.UInt8]) throws
}

/// Defines the methods necessary for a custom Gip controller interface.
public typealias WindowsGamingInputCustom_IGipGameControllerInputSink = any WindowsGamingInputCustom_IGipGameControllerInputSinkProtocol