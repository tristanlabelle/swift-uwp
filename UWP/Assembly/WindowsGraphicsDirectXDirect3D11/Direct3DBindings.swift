// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// This is a Windows Runtime equivalent of the Desktop D3D11_BIND_FLAG enumeration. Identifies the ways in which a resource may be bound to the graphics pipeline.
public struct WindowsGraphicsDirectXDirect3D11_Direct3DBindings: OptionSet, Hashable, Codable {
    public var rawValue: Swift.UInt32

    public init(rawValue: Swift.UInt32 = 0) {
        self.rawValue = rawValue
    }

    /// Bind a buffer as a vertex buffer to the input-assembler stage.
    public static let vertexBuffer = Self(rawValue: 1)

    /// Bind a buffer as an index buffer to the input-assembler stage.
    public static let indexBuffer = Self(rawValue: 2)

    /// Bind a buffer as a constant buffer to a shader stage.
    public static let constantBuffer = Self(rawValue: 4)

    /// Bind a buffer or texture to a shader stage.
    public static let shaderResource = Self(rawValue: 8)

    /// Bind an output buffer for the stream-output stage.
    public static let streamOutput = Self(rawValue: 16)

    /// Bind a texture as a render target for the output-merger stage.
    public static let renderTarget = Self(rawValue: 32)

    /// Bind a texture as a depth-stencil target for the output-merger stage.
    public static let depthStencil = Self(rawValue: 64)

    /// Bind an unordered access resource.
    public static let unorderedAccess = Self(rawValue: 128)

    /// Set this flag to indicate that a 2D texture is used to receive output from the decoder API.
    public static let decoder = Self(rawValue: 512)

    /// Set this flag to indicate that a 2D texture is used to receive input from the video encoder API.
    public static let videoEncoder = Self(rawValue: 1024)
}