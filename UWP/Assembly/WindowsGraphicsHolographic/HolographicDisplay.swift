// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides metadata for a display to which a holographic view must render each frame from that frame's pose.
public final class WindowsGraphicsHolographic_HolographicDisplay: WindowsRuntime.WinRTImport<WindowsGraphicsHolographic_HolographicDisplayProjection> {
    // MARK: Windows.Graphics.Holographic.IHolographicDisplay members

    /// Gets the identifier of the graphics adapter to be used when displaying holographic content to this HolographicDisplay.
    /// - Returns: The identifier.
    public var adapterId: WindowsGraphicsHolographic_HolographicAdapterId {
        get throws {
            try _interop.get_AdapterId()
        }
    }

    /// Gets a friendly name for this display that can be displayed to the user.
    /// - Returns: The friendly name.
    public var displayName: Swift.String {
        get throws {
            try _interop.get_DisplayName()
        }
    }

    /// Gets whether this display is occluded, blocking the user's view of the physical world around them.
    /// - Returns: Whether this display is occluded.
    public var isOpaque: Swift.Bool {
        get throws {
            try _interop.get_IsOpaque()
        }
    }

    /// Gets whether this display requires separate rendering for the left and right eyes.
    /// - Returns: Whether this display is stereo.
    public var isStereo: Swift.Bool {
        get throws {
            try _interop.get_IsStereo()
        }
    }

    /// Gets the maximum viewport size that an app will ever be asked to render to for this display.
    /// - Returns: The maximum viewport size.
    public var maxViewportSize: WindowsFoundation_Size {
        get throws {
            try _interop.get_MaxViewportSize()
        }
    }

    /// Gets a spatial locator that can be used to create frames of reference relative to this display.
    /// - Returns: The spatial locator.
    public var spatialLocator: WindowsPerceptionSpatial_SpatialLocator {
        get throws {
            try COM.NullResult.unwrap(_interop.get_SpatialLocator())
        }
    }

    // MARK: Windows.Graphics.Holographic.IHolographicDisplay2 members

    /// Gets the refresh rate at which an app must present content to this holographic display.
    /// - Returns: The refresh rate.
    public var refreshRate: Swift.Double {
        get throws {
            try _iholographicDisplay2.get_RefreshRate()
        }
    }

    // MARK: Windows.Graphics.Holographic.IHolographicDisplay3 members

    /// Attempts to retrieve the view configuration for this HolographicDisplay, which corresponds to the supplied HolographicViewConfigurationKind.
    /// - Parameter kind: A HolographicViewConfigurationKind indicating the kind of view configuration to be retrieved.
    /// - Returns: A HolographicViewConfiguration object of the indicated kind, or null if the HolographicDisplay does not support the indicated HolographicViewConfigurationKind.
    public func tryGetViewConfiguration(_ kind: WindowsGraphicsHolographic_HolographicViewConfigurationKind) throws -> WindowsGraphicsHolographic_HolographicViewConfiguration {
        try COM.NullResult.unwrap(_iholographicDisplay3.tryGetViewConfiguration(kind))
    }

    // MARK: Windows.Graphics.Holographic.IHolographicDisplayStatics members

    /// Gets the default display that represents the user's primary Mixed Reality headset.
    /// - Returns: The default display.
    public static func getDefault() throws -> WindowsGraphicsHolographic_HolographicDisplay {
        try COM.NullResult.unwrap(_iholographicDisplayStatics.getDefault())
    }

    // MARK: Implementation details

    private var _iholographicDisplay2_storage: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsHolographic_IHolographicDisplay2>? = nil

    internal var _iholographicDisplay2: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsHolographic_IHolographicDisplay2> {
        get throws {
            try _iholographicDisplay2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsGraphicsHolographic_IHolographicDisplay2.iid).cast(to: CWinRT.SWRT_WindowsGraphicsHolographic_IHolographicDisplay2.self)
            }
        }
    }

    private var _iholographicDisplay3_storage: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsHolographic_IHolographicDisplay3>? = nil

    internal var _iholographicDisplay3: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsHolographic_IHolographicDisplay3> {
        get throws {
            try _iholographicDisplay3_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsGraphicsHolographic_IHolographicDisplay3.iid).cast(to: CWinRT.SWRT_WindowsGraphicsHolographic_IHolographicDisplay3.self)
            }
        }
    }

    deinit {
        _iholographicDisplay2_storage?.release()
        _iholographicDisplay3_storage?.release()
    }

    private static var _iholographicDisplayStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsHolographic_IHolographicDisplayStatics>? = nil

    internal static var _iholographicDisplayStatics: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsHolographic_IHolographicDisplayStatics> {
        get throws {
            try _iholographicDisplayStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Graphics.Holographic.HolographicDisplay", id: CWinRT.SWRT_WindowsGraphicsHolographic_IHolographicDisplayStatics.iid)
            }
        }
    }
}