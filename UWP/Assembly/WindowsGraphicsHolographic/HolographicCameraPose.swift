// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the predicted location of a holographic camera for a particular frame.
public final class WindowsGraphicsHolographic_HolographicCameraPose: WindowsRuntime.WinRTImport<WindowsGraphicsHolographic_HolographicCameraPoseProjection> {
    // MARK: Windows.Graphics.Holographic.IHolographicCameraPose members

    /// Gets the far plane distance for this frame, which is set by calling the HolographicCamera.SetFarPlaneDistance method.
    /// - Returns: The far plane distance for this frame, in meters. By default, this is set to 20 meters.
    public var farPlaneDistance: Swift.Double {
        get throws {
            try _interop.get_FarPlaneDistance()
        }
    }

    /// Gets the HolographicCamera that's described by this camera pose.
    /// - Returns: The HolographicCamera.
    public var holographicCamera: WindowsGraphicsHolographic_HolographicCamera {
        get throws {
            try COM.NullResult.unwrap(_interop.get_HolographicCamera())
        }
    }

    /// Gets the near plane distance for this frame, which you set by calling the HolographicCamera.SetNearPlaneDistance method.
    /// - Returns: The near plane distance for this frame, in meters. By default, this is set to 0.01 meters.
    public var nearPlaneDistance: Swift.Double {
        get throws {
            try _interop.get_NearPlaneDistance()
        }
    }

    /// Gets the stereo projection transform for this camera pose.
    /// - Returns: The transforms.
    public var projectionTransform: WindowsGraphicsHolographic_HolographicStereoTransform {
        get throws {
            try _interop.get_ProjectionTransform()
        }
    }

    /// Gets the viewport rectangle that the app must render to for this camera in this frame.
    /// - Returns: The viewport rect.
    public var viewport: WindowsFoundation_Rect {
        get throws {
            try _interop.get_Viewport()
        }
    }

    /// Gets the stereo view transform for this camera pose, expressed as a transform from the specified coordinate system. This method will return null if the specified coordinate system cannot be located at the moment.
    /// - Parameter coordinateSystem: The coordinate system from which the rendered geometry should be transformed.
    /// - Returns: The transforms.
    public func tryGetViewTransform(_ coordinateSystem: WindowsPerceptionSpatial_SpatialCoordinateSystem?) throws -> WindowsFoundation_IReference<WindowsGraphicsHolographic_HolographicStereoTransform>? {
        try _interop.tryGetViewTransform(coordinateSystem)
    }

    /// Gets the predicted conservative culling frustum for this camera pose, expressed in the specified coordinate system.
    /// - Parameter coordinateSystem: The coordinate system in which to express the culling frustum.
    /// - Returns: The culling frustum.
    public func tryGetCullingFrustum(_ coordinateSystem: WindowsPerceptionSpatial_SpatialCoordinateSystem?) throws -> WindowsFoundation_IReference<WindowsPerceptionSpatial_SpatialBoundingFrustum>? {
        try _interop.tryGetCullingFrustum(coordinateSystem)
    }

    /// Gets the predicted view frustum for the current pose, expressed in the specified coordinate system.
    /// - Parameter coordinateSystem: The coordinate system in which to express the visible frustum.
    /// - Returns: The visible frustum.
    public func tryGetVisibleFrustum(_ coordinateSystem: WindowsPerceptionSpatial_SpatialCoordinateSystem?) throws -> WindowsFoundation_IReference<WindowsPerceptionSpatial_SpatialBoundingFrustum>? {
        try _interop.tryGetVisibleFrustum(coordinateSystem)
    }

    // MARK: Windows.Graphics.Holographic.IHolographicCameraPose2 members

    /// Notifies the compositor that the app is rendering with an alternate suboptimal view transform this frame.
    /// - Parameter coordinateSystem: The coordinate system in which the alternate suboptimal view transform will be expressed.
    /// - Parameter coordinateSystemToViewTransform: The alternate suboptimal view transform.
    public func overrideViewTransform(_ coordinateSystem: WindowsPerceptionSpatial_SpatialCoordinateSystem?, _ coordinateSystemToViewTransform: WindowsGraphicsHolographic_HolographicStereoTransform) throws {
        try _iholographicCameraPose2.overrideViewTransform(coordinateSystem, coordinateSystemToViewTransform)
    }

    /// Notifies the compositor that the app is rendering with an alternate suboptimal projection transform this frame.
    /// - Parameter projectionTransform: The alternate suboptimal projection transform.
    public func overrideProjectionTransform(_ projectionTransform: WindowsGraphicsHolographic_HolographicStereoTransform) throws {
        try _iholographicCameraPose2.overrideProjectionTransform(projectionTransform)
    }

    /// Specifies an alternate viewport rectangle within the frame buffer that the app is rendering into this frame.
    /// - Parameter leftViewport: The left eye viewport rectangle.
    /// - Parameter rightViewport: The right eye viewport rectangle.
    public func overrideViewport(_ leftViewport: WindowsFoundation_Rect, _ rightViewport: WindowsFoundation_Rect) throws {
        try _iholographicCameraPose2.overrideViewport(leftViewport, rightViewport)
    }

    // MARK: Implementation details

    private var _iholographicCameraPose2_storage: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsHolographic_IHolographicCameraPose2>? = nil

    internal var _iholographicCameraPose2: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsHolographic_IHolographicCameraPose2> {
        get throws {
            try _iholographicCameraPose2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsGraphicsHolographic_IHolographicCameraPose2.iid).cast(to: CWinRT.SWRT_WindowsGraphicsHolographic_IHolographicCameraPose2.self)
            }
        }
    }

    deinit {
        _iholographicCameraPose2_storage?.release()
    }
}