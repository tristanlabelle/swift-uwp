// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents an update payload that lets an application configure a specific quad layer's parameters from a given frame forward.
public final class WindowsGraphicsHolographic_HolographicQuadLayerUpdateParameters: WindowsRuntime.WinRTImport<WindowsGraphicsHolographic_HolographicQuadLayerUpdateParametersProjection> {
    // MARK: Windows.Graphics.Holographic.IHolographicQuadLayerUpdateParameters members

    /// Gets a Direct3D 11 back buffer whose contents will be displayed for this quad layer from this frame forward.
    /// - Returns: The Direct3D 11 surface that holds the back buffer.
    public func acquireBufferToUpdateContent() throws -> WindowsGraphicsDirectXDirect3D11_IDirect3DSurface {
        try COM.NullResult.unwrap(_interop.acquireBufferToUpdateContent())
    }

    /// Updates the viewport rectangle within the quad layer's texture that will be displayed to the screen.
    /// - Parameter value: The viewport rectangle.
    public func updateViewport(_ value: WindowsFoundation_Rect) throws {
        try _interop.updateViewport(value)
    }

    /// Updates whether this quad layer contains protected content.
    /// - Parameter value: Whether content protection should be enabled for this quad layer.
    public func updateContentProtectionEnabled(_ value: Swift.Bool) throws {
        try _interop.updateContentProtectionEnabled(value)
    }

    /// Updates the extents of this quad layer in world coordinates.
    /// - Parameter value: The full width and height of the quad layer in meters.
    public func updateExtents(_ value: WindowsFoundationNumerics_Vector2) throws {
        try _interop.updateExtents(value)
    }

    /// Updates the center location of this quad layer in the world, setting it to remain at that world location in future frames.
    /// - Parameter coordinateSystem: The reference SpatialCoordinateSystem object.
    /// - Parameter position: A point for the center of the quad plane, specified relative to the origin of the reference coordinate system.
    /// - Parameter orientation: A rotation for the normal of the quad plane, specified relative to the neutral orientation of the reference coordinate system.
    public func updateLocationWithStationaryMode(_ coordinateSystem: WindowsPerceptionSpatial_SpatialCoordinateSystem?, _ position: WindowsFoundationNumerics_Vector3, _ orientation: WindowsFoundationNumerics_Quaternion) throws {
        try _interop.updateLocationWithStationaryMode(coordinateSystem, position, orientation)
    }

    /// Updates the center location of this quad layer relative to the center of the displays, setting it to remain at that display-relative location in future frames.
    /// - Parameter position: A point for the center of the quad plane, specified relative to the center of the displays.
    /// - Parameter orientation: A rotation for the normal of the quad plane, specified relative to a normal facing the displays.
    public func updateLocationWithDisplayRelativeMode(_ position: WindowsFoundationNumerics_Vector3, _ orientation: WindowsFoundationNumerics_Quaternion) throws {
        try _interop.updateLocationWithDisplayRelativeMode(position, orientation)
    }

    // MARK: Windows.Graphics.Holographic.IHolographicQuadLayerUpdateParameters2 members

    /// Gets whether hardware content protection is supported for this quad layer.
    /// - Returns: Whether hardware content protection is supported.
    public var canAcquireWithHardwareProtection: Swift.Bool {
        get throws {
            try _iholographicQuadLayerUpdateParameters2.get_CanAcquireWithHardwareProtection()
        }
    }

    /// Gets a hardware-protected Direct3D 11 back buffer whose contents will be displayed for this quad layer from this frame forward.
    /// - Returns: The Direct3D 11 surface that holds the hardware-protected back buffer.
    public func acquireBufferToUpdateContentWithHardwareProtection() throws -> WindowsGraphicsDirectXDirect3D11_IDirect3DSurface {
        try COM.NullResult.unwrap(_iholographicQuadLayerUpdateParameters2.acquireBufferToUpdateContentWithHardwareProtection())
    }

    // MARK: Implementation details

    private var _iholographicQuadLayerUpdateParameters2_storage: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsHolographic_IHolographicQuadLayerUpdateParameters2>? = nil

    internal var _iholographicQuadLayerUpdateParameters2: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsHolographic_IHolographicQuadLayerUpdateParameters2> {
        get throws {
            try _iholographicQuadLayerUpdateParameters2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsGraphicsHolographic_IHolographicQuadLayerUpdateParameters2.iid).cast(to: CWinRT.SWRT_WindowsGraphicsHolographic_IHolographicQuadLayerUpdateParameters2.self)
            }
        }
    }

    deinit {
        _iholographicQuadLayerUpdateParameters2_storage?.release()
    }
}