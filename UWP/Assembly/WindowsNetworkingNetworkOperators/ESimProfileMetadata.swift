// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// A class representing eSIM profile installation metadata.
public final class WindowsNetworkingNetworkOperators_ESimProfileMetadata: WindowsRuntime.WinRTImport<WindowsNetworkingNetworkOperators_ESimProfileMetadataProjection> {
    // MARK: Windows.Networking.NetworkOperators.IESimProfileMetadata members

    /// Gets the identification number (an ICCID) of the eSIM profile.
    /// - Returns: The identification number (an ICCID) of the eSIM profile.
    public var id: Swift.String {
        get throws {
            try _interop.get_Id()
        }
    }

    /// Gets a value that indicates whether the profile requires a confirmation to download.
    /// - Returns: `true` if the profile requires a confirmation to download, otherwise `false`.
    public var isConfirmationCodeRequired: Swift.Bool {
        get throws {
            try _interop.get_IsConfirmationCodeRequired()
        }
    }

    /// Gets the policy for an eSIM profile.
    /// - Returns: The policy for an eSIM profile.
    public var policy: WindowsNetworkingNetworkOperators_ESimProfilePolicy {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Policy())
        }
    }

    /// Gets a memory buffer containing the icon of the mobile network operator (MNO) provider for the eSIM profile.
    /// - Returns: A memory buffer containing the icon of the mobile network operator (MNO) provider for the eSIM profile.
    public var providerIcon: WindowsStorageStreams_IRandomAccessStreamReference {
        get throws {
            try COM.NullResult.unwrap(_interop.get_ProviderIcon())
        }
    }

    /// Gets the identifier (an MCC/MNC tuple) of the mobile network operator (MNO) provider for the eSIM profile.
    /// - Returns: The identifier (an MCC/MNC tuple) of the mobile network operator (MNO) provider for the eSIM profile.
    public var providerId: Swift.String {
        get throws {
            try _interop.get_ProviderId()
        }
    }

    /// Gets the name of the mobile network operator (MNO) provider for the eSIM profile.
    /// - Returns: The name of the mobile network operator (MNO) provider for the eSIM profile.
    public var providerName: Swift.String {
        get throws {
            try _interop.get_ProviderName()
        }
    }

    /// Gets the state of the eSIM profile metadata.
    /// - Returns: The state of the eSIM profile metadata.
    public var state: WindowsNetworkingNetworkOperators_ESimProfileMetadataState {
        get throws {
            try _interop.get_State()
        }
    }

    /// Occurs when the state of the eSIM profile metadata changes.
    public func stateChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsNetworkingNetworkOperators_ESimProfileMetadata?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_StateChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: stateChanged)
    }

    public func stateChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_StateChanged(token)
    }

    /// Asynchronously denies installation of the profile. The profile is revoked at the profile server.
    /// - Returns: An asynchronous deny-installation operation. On successful completion, contains an ESimOperationResult object representing the result of the deny-installation operation.
    public func denyInstallAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsNetworkingNetworkOperators_ESimOperationResult?> {
        try COM.NullResult.unwrap(_interop.denyInstallAsync())
    }

    /// Asynchronously (with progress) downloads and installs an eSIM profile.
    public func confirmInstallAsync() throws -> WindowsFoundation_IAsyncOperationWithProgress<WindowsNetworkingNetworkOperators_ESimOperationResult?, WindowsNetworkingNetworkOperators_ESimProfileInstallProgress> {
        try COM.NullResult.unwrap(_interop.confirmInstallAsync())
    }

    /// Asynchronously (with progress) downloads and installs an eSIM profile whose confirmation code is provided.
    /// - Parameter confirmationCode: The confirmation code for the eSIM profile being downloaded and installed.
    /// - Returns: An asynchronous download and install operation with progress. On successful completion, contains an ESimProfileInstallProgress object representing the result of the download and install operation.
    public func confirmInstallAsync(_ confirmationCode: Swift.String) throws -> WindowsFoundation_IAsyncOperationWithProgress<WindowsNetworkingNetworkOperators_ESimOperationResult?, WindowsNetworkingNetworkOperators_ESimProfileInstallProgress> {
        try COM.NullResult.unwrap(_interop.confirmInstallWithConfirmationCodeAsync(confirmationCode))
    }

    /// Asynchronously postpones the installation of an eSIM profile.
    public func postponeInstallAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsNetworkingNetworkOperators_ESimOperationResult?> {
        try COM.NullResult.unwrap(_interop.postponeInstallAsync())
    }

    // MARK: Implementation details
}