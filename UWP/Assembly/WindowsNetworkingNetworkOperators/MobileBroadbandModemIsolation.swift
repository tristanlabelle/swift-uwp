// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// A class with methods for disallowing and allowing certain types of data traffic through the mobile broadband modem; essentially isolating the user equipment (UE), or device.
public final class WindowsNetworkingNetworkOperators_MobileBroadbandModemIsolation: WindowsRuntime.WinRTImport<WindowsNetworkingNetworkOperators_MobileBroadbandModemIsolationProjection> {
    // MARK: Windows.Networking.NetworkOperators.IMobileBroadbandModemIsolationFactory members

    public convenience init(_ modemDeviceId: Swift.String, _ ruleGroupId: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._imobileBroadbandModemIsolationFactory.create(modemDeviceId, ruleGroupId)))
    }

    // MARK: Windows.Networking.NetworkOperators.IMobileBroadbandModemIsolation members

    /// Adds an allowed host. You can call this method multiple times to add multiple allowed hosts. Traffic to the added host(s) will be allowed after you call ApplyConfigurationAsync.
    /// - Parameter host: The allowed host, whose type must be either IPv4 or IPv6.
    public func addAllowedHost(_ host: WindowsNetworking_HostName?) throws {
        try _interop.addAllowedHost(host)
    }

    /// Adds a range of allowed hosts. You can call this method multiple times to add multiple ranges of allowed hosts. Traffic to the added host(s) will be allowed after you call ApplyConfigurationAsync.
    /// - Parameter first: The first allowed host in the range. Its type must be either IPv4 or IPv6.
    /// - Parameter last: The last allowed host in the range. Its type must be the same as that of *first*.
    public func addAllowedHostRange(_ first: WindowsNetworking_HostName?, _ last: WindowsNetworking_HostName?) throws {
        try _interop.addAllowedHostRange(first, last)
    }

    /// Asynchronously isolates the modem to allow only core networking traffic (such as DHCP, DNS, and ICMP) or traffic to a set of allowed hosts as specified by AddAllowedHost or AddAllowedHostRange.
    /// - Returns: An asynchronous action.
    public func applyConfigurationAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.applyConfigurationAsync())
    }

    /// Asynchronously allows all traffic through the modem.
    /// - Returns: An asynchronous action.
    public func clearConfigurationAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.clearConfigurationAsync())
    }

    // MARK: Implementation details

    private static var _imobileBroadbandModemIsolationFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingNetworkOperators_IMobileBroadbandModemIsolationFactory>? = nil

    internal static var _imobileBroadbandModemIsolationFactory: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingNetworkOperators_IMobileBroadbandModemIsolationFactory> {
        get throws {
            try _imobileBroadbandModemIsolationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Networking.NetworkOperators.MobileBroadbandModemIsolation", id: CWinRT.SWRT_WindowsNetworkingNetworkOperators_IMobileBroadbandModemIsolationFactory.iid)
            }
        }
    }
}