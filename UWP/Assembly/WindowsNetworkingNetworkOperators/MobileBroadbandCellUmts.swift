// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents UMTS network provider/cell information including identifications as well as its respective signal strength.
public final class WindowsNetworkingNetworkOperators_MobileBroadbandCellUmts: WindowsRuntime.WinRTImport<WindowsNetworkingNetworkOperators_MobileBroadbandCellUmtsProjection> {
    // MARK: Windows.Networking.NetworkOperators.IMobileBroadbandCellUmts members

    /// Gets the cell ID.
    /// - Returns: The cell ID.
    public var cellId: Swift.Int32? {
        get throws {
            try _interop.get_CellId()
        }
    }

    /// Gets the UTRAN Absolute Radio Frequency Channel Number for serving cell.
    /// - Returns: The UTRAN Absolute Radio Frequency Channel Number for serving cell.
    public var channelNumber: Swift.Int32? {
        get throws {
            try _interop.get_ChannelNumber()
        }
    }

    /// Gets the Location Area Code (LAC).
    /// - Returns: The Location Area Code (LAC).
    public var locationAreaCode: Swift.Int32? {
        get throws {
            try _interop.get_LocationAreaCode()
        }
    }

    /// Gets the path loss in dB. 
    /// - Returns: The path loss in dB.
    public var pathLossInDB: Swift.Double? {
        get throws {
            try _interop.get_PathLossInDB()
        }
    }

    /// Gets the primary scrambling code of serving cell.
    /// - Returns: The primary scrambling code of serving cell.
    public var primaryScramblingCode: Swift.Int32? {
        get throws {
            try _interop.get_PrimaryScramblingCode()
        }
    }

    /// Gets a concatenated string of MCC and MNC.
    /// - Returns: The provider ID.
    public var providerId: Swift.String {
        get throws {
            try _interop.get_ProviderId()
        }
    }

    /// Gets the received signal code power in dBm. 
    /// - Returns: The received signal code power in dBm.
    public var receivedSignalCodePowerInDBm: Swift.Double? {
        get throws {
            try _interop.get_ReceivedSignalCodePowerInDBm()
        }
    }

    /// Gets the signal to noise ratio in dB. 
    /// - Returns: The received signal code power in dBm.
    public var signalToNoiseRatioInDB: Swift.Double? {
        get throws {
            try _interop.get_SignalToNoiseRatioInDB()
        }
    }

    // MARK: Implementation details
}