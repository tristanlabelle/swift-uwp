// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a mobile broadband network and the current network state.
public final class WindowsNetworkingNetworkOperators_MobileBroadbandNetwork: WindowsRuntime.WinRTImport<WindowsNetworkingNetworkOperators_MobileBroadbandNetworkProjection> {
    // MARK: Windows.Networking.NetworkOperators.IMobileBroadbandNetwork members

    /// The name of the currently connected access point.
    /// - Returns: The name of the currently connected access point.
    public var accessPointName: Swift.String {
        get throws {
            try _interop.get_AccessPointName()
        }
    }

    /// Attempts to get the latest network activation error.
    /// - Returns: The latest network activation error.
    public var activationNetworkError: Swift.UInt32 {
        get throws {
            try _interop.get_ActivationNetworkError()
        }
    }

    /// Gets the unique network interface that identifies the mobile broadband network.
    /// - Returns: An object that uniquely identifies the network.
    public var networkAdapter: WindowsNetworkingConnectivity_NetworkAdapter {
        get throws {
            try COM.NullResult.unwrap(_interop.get_NetworkAdapter())
        }
    }

    /// Gets the current network registration state.
    /// - Returns: The current network registration state.
    public var networkRegistrationState: WindowsNetworkingNetworkOperators_NetworkRegistrationState {
        get throws {
            try _interop.get_NetworkRegistrationState()
        }
    }

    /// Gets the latest packet attach network error.
    /// - Returns: The latest packet attach network error.
    public var packetAttachNetworkError: Swift.UInt32 {
        get throws {
            try _interop.get_PacketAttachNetworkError()
        }
    }

    /// Gets the data class of the current mobile network.
    /// - Returns: The data class of the current mobile network.
    public var registeredDataClass: WindowsNetworkingNetworkOperators_DataClasses {
        get throws {
            try _interop.get_RegisteredDataClass()
        }
    }

    /// Gets the provider ID for the currently registered mobile network.
    /// - Returns: The provider ID for the currently registered mobile network.
    public var registeredProviderId: Swift.String {
        get throws {
            try _interop.get_RegisteredProviderId()
        }
    }

    /// Gets the provider name for the currently registered mobile network.
    /// - Returns: The provider name for the currently registered mobile network.
    public var registeredProviderName: Swift.String {
        get throws {
            try _interop.get_RegisteredProviderName()
        }
    }

    /// Gets the latest network registration error.
    /// - Returns: The latest network registration error.
    public var registrationNetworkError: Swift.UInt32 {
        get throws {
            try _interop.get_RegistrationNetworkError()
        }
    }

    /// Displays the connect UI for a specific mobile network.
    public func showConnectionUI() throws {
        try _interop.showConnectionUI()
    }

    // MARK: Windows.Networking.NetworkOperators.IMobileBroadbandNetwork2 members

    /// Gets a list of all UICC apps available on the SIM card that can be used for registration on a mobile network. This list includes UICC apps that are not currently used for registration, but could potentially could be used for registration.
    /// - Returns: A list of objects that represent UICC applications.
    public var registrationUiccApps: WindowsFoundationCollections_IVectorView<WindowsNetworkingNetworkOperators_MobileBroadbandUiccApp?> {
        get throws {
            try COM.NullResult.unwrap(_imobileBroadbandNetwork2.get_RegistrationUiccApps())
        }
    }

    /// Asynchronously retrieves a value indicating whether this network currently supports voice calls.
    /// - Returns: An asynchronous retrieval operation. On successful completion, contains a value indicating whether the network supports voice calls (if true) or not.
    public func getVoiceCallSupportAsync() throws -> WindowsFoundation_IAsyncOperation<Swift.Bool> {
        try COM.NullResult.unwrap(_imobileBroadbandNetwork2.getVoiceCallSupportAsync())
    }

    // MARK: Windows.Networking.NetworkOperators.IMobileBroadbandNetwork3 members

    /// Retrieves a **MobileBroadbandCellsInfo** object that contains all serving and neighboring cell information when device is registered to a network.
    /// - Returns: An asynchronous operation that returns a **MobileBroadbandCellsInfo** object upon completion.
    public func getCellsInfoAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsNetworkingNetworkOperators_MobileBroadbandCellsInfo?> {
        try COM.NullResult.unwrap(_imobileBroadbandNetwork3.getCellsInfoAsync())
    }

    // MARK: Implementation details

    private var _imobileBroadbandNetwork2_storage: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingNetworkOperators_IMobileBroadbandNetwork2>? = nil

    internal var _imobileBroadbandNetwork2: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingNetworkOperators_IMobileBroadbandNetwork2> {
        get throws {
            try _imobileBroadbandNetwork2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsNetworkingNetworkOperators_IMobileBroadbandNetwork2.iid).cast(to: CWinRT.SWRT_WindowsNetworkingNetworkOperators_IMobileBroadbandNetwork2.self)
            }
        }
    }

    private var _imobileBroadbandNetwork3_storage: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingNetworkOperators_IMobileBroadbandNetwork3>? = nil

    internal var _imobileBroadbandNetwork3: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingNetworkOperators_IMobileBroadbandNetwork3> {
        get throws {
            try _imobileBroadbandNetwork3_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsNetworkingNetworkOperators_IMobileBroadbandNetwork3.iid).cast(to: CWinRT.SWRT_WindowsNetworkingNetworkOperators_IMobileBroadbandNetwork3.self)
            }
        }
    }

    deinit {
        _imobileBroadbandNetwork2_storage?.release()
        _imobileBroadbandNetwork3_storage?.release()
    }
}