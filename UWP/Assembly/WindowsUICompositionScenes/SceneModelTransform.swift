// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a group of 3-D transforms on a node, including rotation, scale, and translation.
public final class WindowsUICompositionScenes_SceneModelTransform: WindowsRuntime.WinRTImport<WindowsUICompositionScenes_SceneModelTransformProjection> {
    // MARK: Windows.UI.Composition.Scenes.ISceneModelTransform members

    /// Gets or sets the orientation of the node.
    /// - Returns: The orientation of the node.
    public var orientation: WindowsFoundationNumerics_Quaternion {
        get throws {
            try _interop.get_Orientation()
        }
    }

    /// Gets or sets the orientation of the node.
    /// - Returns: The orientation of the node.
    public func orientation(_ value: WindowsFoundationNumerics_Quaternion) throws {
        try _interop.put_Orientation(value)
    }

    /// Gets or sets the rotation angle applied to the node, in radians.
    /// - Returns: The rotation angle applied to the node, in radians.
    public var rotationAngle: Swift.Float {
        get throws {
            try _interop.get_RotationAngle()
        }
    }

    /// Gets or sets the rotation angle applied to the node, in radians.
    /// - Returns: The rotation angle applied to the node, in radians.
    public func rotationAngle(_ value: Swift.Float) throws {
        try _interop.put_RotationAngle(value)
    }

    /// Gets or sets the rotation angle applied to the node, in degrees.
    /// - Returns: The rotation angle applied to the node, in degrees.
    public var rotationAngleInDegrees: Swift.Float {
        get throws {
            try _interop.get_RotationAngleInDegrees()
        }
    }

    /// Gets or sets the rotation angle applied to the node, in degrees.
    /// - Returns: The rotation angle applied to the node, in degrees.
    public func rotationAngleInDegrees(_ value: Swift.Float) throws {
        try _interop.put_RotationAngleInDegrees(value)
    }

    /// Gets or sets the axes around which the node is rotated.
    /// - Returns: The axes around which the node is rotated.
    public var rotationAxis: WindowsFoundationNumerics_Vector3 {
        get throws {
            try _interop.get_RotationAxis()
        }
    }

    /// Gets or sets the axes around which the node is rotated.
    /// - Returns: The axes around which the node is rotated.
    public func rotationAxis(_ value: WindowsFoundationNumerics_Vector3) throws {
        try _interop.put_RotationAxis(value)
    }

    /// Gets or sets the relative size of the node on the x, y, and z axes.
    /// - Returns: A vector that describes the relative size of the node on the x, y, and z axes.
    public var scale: WindowsFoundationNumerics_Vector3 {
        get throws {
            try _interop.get_Scale()
        }
    }

    /// Gets or sets the relative size of the node on the x, y, and z axes.
    /// - Returns: A vector that describes the relative size of the node on the x, y, and z axes.
    public func scale(_ value: WindowsFoundationNumerics_Vector3) throws {
        try _interop.put_Scale(value)
    }

    /// Gets or sets the position of the node on the x, y, and z axes.
    /// - Returns: A vector that describes the position of the node on the x, y, and z axes.
    public var translation: WindowsFoundationNumerics_Vector3 {
        get throws {
            try _interop.get_Translation()
        }
    }

    /// Gets or sets the position of the node on the x, y, and z axes.
    /// - Returns: A vector that describes the position of the node on the x, y, and z axes.
    public func translation(_ value: WindowsFoundationNumerics_Vector3) throws {
        try _interop.put_Translation(value)
    }

    // MARK: Implementation details
}