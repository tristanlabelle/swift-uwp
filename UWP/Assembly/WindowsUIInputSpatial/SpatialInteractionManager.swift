// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides access to user input from hands, motion controllers, and system voice commands.
public final class WindowsUIInputSpatial_SpatialInteractionManager: WindowsRuntime.WinRTImport<WindowsUIInputSpatial_SpatialInteractionManagerProjection> {
    // MARK: Windows.UI.Input.Spatial.ISpatialInteractionManager members

    /// Occurs when a new interaction is available for routing to a SpatialGestureRecognizer.
    public func interactionDetected(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIInputSpatial_SpatialInteractionManager?, WindowsUIInputSpatial_SpatialInteractionDetectedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_InteractionDetected(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: interactionDetected)
    }

    public func interactionDetected(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_InteractionDetected(token)
    }

    /// Occurs when a new hand, motion controller, or speech source has been detected.
    public func sourceDetected(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIInputSpatial_SpatialInteractionManager?, WindowsUIInputSpatial_SpatialInteractionSourceEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_SourceDetected(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: sourceDetected)
    }

    public func sourceDetected(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_SourceDetected(token)
    }

    /// Occurs when a hand, motion controller, or speech source is no longer available.
    public func sourceLost(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIInputSpatial_SpatialInteractionManager?, WindowsUIInputSpatial_SpatialInteractionSourceEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_SourceLost(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: sourceLost)
    }

    public func sourceLost(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_SourceLost(token)
    }

    /// Occurs when a hand, motion controller, or speech source has entered a pressed state.
    public func sourcePressed(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIInputSpatial_SpatialInteractionManager?, WindowsUIInputSpatial_SpatialInteractionSourceEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_SourcePressed(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: sourcePressed)
    }

    public func sourcePressed(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_SourcePressed(token)
    }

    /// Occurs when a hand, motion controller, or speech source has exited a pressed state.
    public func sourceReleased(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIInputSpatial_SpatialInteractionManager?, WindowsUIInputSpatial_SpatialInteractionSourceEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_SourceReleased(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: sourceReleased)
    }

    public func sourceReleased(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_SourceReleased(token)
    }

    /// Occurs when a hand, motion controller, or speech source has experienced a change to its SpatialInteractionSourceState.
    public func sourceUpdated(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIInputSpatial_SpatialInteractionManager?, WindowsUIInputSpatial_SpatialInteractionSourceEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_SourceUpdated(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: sourceUpdated)
    }

    public func sourceUpdated(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_SourceUpdated(token)
    }

    /// Get the state of all interaction sources detected for the specified timestamp.
    /// - Parameter timeStamp: The time to query the state of interaction sources.
    /// - Returns: The source states detected.
    public func getDetectedSourcesAtTimestamp(_ timeStamp: WindowsPerception_PerceptionTimestamp?) throws -> WindowsFoundationCollections_IVectorView<WindowsUIInputSpatial_SpatialInteractionSourceState?> {
        try COM.NullResult.unwrap(_interop.getDetectedSourcesAtTimestamp(timeStamp))
    }

    // MARK: Windows.UI.Input.Spatial.ISpatialInteractionManagerStatics members

    /// Get the SpatialInteractionManager associated with the current CoreWindow.
    /// - Returns: The spatial interaction manager.
    public static func getForCurrentView() throws -> WindowsUIInputSpatial_SpatialInteractionManager {
        try COM.NullResult.unwrap(_ispatialInteractionManagerStatics.getForCurrentView())
    }

    // MARK: Windows.UI.Input.Spatial.ISpatialInteractionManagerStatics2 members

    /// Gets whether the specified interaction source is supported on this device.
    /// - Parameter kind: The interaction source.
    /// - Returns: Whether the interaction source is supported.
    public static func isSourceKindSupported(_ kind: WindowsUIInputSpatial_SpatialInteractionSourceKind) throws -> Swift.Bool {
        try _ispatialInteractionManagerStatics2.isSourceKindSupported(kind)
    }

    // MARK: Implementation details

    private static var _ispatialInteractionManagerStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIInputSpatial_ISpatialInteractionManagerStatics>? = nil

    internal static var _ispatialInteractionManagerStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIInputSpatial_ISpatialInteractionManagerStatics> {
        get throws {
            try _ispatialInteractionManagerStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Input.Spatial.SpatialInteractionManager", id: CWinRT.SWRT_WindowsUIInputSpatial_ISpatialInteractionManagerStatics.iid)
            }
        }
    }

    private static var _ispatialInteractionManagerStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIInputSpatial_ISpatialInteractionManagerStatics2>? = nil

    internal static var _ispatialInteractionManagerStatics2: COM.COMInterop<CWinRT.SWRT_WindowsUIInputSpatial_ISpatialInteractionManagerStatics2> {
        get throws {
            try _ispatialInteractionManagerStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Input.Spatial.SpatialInteractionManager", id: CWinRT.SWRT_WindowsUIInputSpatial_ISpatialInteractionManagerStatics2.iid)
            }
        }
    }
}