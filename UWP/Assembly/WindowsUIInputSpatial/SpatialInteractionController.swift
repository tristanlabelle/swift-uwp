// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the specifics of a motion controller.
public final class WindowsUIInputSpatial_SpatialInteractionController: WindowsRuntime.WinRTImport<WindowsUIInputSpatial_SpatialInteractionControllerProjection> {
    // MARK: Windows.UI.Input.Spatial.ISpatialInteractionController members

    /// Gets whether the motion controller has a thumbstick.
    /// - Returns: Whether the controller has a thumbstick.
    public var hasThumbstick: Swift.Bool {
        get throws {
            try _interop.get_HasThumbstick()
        }
    }

    /// Gets whether the motion controller has a touchpad.
    /// - Returns: Whether the controller has a touchpad.
    public var hasTouchpad: Swift.Bool {
        get throws {
            try _interop.get_HasTouchpad()
        }
    }

    /// Gets the product identifier for this motion controller.
    /// - Returns: The product identifier.
    public var productId: Swift.UInt16 {
        get throws {
            try _interop.get_ProductId()
        }
    }

    /// Provides access to the motion controller's ability to vibrate in the user's hand.
    /// - Returns: The simple haptics controller.
    public var simpleHapticsController: WindowsDevicesHaptics_SimpleHapticsController {
        get throws {
            try COM.NullResult.unwrap(_interop.get_SimpleHapticsController())
        }
    }

    /// Gets the vendor identifier for this motion controller.
    /// - Returns: The vendor identifier.
    public var vendorId: Swift.UInt16 {
        get throws {
            try _interop.get_VendorId()
        }
    }

    /// Gets the version, or revision, number for this motion controller.
    /// - Returns: The version number.
    public var version: Swift.UInt16 {
        get throws {
            try _interop.get_Version()
        }
    }

    // MARK: Windows.UI.Input.Spatial.ISpatialInteractionController2 members

    /// Gets a renderable model stream for this controller, which can be unpacked and rendered to represent this controller.
    /// - Returns: Operation that triggers once the renderable model stream is loaded, yielding the stream or null if there is no model available.
    public func tryGetRenderableModelAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsStorageStreams_IRandomAccessStreamWithContentType?> {
        try COM.NullResult.unwrap(_ispatialInteractionController2.tryGetRenderableModelAsync())
    }

    // MARK: Windows.UI.Input.Spatial.ISpatialInteractionController3 members

    /// Gets information about the motion controller's current battery state.
    /// - Returns: Information about the motion controller's current battery state, if available; otherwise, null.
    public func tryGetBatteryReport() throws -> WindowsDevicesPower_BatteryReport {
        try COM.NullResult.unwrap(_ispatialInteractionController3.tryGetBatteryReport())
    }

    // MARK: Implementation details

    private var _ispatialInteractionController2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIInputSpatial_ISpatialInteractionController2>? = nil

    internal var _ispatialInteractionController2: COM.COMInterop<CWinRT.SWRT_WindowsUIInputSpatial_ISpatialInteractionController2> {
        get throws {
            try _ispatialInteractionController2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIInputSpatial_ISpatialInteractionController2.iid).cast(to: CWinRT.SWRT_WindowsUIInputSpatial_ISpatialInteractionController2.self)
            }
        }
    }

    private var _ispatialInteractionController3_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIInputSpatial_ISpatialInteractionController3>? = nil

    internal var _ispatialInteractionController3: COM.COMInterop<CWinRT.SWRT_WindowsUIInputSpatial_ISpatialInteractionController3> {
        get throws {
            try _ispatialInteractionController3_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIInputSpatial_ISpatialInteractionController3.iid).cast(to: CWinRT.SWRT_WindowsUIInputSpatial_ISpatialInteractionController3.self)
            }
        }
    }

    deinit {
        _ispatialInteractionController2_storage?.release()
        _ispatialInteractionController3_storage?.release()
    }
}