// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides data for the SpatialGestureRecognizer.NavigationStarted event.
public final class WindowsUIInputSpatial_SpatialNavigationStartedEventArgs: WindowsRuntime.WinRTImport<WindowsUIInputSpatial_SpatialNavigationStartedEventArgsProjection> {
    // MARK: Windows.UI.Input.Spatial.ISpatialNavigationStartedEventArgs members

    /// Gets the kind of interaction source associated with this gesture.
    /// - Returns: The interaction source kind.
    public var interactionSourceKind: WindowsUIInputSpatial_SpatialInteractionSourceKind {
        get throws {
            try _interop.get_InteractionSourceKind()
        }
    }

    /// Gets whether the navigation gesture the user is performing involves motion on the horizontal axis.
    /// - Returns: Whether the gesture involves horizontal navigation.
    public var isNavigatingX: Swift.Bool {
        get throws {
            try _interop.get_IsNavigatingX()
        }
    }

    /// Gets whether the navigation gesture the user is performing involves motion on the vertical axis.
    /// - Returns: Whether the gesture involves vertical navigation.
    public var isNavigatingY: Swift.Bool {
        get throws {
            try _interop.get_IsNavigatingY()
        }
    }

    /// Gets whether the navigation gesture the user is performing involves motion on the depth axis.
    /// - Returns: Whether the gesture involves depth navigation.
    public var isNavigatingZ: Swift.Bool {
        get throws {
            try _interop.get_IsNavigatingZ()
        }
    }

    /// Gets the available pointer poses, such as the user's head gaze and each motion controller's pointer pose, for use in targeting this gesture.
    /// - Parameter coordinateSystem: The coordinate system in which to express the pointer poses.
    /// - Returns: The pointer poses.
    public func tryGetPointerPose(_ coordinateSystem: WindowsPerceptionSpatial_SpatialCoordinateSystem?) throws -> WindowsUIInputSpatial_SpatialPointerPose {
        try COM.NullResult.unwrap(_interop.tryGetPointerPose(coordinateSystem))
    }

    // MARK: Implementation details
}