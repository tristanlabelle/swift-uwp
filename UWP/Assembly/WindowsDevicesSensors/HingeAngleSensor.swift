// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the hinge angle sensor in a dual-screen device.
public final class WindowsDevicesSensors_HingeAngleSensor: WindowsRuntime.WinRTImport<WindowsDevicesSensors_HingeAngleSensorProjection> {
    // MARK: Windows.Devices.Sensors.IHingeAngleSensor members

    /// Gets the device identifier.
    /// - Returns: The device identifier.
    public var deviceId: Swift.String {
        get throws {
            try _interop.get_DeviceId()
        }
    }

    /// Gets the minimum reporting threshold for the hinge angle sensor, measured in degrees.
    /// - Returns: The minimum reporting threshold for the hinge angle sensor, in degrees.
    public var minReportThresholdInDegrees: Swift.Double {
        get throws {
            try _interop.get_MinReportThresholdInDegrees()
        }
    }

    /// Gets the reporting threshold for the hinge angle sensor, measured in degrees.
    /// - Returns: The reporting threshold for the hinge angle sensor, in degrees.
    public var reportThresholdInDegrees: Swift.Double {
        get throws {
            try _interop.get_ReportThresholdInDegrees()
        }
    }

    /// Gets the reporting threshold for the hinge angle sensor, measured in degrees.
    /// - Returns: The reporting threshold for the hinge angle sensor, in degrees.
    public func reportThresholdInDegrees(_ value: Swift.Double) throws {
        try _interop.put_ReportThresholdInDegrees(value)
    }

    /// Occurs when the hinge angle sensor in a dual-screen device reports a change in opening angle.
    public func readingChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsDevicesSensors_HingeAngleSensor?, WindowsDevicesSensors_HingeAngleSensorReadingChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_ReadingChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: readingChanged)
    }

    public func readingChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_ReadingChanged(token)
    }

    /// Asynchronously retrieves the current data from the hinge angle sensor.
    /// - Returns: When this method completes, it returns a reference to the HingeAngleReading.
    public func getCurrentReadingAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesSensors_HingeAngleReading?> {
        try COM.NullResult.unwrap(_interop.getCurrentReadingAsync())
    }

    // MARK: Windows.Devices.Sensors.IHingeAngleSensorStatics members

    /// Gets an Advanced Query Syntax (AQS) string for identifying instances of the display panels in a hinged dual-screen device. This string is passed to the HingeAngleSensor.GetRelatedToAdjacentPanelsAsync method.
    /// - Returns: Returns the HingeAngleSensor device selector, if it exists; otherwise, null.
    public static func getDeviceSelector() throws -> Swift.String {
        try _ihingeAngleSensorStatics.getDeviceSelector()
    }

    /// Asynchronously retrieves the default hinge angle sensor.
    /// - Returns: When this method completes, it returns a reference to the default HingeAngleSensor.
    public static func getDefaultAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesSensors_HingeAngleSensor?> {
        try COM.NullResult.unwrap(_ihingeAngleSensorStatics.getDefaultAsync())
    }

    /// Asynchronously retrieves a hinge angle sensor for two adjacent display panels.
    /// - Parameter firstPanelId: The device Id of one of the hinged panels.
    /// - Parameter secondPanelId: The device Id of the other hinged panel.
    /// - Returns: When this method completes, it returns a reference to a HingeAngleSensor.
    public static func getRelatedToAdjacentPanelsAsync(_ firstPanelId: Swift.String, _ secondPanelId: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesSensors_HingeAngleSensor?> {
        try COM.NullResult.unwrap(_ihingeAngleSensorStatics.getRelatedToAdjacentPanelsAsync(firstPanelId, secondPanelId))
    }

    /// Obtains the hinge angle sensor from the identifier.
    /// - Parameter deviceId: The sensor identifier.
    /// - Returns: The HingeAngleSensor object from its identifier.
    public static func fromIdAsync(_ deviceId: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesSensors_HingeAngleSensor?> {
        try COM.NullResult.unwrap(_ihingeAngleSensorStatics.fromIdAsync(deviceId))
    }

    // MARK: Implementation details

    private static var _ihingeAngleSensorStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesSensors_IHingeAngleSensorStatics>? = nil

    internal static var _ihingeAngleSensorStatics: COM.COMInterop<CWinRT.SWRT_WindowsDevicesSensors_IHingeAngleSensorStatics> {
        get throws {
            try _ihingeAngleSensorStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Sensors.HingeAngleSensor", id: CWinRT.SWRT_WindowsDevicesSensors_IHingeAngleSensorStatics.iid)
            }
        }
    }
}