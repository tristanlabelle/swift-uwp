// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the region in which a view is able to be shown to a user on a logical display.
public final class WindowsUIWindowManagement_DisplayRegion: WindowsRuntime.WinRTImport<WindowsUIWindowManagement_DisplayRegionProjection> {
    // MARK: Windows.UI.WindowManagement.IDisplayRegion members

    /// Gets the device ID for the monitor associated with the display region.
    /// - Returns: The device ID for the monitor associated with the display region.
    public var displayMonitorDeviceId: Swift.String {
        get throws {
            try _interop.get_DisplayMonitorDeviceId()
        }
    }

    /// Gets a value that indicates whether the display region can be seen.
    /// - Returns: **true** if the display region can be seen; otherwise, **false**.
    public var isVisible: Swift.Bool {
        get throws {
            try _interop.get_IsVisible()
        }
    }

    /// Gets the windowing environment that this display region exists in.
    /// - Returns: The windowing environment that this display region exists in.
    public var windowingEnvironment: WindowsUIWindowManagement_WindowingEnvironment {
        get throws {
            try COM.NullResult.unwrap(_interop.get_WindowingEnvironment())
        }
    }

    /// Gets the offset within the display coordinate space for this DisplayRegion.
    /// - Returns: The offset within the display coordinate space for this DisplayRegion.
    public var workAreaOffset: WindowsFoundation_Point {
        get throws {
            try _interop.get_WorkAreaOffset()
        }
    }

    /// Gets the width and height of the display region.
    /// - Returns: The width and height of the display region.
    public var workAreaSize: WindowsFoundation_Size {
        get throws {
            try _interop.get_WorkAreaSize()
        }
    }

    /// Occurs when a property of the display region has changed.
    public func changed(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIWindowManagement_DisplayRegion?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Changed(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: changed)
    }

    public func changed(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Changed(token)
    }

    // MARK: Implementation details
}