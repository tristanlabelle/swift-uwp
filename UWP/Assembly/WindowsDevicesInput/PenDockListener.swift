// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides access to docking state event notifications from a connected pen device.
public final class WindowsDevicesInput_PenDockListener: WindowsRuntime.WinRTImport<WindowsDevicesInput_PenDockListenerProjection> {
    // MARK: Windows.Devices.Input.IPenDockListener members

    /// Occurs when the user docks a pen.
    public func docked(adding handler: WindowsFoundation_TypedEventHandler<WindowsDevicesInput_PenDockListener?, WindowsDevicesInput_PenDockedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Docked(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: docked)
    }

    public func docked(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Docked(token)
    }

    /// Occurs when the availability of pen docking event changes (pen settings are changed by the user or system support changes).
    public func isSupportedChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsDevicesInput_PenDockListener?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_IsSupportedChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: isSupportedChanged)
    }

    public func isSupportedChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_IsSupportedChanged(token)
    }

    /// Occurs when the user undocks a pen.
    public func undocked(adding handler: WindowsFoundation_TypedEventHandler<WindowsDevicesInput_PenDockListener?, WindowsDevicesInput_PenUndockedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Undocked(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: undocked)
    }

    public func undocked(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Undocked(token)
    }

    /// Retrieves whether pen docking state event notifications are currently supported.
    /// - Returns: True, if currently supported. Otherwise, false.
    public func isSupported() throws -> Swift.Bool {
        try _interop.isSupported()
    }

    // MARK: Windows.Devices.Input.IPenDockListenerStatics members

    /// Retrieves the default listener for pen dock events.
    /// - Returns: An object that represents a listener for pen dock events in the default context.
    public static func getDefault() throws -> WindowsDevicesInput_PenDockListener {
        try COM.NullResult.unwrap(_ipenDockListenerStatics.getDefault())
    }

    // MARK: Implementation details

    private static var _ipenDockListenerStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesInput_IPenDockListenerStatics>? = nil

    internal static var _ipenDockListenerStatics: COM.COMInterop<CWinRT.SWRT_WindowsDevicesInput_IPenDockListenerStatics> {
        get throws {
            try _ipenDockListenerStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Input.PenDockListener", id: CWinRT.SWRT_WindowsDevicesInput_IPenDockListenerStatics.iid)
            }
        }
    }
}