// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides access to button action event notifications from a connected pen device.
public final class WindowsDevicesInput_PenButtonListener: WindowsRuntime.WinRTImport<WindowsDevicesInput_PenButtonListenerProjection> {
    // MARK: Windows.Devices.Input.IPenButtonListener members

    /// Occurs when the availability of pen button events changes (pen settings are changed by the user or system support changes).
    public func isSupportedChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsDevicesInput_PenButtonListener?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_IsSupportedChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: isSupportedChanged)
    }

    public func isSupportedChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_IsSupportedChanged(token)
    }

    /// Occurs when the user presses and releases (clicks) the button on the tail end of the pen.
    public func tailButtonClicked(adding handler: WindowsFoundation_TypedEventHandler<WindowsDevicesInput_PenButtonListener?, WindowsDevicesInput_PenTailButtonClickedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_TailButtonClicked(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: tailButtonClicked)
    }

    public func tailButtonClicked(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_TailButtonClicked(token)
    }

    /// Occurs when the user presses and releases (clicks) the button on the tail end of the pen twice in quick succession.
    public func tailButtonDoubleClicked(adding handler: WindowsFoundation_TypedEventHandler<WindowsDevicesInput_PenButtonListener?, WindowsDevicesInput_PenTailButtonDoubleClickedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_TailButtonDoubleClicked(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: tailButtonDoubleClicked)
    }

    public func tailButtonDoubleClicked(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_TailButtonDoubleClicked(token)
    }

    /// Occurs when the user presses and holds the button on the tail end of the pen.
    public func tailButtonLongPressed(adding handler: WindowsFoundation_TypedEventHandler<WindowsDevicesInput_PenButtonListener?, WindowsDevicesInput_PenTailButtonLongPressedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_TailButtonLongPressed(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: tailButtonLongPressed)
    }

    public func tailButtonLongPressed(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_TailButtonLongPressed(token)
    }

    /// Retrieves whether pen button action event notifications are currently supported.
    /// - Returns: True, if currently supported. Otherwise, false.
    public func isSupported() throws -> Swift.Bool {
        try _interop.isSupported()
    }

    // MARK: Windows.Devices.Input.IPenButtonListenerStatics members

    /// Retrieves the default listener for pen button events.
    /// - Returns: An object that represents a listener for pen button events in the default context.
    public static func getDefault() throws -> WindowsDevicesInput_PenButtonListener {
        try COM.NullResult.unwrap(_ipenButtonListenerStatics.getDefault())
    }

    // MARK: Implementation details

    private static var _ipenButtonListenerStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesInput_IPenButtonListenerStatics>? = nil

    internal static var _ipenButtonListenerStatics: COM.COMInterop<CWinRT.SWRT_WindowsDevicesInput_IPenButtonListenerStatics> {
        get throws {
            try _ipenButtonListenerStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Input.PenButtonListener", id: CWinRT.SWRT_WindowsDevicesInput_IPenButtonListenerStatics.iid)
            }
        }
    }
}