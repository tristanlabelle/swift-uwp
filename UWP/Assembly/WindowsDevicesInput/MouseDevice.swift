// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Supports the ability to identify and track connected mouse devices.
public final class WindowsDevicesInput_MouseDevice: WindowsRuntime.WinRTImport<WindowsDevicesInput_MouseDeviceProjection> {
    // MARK: Windows.Devices.Input.IMouseDevice members

    /// Occurs when the mouse pointer is moved.
    public func mouseMoved(adding handler: WindowsFoundation_TypedEventHandler<WindowsDevicesInput_MouseDevice?, WindowsDevicesInput_MouseEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_MouseMoved(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: mouseMoved)
    }

    public func mouseMoved(removing cookie: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_MouseMoved(cookie)
    }

    // MARK: Windows.Devices.Input.IMouseDeviceStatics members

    /// Retrieves the mouse device that is associated with the current view.
    /// - Returns: The mouse device.
    public static func getForCurrentView() throws -> WindowsDevicesInput_MouseDevice {
        try COM.NullResult.unwrap(_imouseDeviceStatics.getForCurrentView())
    }

    // MARK: Implementation details

    private static var _imouseDeviceStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesInput_IMouseDeviceStatics>? = nil

    internal static var _imouseDeviceStatics: COM.COMInterop<CWinRT.SWRT_WindowsDevicesInput_IMouseDeviceStatics> {
        get throws {
            try _imouseDeviceStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Input.MouseDevice", id: CWinRT.SWRT_WindowsDevicesInput_IMouseDeviceStatics.iid)
            }
        }
    }
}