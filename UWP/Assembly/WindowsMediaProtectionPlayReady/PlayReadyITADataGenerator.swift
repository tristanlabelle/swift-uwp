// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Creates the PlayReady ITA-specific serialized initialization data.
public final class WindowsMediaProtectionPlayReady_PlayReadyITADataGenerator: WindowsRuntime.WinRTImport<WindowsMediaProtectionPlayReady_PlayReadyITADataGeneratorProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsMediaProtectionPlayReady_PlayReadyITADataGeneratorProjection.self))
    }

    // MARK: Windows.Media.Protection.PlayReady.IPlayReadyITADataGenerator members

    /// Returns a serialized blob of the specified IPropertySet data that the PlayReady ITA can consume if wrapped in a content protection instantiation format.
    /// - Parameter guidCPSystemId: The content protection system **GUID**.
    /// - Parameter countOfStreams: The stream count.
    /// - Parameter configuration: The data to be returned as a serialized blob.
    /// - Parameter format: The format for the ITA serialized data.
    /// - Returns: The serialized blob. See Remarks.
    public func generateData(_ guidCPSystemId: Foundation.UUID, _ countOfStreams: Swift.UInt32, _ configuration: WindowsFoundationCollections_IPropertySet?, _ format: WindowsMediaProtectionPlayReady_PlayReadyITADataFormat) throws -> [Swift.UInt8] {
        try _interop.generateData(guidCPSystemId, countOfStreams, configuration, format)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.Protection.PlayReady.PlayReadyITADataGenerator", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}