// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Indicates the type and purpose of a PlayReady-ND transmitter license.
public struct WindowsMediaProtectionPlayReady_NDCertificateType: RawRepresentable, Hashable, Codable {
    public var rawValue: Swift.Int32

    public init(rawValue: Swift.Int32 = 0) {
        self.rawValue = rawValue
    }

    /// An unknown certificate type. Apps should never use this value.
    public static let unknown = Self()

    /// A leaf level certificate used by the PC client.
    public static let pc = Self(rawValue: 1)

    /// A leaf level certificate used by a device.
    public static let device = Self(rawValue: 2)

    /// A leaf level certificate used by a PC or a device when a member of a domain.
    public static let domain = Self(rawValue: 3)

    /// Can be an issuer of certificates for either an issuer or a leaf certificate.
    public static let issuer = Self(rawValue: 4)

    /// A leaf level certificate used to sign CRLs issued by Microsoft.
    public static let crlSigner = Self(rawValue: 5)

    /// A leaf level certificate used by services such as Secure Clock. Reserved for future use.
    public static let service = Self(rawValue: 6)

    /// A leaf level certificate for a Silverlight client.
    public static let silverlight = Self(rawValue: 7)

    /// A leaf level certificate for a PlayReady client.
    public static let application = Self(rawValue: 8)

    /// A leaf level certificate used by digital rights management clients to encrypt metering data sent to a PlayReady SDK server.
    public static let metering = Self(rawValue: 9)

    /// A leaf level certificate used by the cryptography server to sign the key file.
    public static let keyFileSigner = Self(rawValue: 10)

    /// A leaf level certificate used by the PlayReady server.
    public static let server = Self(rawValue: 11)

    /// A certificate used by a license signer.
    public static let licenseSigner = Self(rawValue: 12)
}