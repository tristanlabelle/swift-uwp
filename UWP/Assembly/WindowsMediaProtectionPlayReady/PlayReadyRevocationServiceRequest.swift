// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Updates the revocation data required by PlayReady.
public final class WindowsMediaProtectionPlayReady_PlayReadyRevocationServiceRequest: WindowsRuntime.WinRTImport<WindowsMediaProtectionPlayReady_PlayReadyRevocationServiceRequestProjection>, WindowsMediaProtectionPlayReady_IPlayReadyServiceRequestProtocol, WindowsMediaProtection_IMediaProtectionServiceRequestProtocol {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsMediaProtectionPlayReady_PlayReadyRevocationServiceRequestProjection.self))
    }

    // MARK: Windows.Media.Protection.PlayReady.IPlayReadyServiceRequest members

    /// Gets or sets the custom data of the request challenge. This property is not supported in this class.
    /// - Returns: Get always returns **NULL** data. Set always returns 0x80070032 (the request is not supported).
    public var challengeCustomData: Swift.String {
        get throws {
            try _iplayReadyServiceRequest.get_ChallengeCustomData()
        }
    }

    /// Gets or sets the custom data of the request challenge. This property is not supported in this class.
    /// - Returns: Get always returns **NULL** data. Set always returns 0x80070032 (the request is not supported).
    public func challengeCustomData(_ value: Swift.String) throws {
        try _iplayReadyServiceRequest.put_ChallengeCustomData(value)
    }

    /// Gets the custom data that was returned in the response from the service. This property is not supported in this class.
    /// - Returns: Always returns **NULL** data.
    public var responseCustomData: Swift.String {
        get throws {
            try _iplayReadyServiceRequest.get_ResponseCustomData()
        }
    }

    /// Gets or sets the URI used to perform a service request action. This property is not supported in this class.
    /// - Returns: Get always returns **NULL** data. Set always returns 0x80070032 (the request is not supported).
    public var uri: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_iplayReadyServiceRequest.get_Uri())
        }
    }

    /// Gets or sets the URI used to perform a service request action. This property is not supported in this class.
    /// - Returns: Get always returns **NULL** data. Set always returns 0x80070032 (the request is not supported).
    public func uri(_ value: WindowsFoundation_Uri?) throws {
        try _iplayReadyServiceRequest.put_Uri(value)
    }

    /// Begins an asynchronous service request operation.
    /// - Returns: The asynchronous service action.
    public func beginServiceRequest() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_iplayReadyServiceRequest.beginServiceRequest())
    }

    /// Returns a new service request interface.
    /// - Returns: The new service request interface.
    public func nextServiceRequest() throws -> WindowsMediaProtectionPlayReady_IPlayReadyServiceRequest {
        try COM.NullResult.unwrap(_iplayReadyServiceRequest.nextServiceRequest())
    }

    /// Begins the process of manually enabling. This method is not supported in this class.
    /// - Returns: This method always returns 0x80070032 (the request is not supported).
    public func generateManualEnablingChallenge() throws -> WindowsMediaProtectionPlayReady_PlayReadySoapMessage {
        try COM.NullResult.unwrap(_iplayReadyServiceRequest.generateManualEnablingChallenge())
    }

    /// Process the raw binary result of a manual enabling challenge. This method is not supported in this class.
    /// - Parameter responseBytes: The response result to be processed.
    /// - Returns: This method always returns 0x80070032 (the request is not supported).
    public func processManualEnablingResponse(_ responseBytes: [Swift.UInt8]) throws -> COM.HResult {
        try _iplayReadyServiceRequest.processManualEnablingResponse(responseBytes)
    }

    // MARK: Windows.Media.Protection.IMediaProtectionServiceRequest members

    /// Gets the vendor content protection system identifier.
    /// - Returns: The vendor content protection system identifier. This property value is sensitive to the underlying platform's endianness. Carefully test your app on all platforms you intend to support to ensure that correct endianness is used on each platform.
    public var protectionSystem: Foundation.UUID {
        get throws {
            try _imediaProtectionServiceRequest.get_ProtectionSystem()
        }
    }

    /// Gets the GUID for the type of operation that the PlayReady revocation service request performs.
    /// - Returns: The GUID for the type of operation. This property value is sensitive to the underlying platform's endianness. Carefully test your app on all platforms you intend to support to ensure that correct endianness is used on each platform.
    public var type: Foundation.UUID {
        get throws {
            try _imediaProtectionServiceRequest.get_Type()
        }
    }

    // MARK: Implementation details

    private var _iplayReadyServiceRequest_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaProtectionPlayReady_IPlayReadyServiceRequest>? = nil

    internal var _iplayReadyServiceRequest: COM.COMInterop<CWinRT.SWRT_WindowsMediaProtectionPlayReady_IPlayReadyServiceRequest> {
        get throws {
            try _iplayReadyServiceRequest_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaProtectionPlayReady_IPlayReadyServiceRequest.iid).cast(to: CWinRT.SWRT_WindowsMediaProtectionPlayReady_IPlayReadyServiceRequest.self)
            }
        }
    }

    private var _imediaProtectionServiceRequest_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaProtection_IMediaProtectionServiceRequest>? = nil

    internal var _imediaProtectionServiceRequest: COM.COMInterop<CWinRT.SWRT_WindowsMediaProtection_IMediaProtectionServiceRequest> {
        get throws {
            try _imediaProtectionServiceRequest_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaProtection_IMediaProtectionServiceRequest.iid).cast(to: CWinRT.SWRT_WindowsMediaProtection_IMediaProtectionServiceRequest.self)
            }
        }
    }

    deinit {
        _iplayReadyServiceRequest_storage?.release()
        _imediaProtectionServiceRequest_storage?.release()
    }

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.Protection.PlayReady.PlayReadyRevocationServiceRequest", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}