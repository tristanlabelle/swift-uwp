// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides for iteration of the PlayReadyLicense class.
public final class WindowsMediaProtectionPlayReady_PlayReadyLicenseIterator: WindowsRuntime.WinRTImport<WindowsMediaProtectionPlayReady_PlayReadyLicenseIteratorProjection>, WindowsFoundationCollections_IIteratorProtocol {
    public typealias T = WindowsMediaProtectionPlayReady_IPlayReadyLicense?

    // MARK: Windows.Foundation.Collections.IIterator`1<Windows.Media.Protection.PlayReady.IPlayReadyLicense> members

    /// Gets the current item in the PlayReady license collection.
    /// - Returns: The current item in the PlayReady license collection.
    public var current: WindowsMediaProtectionPlayReady_IPlayReadyLicense? {
        get throws {
            try _interop.get_Current()
        }
    }

    /// Gets a value that indicates whether there is a current item or the iterator is at the end of the PlayReady license collection.
    /// - Returns: **true** if the iterator refers to a valid item that is in the collection, or **false** if the iterator is at the end of the collection.
    public var hasCurrent: Swift.Bool {
        get throws {
            try _interop.get_HasCurrent()
        }
    }

    /// Advances the enumerator to the next item in the collection.
    /// - Returns: **true** if the iterator refers to a valid item that is in the collection or **false** if the iterator is at the end of the collection.
    public func moveNext() throws -> Swift.Bool {
        try _interop.moveNext()
    }

    /// Retrieves all items in the PlayReady license collection.
    /// - Parameter items: The items in the collection.
    /// - Returns: The number of items in the collection.
    public func getMany(_ items: [WindowsMediaProtectionPlayReady_IPlayReadyLicense?]) throws -> Swift.UInt32 {
        try _interop.getMany(items)
    }

    // MARK: Implementation details
}