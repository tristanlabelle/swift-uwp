// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Describes the status of an app that is in the installation queue.
public final class WindowsApplicationModelStorePreviewInstallControl_AppInstallStatus: WindowsRuntime.WinRTImport<WindowsApplicationModelStorePreviewInstallControl_AppInstallStatusProjection> {
    // MARK: Windows.ApplicationModel.Store.Preview.InstallControl.IAppInstallStatus members

    /// Gets the number of bytes that have been downloaded for the current app.
    /// - Returns: The number of bytes that have been downloaded for the current app.
    public var bytesDownloaded: Swift.UInt64 {
        get throws {
            try _interop.get_BytesDownloaded()
        }
    }

    /// Gets the download size in bytes for the current app.
    /// - Returns: The download size in bytes for the current app.
    public var downloadSizeInBytes: Swift.UInt64 {
        get throws {
            try _interop.get_DownloadSizeInBytes()
        }
    }

    /// Gets the error code for an app that has encountered an installation failure.
    /// - Returns: The error code for an app that has encountered an installation failure.
    public var errorCode: COM.HResult {
        get throws {
            try _interop.get_ErrorCode()
        }
    }

    /// Gets the installation state of the current app.
    /// - Returns: A value that specifies the installation state of the current app.
    public var installState: WindowsApplicationModelStorePreviewInstallControl_AppInstallState {
        get throws {
            try _interop.get_InstallState()
        }
    }

    /// Gets the completion percentage for the installation of the current app.
    /// - Returns: The completion percentage for the installation of the current app.
    public var percentComplete: Swift.Double {
        get throws {
            try _interop.get_PercentComplete()
        }
    }

    // MARK: Windows.ApplicationModel.Store.Preview.InstallControl.IAppInstallStatus2 members

    /// Gets a value that indicates whether the app can be launched, even if the app has not yet finished installing.
    /// - Returns: True if the app can be launched; otherwise, false.
    public var readyForLaunch: Swift.Bool {
        get throws {
            try _iappInstallStatus2.get_ReadyForLaunch()
        }
    }

    /// Gets an object that identifies the user for which the app is being installed.
    /// - Returns: An object that identifies the user for which the app is being installed.
    public var user: WindowsSystem_User {
        get throws {
            try COM.NullResult.unwrap(_iappInstallStatus2.get_User())
        }
    }

    // MARK: Windows.ApplicationModel.Store.Preview.InstallControl.IAppInstallStatus3 members

    /// Gets a value that indicates whether an app restart is pending.
    /// - Returns: True if an app restart is pending; otherwise, false.
    public var isStaged: Swift.Bool {
        get throws {
            try _iappInstallStatus3.get_IsStaged()
        }
    }

    // MARK: Implementation details

    private var _iappInstallStatus2_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelStorePreviewInstallControl_IAppInstallStatus2>? = nil

    internal var _iappInstallStatus2: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelStorePreviewInstallControl_IAppInstallStatus2> {
        get throws {
            try _iappInstallStatus2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelStorePreviewInstallControl_IAppInstallStatus2.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelStorePreviewInstallControl_IAppInstallStatus2.self)
            }
        }
    }

    private var _iappInstallStatus3_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelStorePreviewInstallControl_IAppInstallStatus3>? = nil

    internal var _iappInstallStatus3: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelStorePreviewInstallControl_IAppInstallStatus3> {
        get throws {
            try _iappInstallStatus3_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelStorePreviewInstallControl_IAppInstallStatus3.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelStorePreviewInstallControl_IAppInstallStatus3.self)
            }
        }
    }

    deinit {
        _iappInstallStatus2_storage?.release()
        _iappInstallStatus3_storage?.release()
    }
}