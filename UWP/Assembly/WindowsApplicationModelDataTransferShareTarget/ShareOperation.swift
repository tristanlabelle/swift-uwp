// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Handles the bulk of the work during a share operation. This includes the data that the user wants to share, setting or removing QuickLinks, and informing the system about the status of the operation.
public final class WindowsApplicationModelDataTransferShareTarget_ShareOperation: WindowsRuntime.WinRTImport<WindowsApplicationModelDataTransferShareTarget_ShareOperationProjection> {
    // MARK: Windows.ApplicationModel.DataTransfer.ShareTarget.IShareOperation members

    /// Contains a DataPackage object with the data that the user wants to share.
    /// - Returns: Contains the data that the user wants to share.
    public var data: WindowsApplicationModelDataTransfer_DataPackageView {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Data())
        }
    }

    /// A string that contains the ID of a QuickLink.
    /// - Returns: The ID of the QuickLink.
    public var quickLinkId: Swift.String {
        get throws {
            try _interop.get_QuickLinkId()
        }
    }

    /// Removes the QuickLink from the list of QuickLinks that are available to the user.
    public func removeThisQuickLink() throws {
        try _interop.removeThisQuickLink()
    }

    /// Specifies that the app has started to acquire the content that the user wants to share.
    public func reportStarted() throws {
        try _interop.reportStarted()
    }

    /// Specifies that the app has acquired the content that the user wants to share.
    public func reportDataRetrieved() throws {
        try _interop.reportDataRetrieved()
    }

    /// Specifies that the app has requested that the system allow the sharing operation to run as a background task.
    public func reportSubmittedBackgroundTask() throws {
        try _interop.reportSubmittedBackgroundTask()
    }

    /// Specifies that the sharing operation is complete. A QuickLink that the system can save as a shortcut for future sharing operations is included.
    /// - Parameter quicklink: A QuickLink object that the system saves as a shortcut for future sharing operations.
    public func reportCompleted(_ quicklink: WindowsApplicationModelDataTransferShareTarget_QuickLink?) throws {
        try _interop.reportCompletedWithQuickLink(quicklink)
    }

    /// Specifies that the sharing operation is complete.
    public func reportCompleted() throws {
        try _interop.reportCompleted()
    }

    /// Specifies that an error occurred during the sharing operation.
    /// - Parameter value: Specifies the error message. The system displays this message to the user.
    public func reportError(_ value: Swift.String) throws {
        try _interop.reportError(value)
    }

    // MARK: Windows.ApplicationModel.DataTransfer.ShareTarget.IShareOperation2 members

    /// Closes the share pane.
    public func dismissUI() throws {
        try _ishareOperation2.dismissUI()
    }

    // MARK: Windows.ApplicationModel.DataTransfer.ShareTarget.IShareOperation3 members

    /// Gets the contacts for the share operation.
    /// - Returns: The contacts for the share operation.
    public var contacts: WindowsFoundationCollections_IVectorView<WindowsApplicationModelContacts_Contact?> {
        get throws {
            try COM.NullResult.unwrap(_ishareOperation3.get_Contacts())
        }
    }

    // MARK: Implementation details

    private var _ishareOperation2_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelDataTransferShareTarget_IShareOperation2>? = nil

    internal var _ishareOperation2: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelDataTransferShareTarget_IShareOperation2> {
        get throws {
            try _ishareOperation2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelDataTransferShareTarget_IShareOperation2.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelDataTransferShareTarget_IShareOperation2.self)
            }
        }
    }

    private var _ishareOperation3_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelDataTransferShareTarget_IShareOperation3>? = nil

    internal var _ishareOperation3: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelDataTransferShareTarget_IShareOperation3> {
        get throws {
            try _ishareOperation3_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelDataTransferShareTarget_IShareOperation3.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelDataTransferShareTarget_IShareOperation3.self)
            }
        }
    }

    deinit {
        _ishareOperation2_storage?.release()
        _ishareOperation3_storage?.release()
    }
}