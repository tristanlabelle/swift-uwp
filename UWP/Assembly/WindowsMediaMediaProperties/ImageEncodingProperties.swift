// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Describes the format of an image stream.
public final class WindowsMediaMediaProperties_ImageEncodingProperties: WindowsRuntime.WinRTImport<WindowsMediaMediaProperties_ImageEncodingPropertiesProjection>, WindowsMediaMediaProperties_IMediaEncodingPropertiesProtocol {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsMediaMediaProperties_ImageEncodingPropertiesProjection.self))
    }

    // MARK: Windows.Media.MediaProperties.IImageEncodingProperties members

    /// Gets or sets the image height.
    /// - Returns: The height of the image, in pixels.
    public var height: Swift.UInt32 {
        get throws {
            try _interop.get_Height()
        }
    }

    /// Gets or sets the image height.
    /// - Returns: The height of the image, in pixels.
    public func height(_ value: Swift.UInt32) throws {
        try _interop.put_Height(value)
    }

    /// Gets or sets the image width.
    /// - Returns: The width of the image, in pixels.
    public var width: Swift.UInt32 {
        get throws {
            try _interop.get_Width()
        }
    }

    /// Gets or sets the image width.
    /// - Returns: The width of the image, in pixels.
    public func width(_ value: Swift.UInt32) throws {
        try _interop.put_Width(value)
    }

    // MARK: Windows.Media.MediaProperties.IMediaEncodingProperties members

    /// Gets additional format properties for the image stream.
    /// - Returns: A property set that contains format properties.
    public var properties: WindowsMediaMediaProperties_MediaPropertySet {
        get throws {
            try COM.NullResult.unwrap(_imediaEncodingProperties.get_Properties())
        }
    }

    /// Gets or sets the subtype of the format.
    /// - Returns: The subtype.
    public var subtype: Swift.String {
        get throws {
            try _imediaEncodingProperties.get_Subtype()
        }
    }

    /// Gets or sets the subtype of the format.
    /// - Returns: The subtype.
    public func subtype(_ value: Swift.String) throws {
        try _imediaEncodingProperties.put_Subtype(value)
    }

    /// Gets the format type.
    /// - Returns: The format type. For image streams, the format type is "Image".
    public var type: Swift.String {
        get throws {
            try _imediaEncodingProperties.get_Type()
        }
    }

    // MARK: Windows.Media.MediaProperties.IImageEncodingProperties2 members

    /// Creates a copy of the **ImageEncodingProperties** object.
    /// - Returns: A copy of the **ImageEncodingProperties** object.
    public func copy() throws -> WindowsMediaMediaProperties_ImageEncodingProperties {
        try COM.NullResult.unwrap(_iimageEncodingProperties2.copy())
    }

    // MARK: Windows.Media.MediaProperties.IImageEncodingPropertiesStatics2 members

    /// Creates an instance of ImageEncodingProperties for an uncompressed image.
    /// - Parameter format: The media pixel format.
    /// - Returns: The image encoding properties.
    public static func createUncompressed(_ format: WindowsMediaMediaProperties_MediaPixelFormat) throws -> WindowsMediaMediaProperties_ImageEncodingProperties {
        try COM.NullResult.unwrap(_iimageEncodingPropertiesStatics2.createUncompressed(format))
    }

    /// Creates an instance of ImageEncodingProperties for a BMP image.
    /// - Returns: The image encoding properties.
    public static func createBmp() throws -> WindowsMediaMediaProperties_ImageEncodingProperties {
        try COM.NullResult.unwrap(_iimageEncodingPropertiesStatics2.createBmp())
    }

    // MARK: Windows.Media.MediaProperties.IImageEncodingPropertiesStatics3 members

    /// Creates an instance of ImageEncodingProperties for HEIF format.
    /// - Returns: The ImageEncodingProperties for HEIF format.
    public static func createHeif() throws -> WindowsMediaMediaProperties_ImageEncodingProperties {
        try COM.NullResult.unwrap(_iimageEncodingPropertiesStatics3.createHeif())
    }

    // MARK: Windows.Media.MediaProperties.IImageEncodingPropertiesStatics members

    /// Creates an instance of ImageEncodingProperties for a JPEG image.
    /// - Returns: The properties for the image stream.
    public static func createJpeg() throws -> WindowsMediaMediaProperties_ImageEncodingProperties {
        try COM.NullResult.unwrap(_iimageEncodingPropertiesStatics.createJpeg())
    }

    /// Creates an instance of ImageEncodingProperties for a PNG image.
    /// - Returns: The properties for the image stream.
    public static func createPng() throws -> WindowsMediaMediaProperties_ImageEncodingProperties {
        try COM.NullResult.unwrap(_iimageEncodingPropertiesStatics.createPng())
    }

    /// Creates an instance of ImageEncodingProperties for a JPEG XR image.
    /// - Returns: The properties for the image stream.
    public static func createJpegXR() throws -> WindowsMediaMediaProperties_ImageEncodingProperties {
        try COM.NullResult.unwrap(_iimageEncodingPropertiesStatics.createJpegXR())
    }

    // MARK: Implementation details

    private var _imediaEncodingProperties_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IMediaEncodingProperties>? = nil

    internal var _imediaEncodingProperties: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IMediaEncodingProperties> {
        get throws {
            try _imediaEncodingProperties_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaMediaProperties_IMediaEncodingProperties.iid).cast(to: CWinRT.SWRT_WindowsMediaMediaProperties_IMediaEncodingProperties.self)
            }
        }
    }

    private var _iimageEncodingProperties2_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IImageEncodingProperties2>? = nil

    internal var _iimageEncodingProperties2: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IImageEncodingProperties2> {
        get throws {
            try _iimageEncodingProperties2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaMediaProperties_IImageEncodingProperties2.iid).cast(to: CWinRT.SWRT_WindowsMediaMediaProperties_IImageEncodingProperties2.self)
            }
        }
    }

    deinit {
        _imediaEncodingProperties_storage?.release()
        _iimageEncodingProperties2_storage?.release()
    }

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.MediaProperties.ImageEncodingProperties", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _iimageEncodingPropertiesStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IImageEncodingPropertiesStatics2>? = nil

    internal static var _iimageEncodingPropertiesStatics2: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IImageEncodingPropertiesStatics2> {
        get throws {
            try _iimageEncodingPropertiesStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.MediaProperties.ImageEncodingProperties", id: CWinRT.SWRT_WindowsMediaMediaProperties_IImageEncodingPropertiesStatics2.iid)
            }
        }
    }

    private static var _iimageEncodingPropertiesStatics3_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IImageEncodingPropertiesStatics3>? = nil

    internal static var _iimageEncodingPropertiesStatics3: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IImageEncodingPropertiesStatics3> {
        get throws {
            try _iimageEncodingPropertiesStatics3_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.MediaProperties.ImageEncodingProperties", id: CWinRT.SWRT_WindowsMediaMediaProperties_IImageEncodingPropertiesStatics3.iid)
            }
        }
    }

    private static var _iimageEncodingPropertiesStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IImageEncodingPropertiesStatics>? = nil

    internal static var _iimageEncodingPropertiesStatics: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IImageEncodingPropertiesStatics> {
        get throws {
            try _iimageEncodingPropertiesStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.MediaProperties.ImageEncodingProperties", id: CWinRT.SWRT_WindowsMediaMediaProperties_IImageEncodingPropertiesStatics.iid)
            }
        }
    }
}