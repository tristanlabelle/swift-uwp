// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides properties for getting the standard names for media subtypes.
public enum WindowsMediaMediaProperties_MediaEncodingSubtypes {
    // MARK: Windows.Media.MediaProperties.IMediaEncodingSubtypesStatics6 members

    /// Gets the name for the Presentation Graphic Stream (PGS) format.
    /// - Returns: The name for the Presentation Graphic Stream format.
    public static var pgs: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics6.get_Pgs()
        }
    }

    /// Gets the name for the SubRip Text (SRT) format.
    /// - Returns: The name for the SubRip Text format.
    public static var srt: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics6.get_Srt()
        }
    }

    /// Gets the name for the SubStation Alpha Text (SSA) format.
    /// - Returns: The name for the SubStation Alpha Text (SSA) format.
    public static var ssa: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics6.get_Ssa()
        }
    }

    /// Gets the name for the VobSub format.
    /// - Returns: The name for the VobSub format.
    public static var vobSub: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics6.get_VobSub()
        }
    }

    // MARK: Windows.Media.MediaProperties.IMediaEncodingSubtypesStatics members

    /// Gets the name for Advanced Audio Coding (AAC).
    /// - Returns: The name for AAC.
    public static var aac: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Aac()
        }
    }

    /// Gets the name for Advanced Audio Coding (AAC) audio in Audio Data Transport Stream (ADTS) format.
    /// - Returns: The name for AAC ADTS.
    public static var aacAdts: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_AacAdts()
        }
    }

    /// Gets the name for Dolby Digital audio (AC-3).
    /// - Returns: The name for AC-3.
    public static var ac3: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Ac3()
        }
    }

    /// Gets the name for Adaptive Multi-Rate (AmrNb).
    /// - Returns: The name of AMR-NB.
    public static var amrNb: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_AmrNb()
        }
    }

    /// Gets the name for Adaptive Multi-Rate Wideband.
    /// - Returns: The name for AMR-WB
    public static var amrWb: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_AmrWb()
        }
    }

    /// Gets the name for RGB 32 with alpha channel.
    /// - Returns: The name for AGB32.
    public static var argb32: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Argb32()
        }
    }

    /// Gets the name for Advanced Systems Format (ASF).
    /// - Returns: The name for ASF.
    public static var asf: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Asf()
        }
    }

    /// Gets the name for Audio Video Interleave (AVI).
    /// - Returns: The name for AVI.
    public static var avi: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Avi()
        }
    }

    /// Gets the name for BGRA8.
    /// - Returns: The name for BGRA8.
    public static var bgra8: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Bgra8()
        }
    }

    /// Gets the name for BMP file format.
    /// - Returns: The name from BMP.
    public static var bmp: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Bmp()
        }
    }

    /// Gets the name Dolby Digital Plus (E-AC-3).
    /// - Returns: Gets the name for E-AC-3.
    public static var eac3: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Eac3()
        }
    }

    /// Gets the name for Uncompressed IEEE floating-point audio.
    /// - Returns: Gets the name for float.
    public static var float: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Float()
        }
    }

    /// Gets the name for Graphics Interchange Format (GIF).
    /// - Returns: Gets the name for GIF.
    public static var gif: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Gif()
        }
    }

    /// Gets the name for H.263.
    /// - Returns: The name for H.263.
    public static var h263: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_H263()
        }
    }

    /// The name for H.264.
    /// - Returns: The name for H.264.
    public static var h264: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_H264()
        }
    }

    /// Get the name for H.264Es.
    /// - Returns: The name for H.264Es.
    public static var h264Es: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_H264Es()
        }
    }

    /// Gets the name for High Efficiency Video Coding (HEVC).
    /// - Returns: The name for HEVC.
    public static var hevc: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Hevc()
        }
    }

    /// Gets the name for HEVCES.
    /// - Returns: The name for HEVCES.
    public static var hevcEs: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_HevcEs()
        }
    }

    /// Gets the name for IYUV.
    /// - Returns: The name for IYUV.
    public static var iyuv: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Iyuv()
        }
    }

    /// Gets the name for JPEG.
    /// - Returns: The name for JPEG.
    public static var jpeg: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Jpeg()
        }
    }

    /// Gets the name for JPEG-XR.
    /// - Returns: The name for JPEG-XR.
    public static var jpegXr: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_JpegXr()
        }
    }

    /// Gets the name for Motion JPEG (MJPG).
    /// - Returns: The name for MJPG.
    public static var mjpg: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Mjpg()
        }
    }

    /// Gets the name for MPEG Audio Layer-3 (MP3).
    /// - Returns: The name for MP3.
    public static var mp3: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Mp3()
        }
    }

    /// Gets the name for MPEG.
    /// - Returns: The name for MPEG.
    public static var mpeg: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Mpeg()
        }
    }

    /// Gets the name for MPEG-1.
    /// - Returns: The name for MPEG-1.
    public static var mpeg1: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Mpeg1()
        }
    }

    /// Gets the name for MPEG-2.
    /// - Returns: The name for MPEG-2.
    public static var mpeg2: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Mpeg2()
        }
    }

    /// Gets the name for MPEG-4.
    /// - Returns: The name for MPEG-4.
    public static var mpeg4: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Mpeg4()
        }
    }

    /// Gets the name for NV12.
    /// - Returns: The name for NV12.
    public static var nv12: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Nv12()
        }
    }

    /// Gets the name for PCM.
    /// - Returns: The name for PCM.
    public static var pcm: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Pcm()
        }
    }

    /// Gets the name for Portable Network Graphics (PNG).
    /// - Returns: Gets the name for PNG.
    public static var png: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Png()
        }
    }

    /// Gets the name RGB 24.
    /// - Returns: The name for RGB 24.
    public static var rgb24: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Rgb24()
        }
    }

    /// Gets the name for RGB 32.
    /// - Returns: The name for RGB 32.
    public static var rgb32: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Rgb32()
        }
    }

    /// Gets the name for TIFF.
    /// - Returns: The name for TIFF.
    public static var tiff: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Tiff()
        }
    }

    /// Gets the name for Waveform Audio File (WAVE).
    /// - Returns: The name for WAVE.
    public static var wave: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Wave()
        }
    }

    /// Gets the name for Windows Media Audio 8.
    /// - Returns: Gets the name for WMA 8.
    public static var wma8: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Wma8()
        }
    }

    /// Gets the name for Windows Media Audio 8.
    /// - Returns: The name for WMA 9.
    public static var wma9: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Wma9()
        }
    }

    /// Gets the name for Windows Media Video 9.
    /// - Returns: Gets the name for WMV3.
    public static var wmv3: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Wmv3()
        }
    }

    /// Gets the name for Windows Media Video 9 Advanced Profile.
    /// - Returns: Gets the name for WVC1.
    public static var wvc1: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Wvc1()
        }
    }

    /// Gets the name for YUY2.
    /// - Returns: The name for YUY2.
    public static var yuy2: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Yuy2()
        }
    }

    /// Gets the name for YV12.
    /// - Returns: The name for YV12.
    public static var yv12: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics.get_Yv12()
        }
    }

    // MARK: Windows.Media.MediaProperties.IMediaEncodingSubtypesStatics4 members

    /// Gets the P010, the 10-bit equivalent of NV12 format.
    /// - Returns: The name for the P010.
    public static var p010: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics4.get_P010()
        }
    }

    // MARK: Windows.Media.MediaProperties.IMediaEncodingSubtypesStatics2 members

    /// Gets the name for 16-bit z-buffer depth image encoding.
    /// - Returns: The name for 16-bit z-buffer depth image encoding.
    public static var d16: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics2.get_D16()
        }
    }

    /// Gets the name for 16-bit luminance-only image encoding.
    /// - Returns: The name for 16-bit luminance-only image encoding.
    public static var l16: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics2.get_L16()
        }
    }

    /// Gets the name for 8-bit luminance-only image encoding.
    /// - Returns: The name for 8-bit luminance-only image encoding.
    public static var l8: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics2.get_L8()
        }
    }

    /// Gets the name for VP9 video encoding.
    /// - Returns: The name for VP9 video encoding.
    public static var vp9: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics2.get_Vp9()
        }
    }

    // MARK: Windows.Media.MediaProperties.IMediaEncodingSubtypesStatics5 members

    /// Gets the name for High Efficiency Image File (HEIF).
    /// - Returns: The name for HEIF.
    public static var heif: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics5.get_Heif()
        }
    }

    // MARK: Windows.Media.MediaProperties.IMediaEncodingSubtypesStatics3 members

    /// Gets the name for Apple Lossless Audio Codec (ALAC) audio encoding.
    /// - Returns: The name for Dolby Digital audio (AC-3) for Apple Lossless Audio Codec (ALAC) audio.
    public static var alac: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics3.get_Alac()
        }
    }

    /// Gets the name for Free Lossless Audio Codec (FLAC) audio encoding.
    /// - Returns: The name for Free Lossless Audio Codec (FLAC) audio encoding.
    public static var flac: Swift.String {
        get throws {
            try _imediaEncodingSubtypesStatics3.get_Flac()
        }
    }

    // MARK: Implementation details

    private static var _imediaEncodingSubtypesStatics6_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IMediaEncodingSubtypesStatics6>? = nil

    internal static var _imediaEncodingSubtypesStatics6: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IMediaEncodingSubtypesStatics6> {
        get throws {
            try _imediaEncodingSubtypesStatics6_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.MediaProperties.MediaEncodingSubtypes", id: CWinRT.SWRT_WindowsMediaMediaProperties_IMediaEncodingSubtypesStatics6.iid)
            }
        }
    }

    private static var _imediaEncodingSubtypesStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IMediaEncodingSubtypesStatics>? = nil

    internal static var _imediaEncodingSubtypesStatics: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IMediaEncodingSubtypesStatics> {
        get throws {
            try _imediaEncodingSubtypesStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.MediaProperties.MediaEncodingSubtypes", id: CWinRT.SWRT_WindowsMediaMediaProperties_IMediaEncodingSubtypesStatics.iid)
            }
        }
    }

    private static var _imediaEncodingSubtypesStatics4_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IMediaEncodingSubtypesStatics4>? = nil

    internal static var _imediaEncodingSubtypesStatics4: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IMediaEncodingSubtypesStatics4> {
        get throws {
            try _imediaEncodingSubtypesStatics4_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.MediaProperties.MediaEncodingSubtypes", id: CWinRT.SWRT_WindowsMediaMediaProperties_IMediaEncodingSubtypesStatics4.iid)
            }
        }
    }

    private static var _imediaEncodingSubtypesStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IMediaEncodingSubtypesStatics2>? = nil

    internal static var _imediaEncodingSubtypesStatics2: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IMediaEncodingSubtypesStatics2> {
        get throws {
            try _imediaEncodingSubtypesStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.MediaProperties.MediaEncodingSubtypes", id: CWinRT.SWRT_WindowsMediaMediaProperties_IMediaEncodingSubtypesStatics2.iid)
            }
        }
    }

    private static var _imediaEncodingSubtypesStatics5_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IMediaEncodingSubtypesStatics5>? = nil

    internal static var _imediaEncodingSubtypesStatics5: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IMediaEncodingSubtypesStatics5> {
        get throws {
            try _imediaEncodingSubtypesStatics5_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.MediaProperties.MediaEncodingSubtypes", id: CWinRT.SWRT_WindowsMediaMediaProperties_IMediaEncodingSubtypesStatics5.iid)
            }
        }
    }

    private static var _imediaEncodingSubtypesStatics3_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IMediaEncodingSubtypesStatics3>? = nil

    internal static var _imediaEncodingSubtypesStatics3: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IMediaEncodingSubtypesStatics3> {
        get throws {
            try _imediaEncodingSubtypesStatics3_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.MediaProperties.MediaEncodingSubtypes", id: CWinRT.SWRT_WindowsMediaMediaProperties_IMediaEncodingSubtypesStatics3.iid)
            }
        }
    }
}