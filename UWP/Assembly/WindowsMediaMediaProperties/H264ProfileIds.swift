// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides properties for getting H.264 profile ids.
public enum WindowsMediaMediaProperties_H264ProfileIds {
    // MARK: Windows.Media.MediaProperties.IH264ProfileIdsStatics members

    /// Gets the H.264 baseline profile.
    /// - Returns: The baseline profile.
    public static var baseline: Swift.Int32 {
        get throws {
            try _ih264ProfileIdsStatics.get_Baseline()
        }
    }

    /// Gets the H.264 constrained baseline profile.
    /// - Returns: The constrained baseline profile.
    public static var constrainedBaseline: Swift.Int32 {
        get throws {
            try _ih264ProfileIdsStatics.get_ConstrainedBaseline()
        }
    }

    /// Gets the H.264 extended profile.
    /// - Returns: The extended profile.
    public static var extended: Swift.Int32 {
        get throws {
            try _ih264ProfileIdsStatics.get_Extended()
        }
    }

    /// Gets the H.264 high profile.
    /// - Returns: The high profile.
    public static var high: Swift.Int32 {
        get throws {
            try _ih264ProfileIdsStatics.get_High()
        }
    }

    /// Gets the H.264 high 10 profile.
    /// - Returns: The high 10 profile.
    public static var high10: Swift.Int32 {
        get throws {
            try _ih264ProfileIdsStatics.get_High10()
        }
    }

    /// Gets the H.264 high 4:2:2 profile.
    /// - Returns: The high 4:2:2 profile.
    public static var high422: Swift.Int32 {
        get throws {
            try _ih264ProfileIdsStatics.get_High422()
        }
    }

    /// Gets the H.264 high 4:4:4 profile.
    /// - Returns: The high 4:4:4 profile.
    public static var high444: Swift.Int32 {
        get throws {
            try _ih264ProfileIdsStatics.get_High444()
        }
    }

    /// Gets the H.264 main profile.
    /// - Returns: Gets the main profile.
    public static var main: Swift.Int32 {
        get throws {
            try _ih264ProfileIdsStatics.get_Main()
        }
    }

    /// Gets the H.264 multiview profile.
    /// - Returns: The multiview profile.
    public static var multiviewHigh: Swift.Int32 {
        get throws {
            try _ih264ProfileIdsStatics.get_MultiviewHigh()
        }
    }

    /// Gets the H.264 stereo high profile.
    /// - Returns: The stereo high profile.
    public static var stereoHigh: Swift.Int32 {
        get throws {
            try _ih264ProfileIdsStatics.get_StereoHigh()
        }
    }

    // MARK: Implementation details

    private static var _ih264ProfileIdsStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IH264ProfileIdsStatics>? = nil

    internal static var _ih264ProfileIdsStatics: COM.COMInterop<CWinRT.SWRT_WindowsMediaMediaProperties_IH264ProfileIdsStatics> {
        get throws {
            try _ih264ProfileIdsStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.MediaProperties.H264ProfileIds", id: CWinRT.SWRT_WindowsMediaMediaProperties_IH264ProfileIdsStatics.iid)
            }
        }
    }
}