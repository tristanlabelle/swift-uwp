// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

public final class WindowsSystemRemoteDesktopInput_RemoteTextConnection: WindowsRuntime.WinRTImport<WindowsSystemRemoteDesktopInput_RemoteTextConnectionProjection>, WindowsFoundation_IClosableProtocol {
    // MARK: Windows.System.RemoteDesktop.Input.IRemoteTextConnectionFactory members

    public convenience init(_ connectionId: Foundation.UUID, _ pduForwarder: WindowsSystemRemoteDesktopInput_RemoteTextConnectionDataHandler?) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iremoteTextConnectionFactory.createInstance(connectionId, pduForwarder)))
    }

    // MARK: Windows.System.RemoteDesktop.Input.IRemoteTextConnection members

    public var isEnabled: Swift.Bool {
        get throws {
            try _interop.get_IsEnabled()
        }
    }

    public func isEnabled(_ value: Swift.Bool) throws {
        try _interop.put_IsEnabled(value)
    }

    public func registerThread(_ threadId: Swift.UInt32) throws {
        try _interop.registerThread(threadId)
    }

    public func unregisterThread(_ threadId: Swift.UInt32) throws {
        try _interop.unregisterThread(threadId)
    }

    public func reportDataReceived(_ pduData: [Swift.UInt8]) throws {
        try _interop.reportDataReceived(pduData)
    }

    // MARK: Windows.Foundation.IClosable members

    /// Releases system resources that are exposed by a Windows Runtime object.
    public func close() throws {
        try _iclosable.close()
    }

    // MARK: Implementation details

    private var _iclosable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable>? = nil

    internal var _iclosable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable> {
        get throws {
            try _iclosable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IClosable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IClosable.self)
            }
        }
    }

    deinit {
        _iclosable_storage?.release()
    }

    private static var _iremoteTextConnectionFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsSystemRemoteDesktopInput_IRemoteTextConnectionFactory>? = nil

    internal static var _iremoteTextConnectionFactory: COM.COMInterop<CWinRT.SWRT_WindowsSystemRemoteDesktopInput_IRemoteTextConnectionFactory> {
        get throws {
            try _iremoteTextConnectionFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.System.RemoteDesktop.Input.RemoteTextConnection", id: CWinRT.SWRT_WindowsSystemRemoteDesktopInput_IRemoteTextConnectionFactory.iid)
            }
        }
    }
}