// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a detached signature for a signed CMS message.
public final class WindowsSecurityCryptographyCertificates_CmsDetachedSignature: WindowsRuntime.WinRTImport<WindowsSecurityCryptographyCertificates_CmsDetachedSignatureProjection> {
    // MARK: Windows.Security.Cryptography.Certificates.ICmsDetachedSignatureFactory members

    public convenience init(_ inputBlob: WindowsStorageStreams_IBuffer?) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._icmsDetachedSignatureFactory.createCmsDetachedSignature(inputBlob)))
    }

    // MARK: Windows.Security.Cryptography.Certificates.ICmsDetachedSignature members

    /// Gets the list of certificates that are used for chain building for the signer certificate.
    /// - Returns: The list of certificates that are used for chain building for the signer certificate.
    public var certificates: WindowsFoundationCollections_IVectorView<WindowsSecurityCryptographyCertificates_Certificate?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Certificates())
        }
    }

    /// Gets the list of signers that are used for creating or verifying the signature.
    /// - Returns: The list of signers that are used for creating or verifying the signature.
    public var signers: WindowsFoundationCollections_IVectorView<WindowsSecurityCryptographyCertificates_CmsSignerInfo?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Signers())
        }
    }

    /// Verifies a signed CMS message against the original streaming input.
    /// - Parameter data: The original input stream for the signed CMS message.
    /// - Returns: An asynchronous operation to retrieve the result of the signature validation operation.
    public func verifySignatureAsync(_ data: WindowsStorageStreams_IInputStream?) throws -> WindowsFoundation_IAsyncOperation<WindowsSecurityCryptographyCertificates_SignatureValidationResult> {
        try COM.NullResult.unwrap(_interop.verifySignatureAsync(data))
    }

    // MARK: Windows.Security.Cryptography.Certificates.ICmsDetachedSignatureStatics members

    public static func generateSignatureAsync(_ data: WindowsStorageStreams_IInputStream?, _ signers: WindowsFoundationCollections_IIterable<WindowsSecurityCryptographyCertificates_CmsSignerInfo?>?, _ certificates: WindowsFoundationCollections_IIterable<WindowsSecurityCryptographyCertificates_Certificate?>?) throws -> WindowsFoundation_IAsyncOperation<WindowsStorageStreams_IBuffer?> {
        try COM.NullResult.unwrap(_icmsDetachedSignatureStatics.generateSignatureAsync(data, signers, certificates))
    }

    // MARK: Implementation details

    private static var _icmsDetachedSignatureFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsSecurityCryptographyCertificates_ICmsDetachedSignatureFactory>? = nil

    internal static var _icmsDetachedSignatureFactory: COM.COMInterop<CWinRT.SWRT_WindowsSecurityCryptographyCertificates_ICmsDetachedSignatureFactory> {
        get throws {
            try _icmsDetachedSignatureFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Security.Cryptography.Certificates.CmsDetachedSignature", id: CWinRT.SWRT_WindowsSecurityCryptographyCertificates_ICmsDetachedSignatureFactory.iid)
            }
        }
    }

    private static var _icmsDetachedSignatureStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsSecurityCryptographyCertificates_ICmsDetachedSignatureStatics>? = nil

    internal static var _icmsDetachedSignatureStatics: COM.COMInterop<CWinRT.SWRT_WindowsSecurityCryptographyCertificates_ICmsDetachedSignatureStatics> {
        get throws {
            try _icmsDetachedSignatureStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Security.Cryptography.Certificates.CmsDetachedSignature", id: CWinRT.SWRT_WindowsSecurityCryptographyCertificates_ICmsDetachedSignatureStatics.iid)
            }
        }
    }
}