// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents parameters to use when building a certificate chain.
public final class WindowsSecurityCryptographyCertificates_ChainBuildingParameters: WindowsRuntime.WinRTImport<WindowsSecurityCryptographyCertificates_ChainBuildingParametersProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsSecurityCryptographyCertificates_ChainBuildingParametersProjection.self))
    }

    // MARK: Windows.Security.Cryptography.Certificates.IChainBuildingParameters members

    /// Gets or sets a value that indicates whether Authority Information Access (AIA) is enabled.
    /// - Returns: True to enable Authority Information Access (AIA); otherwise false. The default is true.
    public var authorityInformationAccessEnabled: Swift.Bool {
        get throws {
            try _interop.get_AuthorityInformationAccessEnabled()
        }
    }

    /// Gets or sets a value that indicates whether Authority Information Access (AIA) is enabled.
    /// - Returns: True to enable Authority Information Access (AIA); otherwise false. The default is true.
    public func authorityInformationAccessEnabled(_ value: Swift.Bool) throws {
        try _interop.put_AuthorityInformationAccessEnabled(value)
    }

    /// Gets or sets a value indicating that the current time is to be used for the validation timestamp.
    /// - Returns: True to use the current time as the validation timestamp; otherwise false. The default is true.
    public var currentTimeValidationEnabled: Swift.Bool {
        get throws {
            try _interop.get_CurrentTimeValidationEnabled()
        }
    }

    /// Gets or sets a value indicating that the current time is to be used for the validation timestamp.
    /// - Returns: True to use the current time as the validation timestamp; otherwise false. The default is true.
    public func currentTimeValidationEnabled(_ value: Swift.Bool) throws {
        try _interop.put_CurrentTimeValidationEnabled(value)
    }

    /// Gets a collection of object identifiers (OIDs) for the enhanced key usage extension.
    /// - Returns: A collection of object identifiers (OIDs) for the enhanced key usage extension.
    public var enhancedKeyUsages: WindowsFoundationCollections_IVector<Swift.String> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_EnhancedKeyUsages())
        }
    }

    /// Gets the list of root certificates that will be trusted.
    /// - Returns: The list of root certificates that will be trusted.
    public var exclusiveTrustRoots: WindowsFoundationCollections_IVector<WindowsSecurityCryptographyCertificates_Certificate?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_ExclusiveTrustRoots())
        }
    }

    /// Gets or sets a value indicating whether to request new URLs to use for chain building and revocation checking or to use cached URLs.
    /// - Returns: True torequest new URLs to use for chain building and revocation checking; false to use cached URLs.
    public var networkRetrievalEnabled: Swift.Bool {
        get throws {
            try _interop.get_NetworkRetrievalEnabled()
        }
    }

    /// Gets or sets a value indicating whether to request new URLs to use for chain building and revocation checking or to use cached URLs.
    /// - Returns: True torequest new URLs to use for chain building and revocation checking; false to use cached URLs.
    public func networkRetrievalEnabled(_ value: Swift.Bool) throws {
        try _interop.put_NetworkRetrievalEnabled(value)
    }

    /// Gets or sets a value indicating whether revocation checking is enabled.
    /// - Returns: True to enable revocation checking; otherwise false.
    public var revocationCheckEnabled: Swift.Bool {
        get throws {
            try _interop.get_RevocationCheckEnabled()
        }
    }

    /// Gets or sets a value indicating whether revocation checking is enabled.
    /// - Returns: True to enable revocation checking; otherwise false.
    public func revocationCheckEnabled(_ value: Swift.Bool) throws {
        try _interop.put_RevocationCheckEnabled(value)
    }

    /// Gets or sets the time stamp used to determine whether the certificate chain was time valid.
    /// - Returns: The time stamp used to determine whether the certificate chain was time valid.
    public var validationTimestamp: WindowsFoundation_DateTime {
        get throws {
            try _interop.get_ValidationTimestamp()
        }
    }

    /// Gets or sets the time stamp used to determine whether the certificate chain was time valid.
    /// - Returns: The time stamp used to determine whether the certificate chain was time valid.
    public func validationTimestamp(_ value: WindowsFoundation_DateTime) throws {
        try _interop.put_ValidationTimestamp(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Security.Cryptography.Certificates.ChainBuildingParameters", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}