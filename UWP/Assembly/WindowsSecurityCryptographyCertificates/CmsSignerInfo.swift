// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents signer information for a signed CMS message which contains a set of properties.
public final class WindowsSecurityCryptographyCertificates_CmsSignerInfo: WindowsRuntime.WinRTImport<WindowsSecurityCryptographyCertificates_CmsSignerInfoProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsSecurityCryptographyCertificates_CmsSignerInfoProjection.self))
    }

    // MARK: Windows.Security.Cryptography.Certificates.ICmsSignerInfo members

    /// Gets or sets the signer certificate that is used to sign the message.
    /// - Returns: The signer certificate that is used to sign the message.
    public var certificate: WindowsSecurityCryptographyCertificates_Certificate {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Certificate())
        }
    }

    /// Gets or sets the signer certificate that is used to sign the message.
    /// - Returns: The signer certificate that is used to sign the message.
    public func certificate(_ value: WindowsSecurityCryptographyCertificates_Certificate?) throws {
        try _interop.put_Certificate(value)
    }

    /// Gets or sets the hash algorithm that is used to sign the CMS message.
    /// - Returns: The hash algorithm that is used to sign the CMS message.
    public var hashAlgorithmName: Swift.String {
        get throws {
            try _interop.get_HashAlgorithmName()
        }
    }

    /// Gets or sets the hash algorithm that is used to sign the CMS message.
    /// - Returns: The hash algorithm that is used to sign the CMS message.
    public func hashAlgorithmName(_ value: Swift.String) throws {
        try _interop.put_HashAlgorithmName(value)
    }

    /// Gets the RFC3161 unauthenticated timestamp information.
    /// - Returns: The RFC3161 unauthenticated timestamp information.
    public var timestampInfo: WindowsSecurityCryptographyCertificates_CmsTimestampInfo {
        get throws {
            try COM.NullResult.unwrap(_interop.get_TimestampInfo())
        }
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Security.Cryptography.Certificates.CmsSignerInfo", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}