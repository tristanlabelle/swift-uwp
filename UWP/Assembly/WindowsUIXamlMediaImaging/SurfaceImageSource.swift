// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides Microsoft DirectX shared surfaces to draw into and then composes the bits into app content.
open class WindowsUIXamlMediaImaging_SurfaceImageSource: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Media.Imaging.ISurfaceImageSourceFactory members

    public convenience init(_ pixelWidth: Swift.Int32, _ pixelHeight: Swift.Int32) throws {
        try self.init(_compose: Self.self != WindowsUIXamlMediaImaging_SurfaceImageSource.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._isurfaceImageSourceFactory.createInstanceWithDimensions(pixelWidth, pixelHeight, baseInterface, &innerInterface))
        }
    }

    public convenience init(_ pixelWidth: Swift.Int32, _ pixelHeight: Swift.Int32, _ isOpaque: Swift.Bool) throws {
        try self.init(_compose: Self.self != WindowsUIXamlMediaImaging_SurfaceImageSource.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._isurfaceImageSourceFactory.createInstanceWithDimensionsAndOpacity(pixelWidth, pixelHeight, isOpaque, baseInterface, &innerInterface))
        }
    }

    // MARK: Implementation details

    private var _isurfaceImageSource_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaImaging_ISurfaceImageSource>? = nil

    internal var _isurfaceImageSource: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaImaging_ISurfaceImageSource> {
        get throws {
            try _isurfaceImageSource_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlMediaImaging_ISurfaceImageSource.iid).cast(to: CWinRT.SWRT_WindowsUIXamlMediaImaging_ISurfaceImageSource.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlMediaImaging_ISurfaceImageSource>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _isurfaceImageSource_storage?.release()
    }

    private static var _isurfaceImageSourceFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaImaging_ISurfaceImageSourceFactory>? = nil

    internal static var _isurfaceImageSourceFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaImaging_ISurfaceImageSourceFactory> {
        get throws {
            try _isurfaceImageSourceFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Imaging.SurfaceImageSource", id: CWinRT.SWRT_WindowsUIXamlMediaImaging_ISurfaceImageSourceFactory.iid)
            }
        }
    }
}