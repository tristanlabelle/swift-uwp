// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides a source object for properties that use a bitmap-format image source.
open class WindowsUIXamlMediaImaging_BitmapSource: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Media.Imaging.IBitmapSourceFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlMediaImaging_BitmapSource.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._ibitmapSourceFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Media.Imaging.IBitmapSource members

    /// Gets the height of the bitmap in pixels.
    /// - Returns: The height of the bitmap in pixels.
    public var pixelHeight: Swift.Int32 {
        get throws {
            try _ibitmapSource.get_PixelHeight()
        }
    }

    /// Gets the width of the bitmap in pixels.
    /// - Returns: The width of the bitmap in pixels.
    public var pixelWidth: Swift.Int32 {
        get throws {
            try _ibitmapSource.get_PixelWidth()
        }
    }

    /// Sets the source image for a BitmapSource by accessing a stream. Most callers should use SetSourceAsync instead.
    /// - Parameter streamSource: The stream source that sets the image source value.
    public func setSource(_ streamSource: WindowsStorageStreams_IRandomAccessStream?) throws {
        try _ibitmapSource.setSource(streamSource)
    }

    /// Sets the source image for a BitmapSource by accessing a stream and processing the result asynchronously.
    /// - Parameter streamSource: The stream source that sets the image source value.
    /// - Returns: An asynchronous handler called when the operation is complete.
    public func setSourceAsync(_ streamSource: WindowsStorageStreams_IRandomAccessStream?) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_ibitmapSource.setSourceAsync(streamSource))
    }

    // MARK: Windows.UI.Xaml.Media.Imaging.IBitmapSourceStatics members

    /// Identifies the PixelHeight dependency property.
    /// - Returns: The identifier for the PixelHeight dependency property.
    public static var pixelHeightProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ibitmapSourceStatics.get_PixelHeightProperty())
        }
    }

    /// Identifies the PixelWidth dependency property.
    /// - Returns: The identifier for the PixelWidth dependency property.
    public static var pixelWidthProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ibitmapSourceStatics.get_PixelWidthProperty())
        }
    }

    // MARK: Implementation details

    private var _ibitmapSource_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaImaging_IBitmapSource>? = nil

    internal var _ibitmapSource: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaImaging_IBitmapSource> {
        get throws {
            try _ibitmapSource_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlMediaImaging_IBitmapSource.iid).cast(to: CWinRT.SWRT_WindowsUIXamlMediaImaging_IBitmapSource.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlMediaImaging_IBitmapSource>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _ibitmapSource_storage?.release()
    }

    private static var _ibitmapSourceFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaImaging_IBitmapSourceFactory>? = nil

    internal static var _ibitmapSourceFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaImaging_IBitmapSourceFactory> {
        get throws {
            try _ibitmapSourceFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Imaging.BitmapSource", id: CWinRT.SWRT_WindowsUIXamlMediaImaging_IBitmapSourceFactory.iid)
            }
        }
    }

    private static var _ibitmapSourceStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaImaging_IBitmapSourceStatics>? = nil

    internal static var _ibitmapSourceStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaImaging_IBitmapSourceStatics> {
        get throws {
            try _ibitmapSourceStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Imaging.BitmapSource", id: CWinRT.SWRT_WindowsUIXamlMediaImaging_IBitmapSourceStatics.iid)
            }
        }
    }
}