// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents an image source that can be populated with the combined contents of a XAML visual tree. See  for some notable limitations on which XAML visuals can be captured in a RenderTargetBitmap.
public final class WindowsUIXamlMediaImaging_RenderTargetBitmap: WindowsRuntime.WinRTImport<WindowsUIXamlMediaImaging_RenderTargetBitmapProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlMediaImaging_RenderTargetBitmapProjection.self))
    }

    // MARK: Windows.UI.Xaml.Media.Imaging.IRenderTargetBitmap members

    /// Gets the height of the rendered bitmap in pixels.
    /// - Returns: The height of the rendered bitmap in pixels.
    public var pixelHeight: Swift.Int32 {
        get throws {
            try _interop.get_PixelHeight()
        }
    }

    /// Gets the width of the rendered bitmap in pixels.
    /// - Returns: The width of the rendered bitmap in pixels.
    public var pixelWidth: Swift.Int32 {
        get throws {
            try _interop.get_PixelWidth()
        }
    }

    /// Renders a snapshot of a UIElement visual tree to an image source.
    /// - Parameter element: A UIElement that represents the visual tree fragment to render.
    /// - Returns: When this method returns, an IAsyncAction object that can be used to control the asynchronous operation.
    public func renderAsync(_ element: WindowsUIXaml_UIElement?) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.renderAsync(element))
    }

    /// Renders a snapshot of a UIElement visual tree to an image source. Specify values for *scaledWidth* and *scaledHeight* to alter the original source's rendering dimension.
    /// - Parameter element: A UIElement that represents the visual tree fragment to render.
    /// - Parameter scaledWidth: Specifies the target width at which to render. The default is 0. *scaledWidth* and/or *scaledHeight* can be optional; see Remarks.
    /// - Parameter scaledHeight: Specifies the target height at which to render. The default is 0. *scaledWidth* and/or *scaledHeight* can be optional; see Remarks.
    /// - Returns: When this method returns, an IAsyncAction object that can be used to control the asynchronous operation.
    public func renderAsync(_ element: WindowsUIXaml_UIElement?, _ scaledWidth: Swift.Int32, _ scaledHeight: Swift.Int32) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.renderToSizeAsync(element, scaledWidth, scaledHeight))
    }

    /// Retrieves the previously rendered RenderTargetBitmap image as a buffered stream of bytes in **BGRA8** format.
    /// - Returns: When this method returns, an IBuffer stream that contains bytes. This is the binary data for the image and can be converted to a byte array in **BGRA8** format
    public func getPixelsAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsStorageStreams_IBuffer?> {
        try COM.NullResult.unwrap(_interop.getPixelsAsync())
    }

    // MARK: Windows.UI.Xaml.Media.Imaging.IRenderTargetBitmapStatics members

    /// Identifies the PixelHeight dependency property.
    /// - Returns: The identifier for the PixelHeight dependency property.
    public static var pixelHeightProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_irenderTargetBitmapStatics.get_PixelHeightProperty())
        }
    }

    /// Identifies the PixelWidth dependency property.
    /// - Returns: The identifier for the PixelWidth dependency property.
    public static var pixelWidthProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_irenderTargetBitmapStatics.get_PixelWidthProperty())
        }
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Imaging.RenderTargetBitmap", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _irenderTargetBitmapStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaImaging_IRenderTargetBitmapStatics>? = nil

    internal static var _irenderTargetBitmapStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMediaImaging_IRenderTargetBitmapStatics> {
        get throws {
            try _irenderTargetBitmapStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Imaging.RenderTargetBitmap", id: CWinRT.SWRT_WindowsUIXamlMediaImaging_IRenderTargetBitmapStatics.iid)
            }
        }
    }
}