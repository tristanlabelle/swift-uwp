// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides access to the sorting criteria of the query results as a collection of SortEntry objects.
public final class WindowsStorageSearch_SortEntryVector: WindowsRuntime.WinRTImport<WindowsStorageSearch_SortEntryVectorProjection>, WindowsFoundationCollections_IVectorProtocol, WindowsFoundationCollections_IIterableProtocol {
    public typealias T = WindowsStorageSearch_SortEntry

    // MARK: Windows.Foundation.Collections.IVector`1<Windows.Storage.Search.SortEntry> members

    /// Gets the number of sort entries in the collection.
    /// - Returns: The number of sort entries.
    public var size: Swift.UInt32 {
        get throws {
            try _interop.get_Size()
        }
    }

    /// Retrieves the sort entry at the specified index in the collection.
    /// - Parameter index: The zero-based index of the sort entry to retrieve.
    /// - Returns: The sort entry at the specified index.
    public func getAt(_ index: Swift.UInt32) throws -> WindowsStorageSearch_SortEntry {
        try _interop.getAt(index)
    }

    /// Retrieves an immutable view of the collection of sort entries.
    /// - Returns: The view of the collection.
    public func getView() throws -> WindowsFoundationCollections_IVectorView<WindowsStorageSearch_SortEntry> {
        try COM.NullResult.unwrap(_interop.getView())
    }

    /// Retrieves the index of a specified sort entry in the collection.
    /// - Parameter value: The sort entry to find in the collection.
    /// - Parameter index: The zero-based index of the sort entry, if found. This parameter is set to zero if the sort entry is not found.
    /// - Returns: True if the sort entry is found; otherwise false.
    public func indexOf(_ value: WindowsStorageSearch_SortEntry, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        try _interop.indexOf(value, &index)
    }

    /// Sets the sort entry at the specified index of the collection.
    /// - Parameter index: The zero-based index of the location at which to set the sort entry.
    /// - Parameter value: The sort entry.
    public func setAt(_ index: Swift.UInt32, _ value: WindowsStorageSearch_SortEntry) throws {
        try _interop.setAt(index, value)
    }

    /// Inserts a sort entry into the collection at a specified index.
    /// - Parameter index: The zero-based index of the location to insert the sort entry.
    /// - Parameter value: The sort entry to insert.
    public func insertAt(_ index: Swift.UInt32, _ value: WindowsStorageSearch_SortEntry) throws {
        try _interop.insertAt(index, value)
    }

    /// Removes the sort entry at the specified index in the collection.
    /// - Parameter index: The zero-based index of the sort entry to remove.
    public func removeAt(_ index: Swift.UInt32) throws {
        try _interop.removeAt(index)
    }

    /// Appends a sort entry to the end of the collection.
    /// - Parameter value: The sort entry to append to the collection.
    public func append(_ value: WindowsStorageSearch_SortEntry) throws {
        try _interop.append(value)
    }

    /// Removes the last sort entry from the collection.
    public func removeAtEnd() throws {
        try _interop.removeAtEnd()
    }

    /// Removes all sort entries from the collection.
    public func clear() throws {
        try _interop.clear()
    }

    /// Retrieves the sort entries that start at the specified index in the collection.
    /// - Parameter startIndex: The zero-based index of the start of the sort entries in the collection to retrieve.
    /// - Parameter items: The sort entries in the collection that start at *startIndex*.
    /// - Returns: The number of items retrieved.
    public func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsStorageSearch_SortEntry]) throws -> Swift.UInt32 {
        try _interop.getMany(startIndex, items)
    }

    /// Replaces all sort entries in the collection with the specified sort entries.
    /// - Parameter items: The collection of sort entries to put in the vector.
    public func replaceAll(_ items: [WindowsStorageSearch_SortEntry]) throws {
        try _interop.replaceAll(items)
    }

    // MARK: Windows.Foundation.Collections.IIterable`1<Windows.Storage.Search.SortEntry> members

    /// Retrieves an iterator that iterates through the sort entries in the collection.
    /// - Returns: The iterator.
    public func first() throws -> WindowsFoundationCollections_IIterator<WindowsStorageSearch_SortEntry> {
        try COM.NullResult.unwrap(_iiterable.first())
    }

    // MARK: Implementation details

    private var _iiterable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsStorageSearch_SortEntry>? = nil

    internal var _iiterable: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsStorageSearch_SortEntry> {
        get throws {
            try _iiterable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsStorageSearch_SortEntry.iid).cast(to: CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsStorageSearch_SortEntry.self)
            }
        }
    }

    deinit {
        _iiterable_storage?.release()
    }
}