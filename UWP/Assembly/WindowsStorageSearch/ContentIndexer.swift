// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Enables UWP apps to make private content searchable by using the system index.
public final class WindowsStorageSearch_ContentIndexer: WindowsRuntime.WinRTImport<WindowsStorageSearch_ContentIndexerProjection> {
    // MARK: Windows.Storage.Search.IContentIndexer members

    /// Gets the version of the ContentIndexer.
    /// - Returns: The revision number.
    public var revision: Swift.UInt64 {
        get throws {
            try _interop.get_Revision()
        }
    }

    /// Adds app-defined items with properties and content to the system index.
    /// - Parameter indexableContent: The content properties to index.
    public func addAsync(_ indexableContent: WindowsStorageSearch_IIndexableContent?) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.addAsync(indexableContent))
    }

    /// Updates app content and properties in the ContentIndexer.
    /// - Parameter indexableContent: The content properties to update.
    public func updateAsync(_ indexableContent: WindowsStorageSearch_IIndexableContent?) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.updateAsync(indexableContent))
    }

    /// Removes the specified app-defined item from the ContentIndexer.
    /// - Parameter contentId: The identifier of the item to remove.
    public func deleteAsync(_ contentId: Swift.String) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.deleteAsync(contentId))
    }

    public func deleteMultipleAsync(_ contentIds: WindowsFoundationCollections_IIterable<Swift.String>?) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.deleteMultipleAsync(contentIds))
    }

    /// Removes all app-defined items from the ContentIndexer.
    public func deleteAllAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.deleteAllAsync())
    }

    public func retrievePropertiesAsync(_ contentId: Swift.String, _ propertiesToRetrieve: WindowsFoundationCollections_IIterable<Swift.String>?) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IMapView<Swift.String, WindowsRuntime.IInspectable?>?> {
        try COM.NullResult.unwrap(_interop.retrievePropertiesAsync(contentId, propertiesToRetrieve))
    }

    // MARK: Windows.Storage.Search.IContentIndexerQueryOperations members

    public func createQuery(_ searchFilter: Swift.String, _ propertiesToRetrieve: WindowsFoundationCollections_IIterable<Swift.String>?, _ sortOrder: WindowsFoundationCollections_IIterable<WindowsStorageSearch_SortEntry>?, _ searchFilterLanguage: Swift.String) throws -> WindowsStorageSearch_ContentIndexerQuery {
        try COM.NullResult.unwrap(_icontentIndexerQueryOperations.createQueryWithSortOrderAndLanguage(searchFilter, propertiesToRetrieve, sortOrder, searchFilterLanguage))
    }

    public func createQuery(_ searchFilter: Swift.String, _ propertiesToRetrieve: WindowsFoundationCollections_IIterable<Swift.String>?, _ sortOrder: WindowsFoundationCollections_IIterable<WindowsStorageSearch_SortEntry>?) throws -> WindowsStorageSearch_ContentIndexerQuery {
        try COM.NullResult.unwrap(_icontentIndexerQueryOperations.createQueryWithSortOrder(searchFilter, propertiesToRetrieve, sortOrder))
    }

    public func createQuery(_ searchFilter: Swift.String, _ propertiesToRetrieve: WindowsFoundationCollections_IIterable<Swift.String>?) throws -> WindowsStorageSearch_ContentIndexerQuery {
        try COM.NullResult.unwrap(_icontentIndexerQueryOperations.createQuery(searchFilter, propertiesToRetrieve))
    }

    // MARK: Windows.Storage.Search.IContentIndexerStatics members

    /// Gets the per-app index with the specified name or creates a new one, if necessary.
    /// - Parameter indexName: The index name.
    /// - Returns: The index.
    public static func getIndexer(_ indexName: Swift.String) throws -> WindowsStorageSearch_ContentIndexer {
        try COM.NullResult.unwrap(_icontentIndexerStatics.getIndexerWithName(indexName))
    }

    /// Gets an existing per-app index or creates a new one, if necessary.
    /// - Returns: The index.
    public static func getIndexer() throws -> WindowsStorageSearch_ContentIndexer {
        try COM.NullResult.unwrap(_icontentIndexerStatics.getIndexer())
    }

    // MARK: Implementation details

    private var _icontentIndexerQueryOperations_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorageSearch_IContentIndexerQueryOperations>? = nil

    internal var _icontentIndexerQueryOperations: COM.COMInterop<CWinRT.SWRT_WindowsStorageSearch_IContentIndexerQueryOperations> {
        get throws {
            try _icontentIndexerQueryOperations_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsStorageSearch_IContentIndexerQueryOperations.iid).cast(to: CWinRT.SWRT_WindowsStorageSearch_IContentIndexerQueryOperations.self)
            }
        }
    }

    deinit {
        _icontentIndexerQueryOperations_storage?.release()
    }

    private static var _icontentIndexerStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorageSearch_IContentIndexerStatics>? = nil

    internal static var _icontentIndexerStatics: COM.COMInterop<CWinRT.SWRT_WindowsStorageSearch_IContentIndexerStatics> {
        get throws {
            try _icontentIndexerStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Storage.Search.ContentIndexer", id: CWinRT.SWRT_WindowsStorageSearch_IContentIndexerStatics.iid)
            }
        }
    }
}