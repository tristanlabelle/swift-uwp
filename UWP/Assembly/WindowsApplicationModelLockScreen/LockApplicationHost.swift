// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Allows the lock screen app to request that the device unlocks, and allows the app to register to be notified when the device begins to unlock.
public final class WindowsApplicationModelLockScreen_LockApplicationHost: WindowsRuntime.WinRTImport<WindowsApplicationModelLockScreen_LockApplicationHostProjection> {
    // MARK: Windows.ApplicationModel.LockScreen.ILockApplicationHost members

    /// Indicates the device is unlocking.
    public func unlocking(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelLockScreen_LockApplicationHost?, WindowsApplicationModelLockScreen_LockScreenUnlockingEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Unlocking(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: unlocking)
    }

    public func unlocking(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Unlocking(token)
    }

    /// Requests that the device unlocks.
    public func requestUnlock() throws {
        try _interop.requestUnlock()
    }

    // MARK: Windows.ApplicationModel.LockScreen.ILockApplicationHostStatics members

    /// Gets a LockApplicationHost object.
    /// - Returns: A LockApplicationHost object.
    public static func getForCurrentView() throws -> WindowsApplicationModelLockScreen_LockApplicationHost {
        try COM.NullResult.unwrap(_ilockApplicationHostStatics.getForCurrentView())
    }

    // MARK: Implementation details

    private static var _ilockApplicationHostStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelLockScreen_ILockApplicationHostStatics>? = nil

    internal static var _ilockApplicationHostStatics: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelLockScreen_ILockApplicationHostStatics> {
        get throws {
            try _ilockApplicationHostStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.LockScreen.LockApplicationHost", id: CWinRT.SWRT_WindowsApplicationModelLockScreen_ILockApplicationHostStatics.iid)
            }
        }
    }
}