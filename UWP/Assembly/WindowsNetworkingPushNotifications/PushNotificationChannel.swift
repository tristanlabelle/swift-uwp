// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a delivery vehicle and addressing mechanism for push notifications.
public final class WindowsNetworkingPushNotifications_PushNotificationChannel: WindowsRuntime.WinRTImport<WindowsNetworkingPushNotifications_PushNotificationChannelProjection> {
    // MARK: Windows.Networking.PushNotifications.IPushNotificationChannel members

    /// Gets the time at which the channel expires. Notifications sent to this channel after this time are rejected.
    /// - Returns: The time at which the channel expires. Notifications sent to this channel after this time are rejected.
    public var expirationTime: WindowsFoundation_DateTime {
        get throws {
            try _interop.get_ExpirationTime()
        }
    }

    /// Gets the Uniform Resource Identifier (URI) to which an app server sends a push notification intended for an application or secondary tile bound to this channel. This Uniform Resource Identifier (URI) is transmitted to and stored by the third-party app server.
    /// - Returns: The Uniform Resource Identifier (URI) (https) that the app server uses to post notifications.
    public var uri: Swift.String {
        get throws {
            try _interop.get_Uri()
        }
    }

    /// Raised when a push notification arrives on this channel.
    public func pushNotificationReceived(adding handler: WindowsFoundation_TypedEventHandler<WindowsNetworkingPushNotifications_PushNotificationChannel?, WindowsNetworkingPushNotifications_PushNotificationReceivedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_PushNotificationReceived(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: pushNotificationReceived)
    }

    public func pushNotificationReceived(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_PushNotificationReceived(token)
    }

    /// Explicitly invalidates this channel. Any notifications pushed to this channel after this method is called are not delivered.
    public func close() throws {
        try _interop.close()
    }

    // MARK: Implementation details
}