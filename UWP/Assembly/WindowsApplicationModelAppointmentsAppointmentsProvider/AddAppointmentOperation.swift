// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the operation object associated with adding a new appointment. Appointments provider apps use this info to perform the operation.
public final class WindowsApplicationModelAppointmentsAppointmentsProvider_AddAppointmentOperation: WindowsRuntime.WinRTImport<WindowsApplicationModelAppointmentsAppointmentsProvider_AddAppointmentOperationProjection> {
    // MARK: Windows.ApplicationModel.Appointments.AppointmentsProvider.IAddAppointmentOperation members

    /// Gets the Appointment info from the activation request.
    /// - Returns: An instance of the Appointment class that represents the specific info for the appointment to add.
    public var appointmentInformation: WindowsApplicationModelAppointments_Appointment {
        get throws {
            try COM.NullResult.unwrap(_interop.get_AppointmentInformation())
        }
    }

    /// Gets the package family name of the app that is requesting the operation.
    /// - Returns: The package family name.
    public var sourcePackageFamilyName: Swift.String {
        get throws {
            try _interop.get_SourcePackageFamilyName()
        }
    }

    /// Call this method to inform the activating app that the operation was completed successfully. Provide a unique appointment ID as the *itemID* parameter.
    /// - Parameter itemId: A unique appointment ID that the activating app can later use to remove this appointment if necessary.
    public func reportCompleted(_ itemId: Swift.String) throws {
        try _interop.reportCompleted(itemId)
    }

    /// Call this method to inform the activating app that the operation was canceled by the user.
    public func reportCanceled() throws {
        try _interop.reportCanceled()
    }

    /// Informs the activating app that the operation couldn't be completed because of a provider error.
    /// - Parameter value: A string that contains info about the error.
    public func reportError(_ value: Swift.String) throws {
        try _interop.reportError(value)
    }

    /// Dismisses the UI for the operation that adds a new appointment.
    public func dismissUI() throws {
        try _interop.dismissUI()
    }

    // MARK: Implementation details
}