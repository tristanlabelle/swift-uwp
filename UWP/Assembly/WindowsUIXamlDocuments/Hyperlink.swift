// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides an inline-level content element that provides facilities for hosting hyperlinks.
public final class WindowsUIXamlDocuments_Hyperlink: WindowsRuntime.WinRTImport<WindowsUIXamlDocuments_HyperlinkProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlDocuments_HyperlinkProjection.self))
    }

    // MARK: Windows.UI.Xaml.Documents.IHyperlink members

    /// Gets or sets the Uniform Resource Identifier (URI) to navigate to when the Hyperlink is activated.
    /// - Returns: The Uniform Resource Identifier (URI) to navigate to when the Hyperlink is activated. The default is **null**.
    public var navigateUri: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_interop.get_NavigateUri())
        }
    }

    /// Gets or sets the Uniform Resource Identifier (URI) to navigate to when the Hyperlink is activated.
    /// - Returns: The Uniform Resource Identifier (URI) to navigate to when the Hyperlink is activated. The default is **null**.
    public func navigateUri(_ value: WindowsFoundation_Uri?) throws {
        try _interop.put_NavigateUri(value)
    }

    /// Occurs when the Hyperlink is clicked.
    public func click(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIXamlDocuments_Hyperlink?, WindowsUIXamlDocuments_HyperlinkClickEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Click(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: click)
    }

    public func click(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Click(token)
    }

    // MARK: Windows.UI.Xaml.Documents.IHyperlink2 members

    /// Gets or sets a value that indicates what kind of underline is shown under the hyperlink.
    /// - Returns: An enumeration value that specifies what kind of underline is shown. The default is **Single**.
    public var underlineStyle: WindowsUIXamlDocuments_UnderlineStyle {
        get throws {
            try _ihyperlink2.get_UnderlineStyle()
        }
    }

    /// Gets or sets a value that indicates what kind of underline is shown under the hyperlink.
    /// - Returns: An enumeration value that specifies what kind of underline is shown. The default is **Single**.
    public func underlineStyle(_ value: WindowsUIXamlDocuments_UnderlineStyle) throws {
        try _ihyperlink2.put_UnderlineStyle(value)
    }

    // MARK: Windows.UI.Xaml.Documents.IHyperlink3 members

    /// Gets or sets a value that specifies the control's preference for whether it plays sounds.
    /// - Returns: An enumeration value that specifies the control's preference for whether it plays sounds. The default is **Default**.
    public var elementSoundMode: WindowsUIXaml_ElementSoundMode {
        get throws {
            try _ihyperlink3.get_ElementSoundMode()
        }
    }

    /// Gets or sets a value that specifies the control's preference for whether it plays sounds.
    /// - Returns: An enumeration value that specifies the control's preference for whether it plays sounds. The default is **Default**.
    public func elementSoundMode(_ value: WindowsUIXaml_ElementSoundMode) throws {
        try _ihyperlink3.put_ElementSoundMode(value)
    }

    /// Gets or sets the object that gets focus when a user presses the Directional Pad (DPAD) down.
    /// - Returns: The object that gets focus when a user presses the Directional Pad (DPAD).
    public var xyfocusDown: WindowsUIXaml_DependencyObject {
        get throws {
            try COM.NullResult.unwrap(_ihyperlink3.get_XYFocusDown())
        }
    }

    /// Gets or sets the object that gets focus when a user presses the Directional Pad (DPAD) down.
    /// - Returns: The object that gets focus when a user presses the Directional Pad (DPAD).
    public func xyfocusDown(_ value: WindowsUIXaml_DependencyObject?) throws {
        try _ihyperlink3.put_XYFocusDown(value)
    }

    /// Gets or sets the object that gets focus when a user presses the Directional Pad (DPAD) left.
    /// - Returns: The object that gets focus when a user presses the Directional Pad (DPAD).
    public var xyfocusLeft: WindowsUIXaml_DependencyObject {
        get throws {
            try COM.NullResult.unwrap(_ihyperlink3.get_XYFocusLeft())
        }
    }

    /// Gets or sets the object that gets focus when a user presses the Directional Pad (DPAD) left.
    /// - Returns: The object that gets focus when a user presses the Directional Pad (DPAD).
    public func xyfocusLeft(_ value: WindowsUIXaml_DependencyObject?) throws {
        try _ihyperlink3.put_XYFocusLeft(value)
    }

    /// Gets or sets the object that gets focus when a user presses the Directional Pad (DPAD) right.
    /// - Returns: The object that gets focus when a user presses the Directional Pad (DPAD).
    public var xyfocusRight: WindowsUIXaml_DependencyObject {
        get throws {
            try COM.NullResult.unwrap(_ihyperlink3.get_XYFocusRight())
        }
    }

    /// Gets or sets the object that gets focus when a user presses the Directional Pad (DPAD) right.
    /// - Returns: The object that gets focus when a user presses the Directional Pad (DPAD).
    public func xyfocusRight(_ value: WindowsUIXaml_DependencyObject?) throws {
        try _ihyperlink3.put_XYFocusRight(value)
    }

    /// Gets or sets the object that gets focus when a user presses the Directional Pad (DPAD) up.
    /// - Returns: The object that gets focus when a user presses the Directional Pad (DPAD).
    public var xyfocusUp: WindowsUIXaml_DependencyObject {
        get throws {
            try COM.NullResult.unwrap(_ihyperlink3.get_XYFocusUp())
        }
    }

    /// Gets or sets the object that gets focus when a user presses the Directional Pad (DPAD) up.
    /// - Returns: The object that gets focus when a user presses the Directional Pad (DPAD).
    public func xyfocusUp(_ value: WindowsUIXaml_DependencyObject?) throws {
        try _ihyperlink3.put_XYFocusUp(value)
    }

    // MARK: Windows.UI.Xaml.Documents.IHyperlink4 members

    /// Gets a value that specifies whether this hyperlink has focus, and the mode by which focus was obtained.
    /// - Returns: A value of the enumeration. A value of **Unfocused** indicates that the hyperlink does not have focus.
    public var focusState: WindowsUIXaml_FocusState {
        get throws {
            try _ihyperlink4.get_FocusState()
        }
    }

    /// Gets or sets a value that specifies the strategy used to determine the target element of a down navigation.
    /// - Returns: A value of the enumeration. The default is **Auto**.
    public var xyfocusDownNavigationStrategy: WindowsUIXamlInput_XYFocusNavigationStrategy {
        get throws {
            try _ihyperlink4.get_XYFocusDownNavigationStrategy()
        }
    }

    /// Gets or sets a value that specifies the strategy used to determine the target element of a down navigation.
    /// - Returns: A value of the enumeration. The default is **Auto**.
    public func xyfocusDownNavigationStrategy(_ value: WindowsUIXamlInput_XYFocusNavigationStrategy) throws {
        try _ihyperlink4.put_XYFocusDownNavigationStrategy(value)
    }

    /// Gets or sets a value that specifies the strategy used to determine the target element of a left navigation.
    /// - Returns: A value of the enumeration. The default is **Auto**.
    public var xyfocusLeftNavigationStrategy: WindowsUIXamlInput_XYFocusNavigationStrategy {
        get throws {
            try _ihyperlink4.get_XYFocusLeftNavigationStrategy()
        }
    }

    /// Gets or sets a value that specifies the strategy used to determine the target element of a left navigation.
    /// - Returns: A value of the enumeration. The default is **Auto**.
    public func xyfocusLeftNavigationStrategy(_ value: WindowsUIXamlInput_XYFocusNavigationStrategy) throws {
        try _ihyperlink4.put_XYFocusLeftNavigationStrategy(value)
    }

    /// Gets or sets a value that specifies the strategy used to determine the target element of a right navigation.
    /// - Returns: A value of the enumeration. The default is **Auto**.
    public var xyfocusRightNavigationStrategy: WindowsUIXamlInput_XYFocusNavigationStrategy {
        get throws {
            try _ihyperlink4.get_XYFocusRightNavigationStrategy()
        }
    }

    /// Gets or sets a value that specifies the strategy used to determine the target element of a right navigation.
    /// - Returns: A value of the enumeration. The default is **Auto**.
    public func xyfocusRightNavigationStrategy(_ value: WindowsUIXamlInput_XYFocusNavigationStrategy) throws {
        try _ihyperlink4.put_XYFocusRightNavigationStrategy(value)
    }

    /// Gets or sets a value that specifies the strategy used to determine the target element of an up navigation.
    /// - Returns: A value of the enumeration. The default is **Auto**.
    public var xyfocusUpNavigationStrategy: WindowsUIXamlInput_XYFocusNavigationStrategy {
        get throws {
            try _ihyperlink4.get_XYFocusUpNavigationStrategy()
        }
    }

    /// Gets or sets a value that specifies the strategy used to determine the target element of an up navigation.
    /// - Returns: A value of the enumeration. The default is **Auto**.
    public func xyfocusUpNavigationStrategy(_ value: WindowsUIXamlInput_XYFocusNavigationStrategy) throws {
        try _ihyperlink4.put_XYFocusUpNavigationStrategy(value)
    }

    /// Occurs when a **Hyperlink** receives focus.
    public func gotFocus(adding handler: WindowsUIXaml_RoutedEventHandler?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _ihyperlink4.add_GotFocus(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: gotFocus)
    }

    public func gotFocus(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _ihyperlink4.remove_GotFocus(token)
    }

    /// Occurs when a **Hyperlink** loses focus.
    public func lostFocus(adding handler: WindowsUIXaml_RoutedEventHandler?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _ihyperlink4.add_LostFocus(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: lostFocus)
    }

    public func lostFocus(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _ihyperlink4.remove_LostFocus(token)
    }

    /// Attempts to set the focus on the hyperlink.
    /// - Parameter value: Specifies how focus was set, as a value of the enumeration.
    /// - Returns: **true** if focus was set to the hyperlink, or focus was already on the hyperlink. **false** if the hyperlink is not focusable.
    public func focus(_ value: WindowsUIXaml_FocusState) throws -> Swift.Bool {
        try _ihyperlink4.focus(value)
    }

    // MARK: Windows.UI.Xaml.Documents.IHyperlink5 members

    /// Gets or sets a value that indicates whether the hyperlink is included in tab navigation.
    /// - Returns: **true** if the control is included in tab navigation; otherwise, **false**. The default is **true**.
    public var isTabStop: Swift.Bool {
        get throws {
            try _ihyperlink5.get_IsTabStop()
        }
    }

    /// Gets or sets a value that indicates whether the hyperlink is included in tab navigation.
    /// - Returns: **true** if the control is included in tab navigation; otherwise, **false**. The default is **true**.
    public func isTabStop(_ value: Swift.Bool) throws {
        try _ihyperlink5.put_IsTabStop(value)
    }

    /// Gets or sets a value that determines the order in which elements receive focus when the user navigates through controls by pressing the Tab key.
    /// - Returns: A value that determines the order of logical navigation for a device. The default value is MaxValue.
    public var tabIndex: Swift.Int32 {
        get throws {
            try _ihyperlink5.get_TabIndex()
        }
    }

    /// Gets or sets a value that determines the order in which elements receive focus when the user navigates through controls by pressing the Tab key.
    /// - Returns: A value that determines the order of logical navigation for a device. The default value is MaxValue.
    public func tabIndex(_ value: Swift.Int32) throws {
        try _ihyperlink5.put_TabIndex(value)
    }

    // MARK: Windows.UI.Xaml.Documents.IHyperlinkStatics2 members

    /// Identifies the UnderlineStyle dependency property.
    /// - Returns: The identifier for the UnderlineStyle dependency property.
    public static var underlineStyleProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ihyperlinkStatics2.get_UnderlineStyleProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Documents.IHyperlinkStatics3 members

    /// Identifies the ElementSoundMode dependency property.
    /// - Returns: The identifier for the ElementSoundMode dependency property.
    public static var elementSoundModeProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ihyperlinkStatics3.get_ElementSoundModeProperty())
        }
    }

    /// Identifies the XYFocusDown dependency property.
    /// - Returns: The identifier for the XYFocusDown dependency property.
    public static var xyfocusDownProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ihyperlinkStatics3.get_XYFocusDownProperty())
        }
    }

    /// Identifies the XYFocusLeft dependency property.
    /// - Returns: The identifier for the XYFocusLeft dependency property.
    public static var xyfocusLeftProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ihyperlinkStatics3.get_XYFocusLeftProperty())
        }
    }

    /// Identifies the XYFocusRight dependency property.
    /// - Returns: The identifier for the XYFocusRight dependency property.
    public static var xyfocusRightProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ihyperlinkStatics3.get_XYFocusRightProperty())
        }
    }

    /// Identifies the XYFocusUp dependency property.
    /// - Returns: The identifier for the XYFocusUp dependency property.
    public static var xyfocusUpProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ihyperlinkStatics3.get_XYFocusUpProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Documents.IHyperlinkStatics4 members

    /// Identifies the FocusState dependency property.
    /// - Returns: The identifier for the FocusState dependency property.
    public static var focusStateProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ihyperlinkStatics4.get_FocusStateProperty())
        }
    }

    /// Identifies the XYFocusDownNavigationStrategy dependency property.
    /// - Returns: The identifier for the XYFocusDownNavigationStrategy dependency property.
    public static var xyfocusDownNavigationStrategyProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ihyperlinkStatics4.get_XYFocusDownNavigationStrategyProperty())
        }
    }

    /// Identifies the XYFocusLeftNavigationStrategy dependency property.
    /// - Returns: The identifier for the XYFocusLeftNavigationStrategy dependency property.
    public static var xyfocusLeftNavigationStrategyProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ihyperlinkStatics4.get_XYFocusLeftNavigationStrategyProperty())
        }
    }

    /// Identifies the XYFocusRightNavigationStrategy dependency property.
    /// - Returns: The identifier for the XYFocusRightNavigationStrategy dependency property.
    public static var xyfocusRightNavigationStrategyProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ihyperlinkStatics4.get_XYFocusRightNavigationStrategyProperty())
        }
    }

    /// Identifies the XYFocusUpNavigationStrategy dependency property.
    /// - Returns: The identifier for the XYFocusUpNavigationStrategy dependency property.
    public static var xyfocusUpNavigationStrategyProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ihyperlinkStatics4.get_XYFocusUpNavigationStrategyProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Documents.IHyperlinkStatics5 members

    /// Identifies the IsTabStop dependency property.
    /// - Returns: The identifier for the IsTabStop dependency property.
    public static var isTabStopProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ihyperlinkStatics5.get_IsTabStopProperty())
        }
    }

    /// Identifies the TabIndex dependency property.
    /// - Returns: The identifier for the TabIndex dependency property.
    public static var tabIndexProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ihyperlinkStatics5.get_TabIndexProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Documents.IHyperlinkStatics members

    /// Identifies the NavigateUri dependency property.
    /// - Returns: The identifier for the NavigateUri dependency property.
    public static var navigateUriProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ihyperlinkStatics.get_NavigateUriProperty())
        }
    }

    // MARK: Implementation details

    private var _ihyperlink2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlink2>? = nil

    internal var _ihyperlink2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlink2> {
        get throws {
            try _ihyperlink2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlink2.iid).cast(to: CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlink2.self)
            }
        }
    }

    private var _ihyperlink3_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlink3>? = nil

    internal var _ihyperlink3: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlink3> {
        get throws {
            try _ihyperlink3_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlink3.iid).cast(to: CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlink3.self)
            }
        }
    }

    private var _ihyperlink4_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlink4>? = nil

    internal var _ihyperlink4: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlink4> {
        get throws {
            try _ihyperlink4_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlink4.iid).cast(to: CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlink4.self)
            }
        }
    }

    private var _ihyperlink5_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlink5>? = nil

    internal var _ihyperlink5: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlink5> {
        get throws {
            try _ihyperlink5_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlink5.iid).cast(to: CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlink5.self)
            }
        }
    }

    deinit {
        _ihyperlink2_storage?.release()
        _ihyperlink3_storage?.release()
        _ihyperlink4_storage?.release()
        _ihyperlink5_storage?.release()
    }

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Documents.Hyperlink", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _ihyperlinkStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlinkStatics2>? = nil

    internal static var _ihyperlinkStatics2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlinkStatics2> {
        get throws {
            try _ihyperlinkStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Documents.Hyperlink", id: CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlinkStatics2.iid)
            }
        }
    }

    private static var _ihyperlinkStatics3_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlinkStatics3>? = nil

    internal static var _ihyperlinkStatics3: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlinkStatics3> {
        get throws {
            try _ihyperlinkStatics3_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Documents.Hyperlink", id: CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlinkStatics3.iid)
            }
        }
    }

    private static var _ihyperlinkStatics4_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlinkStatics4>? = nil

    internal static var _ihyperlinkStatics4: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlinkStatics4> {
        get throws {
            try _ihyperlinkStatics4_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Documents.Hyperlink", id: CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlinkStatics4.iid)
            }
        }
    }

    private static var _ihyperlinkStatics5_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlinkStatics5>? = nil

    internal static var _ihyperlinkStatics5: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlinkStatics5> {
        get throws {
            try _ihyperlinkStatics5_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Documents.Hyperlink", id: CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlinkStatics5.iid)
            }
        }
    }

    private static var _ihyperlinkStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlinkStatics>? = nil

    internal static var _ihyperlinkStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlinkStatics> {
        get throws {
            try _ihyperlinkStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Documents.Hyperlink", id: CWinRT.SWRT_WindowsUIXamlDocuments_IHyperlinkStatics.iid)
            }
        }
    }
}