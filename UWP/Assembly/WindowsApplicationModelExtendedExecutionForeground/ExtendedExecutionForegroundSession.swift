// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Supports managing a request for extended execution. This API requires the use of restricted capabilities and cannot be used for Store applications.
public final class WindowsApplicationModelExtendedExecutionForeground_ExtendedExecutionForegroundSession: WindowsRuntime.WinRTImport<WindowsApplicationModelExtendedExecutionForeground_ExtendedExecutionForegroundSessionProjection>, WindowsFoundation_IClosableProtocol {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsApplicationModelExtendedExecutionForeground_ExtendedExecutionForegroundSessionProjection.self))
    }

    // MARK: Windows.ApplicationModel.ExtendedExecution.Foreground.IExtendedExecutionForegroundSession members

    /// Gets or sets a string to display in the shell.
    /// - Returns: A string to display in the shell.
    public var description: Swift.String {
        get throws {
            try _interop.get_Description()
        }
    }

    /// Gets or sets a string to display in the shell.
    /// - Returns: A string to display in the shell.
    public func description(_ value: Swift.String) throws {
        try _interop.put_Description(value)
    }

    /// Gets or sets the reason for the extended execution request.
    /// - Returns: The reason for the for the extended execution request.
    public var reason: WindowsApplicationModelExtendedExecutionForeground_ExtendedExecutionForegroundReason {
        get throws {
            try _interop.get_Reason()
        }
    }

    /// Gets or sets the reason for the extended execution request.
    /// - Returns: The reason for the for the extended execution request.
    public func reason(_ value: WindowsApplicationModelExtendedExecutionForeground_ExtendedExecutionForegroundReason) throws {
        try _interop.put_Reason(value)
    }

    /// This event occurs when the system revokes extended execution.
    public func revoked(adding handler: WindowsFoundation_TypedEventHandler<WindowsRuntime.IInspectable?, WindowsApplicationModelExtendedExecutionForeground_ExtendedExecutionForegroundRevokedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Revoked(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: revoked)
    }

    public func revoked(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Revoked(token)
    }

    /// Requests extended execution
    /// - Returns: The result of the request.
    public func requestExtensionAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelExtendedExecutionForeground_ExtendedExecutionForegroundResult> {
        try COM.NullResult.unwrap(_interop.requestExtensionAsync())
    }

    // MARK: Windows.Foundation.IClosable members

    /// Closes the session and removes the application's extended execution capability.
    public func close() throws {
        try _iclosable.close()
    }

    // MARK: Implementation details

    private var _iclosable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable>? = nil

    internal var _iclosable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable> {
        get throws {
            try _iclosable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IClosable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IClosable.self)
            }
        }
    }

    deinit {
        _iclosable_storage?.release()
    }

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.ExtendedExecution.Foreground.ExtendedExecutionForegroundSession", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}