// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents cached content modes for graphics acceleration features.
open class WindowsUIXamlMedia_CacheMode: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Media.ICacheModeFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlMedia_CacheMode.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._icacheModeFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Implementation details

    private var _icacheMode_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_ICacheMode>? = nil

    internal var _icacheMode: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_ICacheMode> {
        get throws {
            try _icacheMode_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlMedia_ICacheMode.iid).cast(to: CWinRT.SWRT_WindowsUIXamlMedia_ICacheMode.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlMedia_ICacheMode>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _icacheMode_storage?.release()
    }

    private static var _icacheModeFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_ICacheModeFactory>? = nil

    internal static var _icacheModeFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_ICacheModeFactory> {
        get throws {
            try _icacheModeFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.CacheMode", id: CWinRT.SWRT_WindowsUIXamlMedia_ICacheModeFactory.iid)
            }
        }
    }
}