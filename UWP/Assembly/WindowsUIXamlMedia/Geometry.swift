// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides a base class for objects that define geometric shapes. Geometry objects can be used for clipping regions and as geometry definitions for rendering two-dimensional graphical data as a Path.
open class WindowsUIXamlMedia_Geometry: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Media.IGeometry members

    /// Gets a Rect that specifies the axis-aligned bounding box of the Geometry.
    /// - Returns: The axis-aligned bounding box of the Geometry.
    public var bounds: WindowsFoundation_Rect {
        get throws {
            try _igeometry.get_Bounds()
        }
    }

    /// Gets or sets the Transform object applied to a Geometry.
    /// - Returns: The transformation applied to the Geometry. Note that this value may be a single Transform or a list of Transform items.
    public var transform: WindowsUIXamlMedia_Transform {
        get throws {
            try COM.NullResult.unwrap(_igeometry.get_Transform())
        }
    }

    /// Gets or sets the Transform object applied to a Geometry.
    /// - Returns: The transformation applied to the Geometry. Note that this value may be a single Transform or a list of Transform items.
    public func transform(_ value: WindowsUIXamlMedia_Transform?) throws {
        try _igeometry.put_Transform(value)
    }

    // MARK: Windows.UI.Xaml.Media.IGeometryStatics members

    /// Gets an empty geometry object.
    /// - Returns: The empty geometry object.
    public static var empty: WindowsUIXamlMedia_Geometry {
        get throws {
            try COM.NullResult.unwrap(_igeometryStatics.get_Empty())
        }
    }

    /// Gets the standard tolerance used for polygonal approximation.
    /// - Returns: The standard tolerance. The default value is 0.25.
    public static var standardFlatteningTolerance: Swift.Double {
        get throws {
            try _igeometryStatics.get_StandardFlatteningTolerance()
        }
    }

    /// Identifies the Transform dependency property.
    /// - Returns: The identifier for the Transform dependency property.
    public static var transformProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_igeometryStatics.get_TransformProperty())
        }
    }

    // MARK: Implementation details

    private var _igeometry_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IGeometry>? = nil

    internal var _igeometry: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IGeometry> {
        get throws {
            try _igeometry_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlMedia_IGeometry.iid).cast(to: CWinRT.SWRT_WindowsUIXamlMedia_IGeometry.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlMedia_IGeometry>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _igeometry_storage?.release()
    }

    private static var _igeometryFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IGeometryFactory>? = nil

    internal static var _igeometryFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IGeometryFactory> {
        get throws {
            try _igeometryFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Geometry", id: CWinRT.SWRT_WindowsUIXamlMedia_IGeometryFactory.iid)
            }
        }
    }

    private static var _igeometryStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IGeometryStatics>? = nil

    internal static var _igeometryStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IGeometryStatics> {
        get throws {
            try _igeometryStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Geometry", id: CWinRT.SWRT_WindowsUIXamlMedia_IGeometryStatics.iid)
            }
        }
    }
}