// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a complex vector-based shape that may be composed of arcs, curves, ellipses, lines, and rectangles.
public final class WindowsUIXamlMedia_PathGeometry: WindowsRuntime.WinRTImport<WindowsUIXamlMedia_PathGeometryProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlMedia_PathGeometryProjection.self))
    }

    // MARK: Windows.UI.Xaml.Media.IPathGeometry members

    /// Gets or sets the collection of PathFigure objects that describe the contents of a path.
    /// - Returns: A collection of PathFigure objects that describe the contents of a path. Each individual PathFigure describes a shape.
    public var figures: WindowsUIXamlMedia_PathFigureCollection {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Figures())
        }
    }

    /// Gets or sets the collection of PathFigure objects that describe the contents of a path.
    /// - Returns: A collection of PathFigure objects that describe the contents of a path. Each individual PathFigure describes a shape.
    public func figures(_ value: WindowsUIXamlMedia_PathFigureCollection?) throws {
        try _interop.put_Figures(value)
    }

    /// Gets or sets a value that determines how the intersecting areas contained in the PathGeometry are combined.
    /// - Returns: A FillRule enumeration value that indicates how the intersecting areas of the PathGeometry are combined. The default is **EvenOdd**.
    public var fillRule: WindowsUIXamlMedia_FillRule {
        get throws {
            try _interop.get_FillRule()
        }
    }

    /// Gets or sets a value that determines how the intersecting areas contained in the PathGeometry are combined.
    /// - Returns: A FillRule enumeration value that indicates how the intersecting areas of the PathGeometry are combined. The default is **EvenOdd**.
    public func fillRule(_ value: WindowsUIXamlMedia_FillRule) throws {
        try _interop.put_FillRule(value)
    }

    // MARK: Windows.UI.Xaml.Media.IPathGeometryStatics members

    /// Identifies the Figures dependency property.
    /// - Returns: The identifier for the Figures dependency property.
    public static var figuresProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ipathGeometryStatics.get_FiguresProperty())
        }
    }

    /// Identifies the FillRule dependency property.
    /// - Returns: The identifier for the FillRule dependency property.
    public static var fillRuleProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ipathGeometryStatics.get_FillRuleProperty())
        }
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.PathGeometry", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _ipathGeometryStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IPathGeometryStatics>? = nil

    internal static var _ipathGeometryStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IPathGeometryStatics> {
        get throws {
            try _ipathGeometryStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.PathGeometry", id: CWinRT.SWRT_WindowsUIXamlMedia_IPathGeometryStatics.iid)
            }
        }
    }
}