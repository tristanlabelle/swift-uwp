// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides utility methods that can be used to traverse object relationships (along child-object or parent-object axes) in the visual tree of your app.
public final class WindowsUIXamlMedia_VisualTreeHelper: WindowsRuntime.WinRTImport<WindowsUIXamlMedia_VisualTreeHelperProjection> {
    // MARK: Windows.UI.Xaml.Media.IVisualTreeHelperStatics members

    public static func findElementsInHostCoordinates(_ intersectingPoint: WindowsFoundation_Point, _ subtree: WindowsUIXaml_UIElement?) throws -> WindowsFoundationCollections_IIterable<WindowsUIXaml_UIElement?> {
        try COM.NullResult.unwrap(_ivisualTreeHelperStatics.findElementsInHostCoordinatesPoint(intersectingPoint, subtree))
    }

    public static func findElementsInHostCoordinates(_ intersectingRect: WindowsFoundation_Rect, _ subtree: WindowsUIXaml_UIElement?) throws -> WindowsFoundationCollections_IIterable<WindowsUIXaml_UIElement?> {
        try COM.NullResult.unwrap(_ivisualTreeHelperStatics.findElementsInHostCoordinatesRect(intersectingRect, subtree))
    }

    public static func findElementsInHostCoordinates(_ intersectingPoint: WindowsFoundation_Point, _ subtree: WindowsUIXaml_UIElement?, _ includeAllElements: Swift.Bool) throws -> WindowsFoundationCollections_IIterable<WindowsUIXaml_UIElement?> {
        try COM.NullResult.unwrap(_ivisualTreeHelperStatics.findAllElementsInHostCoordinatesPoint(intersectingPoint, subtree, includeAllElements))
    }

    public static func findElementsInHostCoordinates(_ intersectingRect: WindowsFoundation_Rect, _ subtree: WindowsUIXaml_UIElement?, _ includeAllElements: Swift.Bool) throws -> WindowsFoundationCollections_IIterable<WindowsUIXaml_UIElement?> {
        try COM.NullResult.unwrap(_ivisualTreeHelperStatics.findAllElementsInHostCoordinatesRect(intersectingRect, subtree, includeAllElements))
    }

    /// Using the provided index, obtains a specific child object of the provided object by examining the visual tree.
    /// - Parameter reference: The object that holds the child collection.
    /// - Parameter childIndex: The index of the requested child object in the *reference* child collection.
    /// - Returns: The child object as referenced by *childIndex*.
    public static func getChild(_ reference: WindowsUIXaml_DependencyObject?, _ childIndex: Swift.Int32) throws -> WindowsUIXaml_DependencyObject {
        try COM.NullResult.unwrap(_ivisualTreeHelperStatics.getChild(reference, childIndex))
    }

    /// Returns the number of children that exist in an object's child collection in the visual tree.
    /// - Parameter reference: The source visual.
    /// - Returns: The number of visual children for the provided source visual.
    public static func getChildrenCount(_ reference: WindowsUIXaml_DependencyObject?) throws -> Swift.Int32 {
        try _ivisualTreeHelperStatics.getChildrenCount(reference)
    }

    /// Returns an object's parent object in the visual tree.
    /// - Parameter reference: The object for which to get the parent object.
    /// - Returns: The parent object of the *reference* object in the visual tree.
    public static func getParent(_ reference: WindowsUIXaml_DependencyObject?) throws -> WindowsUIXaml_DependencyObject {
        try COM.NullResult.unwrap(_ivisualTreeHelperStatics.getParent(reference))
    }

    /// Explicitly removes all references from a target UIElement, with the goal of cleaning up reference cycles.
    /// - Parameter element: The target object to disconnect children and remove references from.
    public static func disconnectChildrenRecursive(_ element: WindowsUIXaml_UIElement?) throws {
        try _ivisualTreeHelperStatics.disconnectChildrenRecursive(element)
    }

    // MARK: Windows.UI.Xaml.Media.IVisualTreeHelperStatics2 members

    /// Retrieves a collection of all open popup controls from the target Window.
    /// - Parameter window: The current Window instance to retrieve the popups from.
    /// - Returns: The list of all open popups. If no popups are open, the list is empty.
    public static func getOpenPopups(_ window: WindowsUIXaml_Window?) throws -> WindowsFoundationCollections_IVectorView<WindowsUIXamlControlsPrimitives_Popup?> {
        try COM.NullResult.unwrap(_ivisualTreeHelperStatics2.getOpenPopups(window))
    }

    // MARK: Windows.UI.Xaml.Media.IVisualTreeHelperStatics3 members

    /// Retrieves a collection of all open popup controls from the target XamlRoot.
    /// - Parameter xamlRoot: The current XamlRoot instance to retrieve the popups from.
    /// - Returns: The list of all open popups. If no popups are open, the list is empty.
    public static func getOpenPopupsForXamlRoot(_ xamlRoot: WindowsUIXaml_XamlRoot?) throws -> WindowsFoundationCollections_IVectorView<WindowsUIXamlControlsPrimitives_Popup?> {
        try COM.NullResult.unwrap(_ivisualTreeHelperStatics3.getOpenPopupsForXamlRoot(xamlRoot))
    }

    // MARK: Implementation details

    private static var _ivisualTreeHelperStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IVisualTreeHelperStatics>? = nil

    internal static var _ivisualTreeHelperStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IVisualTreeHelperStatics> {
        get throws {
            try _ivisualTreeHelperStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.VisualTreeHelper", id: CWinRT.SWRT_WindowsUIXamlMedia_IVisualTreeHelperStatics.iid)
            }
        }
    }

    private static var _ivisualTreeHelperStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IVisualTreeHelperStatics2>? = nil

    internal static var _ivisualTreeHelperStatics2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IVisualTreeHelperStatics2> {
        get throws {
            try _ivisualTreeHelperStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.VisualTreeHelper", id: CWinRT.SWRT_WindowsUIXamlMedia_IVisualTreeHelperStatics2.iid)
            }
        }
    }

    private static var _ivisualTreeHelperStatics3_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IVisualTreeHelperStatics3>? = nil

    internal static var _ivisualTreeHelperStatics3: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IVisualTreeHelperStatics3> {
        get throws {
            try _ivisualTreeHelperStatics3_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.VisualTreeHelper", id: CWinRT.SWRT_WindowsUIXamlMedia_IVisualTreeHelperStatics3.iid)
            }
        }
    }
}