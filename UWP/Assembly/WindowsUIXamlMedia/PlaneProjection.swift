// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a perspective transform (a 3-D-like effect) on an object.
public final class WindowsUIXamlMedia_PlaneProjection: WindowsRuntime.WinRTImport<WindowsUIXamlMedia_PlaneProjectionProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlMedia_PlaneProjectionProjection.self))
    }

    // MARK: Windows.UI.Xaml.Media.IPlaneProjection members

    /// Gets or sets the x-coordinate of the center of rotation of the object that you rotate.
    /// - Returns: The x-coordinate of the center of rotation of the object that you rotate. Typical values are between 0 and 1 with a value of 0 corresponding to one edge of the object and 1 to the opposite edge. Values outside this range are allowed and move the center of rotation accordingly. The default is 0.5 (the center of object).
    public var centerOfRotationX: Swift.Double {
        get throws {
            try _interop.get_CenterOfRotationX()
        }
    }

    /// Gets or sets the x-coordinate of the center of rotation of the object that you rotate.
    /// - Returns: The x-coordinate of the center of rotation of the object that you rotate. Typical values are between 0 and 1 with a value of 0 corresponding to one edge of the object and 1 to the opposite edge. Values outside this range are allowed and move the center of rotation accordingly. The default is 0.5 (the center of object).
    public func centerOfRotationX(_ value: Swift.Double) throws {
        try _interop.put_CenterOfRotationX(value)
    }

    /// Gets or sets the y-coordinate of the center of rotation of the object that you rotate.
    /// - Returns: The y-coordinate of the center of rotation of the object that you rotate. Typical values are between 0 and 1 with a value of 0 corresponding to one edge of the object and 1 to the opposite edge. Values outside this range are allowed and move the center of rotation accordingly. The default is 0.5 (the center of object).
    public var centerOfRotationY: Swift.Double {
        get throws {
            try _interop.get_CenterOfRotationY()
        }
    }

    /// Gets or sets the y-coordinate of the center of rotation of the object that you rotate.
    /// - Returns: The y-coordinate of the center of rotation of the object that you rotate. Typical values are between 0 and 1 with a value of 0 corresponding to one edge of the object and 1 to the opposite edge. Values outside this range are allowed and move the center of rotation accordingly. The default is 0.5 (the center of object).
    public func centerOfRotationY(_ value: Swift.Double) throws {
        try _interop.put_CenterOfRotationY(value)
    }

    /// Gets or sets the z-coordinate of the center of rotation of the object that you rotate.
    /// - Returns: The z-coordinate of the center of rotation of the object that you rotate. The default is 0. Values greater than 0 correspond to coordinates in front of the plane of the object, and negative values correspond to coordinates behind the plane of the object.
    public var centerOfRotationZ: Swift.Double {
        get throws {
            try _interop.get_CenterOfRotationZ()
        }
    }

    /// Gets or sets the z-coordinate of the center of rotation of the object that you rotate.
    /// - Returns: The z-coordinate of the center of rotation of the object that you rotate. The default is 0. Values greater than 0 correspond to coordinates in front of the plane of the object, and negative values correspond to coordinates behind the plane of the object.
    public func centerOfRotationZ(_ value: Swift.Double) throws {
        try _interop.put_CenterOfRotationZ(value)
    }

    /// Gets or sets the distance that the object is translated along the x-axis of the screen.
    /// - Returns: The distance that the object is translated along the x-axis of the screen.
    public var globalOffsetX: Swift.Double {
        get throws {
            try _interop.get_GlobalOffsetX()
        }
    }

    /// Gets or sets the distance that the object is translated along the x-axis of the screen.
    /// - Returns: The distance that the object is translated along the x-axis of the screen.
    public func globalOffsetX(_ value: Swift.Double) throws {
        try _interop.put_GlobalOffsetX(value)
    }

    /// Gets or sets the distance that the object is translated along the y-axis of the screen.
    /// - Returns: The distance that the object is translated along the y-axis of the screen.
    public var globalOffsetY: Swift.Double {
        get throws {
            try _interop.get_GlobalOffsetY()
        }
    }

    /// Gets or sets the distance that the object is translated along the y-axis of the screen.
    /// - Returns: The distance that the object is translated along the y-axis of the screen.
    public func globalOffsetY(_ value: Swift.Double) throws {
        try _interop.put_GlobalOffsetY(value)
    }

    /// Gets or sets the distance that the object is translated along the z-axis of the screen.
    /// - Returns: The distance that the object is translated along the z-axis of the screen.
    public var globalOffsetZ: Swift.Double {
        get throws {
            try _interop.get_GlobalOffsetZ()
        }
    }

    /// Gets or sets the distance that the object is translated along the z-axis of the screen.
    /// - Returns: The distance that the object is translated along the z-axis of the screen.
    public func globalOffsetZ(_ value: Swift.Double) throws {
        try _interop.put_GlobalOffsetZ(value)
    }

    /// Gets or sets the distance that the object is translated along the x-axis of the plane of the object.
    /// - Returns: The distance that the object is translated along the x-axis of the plane of the object.
    public var localOffsetX: Swift.Double {
        get throws {
            try _interop.get_LocalOffsetX()
        }
    }

    /// Gets or sets the distance that the object is translated along the x-axis of the plane of the object.
    /// - Returns: The distance that the object is translated along the x-axis of the plane of the object.
    public func localOffsetX(_ value: Swift.Double) throws {
        try _interop.put_LocalOffsetX(value)
    }

    /// Gets or sets the distance that the object is translated along the y-axis of the plane of the object.
    /// - Returns: The distance that the object is translated along the y-axis of the plane of the object.
    public var localOffsetY: Swift.Double {
        get throws {
            try _interop.get_LocalOffsetY()
        }
    }

    /// Gets or sets the distance that the object is translated along the y-axis of the plane of the object.
    /// - Returns: The distance that the object is translated along the y-axis of the plane of the object.
    public func localOffsetY(_ value: Swift.Double) throws {
        try _interop.put_LocalOffsetY(value)
    }

    /// Gets or sets the distance that the object is translated along the z-axis of the plane of the object.
    /// - Returns: The distance that the object is translated along the z-axis of the plane of the object.
    public var localOffsetZ: Swift.Double {
        get throws {
            try _interop.get_LocalOffsetZ()
        }
    }

    /// Gets or sets the distance that the object is translated along the z-axis of the plane of the object.
    /// - Returns: The distance that the object is translated along the z-axis of the plane of the object.
    public func localOffsetZ(_ value: Swift.Double) throws {
        try _interop.put_LocalOffsetZ(value)
    }

    /// Gets the projection matrix of the PlaneProjection.
    /// - Returns: The projection matrix of the PlaneProjection. The default value is null.
    public var projectionMatrix: WindowsUIXamlMediaMedia3D_Matrix3D {
        get throws {
            try _interop.get_ProjectionMatrix()
        }
    }

    /// Gets or sets the number of degrees to rotate the object around the x-axis of rotation.
    /// - Returns: The number of degrees to rotate the object around the x-axis of rotation. The default is 0.
    public var rotationX: Swift.Double {
        get throws {
            try _interop.get_RotationX()
        }
    }

    /// Gets or sets the number of degrees to rotate the object around the x-axis of rotation.
    /// - Returns: The number of degrees to rotate the object around the x-axis of rotation. The default is 0.
    public func rotationX(_ value: Swift.Double) throws {
        try _interop.put_RotationX(value)
    }

    /// Gets or sets the number of degrees to rotate the object around the y-axis of rotation.
    /// - Returns: The number of degrees to rotate the object around the y-axis of rotation. The default is 0.
    public var rotationY: Swift.Double {
        get throws {
            try _interop.get_RotationY()
        }
    }

    /// Gets or sets the number of degrees to rotate the object around the y-axis of rotation.
    /// - Returns: The number of degrees to rotate the object around the y-axis of rotation. The default is 0.
    public func rotationY(_ value: Swift.Double) throws {
        try _interop.put_RotationY(value)
    }

    /// Gets or sets the number of degrees to rotate the object around the z-axis of rotation.
    /// - Returns: The number of degrees to rotate the object around the z-axis of rotation. The default is 0.
    public var rotationZ: Swift.Double {
        get throws {
            try _interop.get_RotationZ()
        }
    }

    /// Gets or sets the number of degrees to rotate the object around the z-axis of rotation.
    /// - Returns: The number of degrees to rotate the object around the z-axis of rotation. The default is 0.
    public func rotationZ(_ value: Swift.Double) throws {
        try _interop.put_RotationZ(value)
    }

    // MARK: Windows.UI.Xaml.Media.IPlaneProjectionStatics members

    /// Identifies the CenterOfRotationX  dependency property.
    /// - Returns: The identifier for the CenterOfRotationX  dependency property.
    public static var centerOfRotationXProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iplaneProjectionStatics.get_CenterOfRotationXProperty())
        }
    }

    /// Identifies the CenterOfRotationY  dependency property.
    /// - Returns: The identifier for the CenterOfRotationY  dependency property.
    public static var centerOfRotationYProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iplaneProjectionStatics.get_CenterOfRotationYProperty())
        }
    }

    /// Identifies the CenterOfRotationZ  dependency property.
    /// - Returns: The identifier for the CenterOfRotationZ  dependency property.
    public static var centerOfRotationZProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iplaneProjectionStatics.get_CenterOfRotationZProperty())
        }
    }

    /// Identifies the GlobalOffsetX  dependency property.
    /// - Returns: The identifier for the GlobalOffsetX  dependency property.
    public static var globalOffsetXProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iplaneProjectionStatics.get_GlobalOffsetXProperty())
        }
    }

    /// Identifies the GlobalOffsetY  dependency property.
    /// - Returns: The identifier for the GlobalOffsetY  dependency property.
    public static var globalOffsetYProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iplaneProjectionStatics.get_GlobalOffsetYProperty())
        }
    }

    /// Identifies the GlobalOffsetZ  dependency property.
    /// - Returns: The identifier for the GlobalOffsetZ  dependency property.
    public static var globalOffsetZProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iplaneProjectionStatics.get_GlobalOffsetZProperty())
        }
    }

    /// Identifies the LocalOffsetX  dependency property.
    /// - Returns: The identifier for the LocalOffsetX  dependency property.
    public static var localOffsetXProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iplaneProjectionStatics.get_LocalOffsetXProperty())
        }
    }

    /// Identifies the LocalOffsetY  dependency property.
    /// - Returns: The identifier for the LocalOffsetY  dependency property.
    public static var localOffsetYProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iplaneProjectionStatics.get_LocalOffsetYProperty())
        }
    }

    /// Identifies the LocalOffsetZ  dependency property.
    /// - Returns: The identifier for the LocalOffsetZ  dependency property.
    public static var localOffsetZProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iplaneProjectionStatics.get_LocalOffsetZProperty())
        }
    }

    /// Identifies the ProjectionMatrix dependency property.
    /// - Returns: The identifier for the ProjectionMatrix dependency property.
    public static var projectionMatrixProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iplaneProjectionStatics.get_ProjectionMatrixProperty())
        }
    }

    /// Identifies the RotationX  dependency property.
    /// - Returns: The identifier for the RotationX  dependency property.
    public static var rotationXProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iplaneProjectionStatics.get_RotationXProperty())
        }
    }

    /// Identifies the RotationY  dependency property.
    /// - Returns: The identifier for the RotationY  dependency property.
    public static var rotationYProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iplaneProjectionStatics.get_RotationYProperty())
        }
    }

    /// Identifies the RotationZ  dependency property.
    /// - Returns: The identifier for the RotationZ  dependency property.
    public static var rotationZProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iplaneProjectionStatics.get_RotationZProperty())
        }
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.PlaneProjection", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _iplaneProjectionStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IPlaneProjectionStatics>? = nil

    internal static var _iplaneProjectionStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IPlaneProjectionStatics> {
        get throws {
            try _iplaneProjectionStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.PlaneProjection", id: CWinRT.SWRT_WindowsUIXamlMedia_IPlaneProjectionStatics.iid)
            }
        }
    }
}