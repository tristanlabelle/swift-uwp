// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Paints an area with a semi-transparent material that uses multiple effects including blur and a noise texture.
open class WindowsUIXamlMedia_AcrylicBrush: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Media.IAcrylicBrushFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlMedia_AcrylicBrush.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._iacrylicBrushFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Media.IAcrylicBrush members

    /// Gets or sets a value that specifies whether the brush is forced to the solid fallback color.
    /// - Returns: **true** to always replace the acrylic material with the solid fallback color. Otherwise, **false**. The default is **false**.
    public var alwaysUseFallback: Swift.Bool {
        get throws {
            try _iacrylicBrush.get_AlwaysUseFallback()
        }
    }

    /// Gets or sets a value that specifies whether the brush is forced to the solid fallback color.
    /// - Returns: **true** to always replace the acrylic material with the solid fallback color. Otherwise, **false**. The default is **false**.
    public func alwaysUseFallback(_ value: Swift.Bool) throws {
        try _iacrylicBrush.put_AlwaysUseFallback(value)
    }

    /// Gets or sets a value that specifies whether the brush samples from the app content or from the content behind the app window.
    /// - Returns: A value of the enumeration that specifies whether the brush samples from the app content or from the content behind the app window.
    public var backgroundSource: WindowsUIXamlMedia_AcrylicBackgroundSource {
        get throws {
            try _iacrylicBrush.get_BackgroundSource()
        }
    }

    /// Gets or sets a value that specifies whether the brush samples from the app content or from the content behind the app window.
    /// - Returns: A value of the enumeration that specifies whether the brush samples from the app content or from the content behind the app window.
    public func backgroundSource(_ value: WindowsUIXamlMedia_AcrylicBackgroundSource) throws {
        try _iacrylicBrush.put_BackgroundSource(value)
    }

    /// Gets or sets the color tint for the semi-transparent acrylic material.
    /// - Returns: The color tint for the semi-transparent acrylic material.
    public var tintColor: WindowsUI_Color {
        get throws {
            try _iacrylicBrush.get_TintColor()
        }
    }

    /// Gets or sets the color tint for the semi-transparent acrylic material.
    /// - Returns: The color tint for the semi-transparent acrylic material.
    public func tintColor(_ value: WindowsUI_Color) throws {
        try _iacrylicBrush.put_TintColor(value)
    }

    /// Gets or sets the degree of opacity of the color tint.
    /// - Returns: The opacity expressed as a value between 0 and 1.0. The default value is 1.0, which is full opacity. 0 is transparent opacity.
    public var tintOpacity: Swift.Double {
        get throws {
            try _iacrylicBrush.get_TintOpacity()
        }
    }

    /// Gets or sets the degree of opacity of the color tint.
    /// - Returns: The opacity expressed as a value between 0 and 1.0. The default value is 1.0, which is full opacity. 0 is transparent opacity.
    public func tintOpacity(_ value: Swift.Double) throws {
        try _iacrylicBrush.put_TintOpacity(value)
    }

    /// Gets or sets the length of the automatic transition animation used when the TintColor changes.
    /// - Returns: The length of the automatic transition animation used when the TintColor changes.
    public var tintTransitionDuration: WindowsFoundation_TimeSpan {
        get throws {
            try _iacrylicBrush.get_TintTransitionDuration()
        }
    }

    /// Gets or sets the length of the automatic transition animation used when the TintColor changes.
    /// - Returns: The length of the automatic transition animation used when the TintColor changes.
    public func tintTransitionDuration(_ value: WindowsFoundation_TimeSpan) throws {
        try _iacrylicBrush.put_TintTransitionDuration(value)
    }

    // MARK: Windows.UI.Xaml.Media.IAcrylicBrush2 members

    /// Gets or sets the brightness amount between the TintColor and the underlying pixels behind the Acrylic surface.
    /// - Returns: The amount of luminosity that is visible through the surface where Acrylic is applied.
    public var tintLuminosityOpacity: Swift.Double? {
        get throws {
            try _iacrylicBrush2.get_TintLuminosityOpacity()
        }
    }

    /// Gets or sets the brightness amount between the TintColor and the underlying pixels behind the Acrylic surface.
    /// - Returns: The amount of luminosity that is visible through the surface where Acrylic is applied.
    public func tintLuminosityOpacity(_ value: Swift.Double?) throws {
        try _iacrylicBrush2.put_TintLuminosityOpacity(value)
    }

    // MARK: Windows.UI.Xaml.Media.IAcrylicBrushStatics members

    /// Identifies the AlwaysUseFallback dependency property.
    /// - Returns: The identifier for the AlwaysUseFallback dependency property.
    public static var alwaysUseFallbackProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iacrylicBrushStatics.get_AlwaysUseFallbackProperty())
        }
    }

    /// Identifies the BackgroundSource dependency property.
    /// - Returns: The identifier for the BackgroundSource dependency property.
    public static var backgroundSourceProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iacrylicBrushStatics.get_BackgroundSourceProperty())
        }
    }

    /// Identifies the TintColor dependency property.
    /// - Returns: The identifier for the TintColor dependency property.
    public static var tintColorProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iacrylicBrushStatics.get_TintColorProperty())
        }
    }

    /// Identifies the TintOpacity dependency property.
    /// - Returns: The identifier for the TintOpacity dependency property.
    public static var tintOpacityProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iacrylicBrushStatics.get_TintOpacityProperty())
        }
    }

    /// Identifies the TintTransitionDuration dependency property.
    /// - Returns: The identifier for the TintTransitionDuration dependency property.
    public static var tintTransitionDurationProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iacrylicBrushStatics.get_TintTransitionDurationProperty())
        }
    }

    // MARK: Windows.UI.Xaml.Media.IAcrylicBrushStatics2 members

    /// Identifies the TintLuminosityOpacity dependency property.
    /// - Returns: The identifier for the TintLuminosityOpacity dependency property.
    public static var tintLuminosityOpacityProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iacrylicBrushStatics2.get_TintLuminosityOpacityProperty())
        }
    }

    // MARK: Implementation details

    private var _iacrylicBrush_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IAcrylicBrush>? = nil

    internal var _iacrylicBrush: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IAcrylicBrush> {
        get throws {
            try _iacrylicBrush_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlMedia_IAcrylicBrush.iid).cast(to: CWinRT.SWRT_WindowsUIXamlMedia_IAcrylicBrush.self)
            }
        }
    }

    private var _iacrylicBrush2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IAcrylicBrush2>? = nil

    internal var _iacrylicBrush2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IAcrylicBrush2> {
        get throws {
            try _iacrylicBrush2_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlMedia_IAcrylicBrush2.iid).cast(to: CWinRT.SWRT_WindowsUIXamlMedia_IAcrylicBrush2.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlMedia_IAcrylicBrush>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _iacrylicBrush_storage?.release()
        _iacrylicBrush2_storage?.release()
    }

    private static var _iacrylicBrushFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IAcrylicBrushFactory>? = nil

    internal static var _iacrylicBrushFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IAcrylicBrushFactory> {
        get throws {
            try _iacrylicBrushFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.AcrylicBrush", id: CWinRT.SWRT_WindowsUIXamlMedia_IAcrylicBrushFactory.iid)
            }
        }
    }

    private static var _iacrylicBrushStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IAcrylicBrushStatics>? = nil

    internal static var _iacrylicBrushStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IAcrylicBrushStatics> {
        get throws {
            try _iacrylicBrushStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.AcrylicBrush", id: CWinRT.SWRT_WindowsUIXamlMedia_IAcrylicBrushStatics.iid)
            }
        }
    }

    private static var _iacrylicBrushStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IAcrylicBrushStatics2>? = nil

    internal static var _iacrylicBrushStatics2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IAcrylicBrushStatics2> {
        get throws {
            try _iacrylicBrushStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.AcrylicBrush", id: CWinRT.SWRT_WindowsUIXamlMedia_IAcrylicBrushStatics2.iid)
            }
        }
    }
}