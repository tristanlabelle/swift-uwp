// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Defines objects used to paint graphical objects. Classes that derive from Brush describe how the area is painted.
open class WindowsUIXamlMedia_Brush: WindowsRuntime.WinRTComposableClass, WindowsUIComposition_IAnimationObjectProtocol {
    // MARK: Windows.UI.Xaml.Media.IBrushFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlMedia_Brush.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._ibrushFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Media.IBrush members

    /// Gets or sets the degree of opacity of a Brush.
    /// - Returns: The value of the Opacity property is expressed as a value between 0 and 1.0. The default value is 1.0, which is full opacity. 0 is transparent opacity.
    public var opacity: Swift.Double {
        get throws {
            try _ibrush.get_Opacity()
        }
    }

    /// Gets or sets the degree of opacity of a Brush.
    /// - Returns: The value of the Opacity property is expressed as a value between 0 and 1.0. The default value is 1.0, which is full opacity. 0 is transparent opacity.
    public func opacity(_ value: Swift.Double) throws {
        try _ibrush.put_Opacity(value)
    }

    /// Gets or sets the transformation that is applied to the brush using relative coordinates.
    /// - Returns: The transformation that is applied to the brush using relative coordinates. The default value is null.
    public var relativeTransform: WindowsUIXamlMedia_Transform {
        get throws {
            try COM.NullResult.unwrap(_ibrush.get_RelativeTransform())
        }
    }

    /// Gets or sets the transformation that is applied to the brush using relative coordinates.
    /// - Returns: The transformation that is applied to the brush using relative coordinates. The default value is null.
    public func relativeTransform(_ value: WindowsUIXamlMedia_Transform?) throws {
        try _ibrush.put_RelativeTransform(value)
    }

    /// Gets or sets the transformation that is applied to the brush.
    /// - Returns: The transformation to apply to the brush.
    public var transform: WindowsUIXamlMedia_Transform {
        get throws {
            try COM.NullResult.unwrap(_ibrush.get_Transform())
        }
    }

    /// Gets or sets the transformation that is applied to the brush.
    /// - Returns: The transformation to apply to the brush.
    public func transform(_ value: WindowsUIXamlMedia_Transform?) throws {
        try _ibrush.put_Transform(value)
    }

    // MARK: Windows.UI.Xaml.Media.IBrushOverrides2 members

    /// When overridden in a derived class, defines a property that can be animated.
    /// - Parameter propertyName: The property that can be animated.
    /// - Parameter animationPropertyInfo: Information about the property to be animated.
    open func populatePropertyInfoOverride(_ propertyName: Swift.String, _ animationPropertyInfo: WindowsUIComposition_AnimationPropertyInfo?) throws {
        try _ibrushOverrides2.populatePropertyInfoOverride(propertyName, animationPropertyInfo)
    }

    // MARK: Windows.UI.Composition.IAnimationObject members

    /// Defines a property that can be animated.
    /// - Parameter propertyName: The property that can be animated.
    /// - Parameter propertyInfo: Information about the property to be animated.
    public func populatePropertyInfo(_ propertyName: Swift.String, _ propertyInfo: WindowsUIComposition_AnimationPropertyInfo?) throws {
        try _ianimationObject.populatePropertyInfo(propertyName, propertyInfo)
    }

    // MARK: Windows.UI.Xaml.Media.IBrushStatics members

    /// Identifies the Opacity dependency property.
    /// - Returns: The Opacity dependency property identifier.
    public static var opacityProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ibrushStatics.get_OpacityProperty())
        }
    }

    /// Identifies the RelativeTransform dependency property.
    /// - Returns: The RelativeTransform dependency property identifier.
    public static var relativeTransformProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ibrushStatics.get_RelativeTransformProperty())
        }
    }

    /// Identifies the Transform dependency property.
    /// - Returns: The Transform dependency property identifier.
    public static var transformProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ibrushStatics.get_TransformProperty())
        }
    }

    // MARK: Implementation details

    private var _ibrush_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IBrush>? = nil

    internal var _ibrush: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IBrush> {
        get throws {
            try _ibrush_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlMedia_IBrush.iid).cast(to: CWinRT.SWRT_WindowsUIXamlMedia_IBrush.self)
            }
        }
    }

    private var _ibrushOverrides2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IBrushOverrides2>? = nil

    internal var _ibrushOverrides2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IBrushOverrides2> {
        get throws {
            try _ibrushOverrides2_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlMedia_IBrushOverrides2.iid).cast(to: CWinRT.SWRT_WindowsUIXamlMedia_IBrushOverrides2.self)
            }
        }
    }

    private var _ianimationObject_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIComposition_IAnimationObject>? = nil

    internal var _ianimationObject: COM.COMInterop<CWinRT.SWRT_WindowsUIComposition_IAnimationObject> {
        get throws {
            try _ianimationObject_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIComposition_IAnimationObject.iid).cast(to: CWinRT.SWRT_WindowsUIComposition_IAnimationObject.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlMedia_IBrush>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _ibrush_storage?.release()
        _ibrushOverrides2_storage?.release()
        _ianimationObject_storage?.release()
    }

    private static var _ibrushFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IBrushFactory>? = nil

    internal static var _ibrushFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IBrushFactory> {
        get throws {
            try _ibrushFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Brush", id: CWinRT.SWRT_WindowsUIXamlMedia_IBrushFactory.iid)
            }
        }
    }

    private static var _ibrushStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IBrushStatics>? = nil

    internal static var _ibrushStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlMedia_IBrushStatics> {
        get throws {
            try _ibrushStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Media.Brush", id: CWinRT.SWRT_WindowsUIXamlMedia_IBrushStatics.iid)
            }
        }
    }

    // MARK: Override support

    private var _ibrushOverrides2_outer: COM.COMExportedInterface = .uninitialized

    public override func _queryOverridesInterfacePointer(_ id: COM.COMInterfaceID) throws -> COM.IUnknownPointer? {
        if id == CWinRT.SWRT_WindowsUIXamlMedia_IBrushOverrides2.iid {
            if !_ibrushOverrides2_outer.isInitialized {
                _ibrushOverrides2_outer = COM.COMExportedInterface(
                    swiftObject: self, virtualTable: &WindowsUIXamlMedia_BrushProjection.VirtualTables.ibrushOverrides2)
            }
            return _ibrushOverrides2_outer.unknownPointer.addingRef()
        }
        return nil
    }
}