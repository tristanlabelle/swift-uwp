// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a Windows.Devices.Perception video profile.
public final class WindowsDevicesPerception_PerceptionVideoProfile: WindowsRuntime.WinRTImport<WindowsDevicesPerception_PerceptionVideoProfileProjection> {
    // MARK: Windows.Devices.Perception.IPerceptionVideoProfile members

    /// Gets the bitmap alpha mode.
    /// - Returns: A BitmapAlphaMode enumeration value indicating the bitmap alpha mode.
    public var bitmapAlphaMode: WindowsGraphicsImaging_BitmapAlphaMode {
        get throws {
            try _interop.get_BitmapAlphaMode()
        }
    }

    /// Gets the bitmap pixel format.
    /// - Returns: A BitmapPixelFormat enumeration value indicating the bitmap pixel format.
    public var bitmapPixelFormat: WindowsGraphicsImaging_BitmapPixelFormat {
        get throws {
            try _interop.get_BitmapPixelFormat()
        }
    }

    /// Gets the time duration of each frame.
    /// - Returns: A Windows.Foundation.TimeSpan indicating the time duration of each video frame.
    public var frameDuration: WindowsFoundation_TimeSpan {
        get throws {
            try _interop.get_FrameDuration()
        }
    }

    /// Gets the frame height, in pixels.
    /// - Returns: The frame height, in pixels.
    public var height: Swift.Int32 {
        get throws {
            try _interop.get_Height()
        }
    }

    /// Gets the frame width, in pixels.
    /// - Returns: The frame width, in pixels.
    public var width: Swift.Int32 {
        get throws {
            try _interop.get_Width()
        }
    }

    /// A comparison function used to determine if two IPerceptionVideoProfile objects are equivalent.
    /// - Parameter other: The IPerceptionVideoProfile object to compare to this one.
    /// - Returns: True if the two video profiles are equivalent, otherwise false.
    public func isEqual(_ other: WindowsDevicesPerception_PerceptionVideoProfile?) throws -> Swift.Bool {
        try _interop.isEqual(other)
    }

    // MARK: Implementation details
}