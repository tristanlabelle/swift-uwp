// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Allows an app to monitor specific web accounts and raises events when those web accounts change.
public final class WindowsSecurityAuthenticationWebCore_WebAccountMonitor: WindowsRuntime.WinRTImport<WindowsSecurityAuthenticationWebCore_WebAccountMonitorProjection> {
    // MARK: Windows.Security.Authentication.Web.Core.IWebAccountMonitor members

    /// Fires when the default sign in account changes.
    public func defaultSignInAccountChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsSecurityAuthenticationWebCore_WebAccountMonitor?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_DefaultSignInAccountChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: defaultSignInAccountChanged)
    }

    public func defaultSignInAccountChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_DefaultSignInAccountChanged(token)
    }

    /// Fires when a monitored WebAccount is removed.
    public func removed(adding handler: WindowsFoundation_TypedEventHandler<WindowsSecurityAuthenticationWebCore_WebAccountMonitor?, WindowsSecurityAuthenticationWebCore_WebAccountEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Removed(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: removed)
    }

    public func removed(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Removed(token)
    }

    /// Fires when a monitored WebAccount is updated.
    public func updated(adding handler: WindowsFoundation_TypedEventHandler<WindowsSecurityAuthenticationWebCore_WebAccountMonitor?, WindowsSecurityAuthenticationWebCore_WebAccountEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Updated(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: updated)
    }

    public func updated(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Updated(token)
    }

    // MARK: Windows.Security.Authentication.Web.Core.IWebAccountMonitor2 members

    /// Fires when a monitored WebAccount's picture changes.
    public func accountPictureUpdated(adding handler: WindowsFoundation_TypedEventHandler<WindowsSecurityAuthenticationWebCore_WebAccountMonitor?, WindowsSecurityAuthenticationWebCore_WebAccountEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _iwebAccountMonitor2.add_AccountPictureUpdated(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: accountPictureUpdated)
    }

    public func accountPictureUpdated(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _iwebAccountMonitor2.remove_AccountPictureUpdated(token)
    }

    // MARK: Implementation details

    private var _iwebAccountMonitor2_storage: COM.COMInterop<CWinRT.SWRT_WindowsSecurityAuthenticationWebCore_IWebAccountMonitor2>? = nil

    internal var _iwebAccountMonitor2: COM.COMInterop<CWinRT.SWRT_WindowsSecurityAuthenticationWebCore_IWebAccountMonitor2> {
        get throws {
            try _iwebAccountMonitor2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsSecurityAuthenticationWebCore_IWebAccountMonitor2.iid).cast(to: CWinRT.SWRT_WindowsSecurityAuthenticationWebCore_IWebAccountMonitor2.self)
            }
        }
    }

    deinit {
        _iwebAccountMonitor2_storage?.release()
    }
}