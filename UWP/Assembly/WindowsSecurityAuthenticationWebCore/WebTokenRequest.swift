// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a request to an online identity provider for an authentication token.
public final class WindowsSecurityAuthenticationWebCore_WebTokenRequest: WindowsRuntime.WinRTImport<WindowsSecurityAuthenticationWebCore_WebTokenRequestProjection> {
    // MARK: Windows.Security.Authentication.Web.Core.IWebTokenRequestFactory members

    public convenience init(_ provider: WindowsSecurityCredentials_WebAccountProvider?, _ scope: Swift.String, _ clientId: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iwebTokenRequestFactory.create(provider, scope, clientId)))
    }

    public convenience init(_ provider: WindowsSecurityCredentials_WebAccountProvider?, _ scope: Swift.String, _ clientId: Swift.String, _ promptType: WindowsSecurityAuthenticationWebCore_WebTokenRequestPromptType) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iwebTokenRequestFactory.createWithPromptType(provider, scope, clientId, promptType)))
    }

    public convenience init(_ provider: WindowsSecurityCredentials_WebAccountProvider?) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iwebTokenRequestFactory.createWithProvider(provider)))
    }

    public convenience init(_ provider: WindowsSecurityCredentials_WebAccountProvider?, _ scope: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iwebTokenRequestFactory.createWithScope(provider, scope)))
    }

    // MARK: Windows.Security.Authentication.Web.Core.IWebTokenRequest members

    /// Gets the Id of the client making the request.
    /// - Returns: The Id of the client making the request.
    public var clientId: Swift.String {
        get throws {
            try _interop.get_ClientId()
        }
    }

    /// Gets the prompt type of the request.
    /// - Returns: The prompt type of the request.
    public var promptType: WindowsSecurityAuthenticationWebCore_WebTokenRequestPromptType {
        get throws {
            try _interop.get_PromptType()
        }
    }

    /// Gets the properties of the request.
    /// - Returns: The properties of the request.
    public var properties: WindowsFoundationCollections_IMap<Swift.String, Swift.String> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Properties())
        }
    }

    /// Gets the scope of the request.
    /// - Returns: The scope of the request.
    public var scope: Swift.String {
        get throws {
            try _interop.get_Scope()
        }
    }

    /// Gets the web account provider for the request.
    /// - Returns: The web account provider for the request.
    public var webAccountProvider: WindowsSecurityCredentials_WebAccountProvider {
        get throws {
            try COM.NullResult.unwrap(_interop.get_WebAccountProvider())
        }
    }

    // MARK: Windows.Security.Authentication.Web.Core.IWebTokenRequest2 members

    /// Gets the app properties of the request.
    /// - Returns: The app properties of the request.
    public var appProperties: WindowsFoundationCollections_IMap<Swift.String, Swift.String> {
        get throws {
            try COM.NullResult.unwrap(_iwebTokenRequest2.get_AppProperties())
        }
    }

    // MARK: Windows.Security.Authentication.Web.Core.IWebTokenRequest3 members

    /// Gets and sets a correlation Id, a unique identifier used for tracking authentication-related requests.
    /// - Returns: The correlation Id for this request.
    public var correlationId: Swift.String {
        get throws {
            try _iwebTokenRequest3.get_CorrelationId()
        }
    }

    /// Gets and sets a correlation Id, a unique identifier used for tracking authentication-related requests.
    /// - Returns: The correlation Id for this request.
    public func correlationId(_ value: Swift.String) throws {
        try _iwebTokenRequest3.put_CorrelationId(value)
    }

    // MARK: Implementation details

    private var _iwebTokenRequest2_storage: COM.COMInterop<CWinRT.SWRT_WindowsSecurityAuthenticationWebCore_IWebTokenRequest2>? = nil

    internal var _iwebTokenRequest2: COM.COMInterop<CWinRT.SWRT_WindowsSecurityAuthenticationWebCore_IWebTokenRequest2> {
        get throws {
            try _iwebTokenRequest2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsSecurityAuthenticationWebCore_IWebTokenRequest2.iid).cast(to: CWinRT.SWRT_WindowsSecurityAuthenticationWebCore_IWebTokenRequest2.self)
            }
        }
    }

    private var _iwebTokenRequest3_storage: COM.COMInterop<CWinRT.SWRT_WindowsSecurityAuthenticationWebCore_IWebTokenRequest3>? = nil

    internal var _iwebTokenRequest3: COM.COMInterop<CWinRT.SWRT_WindowsSecurityAuthenticationWebCore_IWebTokenRequest3> {
        get throws {
            try _iwebTokenRequest3_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsSecurityAuthenticationWebCore_IWebTokenRequest3.iid).cast(to: CWinRT.SWRT_WindowsSecurityAuthenticationWebCore_IWebTokenRequest3.self)
            }
        }
    }

    deinit {
        _iwebTokenRequest2_storage?.release()
        _iwebTokenRequest3_storage?.release()
    }

    private static var _iwebTokenRequestFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsSecurityAuthenticationWebCore_IWebTokenRequestFactory>? = nil

    internal static var _iwebTokenRequestFactory: COM.COMInterop<CWinRT.SWRT_WindowsSecurityAuthenticationWebCore_IWebTokenRequestFactory> {
        get throws {
            try _iwebTokenRequestFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Security.Authentication.Web.Core.WebTokenRequest", id: CWinRT.SWRT_WindowsSecurityAuthenticationWebCore_IWebTokenRequestFactory.iid)
            }
        }
    }
}