// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides access to playback sessions throughout the system that have integrated with SystemMediaTransportControls to provide playback info and allow remote control.
public final class WindowsMediaControl_GlobalSystemMediaTransportControlsSessionManager: WindowsRuntime.WinRTImport<WindowsMediaControl_GlobalSystemMediaTransportControlsSessionManagerProjection> {
    // MARK: Windows.Media.Control.IGlobalSystemMediaTransportControlsSessionManager members

    /// Occurs when the current session has changed. This is the session that the system believes is the one the user would most likely want to control.
    public func currentSessionChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsMediaControl_GlobalSystemMediaTransportControlsSessionManager?, WindowsMediaControl_CurrentSessionChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_CurrentSessionChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: currentSessionChanged)
    }

    public func currentSessionChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_CurrentSessionChanged(token)
    }

    /// Occurs when the list of available sessions has changed due to a new session connecting or an existing one disconnecting.
    public func sessionsChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsMediaControl_GlobalSystemMediaTransportControlsSessionManager?, WindowsMediaControl_SessionsChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_SessionsChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: sessionsChanged)
    }

    public func sessionsChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_SessionsChanged(token)
    }

    /// Gets the current session. This is the session the system believes the user would most likely want to control.
    /// - Returns: A session object that represents this remote session.
    public func getCurrentSession() throws -> WindowsMediaControl_GlobalSystemMediaTransportControlsSession {
        try COM.NullResult.unwrap(_interop.getCurrentSession())
    }

    /// Gets all of the available sessions.
    /// - Returns: A vector of all available sessions.
    public func getSessions() throws -> WindowsFoundationCollections_IVectorView<WindowsMediaControl_GlobalSystemMediaTransportControlsSession?> {
        try COM.NullResult.unwrap(_interop.getSessions())
    }

    // MARK: Windows.Media.Control.IGlobalSystemMediaTransportControlsSessionManagerStatics members

    /// Requests an instance of the GlobalSystemMediaTransportControlsSessionManager.
    /// - Returns: A new instance of the Session Manager.
    public static func requestAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsMediaControl_GlobalSystemMediaTransportControlsSessionManager?> {
        try COM.NullResult.unwrap(_iglobalSystemMediaTransportControlsSessionManagerStatics.requestAsync())
    }

    // MARK: Implementation details

    private static var _iglobalSystemMediaTransportControlsSessionManagerStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaControl_IGlobalSystemMediaTransportControlsSessionManagerStatics>? = nil

    internal static var _iglobalSystemMediaTransportControlsSessionManagerStatics: COM.COMInterop<CWinRT.SWRT_WindowsMediaControl_IGlobalSystemMediaTransportControlsSessionManagerStatics> {
        get throws {
            try _iglobalSystemMediaTransportControlsSessionManagerStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.Control.GlobalSystemMediaTransportControlsSessionManager", id: CWinRT.SWRT_WindowsMediaControl_IGlobalSystemMediaTransportControlsSessionManagerStatics.iid)
            }
        }
    }
}