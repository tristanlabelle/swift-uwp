// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a content part of a multi-part transfer request. Each BackgroundTransferContentPart object can represent either a single string of text content or a single file payload, but not both.
public final class WindowsNetworkingBackgroundTransfer_BackgroundTransferContentPart: WindowsRuntime.WinRTImport<WindowsNetworkingBackgroundTransfer_BackgroundTransferContentPartProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsNetworkingBackgroundTransfer_BackgroundTransferContentPartProjection.self))
    }

    // MARK: Windows.Networking.BackgroundTransfer.IBackgroundTransferContentPartFactory members

    /// Creates a BackgroundTransferContentPart object that indicates the specified content type.
    /// - Parameter name: Identifies the content type.
    /// - Returns: The resultant BackgroundTransferContentPart.
    public convenience init(_ name: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ibackgroundTransferContentPartFactory.createWithName(name)))
    }

    /// Creates a BackgroundTransferContentPart object that identifies the content type and name of the file.
    /// - Parameter name: Identifies the content type.
    /// - Parameter fileName: The fully qualified file name; this includes the local path.
    /// - Returns: The resultant BackgroundTransferContentPart object.
    public convenience init(_ name: Swift.String, _ fileName: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ibackgroundTransferContentPartFactory.createWithNameAndFileName(name, fileName)))
    }

    // MARK: Windows.Networking.BackgroundTransfer.IBackgroundTransferContentPart members

    /// Sets content disposition header values that indicate the nature of the information that this BackgroundTransferContentPart represents.
    /// - Parameter headerName: The header name.
    /// - Parameter headerValue: The header value.
    public func setHeader(_ headerName: Swift.String, _ headerValue: Swift.String) throws {
        try _interop.setHeader(headerName, headerValue)
    }

    /// Use this method to set text information that the BackgroundTransferContentPart represents.
    /// - Parameter value: A string value used to represent text information. (for example, api_sig, api_key, auth_token, etc...)
    public func setText(_ value: Swift.String) throws {
        try _interop.setText(value)
    }

    /// Sets the source file for a BackgroundTransferContentPart containing the file for upload.
    /// - Parameter value: The source file.
    public func setFile(_ value: WindowsStorage_IStorageFile?) throws {
        try _interop.setFile(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Networking.BackgroundTransfer.BackgroundTransferContentPart", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _ibackgroundTransferContentPartFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingBackgroundTransfer_IBackgroundTransferContentPartFactory>? = nil

    internal static var _ibackgroundTransferContentPartFactory: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingBackgroundTransfer_IBackgroundTransferContentPartFactory> {
        get throws {
            try _ibackgroundTransferContentPartFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Networking.BackgroundTransfer.BackgroundTransferContentPart", id: CWinRT.SWRT_WindowsNetworkingBackgroundTransfer_IBackgroundTransferContentPartFactory.iid)
            }
        }
    }
}