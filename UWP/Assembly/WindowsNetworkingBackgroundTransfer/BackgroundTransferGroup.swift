// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// A named group used to associate multiple download or upload operations. This class makes it easy for your app to create these groups and to complete downloads and uploads simultaneously, in serial, or based on priority.
public final class WindowsNetworkingBackgroundTransfer_BackgroundTransferGroup: WindowsRuntime.WinRTImport<WindowsNetworkingBackgroundTransfer_BackgroundTransferGroupProjection> {
    // MARK: Windows.Networking.BackgroundTransfer.IBackgroundTransferGroup members

    /// Gets the name of the group.
    /// - Returns: The group name.
    public var name: Swift.String {
        get throws {
            try _interop.get_Name()
        }
    }

    /// Gets or sets the property used to specify if transfers within this group run simultaneously or in serial. Possible values are defined by BackgroundTransferBehavior.
    /// - Returns: The group transfer behavior.
    public var transferBehavior: WindowsNetworkingBackgroundTransfer_BackgroundTransferBehavior {
        get throws {
            try _interop.get_TransferBehavior()
        }
    }

    /// Gets or sets the property used to specify if transfers within this group run simultaneously or in serial. Possible values are defined by BackgroundTransferBehavior.
    /// - Returns: The group transfer behavior.
    public func transferBehavior(_ value: WindowsNetworkingBackgroundTransfer_BackgroundTransferBehavior) throws {
        try _interop.put_TransferBehavior(value)
    }

    // MARK: Windows.Networking.BackgroundTransfer.IBackgroundTransferGroupStatics members

    /// Creates a transfer group using the provided group name.
    /// - Parameter name: The name of the group. If a group with the this name already exists, this method will return a reference to the existing group object.
    /// - Returns: The new BackgroundTransferGroup.
    public static func createGroup(_ name: Swift.String) throws -> WindowsNetworkingBackgroundTransfer_BackgroundTransferGroup {
        try COM.NullResult.unwrap(_ibackgroundTransferGroupStatics.createGroup(name))
    }

    // MARK: Implementation details

    private static var _ibackgroundTransferGroupStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingBackgroundTransfer_IBackgroundTransferGroupStatics>? = nil

    internal static var _ibackgroundTransferGroupStatics: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingBackgroundTransfer_IBackgroundTransferGroupStatics> {
        get throws {
            try _ibackgroundTransferGroupStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Networking.BackgroundTransfer.BackgroundTransferGroup", id: CWinRT.SWRT_WindowsNetworkingBackgroundTransfer_IBackgroundTransferGroupStatics.iid)
            }
        }
    }
}