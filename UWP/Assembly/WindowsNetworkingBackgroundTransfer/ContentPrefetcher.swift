// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides properties for specifying web resources to be prefetched. Windows will use heuristics to attempt to download the specified resources in advance of your app being launched by the user.
public enum WindowsNetworkingBackgroundTransfer_ContentPrefetcher {
    // MARK: Windows.Networking.BackgroundTransfer.IContentPrefetcher members

    /// Array of URIs to download when prefetch is performed for the app.
    /// - Returns: A list of Uri objects.
    public static var contentUris: WindowsFoundationCollections_IVector<WindowsFoundation_Uri?> {
        get throws {
            try COM.NullResult.unwrap(_icontentPrefetcher.get_ContentUris())
        }
    }

    /// Specifies the location of a well-formed XML file that contains a list of resources to be prefetched.
    /// - Returns: A Uri for a web resource.
    public static var indirectContentUri: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_icontentPrefetcher.get_IndirectContentUri())
        }
    }

    /// Specifies the location of a well-formed XML file that contains a list of resources to be prefetched.
    /// - Returns: A Uri for a web resource.
    public static func indirectContentUri(_ value: WindowsFoundation_Uri?) throws {
        try _icontentPrefetcher.put_IndirectContentUri(value)
    }

    // MARK: Windows.Networking.BackgroundTransfer.IContentPrefetcherTime members

    /// Gets the date and time of the last successful content prefetch operation.
    /// - Returns: A 64-bit signed integer that represents a date and time.
    public static var lastSuccessfulPrefetchTime: WindowsFoundation_IReference<WindowsFoundation_DateTime>? {
        get throws {
            try _icontentPrefetcherTime.get_LastSuccessfulPrefetchTime()
        }
    }

    // MARK: Implementation details

    private static var _icontentPrefetcher_storage: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingBackgroundTransfer_IContentPrefetcher>? = nil

    internal static var _icontentPrefetcher: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingBackgroundTransfer_IContentPrefetcher> {
        get throws {
            try _icontentPrefetcher_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Networking.BackgroundTransfer.ContentPrefetcher", id: CWinRT.SWRT_WindowsNetworkingBackgroundTransfer_IContentPrefetcher.iid)
            }
        }
    }

    private static var _icontentPrefetcherTime_storage: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingBackgroundTransfer_IContentPrefetcherTime>? = nil

    internal static var _icontentPrefetcherTime: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingBackgroundTransfer_IContentPrefetcherTime> {
        get throws {
            try _icontentPrefetcherTime_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Networking.BackgroundTransfer.ContentPrefetcher", id: CWinRT.SWRT_WindowsNetworkingBackgroundTransfer_IContentPrefetcherTime.iid)
            }
        }
    }
}