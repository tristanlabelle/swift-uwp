// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a set of background transfer operations (DownloadOperation or UploadOperation objects) that trigger a background task once all the operations are done (if the operations completed successfully) or fail with an error.
public final class WindowsNetworkingBackgroundTransfer_BackgroundTransferCompletionGroup: WindowsRuntime.WinRTImport<WindowsNetworkingBackgroundTransfer_BackgroundTransferCompletionGroupProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsNetworkingBackgroundTransfer_BackgroundTransferCompletionGroupProjection.self))
    }

    // MARK: Windows.Networking.BackgroundTransfer.IBackgroundTransferCompletionGroup members

    /// Gets a value that indicates if Enable method on a BackgroundTransferCompletionGroup has already been called.
    /// - Returns: A value that indicates if the Enable method on the BackgroundTransferCompletionGroup has already been called.
    public var isEnabled: Swift.Bool {
        get throws {
            try _interop.get_IsEnabled()
        }
    }

    /// Gets the IBackgroundTrigger used to set up the background task associated with the BackgroundTransferCompletionGroup.
    /// - Returns: The trigger used to set up the background task associated with the BackgroundTransferCompletionGroup.
    public var trigger: WindowsApplicationModelBackground_IBackgroundTrigger {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Trigger())
        }
    }

    /// Indicates that the BackgroundTransferCompletionGroup is complete and no more background transfer operations (DownloadOperation or UploadOperation objects) will be added t the completion group.
    public func enable() throws {
        try _interop.enable()
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Networking.BackgroundTransfer.BackgroundTransferCompletionGroup", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}