// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides a mechanism for server apps to supply requested data to the DIAL REST service, which can be queried by client apps.
public final class WindowsMediaDialProtocol_DialReceiverApp: WindowsRuntime.WinRTImport<WindowsMediaDialProtocol_DialReceiverAppProjection> {
    // MARK: Windows.Media.DialProtocol.IDialReceiverApp members

    /// Retrieves the a map of key/value pairs representing the data previously set with SetAdditionalDataAsync.
    /// - Returns: A map of key/value pairs representing the data previously set with **SetAdditionalDataAsync**.
    public func getAdditionalDataAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IMap<Swift.String, Swift.String>?> {
        try COM.NullResult.unwrap(_interop.getAdditionalDataAsync())
    }

    public func setAdditionalDataAsync(_ additionalData: WindowsFoundationCollections_IIterable<WindowsFoundationCollections_IKeyValuePair<Swift.String, Swift.String>?>?) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.setAdditionalDataAsync(additionalData))
    }

    // MARK: Windows.Media.DialProtocol.IDialReceiverApp2 members

    /// Asynchronously gets the unique device name of the DIAL server device.
    /// - Returns: An asynchronous operation that returns a string on completion.
    public func getUniqueDeviceNameAsync() throws -> WindowsFoundation_IAsyncOperation<Swift.String> {
        try COM.NullResult.unwrap(_idialReceiverApp2.getUniqueDeviceNameAsync())
    }

    // MARK: Windows.Media.DialProtocol.IDialReceiverAppStatics members

    /// Gets an instance of the **DialReceiverApp** class.
    /// - Returns: An instance of the **DialReceiverApp** class.
    public static var current: WindowsMediaDialProtocol_DialReceiverApp {
        get throws {
            try COM.NullResult.unwrap(_idialReceiverAppStatics.get_Current())
        }
    }

    // MARK: Implementation details

    private var _idialReceiverApp2_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaDialProtocol_IDialReceiverApp2>? = nil

    internal var _idialReceiverApp2: COM.COMInterop<CWinRT.SWRT_WindowsMediaDialProtocol_IDialReceiverApp2> {
        get throws {
            try _idialReceiverApp2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaDialProtocol_IDialReceiverApp2.iid).cast(to: CWinRT.SWRT_WindowsMediaDialProtocol_IDialReceiverApp2.self)
            }
        }
    }

    deinit {
        _idialReceiverApp2_storage?.release()
    }

    private static var _idialReceiverAppStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaDialProtocol_IDialReceiverAppStatics>? = nil

    internal static var _idialReceiverAppStatics: COM.COMInterop<CWinRT.SWRT_WindowsMediaDialProtocol_IDialReceiverAppStatics> {
        get throws {
            try _idialReceiverAppStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.DialProtocol.DialReceiverApp", id: CWinRT.SWRT_WindowsMediaDialProtocol_IDialReceiverAppStatics.iid)
            }
        }
    }
}