// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a DIAL application running on a remote device.
public final class WindowsMediaDialProtocol_DialApp: WindowsRuntime.WinRTImport<WindowsMediaDialProtocol_DialAppProjection> {
    // MARK: Windows.Media.DialProtocol.IDialApp members

    /// Gets the application's registered DIAL name.
    /// - Returns: The DIAL name.
    public var appName: Swift.String {
        get throws {
            try _interop.get_AppName()
        }
    }

    /// Initiates the launching of the app on the remote device. When this method is called, the DialDevice is paired if necessary, the user is prompted to allow access to the device, connection is established, app existence is validated on the device, and finally the application is launched with the provided argument.
    /// - Parameter appArgument: Optional.
    /// - Returns: Indicates the result of attempting to launch the app.
    public func requestLaunchAsync(_ appArgument: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsMediaDialProtocol_DialAppLaunchResult> {
        try COM.NullResult.unwrap(_interop.requestLaunchAsync(appArgument))
    }

    /// Stops the app on the remote device, if the remote device supports this functionality.
    /// - Returns: The result of sending the request to stop the app.
    public func stopAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsMediaDialProtocol_DialAppStopResult> {
        try COM.NullResult.unwrap(_interop.stopAsync())
    }

    /// Gets the current status of the application on the remote device.
    /// - Returns: The app status, a value from DialAppStateDetails.
    public func getAppStateAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsMediaDialProtocol_DialAppStateDetails?> {
        try COM.NullResult.unwrap(_interop.getAppStateAsync())
    }

    // MARK: Implementation details
}