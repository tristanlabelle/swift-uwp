// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Manages the document source for app printing.
public final class WindowsUIWebUI_HtmlPrintDocumentSource: WindowsRuntime.WinRTImport<WindowsUIWebUI_HtmlPrintDocumentSourceProjection>, WindowsGraphicsPrinting_IPrintDocumentSourceProtocol, WindowsFoundation_IClosableProtocol {
    // MARK: Windows.UI.WebUI.IHtmlPrintDocumentSource members

    /// Gets and sets the bottom margin of the document source.
    /// - Returns: The bottom margin of the document source.
    public var bottomMargin: Swift.Float {
        get throws {
            try _interop.get_BottomMargin()
        }
    }

    /// Gets and sets the bottom margin of the document source.
    /// - Returns: The bottom margin of the document source.
    public func bottomMargin(_ value: Swift.Float) throws {
        try _interop.put_BottomMargin(value)
    }

    /// Gets and sets the content of the document source to print.
    /// - Returns: The content of the document source to print.
    public var content: WindowsUIWebUI_PrintContent {
        get throws {
            try _interop.get_Content()
        }
    }

    /// Gets and sets the content of the document source to print.
    /// - Returns: The content of the document source to print.
    public func content(_ value: WindowsUIWebUI_PrintContent) throws {
        try _interop.put_Content(value)
    }

    /// Gets and sets a value that controls whether header and footer are enabled in the document source.
    /// - Returns: A Boolean value that indicates whether header and footer are enabled in the document source. **TRUE** indicates enabled and **FALSE** indicates disabled.
    public var enableHeaderFooter: Swift.Bool {
        get throws {
            try _interop.get_EnableHeaderFooter()
        }
    }

    /// Gets and sets a value that controls whether header and footer are enabled in the document source.
    /// - Returns: A Boolean value that indicates whether header and footer are enabled in the document source. **TRUE** indicates enabled and **FALSE** indicates disabled.
    public func enableHeaderFooter(_ value: Swift.Bool) throws {
        try _interop.put_EnableHeaderFooter(value)
    }

    /// Gets and sets the left margin of the document source.
    /// - Returns: The left margin of the document source.
    public var leftMargin: Swift.Float {
        get throws {
            try _interop.get_LeftMargin()
        }
    }

    /// Gets and sets the left margin of the document source.
    /// - Returns: The left margin of the document source.
    public func leftMargin(_ value: Swift.Float) throws {
        try _interop.put_LeftMargin(value)
    }

    /// Gets the range of pages that prints.
    /// - Returns: The range of pages that prints.
    public var pageRange: Swift.String {
        get throws {
            try _interop.get_PageRange()
        }
    }

    /// Gets and sets the size of the document source by percentage.
    /// - Returns: The size of the document source by percentage.
    public var percentScale: Swift.Float {
        get throws {
            try _interop.get_PercentScale()
        }
    }

    /// Gets and sets the size of the document source by percentage.
    /// - Returns: The size of the document source by percentage.
    public func percentScale(_ scalePercent: Swift.Float) throws {
        try _interop.put_PercentScale(scalePercent)
    }

    /// Gets and sets the right margin of the document source.
    /// - Returns: The right margin of the document source.
    public var rightMargin: Swift.Float {
        get throws {
            try _interop.get_RightMargin()
        }
    }

    /// Gets and sets the right margin of the document source.
    /// - Returns: The right margin of the document source.
    public func rightMargin(_ value: Swift.Float) throws {
        try _interop.put_RightMargin(value)
    }

    /// Gets and sets a value that controls whether content shrinks to fit the document source.
    /// - Returns: A Boolean value that indicates whether content shrinks to fit the document source. **TRUE** indicates content shrinks to fit and **FALSE** otherwise. This property is ignored if the PercentScale property is set.
    public var shrinkToFit: Swift.Bool {
        get throws {
            try _interop.get_ShrinkToFit()
        }
    }

    /// Gets and sets a value that controls whether content shrinks to fit the document source.
    /// - Returns: A Boolean value that indicates whether content shrinks to fit the document source. **TRUE** indicates content shrinks to fit and **FALSE** otherwise. This property is ignored if the PercentScale property is set.
    public func shrinkToFit(_ value: Swift.Bool) throws {
        try _interop.put_ShrinkToFit(value)
    }

    /// Gets and sets the top margin of the document source.
    /// - Returns: The top margin of the document source.
    public var topMargin: Swift.Float {
        get throws {
            try _interop.get_TopMargin()
        }
    }

    /// Gets and sets the top margin of the document source.
    /// - Returns: The top margin of the document source.
    public func topMargin(_ value: Swift.Float) throws {
        try _interop.put_TopMargin(value)
    }

    /// Tries to set the page range of the document source.
    /// - Parameter strPageRange: The page range to set.
    /// - Returns: A Boolean value that indicates whether trySetPageRange set the page range in *strPageRange*. **TRUE** indicates the page range was set and **FALSE** otherwise.
    public func trySetPageRange(_ strPageRange: Swift.String) throws -> Swift.Bool {
        try _interop.trySetPageRange(strPageRange)
    }

    // MARK: Windows.Foundation.IClosable members

    /// Performs app-defined tasks that are associated with freeing, releasing, or resetting resources that were allocated for the document source.
    public func close() throws {
        try _iclosable.close()
    }

    // MARK: Implementation details

    private var _iprintDocumentSource_storage: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsPrinting_IPrintDocumentSource>? = nil

    internal var _iprintDocumentSource: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsPrinting_IPrintDocumentSource> {
        get throws {
            try _iprintDocumentSource_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsGraphicsPrinting_IPrintDocumentSource.iid).cast(to: CWinRT.SWRT_WindowsGraphicsPrinting_IPrintDocumentSource.self)
            }
        }
    }

    private var _iclosable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable>? = nil

    internal var _iclosable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable> {
        get throws {
            try _iclosable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IClosable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IClosable.self)
            }
        }
    }

    deinit {
        _iprintDocumentSource_storage?.release()
        _iclosable_storage?.release()
    }
}