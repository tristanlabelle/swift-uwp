// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Specifies the UI settings for the SpeechRecognizer.RecognizeWithUIAsync method.
public final class WindowsMediaSpeechRecognition_SpeechRecognizerUIOptions: WindowsRuntime.WinRTImport<WindowsMediaSpeechRecognition_SpeechRecognizerUIOptionsProjection> {
    // MARK: Windows.Media.SpeechRecognition.ISpeechRecognizerUIOptions members

    /// Gets or sets the heading text that is displayed on the **Listening** screen. The default is "Listening...".
    /// - Returns: The heading text. A custom string should clearly describe the kind of info expected by the app and is limited to two lines in length.
    public var audiblePrompt: Swift.String {
        get throws {
            try _interop.get_AudiblePrompt()
        }
    }

    /// Gets or sets the heading text that is displayed on the **Listening** screen. The default is "Listening...".
    /// - Returns: The heading text. A custom string should clearly describe the kind of info expected by the app and is limited to two lines in length.
    public func audiblePrompt(_ value: Swift.String) throws {
        try _interop.put_AudiblePrompt(value)
    }

    /// Gets or sets the example text shown on the **Listening** screen.
    /// - Returns: The example text that is shown on the **Listening** screen.
    public var exampleText: Swift.String {
        get throws {
            try _interop.get_ExampleText()
        }
    }

    /// Gets or sets the example text shown on the **Listening** screen.
    /// - Returns: The example text that is shown on the **Listening** screen.
    public func exampleText(_ value: Swift.String) throws {
        try _interop.put_ExampleText(value)
    }

    /// Gets or sets whether the recognized text is spoken back to the user on the **Heard you say** screen.
    /// - Returns: True if the recognized text is spoken back to the user. Otherwise, false. The default is true.
    public var isReadBackEnabled: Swift.Bool {
        get throws {
            try _interop.get_IsReadBackEnabled()
        }
    }

    /// Gets or sets whether the recognized text is spoken back to the user on the **Heard you say** screen.
    /// - Returns: True if the recognized text is spoken back to the user. Otherwise, false. The default is true.
    public func isReadBackEnabled(_ value: Swift.Bool) throws {
        try _interop.put_IsReadBackEnabled(value)
    }

    /// Gets or sets whether a **Heard you say** screen is shown to the user after speech recognition is completed.
    /// - Returns: True if a **Heard you say** screen is shown. Otherwise, false. The default is true.
    public var showConfirmation: Swift.Bool {
        get throws {
            try _interop.get_ShowConfirmation()
        }
    }

    /// Gets or sets whether a **Heard you say** screen is shown to the user after speech recognition is completed.
    /// - Returns: True if a **Heard you say** screen is shown. Otherwise, false. The default is true.
    public func showConfirmation(_ value: Swift.Bool) throws {
        try _interop.put_ShowConfirmation(value)
    }

    // MARK: Implementation details
}