// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides support for getting or setting instance-level values of automation properties. These property values are set as attached properties (typically in XAML) and supplement or override automation property values from a control's AutomationPeer.
public final class WindowsUIXamlAutomation_AutomationProperties: WindowsRuntime.WinRTImport<WindowsUIXamlAutomation_AutomationPropertiesProjection> {
    // MARK: Windows.UI.Xaml.Automation.IAutomationPropertiesStatics members

    /// Identifies the AutomationProperties.AcceleratorKey attached property, which is a string containing the accelerator key (also called shortcut key) combinations for the automation element.
    /// - Returns: The identifier for the AutomationProperties.AcceleratorKey attached property.
    public static var acceleratorKeyProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics.get_AcceleratorKeyProperty())
        }
    }

    /// Identifies the AutomationProperties.AccessKey attached property, which is a string containing the access key character for the automation element.
    /// - Returns: The identifier for the AutomationProperties.AccessKey attached property.
    public static var accessKeyProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics.get_AccessKeyProperty())
        }
    }

    /// Identifies the AutomationProperties.AutomationId attached property, which is a string containing the UI Automation identifier (ID) for the automation element.
    /// - Returns: The identifier for the AutomationProperties.AutomationId attached property.
    public static var automationIdProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics.get_AutomationIdProperty())
        }
    }

    /// Identifies the AutomationProperties.HelpText attached property, which is a help text string associated with the automation element.
    /// - Returns: The identifier for the AutomationProperties.HelpText attached property.
    public static var helpTextProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics.get_HelpTextProperty())
        }
    }

    /// Identifies the AutomationProperties.IsRequiredForForm attached property, which is a Boolean value that indicates whether the automation element is required to be filled out on a form.
    /// - Returns: The identifier for the AutomationProperties.IsRequiredForForm attached property.
    public static var isRequiredForFormProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics.get_IsRequiredForFormProperty())
        }
    }

    /// Identifies the ItemStatus attached property, which describes the status of an automation element item.
    /// - Returns: A text string containing an identifier for the ItemStatus attached property.
    public static var itemStatusProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics.get_ItemStatusProperty())
        }
    }

    /// Identifies the AutomationProperties.ItemType attached property, which is a text string describing the type of the automation element.
    /// - Returns: The identifier for the AutomationProperties.ItemType dependency property.
    public static var itemTypeProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics.get_ItemTypeProperty())
        }
    }

    /// Identifies the AutomationProperties.LabeledBy attached property, which is an automation element that contains the text label for this element.
    /// - Returns: The identifier for the AutomationProperties.LabeledBy attached property.
    public static var labeledByProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics.get_LabeledByProperty())
        }
    }

    /// Identifies the AutomationProperties.LiveSetting attached property, which is supported by an automation element that represents a live region.
    /// - Returns: The property identifier for the AutomationProperties.LiveSetting attached property.
    public static var liveSettingProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics.get_LiveSettingProperty())
        }
    }

    /// Identifies the AutomationProperties.Name attached property, which is a string that holds the name of the automation element.
    /// - Returns: The identifier for the AutomationProperties.Name attached property.
    public static var nameProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics.get_NameProperty())
        }
    }

    /// Gets the value of the AutomationProperties.AcceleratorKey attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject to check.
    /// - Returns: The accelerator key, as a string.
    public static func getAcceleratorKey(_ element: WindowsUIXaml_DependencyObject?) throws -> Swift.String {
        try _iautomationPropertiesStatics.getAcceleratorKey(element)
    }

    /// Sets the value of the AutomationProperties.AcceleratorKey attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject for which to set the property.
    /// - Parameter value: The accelerator key value to set.
    public static func setAcceleratorKey(_ element: WindowsUIXaml_DependencyObject?, _ value: Swift.String) throws {
        try _iautomationPropertiesStatics.setAcceleratorKey(element, value)
    }

    /// Gets the value of the AutomationProperties.AccessKey attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject to check.
    /// - Returns: The access key, as a string.
    public static func getAccessKey(_ element: WindowsUIXaml_DependencyObject?) throws -> Swift.String {
        try _iautomationPropertiesStatics.getAccessKey(element)
    }

    /// Sets the value of the AutomationProperties.AccessKey attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject for which to set the property.
    /// - Parameter value: The access key value to set.
    public static func setAccessKey(_ element: WindowsUIXaml_DependencyObject?, _ value: Swift.String) throws {
        try _iautomationPropertiesStatics.setAccessKey(element, value)
    }

    /// Gets the value of the AutomationProperties.AutomationId attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject to check.
    /// - Returns: The UI Automation identifier for the specified element.
    public static func getAutomationId(_ element: WindowsUIXaml_DependencyObject?) throws -> Swift.String {
        try _iautomationPropertiesStatics.getAutomationId(element)
    }

    /// Sets the value of the AutomationProperties.AutomationId attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject for which to set the property.
    /// - Parameter value: The UI Automation identifier value to set.
    public static func setAutomationId(_ element: WindowsUIXaml_DependencyObject?, _ value: Swift.String) throws {
        try _iautomationPropertiesStatics.setAutomationId(element, value)
    }

    /// Gets the value of the AutomationProperties.HelpText attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject to check.
    /// - Returns: The help text for the specified element.
    public static func getHelpText(_ element: WindowsUIXaml_DependencyObject?) throws -> Swift.String {
        try _iautomationPropertiesStatics.getHelpText(element)
    }

    /// Sets the value of the AutomationProperties.HelpText attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject for which to set the property.
    /// - Parameter value: The help text.
    public static func setHelpText(_ element: WindowsUIXaml_DependencyObject?, _ value: Swift.String) throws {
        try _iautomationPropertiesStatics.setHelpText(element, value)
    }

    /// Gets the value of the AutomationProperties.IsRequiredForForm attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject to check.
    /// - Returns: **true** if the specified element is required for completion of a form; otherwise, **false**.
    public static func getIsRequiredForForm(_ element: WindowsUIXaml_DependencyObject?) throws -> Swift.Bool {
        try _iautomationPropertiesStatics.getIsRequiredForForm(element)
    }

    /// Sets the value of the AutomationProperties.IsRequiredForForm attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject for which to set the property.
    /// - Parameter value: **true** to specify that the element is required to be filled out on a form; otherwise, **false**.
    public static func setIsRequiredForForm(_ element: WindowsUIXaml_DependencyObject?, _ value: Swift.Bool) throws {
        try _iautomationPropertiesStatics.setIsRequiredForForm(element, value)
    }

    /// Gets the value of the AutomationProperties.ItemStatus attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject to check.
    /// - Returns: The item status of the element.
    public static func getItemStatus(_ element: WindowsUIXaml_DependencyObject?) throws -> Swift.String {
        try _iautomationPropertiesStatics.getItemStatus(element)
    }

    /// Sets the value of the AutomationProperties.ItemStatus attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject for which to set the property.
    /// - Parameter value: The item status.
    public static func setItemStatus(_ element: WindowsUIXaml_DependencyObject?, _ value: Swift.String) throws {
        try _iautomationPropertiesStatics.setItemStatus(element, value)
    }

    /// Gets the value of the AutomationProperties.ItemType attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject to check.
    /// - Returns: The item type of the element.
    public static func getItemType(_ element: WindowsUIXaml_DependencyObject?) throws -> Swift.String {
        try _iautomationPropertiesStatics.getItemType(element)
    }

    /// Sets the value of the AutomationProperties.ItemType attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject for which to set the property.
    /// - Parameter value: The item type.
    public static func setItemType(_ element: WindowsUIXaml_DependencyObject?, _ value: Swift.String) throws {
        try _iautomationPropertiesStatics.setItemType(element, value)
    }

    /// Gets the value of the AutomationProperties.LabeledBy attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject to check.
    /// - Returns: The element that is targeted by the label.
    public static func getLabeledBy(_ element: WindowsUIXaml_DependencyObject?) throws -> WindowsUIXaml_UIElement {
        try COM.NullResult.unwrap(_iautomationPropertiesStatics.getLabeledBy(element))
    }

    /// Sets the value of the AutomationProperties.LabeledBy attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject for which to set the property.
    /// - Parameter value: The UI element that represents the label for *element*.
    public static func setLabeledBy(_ element: WindowsUIXaml_DependencyObject?, _ value: WindowsUIXaml_UIElement?) throws {
        try _iautomationPropertiesStatics.setLabeledBy(element, value)
    }

    /// Gets the value of the AutomationProperties.Name attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject to check.
    /// - Returns: The name of the specified element.
    public static func getName(_ element: WindowsUIXaml_DependencyObject?) throws -> Swift.String {
        try _iautomationPropertiesStatics.getName(element)
    }

    /// Sets the value of the AutomationProperties.Name attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject for which to set the property.
    /// - Parameter value: The object name.
    public static func setName(_ element: WindowsUIXaml_DependencyObject?, _ value: Swift.String) throws {
        try _iautomationPropertiesStatics.setName(element, value)
    }

    /// Gets the value of the AutomationProperties.LiveSetting attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject to check.
    /// - Returns: The live setting value for the specified element.
    public static func getLiveSetting(_ element: WindowsUIXaml_DependencyObject?) throws -> WindowsUIXamlAutomationPeers_AutomationLiveSetting {
        try _iautomationPropertiesStatics.getLiveSetting(element)
    }

    /// Sets the value of the AutomationProperties.LiveSetting attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject for which to set the property.
    /// - Parameter value: The AutomationLiveSetting value to set.
    public static func setLiveSetting(_ element: WindowsUIXaml_DependencyObject?, _ value: WindowsUIXamlAutomationPeers_AutomationLiveSetting) throws {
        try _iautomationPropertiesStatics.setLiveSetting(element, value)
    }

    // MARK: Windows.UI.Xaml.Automation.IAutomationPropertiesStatics4 members

    /// Gets the identifier for the landmark type attached property, which is a Landmark Type Identifier associated with an element.
    /// - Returns: The identifier for the landmark type attached property.
    public static var landmarkTypeProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics4.get_LandmarkTypeProperty())
        }
    }

    /// Gets the identifier for the localized landmark type attached property, which is a localized text string describing the type of landmark that the automation element represents.
    /// - Returns: The identifier for the localized landmark type attached property.
    public static var localizedLandmarkTypeProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics4.get_LocalizedLandmarkTypeProperty())
        }
    }

    /// Gets the value of the landmark type attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject to check.
    /// - Returns: The landmark type of the *element*
    public static func getLandmarkType(_ element: WindowsUIXaml_DependencyObject?) throws -> WindowsUIXamlAutomationPeers_AutomationLandmarkType {
        try _iautomationPropertiesStatics4.getLandmarkType(element)
    }

    /// Sets the value of the landmark type attached property for the specified DependencyObject.
    /// - Parameter element: The specified DependencyObject.
    /// - Parameter value: The value of the landmark type property.
    public static func setLandmarkType(_ element: WindowsUIXaml_DependencyObject?, _ value: WindowsUIXamlAutomationPeers_AutomationLandmarkType) throws {
        try _iautomationPropertiesStatics4.setLandmarkType(element, value)
    }

    /// Gets the value of the localized landmark type attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject to check.
    /// - Returns: The localized string defining the landmark type of the *element*.
    public static func getLocalizedLandmarkType(_ element: WindowsUIXaml_DependencyObject?) throws -> Swift.String {
        try _iautomationPropertiesStatics4.getLocalizedLandmarkType(element)
    }

    /// Sets the value of the localized landmark type attached property for the specified DependencyObject.
    /// - Parameter element: The specified DependencyObject.
    /// - Parameter value: The localized string defining the landmark type of the *element*.
    public static func setLocalizedLandmarkType(_ element: WindowsUIXaml_DependencyObject?, _ value: Swift.String) throws {
        try _iautomationPropertiesStatics4.setLocalizedLandmarkType(element, value)
    }

    // MARK: Windows.UI.Xaml.Automation.IAutomationPropertiesStatics8 members

    /// Identifies the AutomationProperties.IsDialog attached property, which is a Boolean value that indicates whether the automation element is a dialog window.
    /// - Returns: The identifier for the AutomationProperties.IsDialog attached property.
    public static var isDialogProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics8.get_IsDialogProperty())
        }
    }

    /// Gets the value of the AutomationProperties.IsDialog attached property for the specified DependencyObject.
    /// - Parameter element: The object to check.
    /// - Returns: **true** if the specified element is identified as a dialog window; otherwise, **false**.
    public static func getIsDialog(_ element: WindowsUIXaml_DependencyObject?) throws -> Swift.Bool {
        try _iautomationPropertiesStatics8.getIsDialog(element)
    }

    /// Sets a Boolean value that indicates whether the specified element should be identified as a dialog window.
    /// - Parameter element: The object to identify as a dialog window.
    /// - Parameter value: **true** if the element should be identified as a dialog window; otherwise, **false**.
    public static func setIsDialog(_ element: WindowsUIXaml_DependencyObject?, _ value: Swift.Bool) throws {
        try _iautomationPropertiesStatics8.setIsDialog(element, value)
    }

    // MARK: Windows.UI.Xaml.Automation.IAutomationPropertiesStatics7 members

    /// Gets the identifier for the **HeadingLevel** attached property, which indicates the heading level for a UI Automation element.
    /// - Returns: The identifier for the **HeadingLevel** attached property.
    public static var headingLevelProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics7.get_HeadingLevelProperty())
        }
    }

    /// Gets the value of the AutomationProperties.HeadingLevel property for the specified DependencyObject.
    /// - Parameter element: The specified DependencyObject.
    /// - Returns: The value of the AutomationProperties.HeadingLevel property.
    public static func getHeadingLevel(_ element: WindowsUIXaml_DependencyObject?) throws -> WindowsUIXamlAutomationPeers_AutomationHeadingLevel {
        try _iautomationPropertiesStatics7.getHeadingLevel(element)
    }

    /// Sets the value of the AutomationProperties.HeadingLevel property for the specified DependencyObject.
    /// - Parameter element: The specified DependencyObject.
    /// - Parameter value: The value for the heading level.
    public static func setHeadingLevel(_ element: WindowsUIXaml_DependencyObject?, _ value: WindowsUIXamlAutomationPeers_AutomationHeadingLevel) throws {
        try _iautomationPropertiesStatics7.setHeadingLevel(element, value)
    }

    // MARK: Windows.UI.Xaml.Automation.IAutomationPropertiesStatics3 members

    /// Identifies a dependency property that's used for a list of annotation objects in a document, such as comment, header, footer, and so on.
    /// - Returns: The identifier for the **Annotations** attached property.
    public static var annotationsProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics3.get_AnnotationsProperty())
        }
    }

    /// Gets the identifier for the **Level** attached property, which is a 1-based integer associated with an automation element.
    /// - Returns: The identifier for the **Level** attached property.
    public static var levelProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics3.get_LevelProperty())
        }
    }

    /// Gets the identifier for the **PositionInSet** attached property, which is a 1-based integer associated with an automation element.
    /// - Returns: The identifier for the **PositionInSet** attached property.
    public static var positionInSetProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics3.get_PositionInSetProperty())
        }
    }

    /// Gets the identifier for the  attached property.
    /// - Returns: The identifier for the  attached property.
    public static var sizeOfSetProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics3.get_SizeOfSetProperty())
        }
    }

    /// Gets the value of the  property for the specified .
    /// - Parameter element: The specified .
    /// - Returns: The value of the  property.
    public static func getPositionInSet(_ element: WindowsUIXaml_DependencyObject?) throws -> Swift.Int32 {
        try _iautomationPropertiesStatics3.getPositionInSet(element)
    }

    /// Sets the value of the AutomationProperties.PositionInSet attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject for which to set the property.
    /// - Parameter value: The value of the property.
    public static func setPositionInSet(_ element: WindowsUIXaml_DependencyObject?, _ value: Swift.Int32) throws {
        try _iautomationPropertiesStatics3.setPositionInSet(element, value)
    }

    /// Gets the value of the  property for the specified .
    /// - Parameter element: The specified .
    /// - Returns: The value of the  property.
    public static func getSizeOfSet(_ element: WindowsUIXaml_DependencyObject?) throws -> Swift.Int32 {
        try _iautomationPropertiesStatics3.getSizeOfSet(element)
    }

    /// Sets the value of the AutomationProperties.SizeOfSet attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject for which to set the property.
    /// - Parameter value: The value of the property.
    public static func setSizeOfSet(_ element: WindowsUIXaml_DependencyObject?, _ value: Swift.Int32) throws {
        try _iautomationPropertiesStatics3.setSizeOfSet(element, value)
    }

    /// Gets the value of the  property for the specified .
    /// - Parameter element: The specified .
    /// - Returns: The value of the  property.
    public static func getLevel(_ element: WindowsUIXaml_DependencyObject?) throws -> Swift.Int32 {
        try _iautomationPropertiesStatics3.getLevel(element)
    }

    /// Sets the value of the AutomationProperties.Level attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject for which to set the property.
    /// - Parameter value: The value of the property.
    public static func setLevel(_ element: WindowsUIXaml_DependencyObject?, _ value: Swift.Int32) throws {
        try _iautomationPropertiesStatics3.setLevel(element, value)
    }

    /// Gets the value of the AutomationProperties.Annotations property for the specified DependencyObject.
    /// - Parameter element: The specified DependencyObject.
    /// - Returns: The value of the AutomationProperties.Annotations property.
    public static func getAnnotations(_ element: WindowsUIXaml_DependencyObject?) throws -> WindowsFoundationCollections_IVector<WindowsUIXamlAutomation_AutomationAnnotation?> {
        try COM.NullResult.unwrap(_iautomationPropertiesStatics3.getAnnotations(element))
    }

    // MARK: Windows.UI.Xaml.Automation.IAutomationPropertiesStatics9 members

    public static var automationControlTypeProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics9.get_AutomationControlTypeProperty())
        }
    }

    public static func getAutomationControlType(_ element: WindowsUIXaml_UIElement?) throws -> WindowsUIXamlAutomationPeers_AutomationControlType {
        try _iautomationPropertiesStatics9.getAutomationControlType(element)
    }

    public static func setAutomationControlType(_ element: WindowsUIXaml_UIElement?, _ value: WindowsUIXamlAutomationPeers_AutomationControlType) throws {
        try _iautomationPropertiesStatics9.setAutomationControlType(element, value)
    }

    // MARK: Windows.UI.Xaml.Automation.IAutomationPropertiesStatics6 members

    /// Gets the identifier for the culture attached property which contains a locale identifier for the automation element (for example, 0x0409 for "en-US" or English (United States)).
    /// - Returns: The identifier for the culture attached property.
    public static var cultureProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics6.get_CultureProperty())
        }
    }

    /// Gets the value of the CultureProperty attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject to check.
    /// - Returns: The value of the culture property for the specified *element*.
    public static func getCulture(_ element: WindowsUIXaml_DependencyObject?) throws -> Swift.Int32 {
        try _iautomationPropertiesStatics6.getCulture(element)
    }

    /// Sets the value of the CultureProperty attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject for which to set the culture property.
    /// - Parameter value: The value of the culture property to set for the specified *element*.
    public static func setCulture(_ element: WindowsUIXaml_DependencyObject?, _ value: Swift.Int32) throws {
        try _iautomationPropertiesStatics6.setCulture(element, value)
    }

    // MARK: Windows.UI.Xaml.Automation.IAutomationPropertiesStatics5 members

    /// Gets the identifier for the described by attached property, which is an array of elements that provide more information about the automation element.
    /// - Returns: The identifier for the described by attached property.
    public static var describedByProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics5.get_DescribedByProperty())
        }
    }

    /// Gets the identifier for the **FlowsFrom** attached property, which is an array of automation elements that suggests the reading order before the current automation element.
    /// - Returns: The identifier for the **FlowsFrom** attached property.
    public static var flowsFromProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics5.get_FlowsFromProperty())
        }
    }

    /// Gets the identifier for the **FlowsTo** attached property, which is an array of automation elements that suggests the reading order after the current automation element.
    /// - Returns: The identifier for the "flows to" attached property.
    public static var flowsToProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics5.get_FlowsToProperty())
        }
    }

    /// Gets the identifier for the full description attached property, which exposes a localized string containing extended description text for an element.
    /// - Returns: The identifier for the full description attached property.
    public static var fullDescriptionProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics5.get_FullDescriptionProperty())
        }
    }

    /// Identifies the Boolean dependency property that indicates if the data is valid for the form.
    /// - Returns: The dependency property identifier.
    public static var isDataValidForFormProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics5.get_IsDataValidForFormProperty())
        }
    }

    /// Identifies the Boolean dependency property that indicates if the automation element represents peripheral UI.
    /// - Returns: The dependency property identifier.
    public static var isPeripheralProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics5.get_IsPeripheralProperty())
        }
    }

    /// Identifies the localized control type dependency property, which is a text string describing the type of control that the automation element represents.
    /// - Returns: The dependency property identifier.
    public static var localizedControlTypeProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics5.get_LocalizedControlTypeProperty())
        }
    }

    /// Gets a Boolean value that indicates whether the specified element represents peripheral UI.
    /// - Parameter element: The element to check for peripheral data.
    /// - Returns: A Boolean value that indicates whether the DependencyObject specified by the *element* parameter represents peripheral UI.
    public static func getIsPeripheral(_ element: WindowsUIXaml_DependencyObject?) throws -> Swift.Bool {
        try _iautomationPropertiesStatics5.getIsPeripheral(element)
    }

    /// Sets a Boolean value that indicates whether the specified element represents peripheral UI.
    /// - Parameter element: The element for which to set peripheral data.
    /// - Parameter value: A Boolean value that indicates whether the DependencyObject specified by the *element* parameter represents peripheral UI.
    public static func setIsPeripheral(_ element: WindowsUIXaml_DependencyObject?, _ value: Swift.Bool) throws {
        try _iautomationPropertiesStatics5.setIsPeripheral(element, value)
    }

    /// Gets a Boolean value that indicates whether the entered or selected value is valid for the form rule associated with the specified element.
    /// - Parameter element: The element for which to get data validation.
    /// - Returns: A Boolean value that indicates whether the entered or selected value is valid for the form rule associated with the object specified by the *element* parameter.
    public static func getIsDataValidForForm(_ element: WindowsUIXaml_DependencyObject?) throws -> Swift.Bool {
        try _iautomationPropertiesStatics5.getIsDataValidForForm(element)
    }

    /// Sets a Boolean value that indicates whether the entered or selected value is valid for the form rule associated with the specified element.
    /// - Parameter element: The element for which to set data validation.
    /// - Parameter value: A Boolean value that indicates whether the entered or selected data is valid for the form.
    public static func setIsDataValidForForm(_ element: WindowsUIXaml_DependencyObject?, _ value: Swift.Bool) throws {
        try _iautomationPropertiesStatics5.setIsDataValidForForm(element, value)
    }

    /// Gets a localized string that describes the visual appearance or contents of the specified DependencyObject.
    /// - Parameter element: The object for which to get the full description.
    /// - Returns: A localized string that describes the visual appearance or contents of the object specified in the *element* parameter.
    public static func getFullDescription(_ element: WindowsUIXaml_DependencyObject?) throws -> Swift.String {
        try _iautomationPropertiesStatics5.getFullDescription(element)
    }

    /// Sets a localized string that describes the visual appearance or contents of the specified DependencyObject.
    /// - Parameter element: The object for which to set the full description.
    /// - Parameter value: The localized full description of the object specified in the *element* parameter.
    public static func setFullDescription(_ element: WindowsUIXaml_DependencyObject?, _ value: Swift.String) throws {
        try _iautomationPropertiesStatics5.setFullDescription(element, value)
    }

    /// Gets a localized string that indicates the type of the specified control.
    /// - Parameter element: The control for which to retrieve the type.
    /// - Returns: A localized string that indicates the type of the control specified by the *element* parameter.
    public static func getLocalizedControlType(_ element: WindowsUIXaml_DependencyObject?) throws -> Swift.String {
        try _iautomationPropertiesStatics5.getLocalizedControlType(element)
    }

    /// Sets a localized string that indicates the type of the specified control.
    /// - Parameter element: The control for which to set the type.
    /// - Parameter value: A localized string that indicates the type of the control specified by the *element* parameter.
    public static func setLocalizedControlType(_ element: WindowsUIXaml_DependencyObject?, _ value: Swift.String) throws {
        try _iautomationPropertiesStatics5.setLocalizedControlType(element, value)
    }

    /// Gets a collection of elements that provide more information about the specified automation element.
    /// - Parameter element: The automation element for which to get the described by collection.
    /// - Returns: A collection of elements that provide more information about the automation element specified by the *element* parameter.
    public static func getDescribedBy(_ element: WindowsUIXaml_DependencyObject?) throws -> WindowsFoundationCollections_IVector<WindowsUIXaml_DependencyObject?> {
        try COM.NullResult.unwrap(_iautomationPropertiesStatics5.getDescribedBy(element))
    }

    /// Gets a list of automation elements that suggests the reading order after the specified automation element.
    /// - Parameter element: The element for which to get the following reading order elements.
    /// - Returns: A list of automation elements that suggests the reading order after the automation element specified by the *element* parameter.
    public static func getFlowsTo(_ element: WindowsUIXaml_DependencyObject?) throws -> WindowsFoundationCollections_IVector<WindowsUIXaml_DependencyObject?> {
        try COM.NullResult.unwrap(_iautomationPropertiesStatics5.getFlowsTo(element))
    }

    /// Gets a list of automation elements that suggests the reading order before the specified automation element.
    /// - Parameter element: The element for which to get the preceding reading order elements.
    /// - Returns: A list of automation elements that suggests the reading order before the automation element specified by the *element* parameter.
    public static func getFlowsFrom(_ element: WindowsUIXaml_DependencyObject?) throws -> WindowsFoundationCollections_IVector<WindowsUIXaml_DependencyObject?> {
        try COM.NullResult.unwrap(_iautomationPropertiesStatics5.getFlowsFrom(element))
    }

    // MARK: Windows.UI.Xaml.Automation.IAutomationPropertiesStatics2 members

    /// Identifies the AutomationProperties.AccessibilityView attached property. Set this attached property on individual elements in order to change their element visibility to specific modes requested by a UI Automation client.
    /// - Returns: The identifier for the AutomationProperties.AccessibilityView attached property.
    public static var accessibilityViewProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics2.get_AccessibilityViewProperty())
        }
    }

    /// Identifies the ControlledPeers attached property, which is used for a collection of automation elements that can be manipulated by the specified automation element.
    /// - Returns: The identifier for the ControlledPeers attached property.
    public static var controlledPeersProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iautomationPropertiesStatics2.get_ControlledPeersProperty())
        }
    }

    /// Gets the value of the AutomationProperties.AccessibilityView attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject to check.
    /// - Returns: The accessibility view setting, as a value of the enumeration.
    public static func getAccessibilityView(_ element: WindowsUIXaml_DependencyObject?) throws -> WindowsUIXamlAutomationPeers_AccessibilityView {
        try _iautomationPropertiesStatics2.getAccessibilityView(element)
    }

    /// Sets the value of the AutomationProperties.AccessibilityView attached property for the specified DependencyObject.
    /// - Parameter element: The DependencyObject to set the attached property on.
    /// - Parameter value: The enumeration value to set.
    public static func setAccessibilityView(_ element: WindowsUIXaml_DependencyObject?, _ value: WindowsUIXamlAutomationPeers_AccessibilityView) throws {
        try _iautomationPropertiesStatics2.setAccessibilityView(element, value)
    }

    /// A static utility method that retrieves the list of controlled peers from a target owner.
    /// - Parameter element: The owner object to retrieve controlled peers from.
    /// - Returns: A list containing the peers that the target element controls.
    public static func getControlledPeers(_ element: WindowsUIXaml_DependencyObject?) throws -> WindowsFoundationCollections_IVector<WindowsUIXaml_UIElement?> {
        try COM.NullResult.unwrap(_iautomationPropertiesStatics2.getControlledPeers(element))
    }

    // MARK: Implementation details

    private static var _iautomationPropertiesStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics>? = nil

    internal static var _iautomationPropertiesStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics> {
        get throws {
            try _iautomationPropertiesStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Automation.AutomationProperties", id: CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics.iid)
            }
        }
    }

    private static var _iautomationPropertiesStatics4_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics4>? = nil

    internal static var _iautomationPropertiesStatics4: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics4> {
        get throws {
            try _iautomationPropertiesStatics4_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Automation.AutomationProperties", id: CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics4.iid)
            }
        }
    }

    private static var _iautomationPropertiesStatics8_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics8>? = nil

    internal static var _iautomationPropertiesStatics8: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics8> {
        get throws {
            try _iautomationPropertiesStatics8_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Automation.AutomationProperties", id: CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics8.iid)
            }
        }
    }

    private static var _iautomationPropertiesStatics7_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics7>? = nil

    internal static var _iautomationPropertiesStatics7: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics7> {
        get throws {
            try _iautomationPropertiesStatics7_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Automation.AutomationProperties", id: CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics7.iid)
            }
        }
    }

    private static var _iautomationPropertiesStatics3_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics3>? = nil

    internal static var _iautomationPropertiesStatics3: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics3> {
        get throws {
            try _iautomationPropertiesStatics3_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Automation.AutomationProperties", id: CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics3.iid)
            }
        }
    }

    private static var _iautomationPropertiesStatics9_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics9>? = nil

    internal static var _iautomationPropertiesStatics9: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics9> {
        get throws {
            try _iautomationPropertiesStatics9_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Automation.AutomationProperties", id: CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics9.iid)
            }
        }
    }

    private static var _iautomationPropertiesStatics6_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics6>? = nil

    internal static var _iautomationPropertiesStatics6: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics6> {
        get throws {
            try _iautomationPropertiesStatics6_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Automation.AutomationProperties", id: CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics6.iid)
            }
        }
    }

    private static var _iautomationPropertiesStatics5_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics5>? = nil

    internal static var _iautomationPropertiesStatics5: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics5> {
        get throws {
            try _iautomationPropertiesStatics5_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Automation.AutomationProperties", id: CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics5.iid)
            }
        }
    }

    private static var _iautomationPropertiesStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics2>? = nil

    internal static var _iautomationPropertiesStatics2: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics2> {
        get throws {
            try _iautomationPropertiesStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Automation.AutomationProperties", id: CWinRT.SWRT_WindowsUIXamlAutomation_IAutomationPropertiesStatics2.iid)
            }
        }
    }
}