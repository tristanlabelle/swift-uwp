// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a single print workflow session that runs in the background.
public final class WindowsGraphicsPrintingWorkflow_PrintWorkflowBackgroundSession: WindowsRuntime.WinRTImport<WindowsGraphicsPrintingWorkflow_PrintWorkflowBackgroundSessionProjection> {
    // MARK: Windows.Graphics.Printing.Workflow.IPrintWorkflowBackgroundSession members

    /// The status of the current print workflow session.
    /// - Returns: The session status.
    public var status: WindowsGraphicsPrintingWorkflow_PrintWorkflowSessionStatus {
        get throws {
            try _interop.get_Status()
        }
    }

    /// Raised first in the print workflow background session. This event exposes information about the print job but not the print content itself. Register for this event to do work on a print job configuration before printing.
    public func setupRequested(adding setupEventHandler: WindowsFoundation_TypedEventHandler<WindowsGraphicsPrintingWorkflow_PrintWorkflowBackgroundSession?, WindowsGraphicsPrintingWorkflow_PrintWorkflowBackgroundSetupRequestedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_SetupRequested(setupEventHandler)
        return WindowsRuntime.EventRegistration(token: _token, remover: setupRequested)
    }

    public func setupRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_SetupRequested(token)
    }

    /// Raised when the final XPS print data has become available. This is done after the SetupRequested event and after the optional UI-dependent foreground task is completed.
    public func submitted(adding submittedEventHandler: WindowsFoundation_TypedEventHandler<WindowsGraphicsPrintingWorkflow_PrintWorkflowBackgroundSession?, WindowsGraphicsPrintingWorkflow_PrintWorkflowSubmittedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Submitted(submittedEventHandler)
        return WindowsRuntime.EventRegistration(token: _token, remover: submitted)
    }

    public func submitted(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Submitted(token)
    }

    /// Starts the print workflow background process. The events of this class are raised in sequential order.
    public func start() throws {
        try _interop.start()
    }

    // MARK: Implementation details
}