// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Contains contextual information about a print workflow foreground task that has been activated.
public final class WindowsGraphicsPrintingWorkflow_PrintWorkflowUIActivatedEventArgs: WindowsRuntime.WinRTImport<WindowsGraphicsPrintingWorkflow_PrintWorkflowUIActivatedEventArgsProjection>, WindowsApplicationModelActivation_IActivatedEventArgsWithUserProtocol, WindowsApplicationModelActivation_IActivatedEventArgsProtocol {
    // MARK: Windows.Graphics.Printing.Workflow.IPrintWorkflowUIActivatedEventArgs members

    /// Gets the print workflow session object that should manage the behavior of the foreground task that was activated.
    /// - Returns: The single print workflow foreground session.
    public var printWorkflowSession: WindowsGraphicsPrintingWorkflow_PrintWorkflowForegroundSession {
        get throws {
            try COM.NullResult.unwrap(_interop.get_PrintWorkflowSession())
        }
    }

    // MARK: Windows.ApplicationModel.Activation.IActivatedEventArgsWithUser members

    /// Gets the user that the foreground app was activated for.
    /// - Returns: The user that the app was activated for.
    public var user: WindowsSystem_User {
        get throws {
            try COM.NullResult.unwrap(_iactivatedEventArgsWithUser.get_User())
        }
    }

    // MARK: Windows.ApplicationModel.Activation.IActivatedEventArgs members

    /// Gets the reason that this app was activated.
    /// - Returns: A value indicating the type of task this app was activated to execute. In this case, it should be ActivationKind.PrintWorkflowForegroundTask.
    public var kind: WindowsApplicationModelActivation_ActivationKind {
        get throws {
            try _iactivatedEventArgs.get_Kind()
        }
    }

    /// Gets the execution state of the app before it was activated.
    /// - Returns: The execution state.
    public var previousExecutionState: WindowsApplicationModelActivation_ApplicationExecutionState {
        get throws {
            try _iactivatedEventArgs.get_PreviousExecutionState()
        }
    }

    /// Gets the splash screen object that provides information about the transition from the splash screen to the activated app.
    /// - Returns: The splash screen object.
    public var splashScreen: WindowsApplicationModelActivation_SplashScreen {
        get throws {
            try COM.NullResult.unwrap(_iactivatedEventArgs.get_SplashScreen())
        }
    }

    // MARK: Implementation details

    private var _iactivatedEventArgsWithUser_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelActivation_IActivatedEventArgsWithUser>? = nil

    internal var _iactivatedEventArgsWithUser: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelActivation_IActivatedEventArgsWithUser> {
        get throws {
            try _iactivatedEventArgsWithUser_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelActivation_IActivatedEventArgsWithUser.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelActivation_IActivatedEventArgsWithUser.self)
            }
        }
    }

    private var _iactivatedEventArgs_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelActivation_IActivatedEventArgs>? = nil

    internal var _iactivatedEventArgs: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelActivation_IActivatedEventArgs> {
        get throws {
            try _iactivatedEventArgs_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelActivation_IActivatedEventArgs.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelActivation_IActivatedEventArgs.self)
            }
        }
    }

    deinit {
        _iactivatedEventArgsWithUser_storage?.release()
        _iactivatedEventArgs_storage?.release()
    }
}