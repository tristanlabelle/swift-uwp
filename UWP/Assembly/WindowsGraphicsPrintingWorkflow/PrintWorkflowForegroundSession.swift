// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a single print workflow session that runs in the foreground.
public final class WindowsGraphicsPrintingWorkflow_PrintWorkflowForegroundSession: WindowsRuntime.WinRTImport<WindowsGraphicsPrintingWorkflow_PrintWorkflowForegroundSessionProjection> {
    // MARK: Windows.Graphics.Printing.Workflow.IPrintWorkflowForegroundSession members

    /// The status of the current print workflow session.
    /// - Returns: The session status.
    public var status: WindowsGraphicsPrintingWorkflow_PrintWorkflowSessionStatus {
        get throws {
            try _interop.get_Status()
        }
    }

    /// Raised first in the print workflow foreground session. This event exposes information about the print job but not the print content itself. Register for this event to do UI-dependent work on the print job before printing.
    public func setupRequested(adding setupEventHandler: WindowsFoundation_TypedEventHandler<WindowsGraphicsPrintingWorkflow_PrintWorkflowForegroundSession?, WindowsGraphicsPrintingWorkflow_PrintWorkflowForegroundSetupRequestedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_SetupRequested(setupEventHandler)
        return WindowsRuntime.EventRegistration(token: _token, remover: setupRequested)
    }

    public func setupRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_SetupRequested(token)
    }

    /// Raised when the XPS print data is available to be read. This is done after the SetupRequested event is raised. Register for this event to do UI-dependent work that requires displaying the print content.
    public func xpsDataAvailable(adding xpsDataAvailableEventHandler: WindowsFoundation_TypedEventHandler<WindowsGraphicsPrintingWorkflow_PrintWorkflowForegroundSession?, WindowsGraphicsPrintingWorkflow_PrintWorkflowXpsDataAvailableEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_XpsDataAvailable(xpsDataAvailableEventHandler)
        return WindowsRuntime.EventRegistration(token: _token, remover: xpsDataAvailable)
    }

    public func xpsDataAvailable(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_XpsDataAvailable(token)
    }

    /// Starts the print workflow foreground process. The events of this class are raised in sequential order.
    public func start() throws {
        try _interop.start()
    }

    // MARK: Implementation details
}