// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides information about the device for profiling purposes.
public enum WindowsSystemProfile_AnalyticsInfo {
    // MARK: Windows.System.Profile.IAnalyticsInfoStatics2 members

    public static func getSystemPropertiesAsync(_ attributeNames: WindowsFoundationCollections_IIterable<Swift.String>?) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IMapView<Swift.String, Swift.String>?> {
        try COM.NullResult.unwrap(_ianalyticsInfoStatics2.getSystemPropertiesAsync(attributeNames))
    }

    // MARK: Windows.System.Profile.IAnalyticsInfoStatics members

    /// Gets the device form factor running WindowsÂ 10. For example, the app could be running on a phone, tablet, desktop, and so on.
    /// - Returns: The device form factor.
    public static var deviceForm: Swift.String {
        get throws {
            try _ianalyticsInfoStatics.get_DeviceForm()
        }
    }

    /// Gets version info about the device family.
    /// - Returns: Version info about the device family.
    public static var versionInfo: WindowsSystemProfile_AnalyticsVersionInfo {
        get throws {
            try COM.NullResult.unwrap(_ianalyticsInfoStatics.get_VersionInfo())
        }
    }

    // MARK: Implementation details

    private static var _ianalyticsInfoStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsSystemProfile_IAnalyticsInfoStatics2>? = nil

    internal static var _ianalyticsInfoStatics2: COM.COMInterop<CWinRT.SWRT_WindowsSystemProfile_IAnalyticsInfoStatics2> {
        get throws {
            try _ianalyticsInfoStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.System.Profile.AnalyticsInfo", id: CWinRT.SWRT_WindowsSystemProfile_IAnalyticsInfoStatics2.iid)
            }
        }
    }

    private static var _ianalyticsInfoStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsSystemProfile_IAnalyticsInfoStatics>? = nil

    internal static var _ianalyticsInfoStatics: COM.COMInterop<CWinRT.SWRT_WindowsSystemProfile_IAnalyticsInfoStatics> {
        get throws {
            try _ianalyticsInfoStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.System.Profile.AnalyticsInfo", id: CWinRT.SWRT_WindowsSystemProfile_IAnalyticsInfoStatics.iid)
            }
        }
    }
}