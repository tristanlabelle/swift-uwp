// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides information to uniquely identify the system on which the app is running.
public enum WindowsSystemProfile_SystemIdentification {
    // MARK: Windows.System.Profile.ISystemIdentificationStatics members

    /// Gets an identifier value for the system based on the app publisher ID.
    /// - Returns: A SystemIdentificationInfo object for this system, based on the app publisher ID.
    public static func getSystemIdForPublisher() throws -> WindowsSystemProfile_SystemIdentificationInfo {
        try COM.NullResult.unwrap(_isystemIdentificationStatics.getSystemIdForPublisher())
    }

    /// Gets an identifier value for the system based on the user ID.
    /// - Parameter user: The User data to use for creating the system ID. If the value is `null`, this method will get the current user's ID.
    /// - Returns: A SystemIdentificationInfo object for this system, based on the user ID.
    public static func getSystemIdForUser(_ user: WindowsSystem_User?) throws -> WindowsSystemProfile_SystemIdentificationInfo {
        try COM.NullResult.unwrap(_isystemIdentificationStatics.getSystemIdForUser(user))
    }

    // MARK: Implementation details

    private static var _isystemIdentificationStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsSystemProfile_ISystemIdentificationStatics>? = nil

    internal static var _isystemIdentificationStatics: COM.COMInterop<CWinRT.SWRT_WindowsSystemProfile_ISystemIdentificationStatics> {
        get throws {
            try _isystemIdentificationStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.System.Profile.SystemIdentification", id: CWinRT.SWRT_WindowsSystemProfile_ISystemIdentificationStatics.iid)
            }
        }
    }
}