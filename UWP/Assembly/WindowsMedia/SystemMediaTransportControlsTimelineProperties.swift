// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents timeline properties of the SystemMediaTransportControls. Pass an instance of this class to the UpdateTimelineProperties method to update the properties.
public final class WindowsMedia_SystemMediaTransportControlsTimelineProperties: WindowsRuntime.WinRTImport<WindowsMedia_SystemMediaTransportControlsTimelinePropertiesProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsMedia_SystemMediaTransportControlsTimelinePropertiesProjection.self))
    }

    // MARK: Windows.Media.ISystemMediaTransportControlsTimelineProperties members

    /// Gets or sets a value representing the end time of the currently playing media item.
    /// - Returns: A value representing the end time of the currently playing media item
    public var endTime: WindowsFoundation_TimeSpan {
        get throws {
            try _interop.get_EndTime()
        }
    }

    /// Gets or sets a value representing the end time of the currently playing media item.
    /// - Returns: A value representing the end time of the currently playing media item
    public func endTime(_ value: WindowsFoundation_TimeSpan) throws {
        try _interop.put_EndTime(value)
    }

    /// Gets or sets a value indicating the latest time within the currently playing media item to which the user can seek.
    /// - Returns: The latest time within the currently playing media item to which the user can seek.
    public var maxSeekTime: WindowsFoundation_TimeSpan {
        get throws {
            try _interop.get_MaxSeekTime()
        }
    }

    /// Gets or sets a value indicating the latest time within the currently playing media item to which the user can seek.
    /// - Returns: The latest time within the currently playing media item to which the user can seek.
    public func maxSeekTime(_ value: WindowsFoundation_TimeSpan) throws {
        try _interop.put_MaxSeekTime(value)
    }

    /// Gets or sets a value indicating the earliest time within the currently playing media item to which the user can seek.
    /// - Returns: A value indicating the earliest time within the currently playing media item to which the user can seek.
    public var minSeekTime: WindowsFoundation_TimeSpan {
        get throws {
            try _interop.get_MinSeekTime()
        }
    }

    /// Gets or sets a value indicating the earliest time within the currently playing media item to which the user can seek.
    /// - Returns: A value indicating the earliest time within the currently playing media item to which the user can seek.
    public func minSeekTime(_ value: WindowsFoundation_TimeSpan) throws {
        try _interop.put_MinSeekTime(value)
    }

    /// Gets or sets a value representing the current playback position within the currently playing media item.
    /// - Returns: The current playback position within the currently playing media item.
    public var position: WindowsFoundation_TimeSpan {
        get throws {
            try _interop.get_Position()
        }
    }

    /// Gets or sets a value representing the current playback position within the currently playing media item.
    /// - Returns: The current playback position within the currently playing media item.
    public func position(_ value: WindowsFoundation_TimeSpan) throws {
        try _interop.put_Position(value)
    }

    /// Gets or sets a value representing the start time of the currently playing media item.
    /// - Returns: A value representing the start time of the currently playing media item.
    public var startTime: WindowsFoundation_TimeSpan {
        get throws {
            try _interop.get_StartTime()
        }
    }

    /// Gets or sets a value representing the start time of the currently playing media item.
    /// - Returns: A value representing the start time of the currently playing media item.
    public func startTime(_ value: WindowsFoundation_TimeSpan) throws {
        try _interop.put_StartTime(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.SystemMediaTransportControlsTimelineProperties", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}