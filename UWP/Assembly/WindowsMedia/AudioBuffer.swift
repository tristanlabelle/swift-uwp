// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a buffer containing audio data.
public final class WindowsMedia_AudioBuffer: WindowsRuntime.WinRTImport<WindowsMedia_AudioBufferProjection>, WindowsFoundation_IMemoryBufferProtocol, WindowsFoundation_IClosableProtocol {
    // MARK: Windows.Media.IAudioBuffer members

    /// Gets the maximum number of bytes that the buffer can hold.
    /// - Returns: The maximum number of bytes that the buffer can hold.
    public var capacity: Swift.UInt32 {
        get throws {
            try _interop.get_Capacity()
        }
    }

    /// Gets or sets the number of bytes currently in use in the buffer.
    /// - Returns: The number of bytes currently in use in the buffer.
    public var length: Swift.UInt32 {
        get throws {
            try _interop.get_Length()
        }
    }

    /// Gets or sets the number of bytes currently in use in the buffer.
    /// - Returns: The number of bytes currently in use in the buffer.
    public func length(_ value: Swift.UInt32) throws {
        try _interop.put_Length(value)
    }

    // MARK: Windows.Foundation.IMemoryBuffer members

    /// Returns an IMemoryBufferReference representation of the audio buffer.
    /// - Returns: The IMemoryBufferReference representation of the audio buffer.
    public func createReference() throws -> WindowsFoundation_IMemoryBufferReference {
        try COM.NullResult.unwrap(_imemoryBuffer.createReference())
    }

    // MARK: Windows.Foundation.IClosable members

    /// Disposes of the object and associated resources.
    public func close() throws {
        try _iclosable.close()
    }

    // MARK: Implementation details

    private var _imemoryBuffer_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IMemoryBuffer>? = nil

    internal var _imemoryBuffer: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IMemoryBuffer> {
        get throws {
            try _imemoryBuffer_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IMemoryBuffer.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IMemoryBuffer.self)
            }
        }
    }

    private var _iclosable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable>? = nil

    internal var _iclosable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable> {
        get throws {
            try _iclosable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IClosable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IClosable.self)
            }
        }
    }

    deinit {
        _imemoryBuffer_storage?.release()
        _iclosable_storage?.release()
    }
}