// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides APIs for managing change tracking for appointments.
public final class WindowsApplicationModelAppointments_AppointmentStoreChangeTracker: WindowsRuntime.WinRTImport<WindowsApplicationModelAppointments_AppointmentStoreChangeTrackerProjection> {
    // MARK: Windows.ApplicationModel.Appointments.IAppointmentStoreChangeTracker members

    /// Retrieves an AppointmentStoreChangeReader that enables the app to iterate through the list of changes and mark changes as accepted.
    /// - Returns: The returned change reader.
    public func getChangeReader() throws -> WindowsApplicationModelAppointments_AppointmentStoreChangeReader {
        try COM.NullResult.unwrap(_interop.getChangeReader())
    }

    /// Enables change tracking for the appointment store.
    public func enable() throws {
        try _interop.enable()
    }

    /// Resets change tracking for the appointment store, deleting existing change tracking data.
    public func reset() throws {
        try _interop.reset()
    }

    // MARK: Windows.ApplicationModel.Appointments.IAppointmentStoreChangeTracker2 members

    /// Gets a Boolean value indicating whether change tracking is active.
    /// - Returns: A Boolean value indicating whether change tracking is active.
    public var isTracking: Swift.Bool {
        get throws {
            try _iappointmentStoreChangeTracker2.get_IsTracking()
        }
    }

    // MARK: Implementation details

    private var _iappointmentStoreChangeTracker2_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelAppointments_IAppointmentStoreChangeTracker2>? = nil

    internal var _iappointmentStoreChangeTracker2: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelAppointments_IAppointmentStoreChangeTracker2> {
        get throws {
            try _iappointmentStoreChangeTracker2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelAppointments_IAppointmentStoreChangeTracker2.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelAppointments_IAppointmentStoreChangeTracker2.self)
            }
        }
    }

    deinit {
        _iappointmentStoreChangeTracker2_storage?.release()
    }
}