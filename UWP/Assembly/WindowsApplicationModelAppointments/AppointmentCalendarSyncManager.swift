// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides access to sync functionality for an AppointmentCalendar object.
public final class WindowsApplicationModelAppointments_AppointmentCalendarSyncManager: WindowsRuntime.WinRTImport<WindowsApplicationModelAppointments_AppointmentCalendarSyncManagerProjection> {
    // MARK: Windows.ApplicationModel.Appointments.IAppointmentCalendarSyncManager members

    /// Gets or sets the last date and time that a sync with the AppointmentCalendar server was attempted.
    /// - Returns: The last date and time that a sync with the AppointmentCalendar server was attempted.
    public var lastAttemptedSyncTime: WindowsFoundation_DateTime {
        get throws {
            try _interop.get_LastAttemptedSyncTime()
        }
    }

    /// Gets or sets the last date and time that a sync with the AppointmentCalendar server was successful.
    /// - Returns: The last date and time that a sync with the AppointmentCalendar server was successful.
    public var lastSuccessfulSyncTime: WindowsFoundation_DateTime {
        get throws {
            try _interop.get_LastSuccessfulSyncTime()
        }
    }

    /// Gets or sets the current status of the AppointmentCalendarSyncManager.
    /// - Returns: The current status of the AppointmentCalendarSyncManager.
    public var status: WindowsApplicationModelAppointments_AppointmentCalendarSyncStatus {
        get throws {
            try _interop.get_Status()
        }
    }

    /// Occurs when the status of an AppointmentCalendar sync operation changes.
    public func syncStatusChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelAppointments_AppointmentCalendarSyncManager?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_SyncStatusChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: syncStatusChanged)
    }

    public func syncStatusChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_SyncStatusChanged(token)
    }

    /// Initiates a sync operation on the AppointmentCalendar.
    /// - Returns: A Boolean value indicating if the sync was successfully initiated.
    public func syncAsync() throws -> WindowsFoundation_IAsyncOperation<Swift.Bool> {
        try COM.NullResult.unwrap(_interop.syncAsync())
    }

    // MARK: Windows.ApplicationModel.Appointments.IAppointmentCalendarSyncManager2 members

    /// Gets or sets the last date and time that a sync with the AppointmentCalendar server was attempted.
    /// - Returns: The last date and time that a sync with the AppointmentCalendar server was attempted.
    public func lastAttemptedSyncTime(_ value: WindowsFoundation_DateTime) throws {
        try _iappointmentCalendarSyncManager2.put_LastAttemptedSyncTime(value)
    }

    /// Gets or sets the last date and time that a sync with the AppointmentCalendar server was successful.
    /// - Returns: The last date and time that a sync with the AppointmentCalendar server was successful.
    public func lastSuccessfulSyncTime(_ value: WindowsFoundation_DateTime) throws {
        try _iappointmentCalendarSyncManager2.put_LastSuccessfulSyncTime(value)
    }

    /// Gets or sets the current status of the AppointmentCalendarSyncManager.
    /// - Returns: The current status of the AppointmentCalendarSyncManager.
    public func status(_ value: WindowsApplicationModelAppointments_AppointmentCalendarSyncStatus) throws {
        try _iappointmentCalendarSyncManager2.put_Status(value)
    }

    // MARK: Implementation details

    private var _iappointmentCalendarSyncManager2_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelAppointments_IAppointmentCalendarSyncManager2>? = nil

    internal var _iappointmentCalendarSyncManager2: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelAppointments_IAppointmentCalendarSyncManager2> {
        get throws {
            try _iappointmentCalendarSyncManager2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelAppointments_IAppointmentCalendarSyncManager2.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelAppointments_IAppointmentCalendarSyncManager2.self)
            }
        }
    }

    deinit {
        _iappointmentCalendarSyncManager2_storage?.release()
    }
}