// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides the appropriate foreground Brush for elements in the item template of a jump list to bind to. The Brush reflects the current theme and accent color, and it's also used to shade empty-group jump list items. By default, the Brush matches built-in apps, but you can override that to suit your design needs using the Enabled and Disabled properties.
public final class WindowsUIXamlControlsPrimitives_JumpListItemForegroundConverter: WindowsRuntime.WinRTImport<WindowsUIXamlControlsPrimitives_JumpListItemForegroundConverterProjection>, WindowsUIXamlData_IValueConverterProtocol {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlControlsPrimitives_JumpListItemForegroundConverterProjection.self))
    }

    // MARK: Windows.UI.Xaml.Controls.Primitives.IJumpListItemForegroundConverter members

    /// Gets or sets the brush to be used for the foreground when the group is empty and the jump list item is disabled.
    /// - Returns: The brush to be used for the foreground when the group is empty and the jump list item is disabled.
    public var disabled: WindowsUIXamlMedia_Brush {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Disabled())
        }
    }

    /// Gets or sets the brush to be used for the foreground when the group is empty and the jump list item is disabled.
    /// - Returns: The brush to be used for the foreground when the group is empty and the jump list item is disabled.
    public func disabled(_ value: WindowsUIXamlMedia_Brush?) throws {
        try _interop.put_Disabled(value)
    }

    /// Gets or sets the brush to be used for the foreground when the group is not empty and the jump list item is enabled.
    /// - Returns: The brush to be used for the foreground when the group is not empty and the jump list item is enabled.
    public var enabled: WindowsUIXamlMedia_Brush {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Enabled())
        }
    }

    /// Gets or sets the brush to be used for the foreground when the group is not empty and the jump list item is enabled.
    /// - Returns: The brush to be used for the foreground when the group is not empty and the jump list item is enabled.
    public func enabled(_ value: WindowsUIXamlMedia_Brush?) throws {
        try _interop.put_Enabled(value)
    }

    // MARK: Windows.UI.Xaml.Data.IValueConverter members

    /// Returns the enabled brush if the item is not empty, otherwise returns the disabled brush.
    /// - Parameter value: The source data being passed to the target.
    /// - Parameter targetType: The Type of data expected by the target dependency property.
    /// - Parameter parameter: An optional parameter to be used in the converter logic.
    /// - Parameter language: The culture of the conversion.
    /// - Returns: The enabled brush if the item is not empty, otherwise the disabled brush.
    public func convert(_ value: WindowsRuntime.IInspectable?, _ targetType: WindowsUIXamlInterop_TypeName, _ parameter: WindowsRuntime.IInspectable?, _ language: Swift.String) throws -> WindowsRuntime.IInspectable {
        try COM.NullResult.unwrap(_ivalueConverter.convert(value, targetType, parameter, language))
    }

    /// Modifies the target data before passing it to the source object
    /// - Parameter value: The target data being passed to the source.
    /// - Parameter targetType: The Type of data expected by the source object.
    /// - Parameter parameter: An optional parameter to be used in the converter logic.
    /// - Parameter language: The culture of the conversion.
    /// - Returns: The value to be passed to the source object.
    public func convertBack(_ value: WindowsRuntime.IInspectable?, _ targetType: WindowsUIXamlInterop_TypeName, _ parameter: WindowsRuntime.IInspectable?, _ language: Swift.String) throws -> WindowsRuntime.IInspectable {
        try COM.NullResult.unwrap(_ivalueConverter.convertBack(value, targetType, parameter, language))
    }

    // MARK: Windows.UI.Xaml.Controls.Primitives.IJumpListItemForegroundConverterStatics members

    /// Identifies the Disabled dependency property.
    /// - Returns: The identifier for the Disabled dependency property.
    public static var disabledProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ijumpListItemForegroundConverterStatics.get_DisabledProperty())
        }
    }

    /// Identifies the Enabled dependency property.
    /// - Returns: The identifier for the Enabled dependency property.
    public static var enabledProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ijumpListItemForegroundConverterStatics.get_EnabledProperty())
        }
    }

    // MARK: Implementation details

    private var _ivalueConverter_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlData_IValueConverter>? = nil

    internal var _ivalueConverter: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlData_IValueConverter> {
        get throws {
            try _ivalueConverter_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIXamlData_IValueConverter.iid).cast(to: CWinRT.SWRT_WindowsUIXamlData_IValueConverter.self)
            }
        }
    }

    deinit {
        _ivalueConverter_storage?.release()
    }

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _ijumpListItemForegroundConverterStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControlsPrimitives_IJumpListItemForegroundConverterStatics>? = nil

    internal static var _ijumpListItemForegroundConverterStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControlsPrimitives_IJumpListItemForegroundConverterStatics> {
        get throws {
            try _ijumpListItemForegroundConverterStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter", id: CWinRT.SWRT_WindowsUIXamlControlsPrimitives_IJumpListItemForegroundConverterStatics.iid)
            }
        }
    }
}