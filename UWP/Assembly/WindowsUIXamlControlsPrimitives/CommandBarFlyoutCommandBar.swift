// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a specialized command bar used in a CommandBarFlyout.
open class WindowsUIXamlControlsPrimitives_CommandBarFlyoutCommandBar: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControlsPrimitives_CommandBarFlyoutCommandBar.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._icommandBarFlyoutCommandBarFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBar members

    /// Gets an object that provides calculated values that can be referenced as {TemplateBinding} markup extension sources when defining templates for a CommandBarFlyoutCommandBar control.
    /// - Returns: An object that provides calculated values for templates.
    public var flyoutTemplateSettings: WindowsUIXamlControlsPrimitives_CommandBarFlyoutCommandBarTemplateSettings {
        get throws {
            try COM.NullResult.unwrap(_icommandBarFlyoutCommandBar.get_FlyoutTemplateSettings())
        }
    }

    // MARK: Implementation details

    private var _icommandBarFlyoutCommandBar_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControlsPrimitives_ICommandBarFlyoutCommandBar>? = nil

    internal var _icommandBarFlyoutCommandBar: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControlsPrimitives_ICommandBarFlyoutCommandBar> {
        get throws {
            try _icommandBarFlyoutCommandBar_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControlsPrimitives_ICommandBarFlyoutCommandBar.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControlsPrimitives_ICommandBarFlyoutCommandBar.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControlsPrimitives_ICommandBarFlyoutCommandBar>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _icommandBarFlyoutCommandBar_storage?.release()
    }

    private static var _icommandBarFlyoutCommandBarFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControlsPrimitives_ICommandBarFlyoutCommandBarFactory>? = nil

    internal static var _icommandBarFlyoutCommandBarFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControlsPrimitives_ICommandBarFlyoutCommandBarFactory> {
        get throws {
            try _icommandBarFlyoutCommandBarFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar", id: CWinRT.SWRT_WindowsUIXamlControlsPrimitives_ICommandBarFlyoutCommandBarFactory.iid)
            }
        }
    }
}