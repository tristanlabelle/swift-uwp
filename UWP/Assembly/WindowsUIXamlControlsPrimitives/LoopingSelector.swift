// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// An infinitely scrolling selection control.
public final class WindowsUIXamlControlsPrimitives_LoopingSelector: WindowsRuntime.WinRTImport<WindowsUIXamlControlsPrimitives_LoopingSelectorProjection> {
    // MARK: Windows.UI.Xaml.Controls.Primitives.ILoopingSelector members

    /// Gets or sets the height of a LoopingSelectorItem that is contained in a LoopingSelector.
    /// - Returns: The height of the layout area for the LoopingSelectorItem that is contained in the LoopingSelector.
    public var itemHeight: Swift.Int32 {
        get throws {
            try _interop.get_ItemHeight()
        }
    }

    /// Gets or sets the height of a LoopingSelectorItem that is contained in a LoopingSelector.
    /// - Returns: The height of the layout area for the LoopingSelectorItem that is contained in the LoopingSelector.
    public func itemHeight(_ value: Swift.Int32) throws {
        try _interop.put_ItemHeight(value)
    }

    /// Gets or sets the DataTemplate used to display each LoopingSelectorItem.
    /// - Returns: The template that specifies the visualization of the LoopingSelectorItem items.
    public var itemTemplate: WindowsUIXaml_DataTemplate {
        get throws {
            try COM.NullResult.unwrap(_interop.get_ItemTemplate())
        }
    }

    /// Gets or sets the DataTemplate used to display each LoopingSelectorItem.
    /// - Returns: The template that specifies the visualization of the LoopingSelectorItem items.
    public func itemTemplate(_ value: WindowsUIXaml_DataTemplate?) throws {
        try _interop.put_ItemTemplate(value)
    }

    /// Gets or sets the width of a LoopingSelectorItem that is contained in a LoopingSelector.
    /// - Returns: The width of the layout area for the LoopingSelectorItem that is contained in the LoopingSelector.
    public var itemWidth: Swift.Int32 {
        get throws {
            try _interop.get_ItemWidth()
        }
    }

    /// Gets or sets the width of a LoopingSelectorItem that is contained in a LoopingSelector.
    /// - Returns: The width of the layout area for the LoopingSelectorItem that is contained in the LoopingSelector.
    public func itemWidth(_ value: Swift.Int32) throws {
        try _interop.put_ItemWidth(value)
    }

    /// Gets a list of the LoopingSelectorItem objects.
    /// - Returns: The list of LoopingSelectorItem objects.
    public var items: WindowsFoundationCollections_IVector<WindowsRuntime.IInspectable?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Items())
        }
    }

    /// Gets a list of the LoopingSelectorItem objects.
    /// - Returns: The list of LoopingSelectorItem objects.
    public func items(_ value: WindowsFoundationCollections_IVector<WindowsRuntime.IInspectable?>?) throws {
        try _interop.put_Items(value)
    }

    /// Gets or sets the index of the LoopingSelectorItem that is displayed in the LoopingSelector.
    /// - Returns: The index of the LoopingSelectorItem that is visible in the LoopingSelector.
    public var selectedIndex: Swift.Int32 {
        get throws {
            try _interop.get_SelectedIndex()
        }
    }

    /// Gets or sets the index of the LoopingSelectorItem that is displayed in the LoopingSelector.
    /// - Returns: The index of the LoopingSelectorItem that is visible in the LoopingSelector.
    public func selectedIndex(_ value: Swift.Int32) throws {
        try _interop.put_SelectedIndex(value)
    }

    /// Gets or sets the LoopingSelectorItem that is displayed in the LoopingSelector.
    /// - Returns: The LoopingSelectorItem that is visible in the LoopingSelector.
    public var selectedItem: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_interop.get_SelectedItem())
        }
    }

    /// Gets or sets the LoopingSelectorItem that is displayed in the LoopingSelector.
    /// - Returns: The LoopingSelectorItem that is visible in the LoopingSelector.
    public func selectedItem(_ value: WindowsRuntime.IInspectable?) throws {
        try _interop.put_SelectedItem(value)
    }

    /// Gets or sets a value that determines whether the LoopingSelector loops indefinitely.
    /// - Returns: **True** if the LoopingSelector loops through all LoopingSelectorItem items indefinitely; otherwise, **false**.
    public var shouldLoop: Swift.Bool {
        get throws {
            try _interop.get_ShouldLoop()
        }
    }

    /// Gets or sets a value that determines whether the LoopingSelector loops indefinitely.
    /// - Returns: **True** if the LoopingSelector loops through all LoopingSelectorItem items indefinitely; otherwise, **false**.
    public func shouldLoop(_ value: Swift.Bool) throws {
        try _interop.put_ShouldLoop(value)
    }

    /// Occurs when the currently selected item changes.
    public func selectionChanged(adding handler: WindowsUIXamlControls_SelectionChangedEventHandler?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_SelectionChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: selectionChanged)
    }

    public func selectionChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_SelectionChanged(token)
    }

    // MARK: Windows.UI.Xaml.Controls.Primitives.ILoopingSelectorStatics members

    /// Identifies the ItemHeight dependency property.
    /// - Returns: The identifier for the ItemHeight dependency property.
    public static var itemHeightProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iloopingSelectorStatics.get_ItemHeightProperty())
        }
    }

    /// Identifies the ItemTemplate dependency property.
    /// - Returns: The identifier for the ItemTemplate dependency property.
    public static var itemTemplateProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iloopingSelectorStatics.get_ItemTemplateProperty())
        }
    }

    /// Identifies the ItemWidth dependency property.
    /// - Returns: The identifier for the ItemWidth dependency property.
    public static var itemWidthProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iloopingSelectorStatics.get_ItemWidthProperty())
        }
    }

    /// Identifies the Items dependency property.
    /// - Returns: The identifier for the Items dependency property.
    public static var itemsProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iloopingSelectorStatics.get_ItemsProperty())
        }
    }

    /// Identifies the SelectedIndex dependency property.
    /// - Returns: The identifier for the SelectedIndex dependency property.
    public static var selectedIndexProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iloopingSelectorStatics.get_SelectedIndexProperty())
        }
    }

    /// Identifies the SelectedItem dependency property.
    /// - Returns: The identifier for the SelectedItem dependency property.
    public static var selectedItemProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iloopingSelectorStatics.get_SelectedItemProperty())
        }
    }

    /// Identifies the ShouldLoop dependency property.
    /// - Returns: The identifier for the ShouldLoop dependency property.
    public static var shouldLoopProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_iloopingSelectorStatics.get_ShouldLoopProperty())
        }
    }

    // MARK: Implementation details

    private static var _iloopingSelectorStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControlsPrimitives_ILoopingSelectorStatics>? = nil

    internal static var _iloopingSelectorStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControlsPrimitives_ILoopingSelectorStatics> {
        get throws {
            try _iloopingSelectorStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.Primitives.LoopingSelector", id: CWinRT.SWRT_WindowsUIXamlControlsPrimitives_ILoopingSelectorStatics.iid)
            }
        }
    }
}