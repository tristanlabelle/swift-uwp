// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the options used to show a flyout.
open class WindowsUIXamlControlsPrimitives_FlyoutShowOptions: WindowsRuntime.WinRTComposableClass {
    // MARK: Windows.UI.Xaml.Controls.Primitives.IFlyoutShowOptionsFactory members

    public convenience init() throws {
        try self.init(_compose: Self.self != WindowsUIXamlControlsPrimitives_FlyoutShowOptions.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._iflyoutShowOptionsFactory.createInstance(baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Controls.Primitives.IFlyoutShowOptions members

    /// Gets or sets a rectangular area that the flyout tries to not overlap.
    /// - Returns: The rectangular area that the flyout tries to not overlap.
    public var exclusionRect: WindowsFoundation_IReference<WindowsFoundation_Rect>? {
        get throws {
            try _iflyoutShowOptions.get_ExclusionRect()
        }
    }

    /// Gets or sets a rectangular area that the flyout tries to not overlap.
    /// - Returns: The rectangular area that the flyout tries to not overlap.
    public func exclusionRect(_ value: WindowsFoundation_IReference<WindowsFoundation_Rect>?) throws {
        try _iflyoutShowOptions.put_ExclusionRect(value)
    }

    /// Gets or sets a value that indicates where the flyout is placed in relation to it's target element.
    /// - Returns: A value of the enumeration that indicates where the flyout is placed in relation to it's target element.
    public var placement: WindowsUIXamlControlsPrimitives_FlyoutPlacementMode {
        get throws {
            try _iflyoutShowOptions.get_Placement()
        }
    }

    /// Gets or sets a value that indicates where the flyout is placed in relation to it's target element.
    /// - Returns: A value of the enumeration that indicates where the flyout is placed in relation to it's target element.
    public func placement(_ value: WindowsUIXamlControlsPrimitives_FlyoutPlacementMode) throws {
        try _iflyoutShowOptions.put_Placement(value)
    }

    /// Gets or sets the position where the flyout opens.
    /// - Returns: The position where the flyout opens.
    public var position: WindowsFoundation_IReference<WindowsFoundation_Point>? {
        get throws {
            try _iflyoutShowOptions.get_Position()
        }
    }

    /// Gets or sets the position where the flyout opens.
    /// - Returns: The position where the flyout opens.
    public func position(_ value: WindowsFoundation_IReference<WindowsFoundation_Point>?) throws {
        try _iflyoutShowOptions.put_Position(value)
    }

    /// Gets or sets a value that indicates how the flyout behaves when opened.
    /// - Returns: A value of the enumeration that indicates how the flyout behaves when opened.
    public var showMode: WindowsUIXamlControlsPrimitives_FlyoutShowMode {
        get throws {
            try _iflyoutShowOptions.get_ShowMode()
        }
    }

    /// Gets or sets a value that indicates how the flyout behaves when opened.
    /// - Returns: A value of the enumeration that indicates how the flyout behaves when opened.
    public func showMode(_ value: WindowsUIXamlControlsPrimitives_FlyoutShowMode) throws {
        try _iflyoutShowOptions.put_ShowMode(value)
    }

    // MARK: Implementation details

    private var _iflyoutShowOptions_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControlsPrimitives_IFlyoutShowOptions>? = nil

    internal var _iflyoutShowOptions: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControlsPrimitives_IFlyoutShowOptions> {
        get throws {
            try _iflyoutShowOptions_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlControlsPrimitives_IFlyoutShowOptions.iid).cast(to: CWinRT.SWRT_WindowsUIXamlControlsPrimitives_IFlyoutShowOptions.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlControlsPrimitives_IFlyoutShowOptions>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _iflyoutShowOptions_storage?.release()
    }

    private static var _iflyoutShowOptionsFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControlsPrimitives_IFlyoutShowOptionsFactory>? = nil

    internal static var _iflyoutShowOptionsFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControlsPrimitives_IFlyoutShowOptionsFactory> {
        get throws {
            try _iflyoutShowOptionsFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.Primitives.FlyoutShowOptions", id: CWinRT.SWRT_WindowsUIXamlControlsPrimitives_IFlyoutShowOptionsFactory.iid)
            }
        }
    }
}