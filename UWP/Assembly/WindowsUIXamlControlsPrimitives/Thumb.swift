// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a control that can be dragged by the user.
public final class WindowsUIXamlControlsPrimitives_Thumb: WindowsRuntime.WinRTImport<WindowsUIXamlControlsPrimitives_ThumbProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIXamlControlsPrimitives_ThumbProjection.self))
    }

    // MARK: Windows.UI.Xaml.Controls.Primitives.IThumb members

    /// Gets whether the Thumb control has focus and mouse capture.
    /// - Returns: **true** if the Thumb control has focus and mouse capture; otherwise, **false**. The default is **false**.
    public var isDragging: Swift.Bool {
        get throws {
            try _interop.get_IsDragging()
        }
    }

    /// Fires when the Thumb control loses mouse capture.
    public func dragCompleted(adding handler: WindowsUIXamlControlsPrimitives_DragCompletedEventHandler?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_DragCompleted(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: dragCompleted)
    }

    public func dragCompleted(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_DragCompleted(token)
    }

    /// Fires one or more times as the mouse pointer is moved when a Thumb control has logical focus and mouse capture.
    public func dragDelta(adding handler: WindowsUIXamlControlsPrimitives_DragDeltaEventHandler?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_DragDelta(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: dragDelta)
    }

    public func dragDelta(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_DragDelta(token)
    }

    /// Fires when a Thumb control receives logical focus and mouse capture.
    public func dragStarted(adding handler: WindowsUIXamlControlsPrimitives_DragStartedEventHandler?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_DragStarted(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: dragStarted)
    }

    public func dragStarted(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_DragStarted(token)
    }

    /// Cancels a drag operation for the Thumb.
    public func cancelDrag() throws {
        try _interop.cancelDrag()
    }

    // MARK: Windows.UI.Xaml.Controls.Primitives.IThumbStatics members

    /// Identifies the IsDragging dependency property.
    /// - Returns: The identifier for the IsDragging dependency property.
    public static var isDraggingProperty: WindowsUIXaml_DependencyProperty {
        get throws {
            try COM.NullResult.unwrap(_ithumbStatics.get_IsDraggingProperty())
        }
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.Primitives.Thumb", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _ithumbStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControlsPrimitives_IThumbStatics>? = nil

    internal static var _ithumbStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlControlsPrimitives_IThumbStatics> {
        get throws {
            try _ithumbStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Controls.Primitives.Thumb", id: CWinRT.SWRT_WindowsUIXamlControlsPrimitives_IThumbStatics.iid)
            }
        }
    }
}