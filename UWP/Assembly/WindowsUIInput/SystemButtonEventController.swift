// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Enables an application to handle events generated by system keyboard buttons (such as the Function keys).
public final class WindowsUIInput_SystemButtonEventController: WindowsRuntime.WinRTImport<WindowsUIInput_SystemButtonEventControllerProjection> {
    // MARK: Windows.UI.Input.ISystemButtonEventController members

    /// Occurs when a Function (also know as Function Shift) key is pressed.
    public func systemFunctionButtonPressed(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIInput_SystemButtonEventController?, WindowsUIInput_SystemFunctionButtonEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_SystemFunctionButtonPressed(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: systemFunctionButtonPressed)
    }

    public func systemFunctionButtonPressed(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_SystemFunctionButtonPressed(token)
    }

    /// Occurs when a Function (also know as Function Shift) key, which is currently pressed, is released.
    public func systemFunctionButtonReleased(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIInput_SystemButtonEventController?, WindowsUIInput_SystemFunctionButtonEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_SystemFunctionButtonReleased(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: systemFunctionButtonReleased)
    }

    public func systemFunctionButtonReleased(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_SystemFunctionButtonReleased(token)
    }

    /// Occurs on changes to the state of the Function (also know as Function Shift) key lock.
    public func systemFunctionLockChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIInput_SystemButtonEventController?, WindowsUIInput_SystemFunctionLockChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_SystemFunctionLockChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: systemFunctionLockChanged)
    }

    public func systemFunctionLockChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_SystemFunctionLockChanged(token)
    }

    /// Occurs on changes to the state of the visual indicator for the Function (also know as Function Shift) key lock.
    public func systemFunctionLockIndicatorChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIInput_SystemButtonEventController?, WindowsUIInput_SystemFunctionLockIndicatorChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_SystemFunctionLockIndicatorChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: systemFunctionLockIndicatorChanged)
    }

    public func systemFunctionLockIndicatorChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_SystemFunctionLockIndicatorChanged(token)
    }

    // MARK: Windows.UI.Input.ISystemButtonEventControllerStatics members

    /// Creates a SystemButtonEventController object on the specified dispatcher queue.
    /// - Parameter queue: The DispatcherQueue for managing prioritized tasks that execute in a serial fashion on a thread.
    /// - Returns: A SystemButtonEventController.
    public static func createForDispatcherQueue(_ queue: WindowsSystem_DispatcherQueue?) throws -> WindowsUIInput_SystemButtonEventController {
        try COM.NullResult.unwrap(_isystemButtonEventControllerStatics.createForDispatcherQueue(queue))
    }

    // MARK: Implementation details

    private static var _isystemButtonEventControllerStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIInput_ISystemButtonEventControllerStatics>? = nil

    internal static var _isystemButtonEventControllerStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIInput_ISystemButtonEventControllerStatics> {
        get throws {
            try _isystemButtonEventControllerStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Input.SystemButtonEventController", id: CWinRT.SWRT_WindowsUIInput_ISystemButtonEventControllerStatics.iid)
            }
        }
    }
}