// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a single custom tool from the RadialController menu.
public final class WindowsUIInput_RadialControllerMenuItem: WindowsRuntime.WinRTImport<WindowsUIInput_RadialControllerMenuItemProjection> {
    // MARK: Windows.UI.Input.IRadialControllerMenuItem members

    /// Gets the text string of the custom tool on the RadialController menu.
    /// - Returns: The text string of the custom tool.
    public var displayText: Swift.String {
        get throws {
            try _interop.get_DisplayText()
        }
    }

    /// Gets or sets an object used to identify custom tools on the RadialController menu.
    /// - Returns: Identifies custom tools on the RadialController menu.
    public var tag: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Tag())
        }
    }

    /// Gets or sets an object used to identify custom tools on the RadialController menu.
    /// - Returns: Identifies custom tools on the RadialController menu.
    public func tag(_ value: WindowsRuntime.IInspectable?) throws {
        try _interop.put_Tag(value)
    }

    /// Occurs when a custom tool is selected from the RadialController menu.
    public func invoked(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIInput_RadialControllerMenuItem?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Invoked(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: invoked)
    }

    public func invoked(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Invoked(token)
    }

    // MARK: Windows.UI.Input.IRadialControllerMenuItemStatics members

    /// Creates a custom tool (using the specified text string and custom icon) on the RadialController menu.
    /// - Parameter displayText: The text string to display for the custom tool.
    /// - Parameter icon: The custom icon to display for the custom tool.
    /// - Returns: The custom tool.
    public static func createFromIcon(_ displayText: Swift.String, _ icon: WindowsStorageStreams_RandomAccessStreamReference?) throws -> WindowsUIInput_RadialControllerMenuItem {
        try COM.NullResult.unwrap(_iradialControllerMenuItemStatics.createFromIcon(displayText, icon))
    }

    /// Creates a custom tool (using the specified text string and system icon) on the RadialController menu.
    /// - Parameter displayText: The text string to display for the custom tool.
    /// - Parameter value: The system icon to display for the custom tool.
    /// - Returns: The custom tool.
    public static func createFromKnownIcon(_ displayText: Swift.String, _ value: WindowsUIInput_RadialControllerMenuKnownIcon) throws -> WindowsUIInput_RadialControllerMenuItem {
        try COM.NullResult.unwrap(_iradialControllerMenuItemStatics.createFromKnownIcon(displayText, value))
    }

    // MARK: Windows.UI.Input.IRadialControllerMenuItemStatics2 members

    /// Creates a custom tool (using the specified text string and font glyph) on the RadialController menu.
    /// - Parameter displayText: The text string to display for the custom tool.
    /// - Parameter glyph: The font glyph to display for the custom tool.
    /// - Parameter fontFamily: The font family that contains the glyph to display for the custom tool.
    /// - Returns: The custom tool.
    public static func createFromFontGlyph(_ displayText: Swift.String, _ glyph: Swift.String, _ fontFamily: Swift.String) throws -> WindowsUIInput_RadialControllerMenuItem {
        try COM.NullResult.unwrap(_iradialControllerMenuItemStatics2.createFromFontGlyph(displayText, glyph, fontFamily))
    }

    /// Creates a custom tool (using the specified text string and font glyph) on the RadialController menu.
    /// - Parameter displayText: The text string to display for the custom tool.
    /// - Parameter glyph: The font glyph to display for the custom tool.
    /// - Parameter fontFamily: The font family that contains the glyph to display for the custom tool.
    /// - Parameter fontUri: The Uniform Resource Identifier (URI) that identifies the location of the font used for rendering the glyph.
    /// - Returns: The custom tool.
    public static func createFromFontGlyph(_ displayText: Swift.String, _ glyph: Swift.String, _ fontFamily: Swift.String, _ fontUri: WindowsFoundation_Uri?) throws -> WindowsUIInput_RadialControllerMenuItem {
        try COM.NullResult.unwrap(_iradialControllerMenuItemStatics2.createFromFontGlyphWithUri(displayText, glyph, fontFamily, fontUri))
    }

    // MARK: Implementation details

    private static var _iradialControllerMenuItemStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIInput_IRadialControllerMenuItemStatics>? = nil

    internal static var _iradialControllerMenuItemStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIInput_IRadialControllerMenuItemStatics> {
        get throws {
            try _iradialControllerMenuItemStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Input.RadialControllerMenuItem", id: CWinRT.SWRT_WindowsUIInput_IRadialControllerMenuItemStatics.iid)
            }
        }
    }

    private static var _iradialControllerMenuItemStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIInput_IRadialControllerMenuItemStatics2>? = nil

    internal static var _iradialControllerMenuItemStatics2: COM.COMInterop<CWinRT.SWRT_WindowsUIInput_IRadialControllerMenuItemStatics2> {
        get throws {
            try _iradialControllerMenuItemStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Input.RadialControllerMenuItem", id: CWinRT.SWRT_WindowsUIInput_IRadialControllerMenuItemStatics2.iid)
            }
        }
    }
}