// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Contains event data for the ControlAcquired event when a custom tool is selected from the RadialController menu, or when an app associated with the RadialController object is brought to the foreground (fired only while a custom RadialController tool is active).
public final class WindowsUIInput_RadialControllerControlAcquiredEventArgs: WindowsRuntime.WinRTImport<WindowsUIInput_RadialControllerControlAcquiredEventArgsProjection> {
    // MARK: Windows.UI.Input.IRadialControllerControlAcquiredEventArgs members

    /// Gets the location and bounding area of the wheel device on the digitizer surface, while a custom tool is active.
    /// - Returns: The location and bounding area, in device-independent pixel (DIP), of the wheel device on the digitizer surface.
    public var contact: WindowsUIInput_RadialControllerScreenContact {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Contact())
        }
    }

    // MARK: Windows.UI.Input.IRadialControllerControlAcquiredEventArgs2 members

    /// Gets whether the wheel device is pressed.
    /// - Returns: **true** if pressed. Otherwise, **false**.
    public var isButtonPressed: Swift.Bool {
        get throws {
            try _iradialControllerControlAcquiredEventArgs2.get_IsButtonPressed()
        }
    }

    /// Gets a reference to the SimpleHapticsController object associated with the RadialController.
    /// - Returns: The SimpleHapticsController object associated with the RadialController.
    public var simpleHapticsController: WindowsDevicesHaptics_SimpleHapticsController {
        get throws {
            try COM.NullResult.unwrap(_iradialControllerControlAcquiredEventArgs2.get_SimpleHapticsController())
        }
    }

    // MARK: Implementation details

    private var _iradialControllerControlAcquiredEventArgs2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIInput_IRadialControllerControlAcquiredEventArgs2>? = nil

    internal var _iradialControllerControlAcquiredEventArgs2: COM.COMInterop<CWinRT.SWRT_WindowsUIInput_IRadialControllerControlAcquiredEventArgs2> {
        get throws {
            try _iradialControllerControlAcquiredEventArgs2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIInput_IRadialControllerControlAcquiredEventArgs2.iid).cast(to: CWinRT.SWRT_WindowsUIInput_IRadialControllerControlAcquiredEventArgs2.self)
            }
        }
    }

    deinit {
        _iradialControllerControlAcquiredEventArgs2_storage?.release()
    }
}