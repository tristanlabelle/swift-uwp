// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides event data for the GazeMoved event.
public final class WindowsDevicesInputPreview_GazeMovedPreviewEventArgs: WindowsRuntime.WinRTImport<WindowsDevicesInputPreview_GazeMovedPreviewEventArgsProjection> {
    // MARK: Windows.Devices.Input.Preview.IGazeMovedPreviewEventArgs members

    /// Gets the gaze pointer data from the most recent GazeMoved event.
    /// - Returns: A gaze pointer object.
    public var currentPoint: WindowsDevicesInputPreview_GazePointPreview {
        get throws {
            try COM.NullResult.unwrap(_interop.get_CurrentPoint())
        }
    }

    /// Gets or sets a value that indicates whether the GazeMoved event has been handled.
    /// - Returns: **true** to mark the event handled. **false** to leave the event unhandled, which permits the event to potentially be acted on by other handlers. The default is **false**.
    public var handled: Swift.Bool {
        get throws {
            try _interop.get_Handled()
        }
    }

    /// Gets or sets a value that indicates whether the GazeMoved event has been handled.
    /// - Returns: **true** to mark the event handled. **false** to leave the event unhandled, which permits the event to potentially be acted on by other handlers. The default is **false**.
    public func handled(_ value: Swift.Bool) throws {
        try _interop.put_Handled(value)
    }

    /// Retrieves the gaze point data for each gaze location logged since the most recent GazeMoved event, up to and including the current event.
    /// - Returns: A collection of gaze point objects.
    public func getIntermediatePoints() throws -> WindowsFoundationCollections_IVector<WindowsDevicesInputPreview_GazePointPreview?> {
        try COM.NullResult.unwrap(_interop.getIntermediatePoints())
    }

    // MARK: Implementation details
}