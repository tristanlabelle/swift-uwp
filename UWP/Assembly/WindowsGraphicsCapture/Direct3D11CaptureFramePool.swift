// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Stores frames captured by the application.
public final class WindowsGraphicsCapture_Direct3D11CaptureFramePool: WindowsRuntime.WinRTImport<WindowsGraphicsCapture_Direct3D11CaptureFramePoolProjection>, WindowsFoundation_IClosableProtocol {
    // MARK: Windows.Graphics.Capture.IDirect3D11CaptureFramePool members

    /// The **DispatcherQueue** for the frame pool.
    /// - Returns: The **DispatcherQueue** for the frame pool.
    public var dispatcherQueue: WindowsSystem_DispatcherQueue {
        get throws {
            try COM.NullResult.unwrap(_interop.get_DispatcherQueue())
        }
    }

    /// An event raised when a captured frame is stored in the frame pool.
    public func frameArrived(adding handler: WindowsFoundation_TypedEventHandler<WindowsGraphicsCapture_Direct3D11CaptureFramePool?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_FrameArrived(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: frameArrived)
    }

    public func frameArrived(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_FrameArrived(token)
    }

    /// Recreates the frame pool based on the given inputs.
    /// - Parameter device: The Direct3D device.
    /// - Parameter pixelFormat: The DirectX pixel format of the captured frames.
    /// - Parameter numberOfBuffers: The number of buffers in which to store captured frames.
    /// - Parameter size: The size of each buffer.
    public func recreate(_ device: WindowsGraphicsDirectXDirect3D11_IDirect3DDevice?, _ pixelFormat: WindowsGraphicsDirectX_DirectXPixelFormat, _ numberOfBuffers: Swift.Int32, _ size: WindowsGraphics_SizeInt32) throws {
        try _interop.recreate(device, pixelFormat, numberOfBuffers, size)
    }

    /// Tries to get the next captured frame from the frame pool.
    /// - Returns: The next captured frame in the frame pool; if the pool is empty, this method returns **null**.
    public func tryGetNextFrame() throws -> WindowsGraphicsCapture_Direct3D11CaptureFrame {
        try COM.NullResult.unwrap(_interop.tryGetNextFrame())
    }

    /// Creates a capture session based on the given capture item and frame pool.
    /// - Parameter item: The capture item (the target of the capture).
    /// - Returns: A capture session created from the given capture item and frame pool.
    public func createCaptureSession(_ item: WindowsGraphicsCapture_GraphicsCaptureItem?) throws -> WindowsGraphicsCapture_GraphicsCaptureSession {
        try COM.NullResult.unwrap(_interop.createCaptureSession(item))
    }

    // MARK: Windows.Foundation.IClosable members

    /// Disposes of the capture frame pool and releases its resources.
    public func close() throws {
        try _iclosable.close()
    }

    // MARK: Windows.Graphics.Capture.IDirect3D11CaptureFramePoolStatics members

    /// Creates a frame pool.
    /// - Parameter device: The Direct3D device.
    /// - Parameter pixelFormat: The DirectX pixel format of the captured frames.
    /// - Parameter numberOfBuffers: The number of buffers in which to store captured frames.
    /// - Parameter size: The size of each buffer.
    /// - Returns: A frame pool created with the given inputs.
    public static func create(_ device: WindowsGraphicsDirectXDirect3D11_IDirect3DDevice?, _ pixelFormat: WindowsGraphicsDirectX_DirectXPixelFormat, _ numberOfBuffers: Swift.Int32, _ size: WindowsGraphics_SizeInt32) throws -> WindowsGraphicsCapture_Direct3D11CaptureFramePool {
        try COM.NullResult.unwrap(_idirect3D11CaptureFramePoolStatics.create(device, pixelFormat, numberOfBuffers, size))
    }

    // MARK: Windows.Graphics.Capture.IDirect3D11CaptureFramePoolStatics2 members

    /// Creates a frame pool where the dependency on the DispatcherQueue is removed and the FrameArrived event is raised on the frame pool's internal worker thread.
    /// - Parameter device: The Direct3D device.
    /// - Parameter pixelFormat: The DirectX pixel format of the captured frames.
    /// - Parameter numberOfBuffers: The number of buffers in which to store captured frames.
    /// - Parameter size: The size of each buffer.
    /// - Returns: A frame pool created with the given inputs.
    public static func createFreeThreaded(_ device: WindowsGraphicsDirectXDirect3D11_IDirect3DDevice?, _ pixelFormat: WindowsGraphicsDirectX_DirectXPixelFormat, _ numberOfBuffers: Swift.Int32, _ size: WindowsGraphics_SizeInt32) throws -> WindowsGraphicsCapture_Direct3D11CaptureFramePool {
        try COM.NullResult.unwrap(_idirect3D11CaptureFramePoolStatics2.createFreeThreaded(device, pixelFormat, numberOfBuffers, size))
    }

    // MARK: Implementation details

    private var _iclosable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable>? = nil

    internal var _iclosable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable> {
        get throws {
            try _iclosable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IClosable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IClosable.self)
            }
        }
    }

    deinit {
        _iclosable_storage?.release()
    }

    private static var _idirect3D11CaptureFramePoolStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsCapture_IDirect3D11CaptureFramePoolStatics>? = nil

    internal static var _idirect3D11CaptureFramePoolStatics: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsCapture_IDirect3D11CaptureFramePoolStatics> {
        get throws {
            try _idirect3D11CaptureFramePoolStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Graphics.Capture.Direct3D11CaptureFramePool", id: CWinRT.SWRT_WindowsGraphicsCapture_IDirect3D11CaptureFramePoolStatics.iid)
            }
        }
    }

    private static var _idirect3D11CaptureFramePoolStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsCapture_IDirect3D11CaptureFramePoolStatics2>? = nil

    internal static var _idirect3D11CaptureFramePoolStatics2: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsCapture_IDirect3D11CaptureFramePoolStatics2> {
        get throws {
            try _idirect3D11CaptureFramePoolStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Graphics.Capture.Direct3D11CaptureFramePool", id: CWinRT.SWRT_WindowsGraphicsCapture_IDirect3D11CaptureFramePoolStatics2.iid)
            }
        }
    }
}