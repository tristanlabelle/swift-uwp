// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// A frame captured by the application.
public final class WindowsGraphicsCapture_Direct3D11CaptureFrame: WindowsRuntime.WinRTImport<WindowsGraphicsCapture_Direct3D11CaptureFrameProjection>, WindowsFoundation_IClosableProtocol {
    // MARK: Windows.Graphics.Capture.IDirect3D11CaptureFrame members

    /// The content size at the time the frame was rendered.
    /// - Returns: The content size at the time the frame was rendered.
    public var contentSize: WindowsGraphics_SizeInt32 {
        get throws {
            try _interop.get_ContentSize()
        }
    }

    /// The Direct3D surface on which the frame was drawn.
    /// - Returns: The Direct3D surface on which the frame was drawn.
    public var surface: WindowsGraphicsDirectXDirect3D11_IDirect3DSurface {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Surface())
        }
    }

    /// The QPC (Query Performance Counter) time at which the compositor rendered the frame.
    /// - Returns: The QPC (Query Performance Counter) time at which the compositor rendered the frame.
    public var systemRelativeTime: WindowsFoundation_TimeSpan {
        get throws {
            try _interop.get_SystemRelativeTime()
        }
    }

    // MARK: Windows.Foundation.IClosable members

    /// Releases the captured frame from memory.
    public func close() throws {
        try _iclosable.close()
    }

    // MARK: Implementation details

    private var _iclosable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable>? = nil

    internal var _iclosable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable> {
        get throws {
            try _iclosable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IClosable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IClosable.self)
            }
        }
    }

    deinit {
        _iclosable_storage?.release()
    }
}