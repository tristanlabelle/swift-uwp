// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Contains the base features that describe how to override setting displays.
public final class WindowsGraphicsDisplay_DisplayEnhancementOverride: WindowsRuntime.WinRTImport<WindowsGraphicsDisplay_DisplayEnhancementOverrideProjection> {
    // MARK: Windows.Graphics.Display.IDisplayEnhancementOverride members

    /// Gets and sets the brightness override settings.
    /// - Returns: The brightness override settings. A null BrightnessOverrideSettings property means that the DisplayEnhancementOverride does not want to override brightness settings. This property is null by default.
    public var brightnessOverrideSettings: WindowsGraphicsDisplay_BrightnessOverrideSettings {
        get throws {
            try COM.NullResult.unwrap(_interop.get_BrightnessOverrideSettings())
        }
    }

    /// Gets and sets the brightness override settings.
    /// - Returns: The brightness override settings. A null BrightnessOverrideSettings property means that the DisplayEnhancementOverride does not want to override brightness settings. This property is null by default.
    public func brightnessOverrideSettings(_ value: WindowsGraphicsDisplay_BrightnessOverrideSettings?) throws {
        try _interop.put_BrightnessOverrideSettings(value)
    }

    /// Gets a value that describes whether the current display settings can be overridden.
    /// - Returns: **True** if the DisplayEnhancementOverride object can successfully override the system's brightness and/or color with its current configuration at the moment that CanOverrideis queried. This can be used to test if override control can be obtained without having to call RequestOverride.
    public var canOverride: Swift.Bool {
        get throws {
            try _interop.get_CanOverride()
        }
    }

    /// Gets and sets the color override settings.
    /// - Returns: The color override settings. A null ColorOverrideSettings property means that the DisplayEnhancementOverride object does not want to override color settings. This property is null by default.
    public var colorOverrideSettings: WindowsGraphicsDisplay_ColorOverrideSettings {
        get throws {
            try COM.NullResult.unwrap(_interop.get_ColorOverrideSettings())
        }
    }

    /// Gets and sets the color override settings.
    /// - Returns: The color override settings. A null ColorOverrideSettings property means that the DisplayEnhancementOverride object does not want to override color settings. This property is null by default.
    public func colorOverrideSettings(_ value: WindowsGraphicsDisplay_ColorOverrideSettings?) throws {
        try _interop.put_ColorOverrideSettings(value)
    }

    /// Gets a value that describes whether the display enhancement overrides are active.
    /// - Returns: **True** if the display enhancement override object is currently overriding the system's brightness and/or color settings. Otherwise, **false**.
    public var isOverrideActive: Swift.Bool {
        get throws {
            try _interop.get_IsOverrideActive()
        }
    }

    /// Raised when the ability to override the display settings have been changed.
    public func canOverrideChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsGraphicsDisplay_DisplayEnhancementOverride?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_CanOverrideChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: canOverrideChanged)
    }

    public func canOverrideChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_CanOverrideChanged(token)
    }

    /// Raised when the display enhancement override capabilities have been changed.
    public func displayEnhancementOverrideCapabilitiesChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsGraphicsDisplay_DisplayEnhancementOverride?, WindowsGraphicsDisplay_DisplayEnhancementOverrideCapabilitiesChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_DisplayEnhancementOverrideCapabilitiesChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: displayEnhancementOverrideCapabilitiesChanged)
    }

    public func displayEnhancementOverrideCapabilitiesChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_DisplayEnhancementOverrideCapabilitiesChanged(token)
    }

    /// Raised when the IsOverrideActive property is changed.
    public func isOverrideActiveChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsGraphicsDisplay_DisplayEnhancementOverride?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_IsOverrideActiveChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: isOverrideActiveChanged)
    }

    public func isOverrideActiveChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_IsOverrideActiveChanged(token)
    }

    /// Retrieves the current display enhancement overide capabilities.
    /// - Returns: The current display enhancement override capabilities.
    public func getCurrentDisplayEnhancementOverrideCapabilities() throws -> WindowsGraphicsDisplay_DisplayEnhancementOverrideCapabilities {
        try COM.NullResult.unwrap(_interop.getCurrentDisplayEnhancementOverrideCapabilities())
    }

    /// Requests that the current display be overridden with the current display override settings.
    public func requestOverride() throws {
        try _interop.requestOverride()
    }

    /// Notifies the system that this display enhancement object no longer wants to apply its settings.
    public func stopOverride() throws {
        try _interop.stopOverride()
    }

    // MARK: Windows.Graphics.Display.IDisplayEnhancementOverrideStatics members

    /// Retrieves a display enhancement override object for the current view.
    /// - Returns: The display enhancement override object for the current view.
    public static func getForCurrentView() throws -> WindowsGraphicsDisplay_DisplayEnhancementOverride {
        try COM.NullResult.unwrap(_idisplayEnhancementOverrideStatics.getForCurrentView())
    }

    // MARK: Implementation details

    private static var _idisplayEnhancementOverrideStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsDisplay_IDisplayEnhancementOverrideStatics>? = nil

    internal static var _idisplayEnhancementOverrideStatics: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsDisplay_IDisplayEnhancementOverrideStatics> {
        get throws {
            try _idisplayEnhancementOverrideStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Graphics.Display.DisplayEnhancementOverride", id: CWinRT.SWRT_WindowsGraphicsDisplay_IDisplayEnhancementOverrideStatics.iid)
            }
        }
    }
}