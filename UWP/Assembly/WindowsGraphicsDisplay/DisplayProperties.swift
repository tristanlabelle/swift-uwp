// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

///  Provides various properties that are related to the physical display. For most of these properties, the class provides events to allow clients to monitor for changes in the properties.
public enum WindowsGraphicsDisplay_DisplayProperties {
    // MARK: Windows.Graphics.Display.IDisplayPropertiesStatics members

    ///  Gets and sets the preferred orientation of the app.
    /// - Returns: The orientation of a rectangular monitor.
    public static var autoRotationPreferences: WindowsGraphicsDisplay_DisplayOrientations {
        get throws {
            try _idisplayPropertiesStatics.get_AutoRotationPreferences()
        }
    }

    ///  Gets and sets the preferred orientation of the app.
    /// - Returns: The orientation of a rectangular monitor.
    public static func autoRotationPreferences(_ value: WindowsGraphicsDisplay_DisplayOrientations) throws {
        try _idisplayPropertiesStatics.put_AutoRotationPreferences(value)
    }

    ///  Gets the current orientation of a rectangular monitor.
    /// - Returns: The current orientation of a rectangular monitor.
    public static var currentOrientation: WindowsGraphicsDisplay_DisplayOrientations {
        get throws {
            try _idisplayPropertiesStatics.get_CurrentOrientation()
        }
    }

    ///  Gets the pixels per logical inch of the current environment.
    /// - Returns: The pixels per logical inch of the current environment.
    public static var logicalDpi: Swift.Float {
        get throws {
            try _idisplayPropertiesStatics.get_LogicalDpi()
        }
    }

    ///  Gets the native orientation of the display monitor, which is typically the orientation where the buttons on the device match the orientation of the monitor.
    /// - Returns: The native orientation of the display monitor.
    public static var nativeOrientation: WindowsGraphicsDisplay_DisplayOrientations {
        get throws {
            try _idisplayPropertiesStatics.get_NativeOrientation()
        }
    }

    ///  Gets the scale factor of the immersive environment.
    /// - Returns: The scale factor of the immersive environment.
    public static var resolutionScale: WindowsGraphicsDisplay_ResolutionScale {
        get throws {
            try _idisplayPropertiesStatics.get_ResolutionScale()
        }
    }

    ///  Gets a value that indicates whether the device supports stereoscopic 3D.
    /// - Returns: **TRUE** if the device is capable of stereoscopic 3D and stereoscopic 3D is currently enabled; **FALSE** otherwise.
    public static var stereoEnabled: Swift.Bool {
        get throws {
            try _idisplayPropertiesStatics.get_StereoEnabled()
        }
    }

    ///  Occurs when the physical display's color profile changes.
    public static func colorProfileChanged(adding handler: WindowsGraphicsDisplay_DisplayPropertiesEventHandler?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _idisplayPropertiesStatics.add_ColorProfileChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: colorProfileChanged)
    }

    public static func colorProfileChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _idisplayPropertiesStatics.remove_ColorProfileChanged(token)
    }

    /// Occurs when the display requires redrawing.
    public static func displayContentsInvalidated(adding handler: WindowsGraphicsDisplay_DisplayPropertiesEventHandler?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _idisplayPropertiesStatics.add_DisplayContentsInvalidated(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: displayContentsInvalidated)
    }

    public static func displayContentsInvalidated(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _idisplayPropertiesStatics.remove_DisplayContentsInvalidated(token)
    }

    ///  Occurs when the LogicalDpi property changes because the pixels per inch (PPI) of the display changes.
    public static func logicalDpiChanged(adding handler: WindowsGraphicsDisplay_DisplayPropertiesEventHandler?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _idisplayPropertiesStatics.add_LogicalDpiChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: logicalDpiChanged)
    }

    public static func logicalDpiChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _idisplayPropertiesStatics.remove_LogicalDpiChanged(token)
    }

    ///  Occurs when either the CurrentOrientation or NativeOrientation property changes because of a mode change or a monitor change.
    public static func orientationChanged(adding handler: WindowsGraphicsDisplay_DisplayPropertiesEventHandler?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _idisplayPropertiesStatics.add_OrientationChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: orientationChanged)
    }

    public static func orientationChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _idisplayPropertiesStatics.remove_OrientationChanged(token)
    }

    ///  Occurs when the StereoEnabled property changes because support for stereoscopic 3D changes.
    public static func stereoEnabledChanged(adding handler: WindowsGraphicsDisplay_DisplayPropertiesEventHandler?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _idisplayPropertiesStatics.add_StereoEnabledChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: stereoEnabledChanged)
    }

    public static func stereoEnabledChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _idisplayPropertiesStatics.remove_StereoEnabledChanged(token)
    }

    ///  Asynchronously gets the default International Color Consortium (ICC) color profile that is associated with the physical display.
    /// - Returns: Object that manages the asynchronous retrieval of the color profile.
    public static func getColorProfileAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsStorageStreams_IRandomAccessStream?> {
        try COM.NullResult.unwrap(_idisplayPropertiesStatics.getColorProfileAsync())
    }

    // MARK: Implementation details

    private static var _idisplayPropertiesStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsDisplay_IDisplayPropertiesStatics>? = nil

    internal static var _idisplayPropertiesStatics: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsDisplay_IDisplayPropertiesStatics> {
        get throws {
            try _idisplayPropertiesStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Graphics.Display.DisplayProperties", id: CWinRT.SWRT_WindowsGraphicsDisplay_IDisplayPropertiesStatics.iid)
            }
        }
    }
}