// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a Wi-Fi Direct service. This class is used by code on a device that seeks to use a Wi-Fi Direct Service, to establish a Wi-Fi Direct Service session with the service provider.
public final class WindowsDevicesWiFiDirectServices_WiFiDirectService: WindowsRuntime.WinRTImport<WindowsDevicesWiFiDirectServices_WiFiDirectServiceProjection> {
    // MARK: Windows.Devices.WiFiDirect.Services.IWiFiDirectService members

    /// Gets or sets a value specifying whether the service instance should choose Wi-Fi Direct Point to Point (P2P) Group Owner (GO) mode.
    /// - Returns: When true, prefer GO mode.
    public var preferGroupOwnerMode: Swift.Bool {
        get throws {
            try _interop.get_PreferGroupOwnerMode()
        }
    }

    /// Gets or sets a value specifying whether the service instance should choose Wi-Fi Direct Point to Point (P2P) Group Owner (GO) mode.
    /// - Returns: When true, prefer GO mode.
    public func preferGroupOwnerMode(_ value: Swift.Bool) throws {
        try _interop.put_PreferGroupOwnerMode(value)
    }

    /// Gets the service information blob from this service instance.
    /// - Returns: A buffer of up to 255 bytes with information from the server. The format of this blob is determined by the individual service.
    public var remoteServiceInfo: WindowsStorageStreams_IBuffer {
        get throws {
            try COM.NullResult.unwrap(_interop.get_RemoteServiceInfo())
        }
    }

    /// Error information about the latest attempt to connect to the service.
    /// - Returns: An enumeration value specifying the detailed reason for the failure.
    public var serviceError: WindowsDevicesWiFiDirectServices_WiFiDirectServiceError {
        get throws {
            try _interop.get_ServiceError()
        }
    }

    /// Gets or sets app-specific session information passed to the server when initiating a session.
    /// - Returns: Session information. Format is determined by the individual service. Set this property before calling ConnectAsync.
    public var sessionInfo: WindowsStorageStreams_IBuffer {
        get throws {
            try COM.NullResult.unwrap(_interop.get_SessionInfo())
        }
    }

    /// Gets or sets app-specific session information passed to the server when initiating a session.
    /// - Returns: Session information. Format is determined by the individual service. Set this property before calling ConnectAsync.
    public func sessionInfo(_ value: WindowsStorageStreams_IBuffer?) throws {
        try _interop.put_SessionInfo(value)
    }

    /// Gets a list of supported configuration methods, ordered by preference. Your code uses IVector operations to modify the contents of the list.
    /// - Returns: Ordered list of configuration method enumeration values.
    public var supportedConfigurationMethods: WindowsFoundationCollections_IVectorView<WindowsDevicesWiFiDirectServices_WiFiDirectServiceConfigurationMethod> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_SupportedConfigurationMethods())
        }
    }

    /// Event raised when a session request has been deferred. Note that this does not mean that the request has failed or been denied. It is a notification that the server is performing a long operation, such as waiting for a user to enter a PIN. The seeker that receives this message should begin a 120-second wait before it times out the session request, to give the server time to complete its operation.
    public func sessionDeferred(adding handler: WindowsFoundation_TypedEventHandler<WindowsDevicesWiFiDirectServices_WiFiDirectService?, WindowsDevicesWiFiDirectServices_WiFiDirectServiceSessionDeferredEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_SessionDeferred(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: sessionDeferred)
    }

    public func sessionDeferred(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_SessionDeferred(token)
    }

    /// Asynchronously retrieves Wi-Fi Direct Service session provisioning information.
    /// - Parameter selectedConfigurationMethod: The preferred method of configuring the session.
    /// - Returns: An asynchronous retrieval operation. On successful completion, returns provisioning information.
    public func getProvisioningInfoAsync(_ selectedConfigurationMethod: WindowsDevicesWiFiDirectServices_WiFiDirectServiceConfigurationMethod) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesWiFiDirectServices_WiFiDirectServiceProvisioningInfo?> {
        try COM.NullResult.unwrap(_interop.getProvisioningInfoAsync(selectedConfigurationMethod))
    }

    /// Initiates the establishment of a service session with the Wi-Fi Direct Service represented by this instance.
    /// - Returns: An asynchronous connection operation. When successfully completed, returns an object that represents the session that has been established.
    public func connectAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesWiFiDirectServices_WiFiDirectServiceSession?> {
        try COM.NullResult.unwrap(_interop.connectAsync())
    }

    /// Initiates the establishment of a service session with the Wi-Fi Direct Service represented by this instance, using a PIN to configure the session.
    /// - Parameter pin: The PIN to be used to configure the connection.
    /// - Returns: An asynchronous connection operation. When successfully completed, returns an object that represents the session that has been established.
    public func connectAsync(_ pin: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesWiFiDirectServices_WiFiDirectServiceSession?> {
        try COM.NullResult.unwrap(_interop.connectAsyncWithPin(pin))
    }

    // MARK: Windows.Devices.WiFiDirect.Services.IWiFiDirectServiceStatics members

    /// Gets an Advanced Query Syntax (AQS) string to be used to find Wi-Fi Direct Service advertisers for a particular service.
    /// - Parameter serviceName: The service name to be found.
    /// - Returns: The AQS string for the requested advertiser query.
    public static func getSelector(_ serviceName: Swift.String) throws -> Swift.String {
        try _iwiFiDirectServiceStatics.getSelector(serviceName)
    }

    /// Gets an Advanced Query Syntax (AQS) string to be used to find Wi-Fi Direct Service advertisers for a particular service, where a given byte sequence appears in the advertiser's service information blob.
    /// - Parameter serviceName: The service name to be found.
    /// - Parameter serviceInfoFilter: A byte sequence that must be found in the advertiser's service information blob.
    /// - Returns: The AQS string for the requested advertiser query.
    public static func getSelector(_ serviceName: Swift.String, _ serviceInfoFilter: WindowsStorageStreams_IBuffer?) throws -> Swift.String {
        try _iwiFiDirectServiceStatics.getSelectorWithFilter(serviceName, serviceInfoFilter)
    }

    /// Static method that retrieves a WiFiDirectService instance for a Wi-Fi Direct Service offered by the device with a given device ID.
    /// - Parameter deviceId: Device ID of the device that advertises the desired Wi-Fi Direct Service.
    /// - Returns: An asynchronous retrieval operation. On successful completion, returns an instance of WiFiDirectService specific to the desired service instance, advertised by the indicated device.
    public static func fromIdAsync(_ deviceId: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesWiFiDirectServices_WiFiDirectService?> {
        try COM.NullResult.unwrap(_iwiFiDirectServiceStatics.fromIdAsync(deviceId))
    }

    // MARK: Implementation details

    private static var _iwiFiDirectServiceStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesWiFiDirectServices_IWiFiDirectServiceStatics>? = nil

    internal static var _iwiFiDirectServiceStatics: COM.COMInterop<CWinRT.SWRT_WindowsDevicesWiFiDirectServices_IWiFiDirectServiceStatics> {
        get throws {
            try _iwiFiDirectServiceStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.WiFiDirect.Services.WiFiDirectService", id: CWinRT.SWRT_WindowsDevicesWiFiDirectServices_IWiFiDirectServiceStatics.iid)
            }
        }
    }
}