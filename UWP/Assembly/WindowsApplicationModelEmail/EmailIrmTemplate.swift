// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a template that can be used to create new EmailIrmInfo objects.
public final class WindowsApplicationModelEmail_EmailIrmTemplate: WindowsRuntime.WinRTImport<WindowsApplicationModelEmail_EmailIrmTemplateProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsApplicationModelEmail_EmailIrmTemplateProjection.self))
    }

    // MARK: Windows.ApplicationModel.Email.IEmailIrmTemplateFactory members

    public convenience init(_ id: Swift.String, _ name: Swift.String, _ description: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iemailIrmTemplateFactory.create(id, name, description)))
    }

    // MARK: Windows.ApplicationModel.Email.IEmailIrmTemplate members

    /// Gets or sets the description of the template.
    /// - Returns: The description of the template.
    public var description: Swift.String {
        get throws {
            try _interop.get_Description()
        }
    }

    /// Gets or sets the description of the template.
    /// - Returns: The description of the template.
    public func description(_ value: Swift.String) throws {
        try _interop.put_Description(value)
    }

    /// Gets or sets the ID for the template.
    /// - Returns: The ID for the template.
    public var id: Swift.String {
        get throws {
            try _interop.get_Id()
        }
    }

    /// Gets or sets the ID for the template.
    /// - Returns: The ID for the template.
    public func id(_ value: Swift.String) throws {
        try _interop.put_Id(value)
    }

    /// Gets or sets the name for the template.
    /// - Returns: The name for the template.
    public var name: Swift.String {
        get throws {
            try _interop.get_Name()
        }
    }

    /// Gets or sets the name for the template.
    /// - Returns: The name for the template.
    public func name(_ value: Swift.String) throws {
        try _interop.put_Name(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Email.EmailIrmTemplate", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _iemailIrmTemplateFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelEmail_IEmailIrmTemplateFactory>? = nil

    internal static var _iemailIrmTemplateFactory: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelEmail_IEmailIrmTemplateFactory> {
        get throws {
            try _iemailIrmTemplateFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Email.EmailIrmTemplate", id: CWinRT.SWRT_WindowsApplicationModelEmail_IEmailIrmTemplateFactory.iid)
            }
        }
    }
}