// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents email information rights management (IRM) info.
public final class WindowsApplicationModelEmail_EmailIrmInfo: WindowsRuntime.WinRTImport<WindowsApplicationModelEmail_EmailIrmInfoProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsApplicationModelEmail_EmailIrmInfoProjection.self))
    }

    // MARK: Windows.ApplicationModel.Email.IEmailIrmInfoFactory members

    public convenience init(_ expiration: WindowsFoundation_DateTime, _ irmTemplate: WindowsApplicationModelEmail_EmailIrmTemplate?) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iemailIrmInfoFactory.create(expiration, irmTemplate)))
    }

    // MARK: Windows.ApplicationModel.Email.IEmailIrmInfo members

    /// Gets or sets a Boolean value that indicates if an email message is allowed to be edited.
    /// - Returns: A Boolean value that indicates if an email message is allowed to be edited.
    public var canEdit: Swift.Bool {
        get throws {
            try _interop.get_CanEdit()
        }
    }

    /// Gets or sets a Boolean value that indicates if an email message is allowed to be edited.
    /// - Returns: A Boolean value that indicates if an email message is allowed to be edited.
    public func canEdit(_ value: Swift.Bool) throws {
        try _interop.put_CanEdit(value)
    }

    /// Gets or sets a Boolean value that indicates if the user can copy the contents of an email message to the clipboard.
    /// - Returns: A Boolean value that indicates if the user can copy the contents of an email message to the clipboard.
    public var canExtractData: Swift.Bool {
        get throws {
            try _interop.get_CanExtractData()
        }
    }

    /// Gets or sets a Boolean value that indicates if the user can copy the contents of an email message to the clipboard.
    /// - Returns: A Boolean value that indicates if the user can copy the contents of an email message to the clipboard.
    public func canExtractData(_ value: Swift.Bool) throws {
        try _interop.put_CanExtractData(value)
    }

    /// Gets or sets a Boolean value that indicates if the email message is allowed to be forwarded.
    /// - Returns: A Boolean value that indicates if the email message is allowed to be forwarded.
    public var canForward: Swift.Bool {
        get throws {
            try _interop.get_CanForward()
        }
    }

    /// Gets or sets a Boolean value that indicates if the email message is allowed to be forwarded.
    /// - Returns: A Boolean value that indicates if the email message is allowed to be forwarded.
    public func canForward(_ value: Swift.Bool) throws {
        try _interop.put_CanForward(value)
    }

    /// Gets or sets a Boolean value that indicates if the user is allowed to change any of the email recipients when responding.
    /// - Returns: A Boolean value that indicates if the user is allowed to change any of the email recipients when responding.
    public var canModifyRecipientsOnResponse: Swift.Bool {
        get throws {
            try _interop.get_CanModifyRecipientsOnResponse()
        }
    }

    /// Gets or sets a Boolean value that indicates if the user is allowed to change any of the email recipients when responding.
    /// - Returns: A Boolean value that indicates if the user is allowed to change any of the email recipients when responding.
    public func canModifyRecipientsOnResponse(_ value: Swift.Bool) throws {
        try _interop.put_CanModifyRecipientsOnResponse(value)
    }

    /// Gets or sets a Boolean value that indicates if the user is allowed to print the contents of the email message or any attachments.
    /// - Returns: A Boolean value that indicates if the user is allowed to print the contents of the email message or any attachments.
    public var canPrintData: Swift.Bool {
        get throws {
            try _interop.get_CanPrintData()
        }
    }

    /// Gets or sets a Boolean value that indicates if the user is allowed to print the contents of the email message or any attachments.
    /// - Returns: A Boolean value that indicates if the user is allowed to print the contents of the email message or any attachments.
    public func canPrintData(_ value: Swift.Bool) throws {
        try _interop.put_CanPrintData(value)
    }

    /// Gets or sets a Boolean value that indicates if the recipient is allowed to remove information rights management (IRM) when responding.
    /// - Returns: A Boolean value that indicates if the recipient is allowed to remove IRM when responding.
    public var canRemoveIrmOnResponse: Swift.Bool {
        get throws {
            try _interop.get_CanRemoveIrmOnResponse()
        }
    }

    /// Gets or sets a Boolean value that indicates if the recipient is allowed to remove information rights management (IRM) when responding.
    /// - Returns: A Boolean value that indicates if the recipient is allowed to remove IRM when responding.
    public func canRemoveIrmOnResponse(_ value: Swift.Bool) throws {
        try _interop.put_CanRemoveIrmOnResponse(value)
    }

    /// Gets or sets a Boolean value that indicates if the recipient is allowed to reply to the email message.
    /// - Returns: A Boolean value that indicates if the recipient is allowed to reply to the email message.
    public var canReply: Swift.Bool {
        get throws {
            try _interop.get_CanReply()
        }
    }

    /// Gets or sets a Boolean value that indicates if the recipient is allowed to reply to the email message.
    /// - Returns: A Boolean value that indicates if the recipient is allowed to reply to the email message.
    public func canReply(_ value: Swift.Bool) throws {
        try _interop.put_CanReply(value)
    }

    /// Gets or sets a Boolean value that indicates if the recipient is allowed to reply all to the email message.
    /// - Returns: A Boolean value that indicates if the recipient is allowed to reply all to the email message.
    public var canReplyAll: Swift.Bool {
        get throws {
            try _interop.get_CanReplyAll()
        }
    }

    /// Gets or sets a Boolean value that indicates if the recipient is allowed to reply all to the email message.
    /// - Returns: A Boolean value that indicates if the recipient is allowed to reply all to the email message.
    public func canReplyAll(_ value: Swift.Bool) throws {
        try _interop.put_CanReplyAll(value)
    }

    /// Gets or sets the expiration date for the information rights management (IRM) permissions.
    /// - Returns: The expiration date for the IRM permissions.
    public var expirationDate: WindowsFoundation_DateTime {
        get throws {
            try _interop.get_ExpirationDate()
        }
    }

    /// Gets or sets the expiration date for the information rights management (IRM) permissions.
    /// - Returns: The expiration date for the IRM permissions.
    public func expirationDate(_ value: WindowsFoundation_DateTime) throws {
        try _interop.put_ExpirationDate(value)
    }

    /// Gets or sets a Boolean value that indicates if the sender is the information rights management (IRM) originator.
    /// - Returns: A Boolean value that indicates if the sender is the information rights management (IRM) originator.
    public var isIrmOriginator: Swift.Bool {
        get throws {
            try _interop.get_IsIrmOriginator()
        }
    }

    /// Gets or sets a Boolean value that indicates if the sender is the information rights management (IRM) originator.
    /// - Returns: A Boolean value that indicates if the sender is the information rights management (IRM) originator.
    public func isIrmOriginator(_ value: Swift.Bool) throws {
        try _interop.put_IsIrmOriginator(value)
    }

    /// Gets or sets a Boolean value that indicates if programmatic access to the message is allowed.
    /// - Returns: A Boolean value that indicates if programmatic access to the message is allowed.
    public var isProgramaticAccessAllowed: Swift.Bool {
        get throws {
            try _interop.get_IsProgramaticAccessAllowed()
        }
    }

    /// Gets or sets a Boolean value that indicates if programmatic access to the message is allowed.
    /// - Returns: A Boolean value that indicates if programmatic access to the message is allowed.
    public func isProgramaticAccessAllowed(_ value: Swift.Bool) throws {
        try _interop.put_IsProgramaticAccessAllowed(value)
    }

    /// Gets or sets the EmailIrmTemplate used to create the information rights management (IRM) info.
    /// - Returns: The EmailIrmTemplate used to create the information rights management (IRM) info.
    public var template: WindowsApplicationModelEmail_EmailIrmTemplate {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Template())
        }
    }

    /// Gets or sets the EmailIrmTemplate used to create the information rights management (IRM) info.
    /// - Returns: The EmailIrmTemplate used to create the information rights management (IRM) info.
    public func template(_ value: WindowsApplicationModelEmail_EmailIrmTemplate?) throws {
        try _interop.put_Template(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Email.EmailIrmInfo", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _iemailIrmInfoFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelEmail_IEmailIrmInfoFactory>? = nil

    internal static var _iemailIrmInfoFactory: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelEmail_IEmailIrmInfoFactory> {
        get throws {
            try _iemailIrmInfoFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Email.EmailIrmInfo", id: CWinRT.SWRT_WindowsApplicationModelEmail_IEmailIrmInfoFactory.iid)
            }
        }
    }
}