// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the capabilities associated with an email mailbox.
public final class WindowsApplicationModelEmail_EmailMailboxCapabilities: WindowsRuntime.WinRTImport<WindowsApplicationModelEmail_EmailMailboxCapabilitiesProjection> {
    // MARK: Windows.ApplicationModel.Email.IEmailMailboxCapabilities members

    /// Gets or sets a Boolean value indicating whether an account is allowed to forward meeting requests.
    /// - Returns: A Boolean value indicating whether an account is allowed to forward meeting requests.
    public var canForwardMeetings: Swift.Bool {
        get throws {
            try _interop.get_CanForwardMeetings()
        }
    }

    /// Gets or sets a Boolean value indicating whether an account is allowed to get and set automatic reply email messages intended for external audiences.
    /// - Returns: A Boolean value indicating whether an account is allowed to get and set automatic reply email messages intended for external audiences.
    public var canGetAndSetExternalAutoReplies: Swift.Bool {
        get throws {
            try _interop.get_CanGetAndSetExternalAutoReplies()
        }
    }

    /// Gets or sets a Boolean value indicating whether an account is allowed to get and set automatic reply email messages intended for internal audiences.
    /// - Returns: A Boolean value indicating whether an account is allowed to get and set automatic reply email messages intended for internal audiences.
    public var canGetAndSetInternalAutoReplies: Swift.Bool {
        get throws {
            try _interop.get_CanGetAndSetInternalAutoReplies()
        }
    }

    /// Gets or sets a Boolean value indicating whether an account is allowed to propose a new meeting time.
    /// - Returns: A Boolean value indicating whether an account is allowed to propose a new meeting time.
    public var canProposeNewTimeForMeetings: Swift.Bool {
        get throws {
            try _interop.get_CanProposeNewTimeForMeetings()
        }
    }

    /// Gets or sets a Boolean value indicating whether a search of specific folders on the server can be initiated from this email mailbox.
    /// - Returns: The Boolean value indicating whether a search of specific folders on the server can be initiated from this email mailbox.
    public var canServerSearchFolders: Swift.Bool {
        get throws {
            try _interop.get_CanServerSearchFolders()
        }
    }

    /// Gets or sets a Boolean value indicating whether a search of the server can be initiated from this email mailbox.
    /// - Returns: The Boolean value indicating whether a search of the server can be initiated from this email mailbox.
    public var canServerSearchMailbox: Swift.Bool {
        get throws {
            try _interop.get_CanServerSearchMailbox()
        }
    }

    /// Gets or sets a Boolean value indicating whether the email mailbox is allowed to attempt smart send.
    /// - Returns: The Boolean value indicating whether the email mailbox is allowed to attempt smart send.
    public var canSmartSend: Swift.Bool {
        get throws {
            try _interop.get_CanSmartSend()
        }
    }

    /// Gets or sets a Boolean value indicating whether the email mailbox is allowed to update meeting responses.
    /// - Returns: The Boolean value indicating whether the email mailbox is allowed to update meeting responses.
    public var canUpdateMeetingResponses: Swift.Bool {
        get throws {
            try _interop.get_CanUpdateMeetingResponses()
        }
    }

    // MARK: Windows.ApplicationModel.Email.IEmailMailboxCapabilities2 members

    /// Gets or sets a Boolean value indicating if folders can be created in the mailbox.
    /// - Returns: A Boolean value indicating if folders can be created in the mailbox.
    public var canCreateFolder: Swift.Bool {
        get throws {
            try _iemailMailboxCapabilities2.get_CanCreateFolder()
        }
    }

    /// Gets or sets a Boolean value indicating if folders can be deleted from the mailbox.
    /// - Returns: A Boolean value indicating if folders can be deleted from the mailbox.
    public var canDeleteFolder: Swift.Bool {
        get throws {
            try _iemailMailboxCapabilities2.get_CanDeleteFolder()
        }
    }

    /// Gets or sets a Boolean value indicating if folders in the mailbox can be emptied.
    /// - Returns: A Boolean value indicating if folders in the mailbox can be emptied.
    public var canEmptyFolder: Swift.Bool {
        get throws {
            try _iemailMailboxCapabilities2.get_CanEmptyFolder()
        }
    }

    /// Gets or sets a Boolean value indicating if folders in the mailbox can be moved.
    /// - Returns: A Boolean value indicating if folders in the mailbox can be moved.
    public var canMoveFolder: Swift.Bool {
        get throws {
            try _iemailMailboxCapabilities2.get_CanMoveFolder()
        }
    }

    /// Gets or sets a Boolean value that indicates whether the email mailbox is capable of resolving recipients.
    /// - Returns: The Boolean value that indicates whether the email mailbox is capable of resolving recipients.
    public var canResolveRecipients: Swift.Bool {
        get throws {
            try _iemailMailboxCapabilities2.get_CanResolveRecipients()
        }
    }

    /// Gets or sets a Boolean value that indicates whether the email mailbox is capable of validating certificates.
    /// - Returns: The Boolean value that indicates whether the email mailbox is capable of validating certificates.
    public var canValidateCertificates: Swift.Bool {
        get throws {
            try _iemailMailboxCapabilities2.get_CanValidateCertificates()
        }
    }

    // MARK: Windows.ApplicationModel.Email.IEmailMailboxCapabilities3 members

    /// Gets or sets a Boolean value indicating if folders can be created in the mailbox.
    /// - Returns: A Boolean value indicating if folders can be created in the mailbox.
    public func canCreateFolder(_ value: Swift.Bool) throws {
        try _iemailMailboxCapabilities3.put_CanCreateFolder(value)
    }

    /// Gets or sets a Boolean value indicating if folders can be deleted from the mailbox.
    /// - Returns: A Boolean value indicating if folders can be deleted from the mailbox.
    public func canDeleteFolder(_ value: Swift.Bool) throws {
        try _iemailMailboxCapabilities3.put_CanDeleteFolder(value)
    }

    /// Gets or sets a Boolean value indicating if folders in the mailbox can be emptied.
    /// - Returns: A Boolean value indicating if folders in the mailbox can be emptied.
    public func canEmptyFolder(_ value: Swift.Bool) throws {
        try _iemailMailboxCapabilities3.put_CanEmptyFolder(value)
    }

    /// Gets or sets a Boolean value indicating whether an account is allowed to forward meeting requests.
    /// - Returns: A Boolean value indicating whether an account is allowed to forward meeting requests.
    public func canForwardMeetings(_ value: Swift.Bool) throws {
        try _iemailMailboxCapabilities3.put_CanForwardMeetings(value)
    }

    /// Gets or sets a Boolean value indicating whether an account is allowed to get and set automatic reply email messages intended for external audiences.
    /// - Returns: A Boolean value indicating whether an account is allowed to get and set automatic reply email messages intended for external audiences.
    public func canGetAndSetExternalAutoReplies(_ value: Swift.Bool) throws {
        try _iemailMailboxCapabilities3.put_CanGetAndSetExternalAutoReplies(value)
    }

    /// Gets or sets a Boolean value indicating whether an account is allowed to get and set automatic reply email messages intended for internal audiences.
    /// - Returns: A Boolean value indicating whether an account is allowed to get and set automatic reply email messages intended for internal audiences.
    public func canGetAndSetInternalAutoReplies(_ value: Swift.Bool) throws {
        try _iemailMailboxCapabilities3.put_CanGetAndSetInternalAutoReplies(value)
    }

    /// Gets or sets a Boolean value indicating if folders in the mailbox can be moved.
    /// - Returns: A Boolean value indicating if folders in the mailbox can be moved.
    public func canMoveFolder(_ value: Swift.Bool) throws {
        try _iemailMailboxCapabilities3.put_CanMoveFolder(value)
    }

    /// Gets or sets a Boolean value indicating whether an account is allowed to propose a new meeting time.
    /// - Returns: A Boolean value indicating whether an account is allowed to propose a new meeting time.
    public func canProposeNewTimeForMeetings(_ value: Swift.Bool) throws {
        try _iemailMailboxCapabilities3.put_CanProposeNewTimeForMeetings(value)
    }

    /// Gets or sets a Boolean value that indicates whether the email mailbox is capable of resolving recipients.
    /// - Returns: The Boolean value that indicates whether the email mailbox is capable of resolving recipients.
    public func canResolveRecipients(_ value: Swift.Bool) throws {
        try _iemailMailboxCapabilities3.put_CanResolveRecipients(value)
    }

    /// Gets or sets a Boolean value indicating whether a search of specific folders on the server can be initiated from this email mailbox.
    /// - Returns: The Boolean value indicating whether a search of specific folders on the server can be initiated from this email mailbox.
    public func canServerSearchFolders(_ value: Swift.Bool) throws {
        try _iemailMailboxCapabilities3.put_CanServerSearchFolders(value)
    }

    /// Gets or sets a Boolean value indicating whether a search of the server can be initiated from this email mailbox.
    /// - Returns: The Boolean value indicating whether a search of the server can be initiated from this email mailbox.
    public func canServerSearchMailbox(_ value: Swift.Bool) throws {
        try _iemailMailboxCapabilities3.put_CanServerSearchMailbox(value)
    }

    /// Gets or sets a Boolean value indicating whether the email mailbox is allowed to attempt smart send.
    /// - Returns: The Boolean value indicating whether the email mailbox is allowed to attempt smart send.
    public func canSmartSend(_ value: Swift.Bool) throws {
        try _iemailMailboxCapabilities3.put_CanSmartSend(value)
    }

    /// Gets or sets a Boolean value indicating whether the email mailbox is allowed to update meeting responses.
    /// - Returns: The Boolean value indicating whether the email mailbox is allowed to update meeting responses.
    public func canUpdateMeetingResponses(_ value: Swift.Bool) throws {
        try _iemailMailboxCapabilities3.put_CanUpdateMeetingResponses(value)
    }

    /// Gets or sets a Boolean value that indicates whether the email mailbox is capable of validating certificates.
    /// - Returns: The Boolean value that indicates whether the email mailbox is capable of validating certificates.
    public func canValidateCertificates(_ value: Swift.Bool) throws {
        try _iemailMailboxCapabilities3.put_CanValidateCertificates(value)
    }

    // MARK: Implementation details

    private var _iemailMailboxCapabilities2_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelEmail_IEmailMailboxCapabilities2>? = nil

    internal var _iemailMailboxCapabilities2: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelEmail_IEmailMailboxCapabilities2> {
        get throws {
            try _iemailMailboxCapabilities2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelEmail_IEmailMailboxCapabilities2.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelEmail_IEmailMailboxCapabilities2.self)
            }
        }
    }

    private var _iemailMailboxCapabilities3_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelEmail_IEmailMailboxCapabilities3>? = nil

    internal var _iemailMailboxCapabilities3: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelEmail_IEmailMailboxCapabilities3> {
        get throws {
            try _iemailMailboxCapabilities3_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelEmail_IEmailMailboxCapabilities3.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelEmail_IEmailMailboxCapabilities3.self)
            }
        }
    }

    deinit {
        _iemailMailboxCapabilities2_storage?.release()
        _iemailMailboxCapabilities3_storage?.release()
    }
}