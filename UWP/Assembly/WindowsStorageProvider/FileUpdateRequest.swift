// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides information about a requested file update so that the app can complete the request.
public final class WindowsStorageProvider_FileUpdateRequest: WindowsRuntime.WinRTImport<WindowsStorageProvider_FileUpdateRequestProjection> {
    // MARK: Windows.Storage.Provider.IFileUpdateRequest members

    /// Gets the unique identifier used to associate the local version of a file with the corresponding remote version.
    /// - Returns: The identifier that was specified by the app and is associated with the local file.
    public var contentId: Swift.String {
        get throws {
            try _interop.get_ContentId()
        }
    }

    /// Gets a StorageFile object that represents the locally cached copy of the file to update.
    /// - Returns: The StorageFile object that represents the locally cached copy of the file to update.
    public var file: WindowsStorage_StorageFile {
        get throws {
            try COM.NullResult.unwrap(_interop.get_File())
        }
    }

    /// Gets or sets the status of the update. This property is set in response to a FileUpdateRequested event.
    /// - Returns: An enum value that indicates the status of the update.
    public var status: WindowsStorageProvider_FileUpdateStatus {
        get throws {
            try _interop.get_Status()
        }
    }

    /// Gets or sets the status of the update. This property is set in response to a FileUpdateRequested event.
    /// - Returns: An enum value that indicates the status of the update.
    public func status(_ value: WindowsStorageProvider_FileUpdateStatus) throws {
        try _interop.put_Status(value)
    }

    /// Gets an object used to complete an update asynchronously.
    /// - Returns: The object that the app uses to indicate, asynchronously, that it has finished responding to a FileUpdateRequested event and that the Request is complete.
    public func getDeferral() throws -> WindowsStorageProvider_FileUpdateRequestDeferral {
        try COM.NullResult.unwrap(_interop.getDeferral())
    }

    /// Provide a new version of the local file to represent the remote file.
    /// - Parameter value: The new version of the local file that will represent remote file.
    public func updateLocalFile(_ value: WindowsStorage_IStorageFile?) throws {
        try _interop.updateLocalFile(value)
    }

    // MARK: Windows.Storage.Provider.IFileUpdateRequest2 members

    /// Gets or sets a message to the user indicating that user input is needed to complete the FileUpdateRequest.
    /// - Returns: A message to the user indicating that user input is needed to complete the FileUpdateRequest.
    public var userInputNeededMessage: Swift.String {
        get throws {
            try _ifileUpdateRequest2.get_UserInputNeededMessage()
        }
    }

    /// Gets or sets a message to the user indicating that user input is needed to complete the FileUpdateRequest.
    /// - Returns: A message to the user indicating that user input is needed to complete the FileUpdateRequest.
    public func userInputNeededMessage(_ value: Swift.String) throws {
        try _ifileUpdateRequest2.put_UserInputNeededMessage(value)
    }

    // MARK: Implementation details

    private var _ifileUpdateRequest2_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorageProvider_IFileUpdateRequest2>? = nil

    internal var _ifileUpdateRequest2: COM.COMInterop<CWinRT.SWRT_WindowsStorageProvider_IFileUpdateRequest2> {
        get throws {
            try _ifileUpdateRequest2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsStorageProvider_IFileUpdateRequest2.iid).cast(to: CWinRT.SWRT_WindowsStorageProvider_IFileUpdateRequest2.self)
            }
        }
    }

    deinit {
        _ifileUpdateRequest2_storage?.release()
    }
}