// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Used to interact with the file picker if your app provides file updates through the Cached File Updater contract.
public final class WindowsStorageProvider_CachedFileUpdaterUI: WindowsRuntime.WinRTImport<WindowsStorageProvider_CachedFileUpdaterUIProjection> {
    // MARK: Windows.Storage.Provider.ICachedFileUpdaterUI members

    /// Gets or sets the title to display in the top-left the file picker UI. The title identifies the location or context of the app's page (which is hosted in the file picker UI) for the user.
    /// - Returns: The title to display in the top-left of the file picker UI.
    public var title: Swift.String {
        get throws {
            try _interop.get_Title()
        }
    }

    /// Gets or sets the title to display in the top-left the file picker UI. The title identifies the location or context of the app's page (which is hosted in the file picker UI) for the user.
    /// - Returns: The title to display in the top-left of the file picker UI.
    public func title(_ value: Swift.String) throws {
        try _interop.put_Title(value)
    }

    /// Gets an enum value that indicates the status of the file picker UI.
    /// - Returns: The UIStatus value that indicates the status of the file picker UI.
    public var uistatus: WindowsStorageProvider_UIStatus {
        get throws {
            try _interop.get_UIStatus()
        }
    }

    /// Gets a value that indicates which version of the file needs to be updated: the local version or the version in the app's repository.
    /// - Returns: An enum value that indicates which version of the file needs to be updated: the local version or the version in the app's repository.
    public var updateTarget: WindowsStorageProvider_CachedFileTarget {
        get throws {
            try _interop.get_UpdateTarget()
        }
    }

    /// Fires when the Windows requests a file update. This event fires once for each requested update.
    public func fileUpdateRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsStorageProvider_CachedFileUpdaterUI?, WindowsStorageProvider_FileUpdateRequestedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_FileUpdateRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: fileUpdateRequested)
    }

    public func fileUpdateRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_FileUpdateRequested(token)
    }

    /// Fires when the calling app needs to display the file picker letterbox UI that is represented by the CachedFileUpdaterUI object.
    public func uirequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsStorageProvider_CachedFileUpdaterUI?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_UIRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: uirequested)
    }

    public func uirequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_UIRequested(token)
    }

    // MARK: Windows.Storage.Provider.ICachedFileUpdaterUI2 members

    /// Gets the file update request currently being processed by the cached file updater.
    /// - Returns: The file update request currently being processed by the cached file updater.
    public var updateRequest: WindowsStorageProvider_FileUpdateRequest {
        get throws {
            try COM.NullResult.unwrap(_icachedFileUpdaterUI2.get_UpdateRequest())
        }
    }

    /// Gets an object used to complete a file update request asynchronously.
    /// - Returns: The object that the app uses to indicate, asynchronously, that it has finished responding to a FileUpdateRequested event and that the Request is complete.
    public func getDeferral() throws -> WindowsStorageProvider_FileUpdateRequestDeferral {
        try COM.NullResult.unwrap(_icachedFileUpdaterUI2.getDeferral())
    }

    // MARK: Implementation details

    private var _icachedFileUpdaterUI2_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorageProvider_ICachedFileUpdaterUI2>? = nil

    internal var _icachedFileUpdaterUI2: COM.COMInterop<CWinRT.SWRT_WindowsStorageProvider_ICachedFileUpdaterUI2> {
        get throws {
            try _icachedFileUpdaterUI2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsStorageProvider_ICachedFileUpdaterUI2.iid).cast(to: CWinRT.SWRT_WindowsStorageProvider_ICachedFileUpdaterUI2.self)
            }
        }
    }

    deinit {
        _icachedFileUpdaterUI2_storage?.release()
    }
}