// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Reads data from a file.
public final class WindowsStorageStreams_FileInputStream: WindowsRuntime.WinRTImport<WindowsStorageStreams_FileInputStreamProjection>, WindowsStorageStreams_IInputStreamProtocol, WindowsFoundation_IClosableProtocol {
    // MARK: Windows.Storage.Streams.IInputStream members

    /// Returns an asynchronous byte reader object.
    /// - Parameter buffer: The buffer into which the asynchronous read operation places the bytes that are read.
    /// - Parameter count: The number of bytes to read that is less than or equal to the Capacity value.
    /// - Parameter options: Specifies the type of the asynchronous read operation.
    /// - Returns: The asynchronous operation.
    public func readAsync(_ buffer: WindowsStorageStreams_IBuffer?, _ count: Swift.UInt32, _ options: WindowsStorageStreams_InputStreamOptions) throws -> WindowsFoundation_IAsyncOperationWithProgress<WindowsStorageStreams_IBuffer?, Swift.UInt32> {
        try COM.NullResult.unwrap(_interop.readAsync(buffer, count, options))
    }

    // MARK: Windows.Foundation.IClosable members

    /// Closes the current stream and releases system resources.
    public func close() throws {
        try _iclosable.close()
    }

    // MARK: Implementation details

    private var _iclosable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable>? = nil

    internal var _iclosable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable> {
        get throws {
            try _iclosable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IClosable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IClosable.self)
            }
        }
    }

    deinit {
        _iclosable_storage?.release()
    }
}