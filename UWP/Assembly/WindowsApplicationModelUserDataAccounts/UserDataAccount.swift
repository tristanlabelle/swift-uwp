// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a user data account used to access email, contacts, calendars, and so on.
public final class WindowsApplicationModelUserDataAccounts_UserDataAccount: WindowsRuntime.WinRTImport<WindowsApplicationModelUserDataAccounts_UserDataAccountProjection> {
    // MARK: Windows.ApplicationModel.UserDataAccounts.IUserDataAccount members

    /// Gets the unique identifier for the type of the account.
    /// - Returns: The unique identifier for the type of the account such as Exchange, Google, Pop/IMAP and so on.
    public var deviceAccountTypeId: Swift.String {
        get throws {
            try _interop.get_DeviceAccountTypeId()
        }
    }

    /// Gets the icon associated with the UserDataAccount.
    /// - Returns: The icon associated with the UserDataAccount.
    public var icon: WindowsStorageStreams_IRandomAccessStreamReference {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Icon())
        }
    }

    /// Gets a string that uniquely identifies the UserDataAccount on the local device.
    /// - Returns: A string that uniquely identifies the UserDataAccount on the local device.
    public var id: Swift.String {
        get throws {
            try _interop.get_Id()
        }
    }

    /// Gets or sets a value indicating whether other apps on the device have read access to the UserDataAccount.
    /// - Returns: Value indicating whether other apps on the device have read access to the UserDataAccount.
    public var otherAppReadAccess: WindowsApplicationModelUserDataAccounts_UserDataAccountOtherAppReadAccess {
        get throws {
            try _interop.get_OtherAppReadAccess()
        }
    }

    /// Gets or sets a value indicating whether other apps on the device have read access to the UserDataAccount.
    /// - Returns: Value indicating whether other apps on the device have read access to the UserDataAccount.
    public func otherAppReadAccess(_ value: WindowsApplicationModelUserDataAccounts_UserDataAccountOtherAppReadAccess) throws {
        try _interop.put_OtherAppReadAccess(value)
    }

    /// Gets the unique identifier for the app package that created the UserDataAccount.
    /// - Returns: The unique identifier for the app package that created the UserDataAccount.
    public var packageFamilyName: Swift.String {
        get throws {
            try _interop.get_PackageFamilyName()
        }
    }

    /// Gets or sets a user name associated with the UserDataAccount that is suitable for displaying.
    /// - Returns: A user name associated with the UserDataAccount that is suitable for displaying.
    public var userDisplayName: Swift.String {
        get throws {
            try _interop.get_UserDisplayName()
        }
    }

    /// Gets or sets a user name associated with the UserDataAccount that is suitable for displaying.
    /// - Returns: A user name associated with the UserDataAccount that is suitable for displaying.
    public func userDisplayName(_ value: Swift.String) throws {
        try _interop.put_UserDisplayName(value)
    }

    /// Asynchronously persists the UserDataAccount to the database.
    /// - Returns: Async action that indicates completion of the save operation.
    public func saveAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.saveAsync())
    }

    /// Asynchronously deletes all the contact, calendar and email data associated with the account.
    /// - Returns: An async action indicating success or failure.
    public func deleteAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.deleteAsync())
    }

    /// Returns a collection of AppointmentCalendar instances associated with the UserDataAccount.
    /// - Returns: A collection of AppointmentCalendar instances associated with the UserDataAccount.
    public func findAppointmentCalendarsAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsApplicationModelAppointments_AppointmentCalendar?>?> {
        try COM.NullResult.unwrap(_interop.findAppointmentCalendarsAsync())
    }

    /// Returns a collection of EmailMailbox instances associated with the UserDataAccount.
    /// - Returns: A collection of EmailMailbox instances associated with the UserDataAccount.
    public func findEmailMailboxesAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsApplicationModelEmail_EmailMailbox?>?> {
        try COM.NullResult.unwrap(_interop.findEmailMailboxesAsync())
    }

    /// Returns a collection of ContactList instances associated with the UserDataAccount.
    /// - Returns: A collection of ContactList instances associated with the UserDataAccount.
    public func findContactListsAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsApplicationModelContacts_ContactList?>?> {
        try COM.NullResult.unwrap(_interop.findContactListsAsync())
    }

    /// Returns a collection of ContactAnnotationList instances associated with the UserDataAccount.
    /// - Returns: A collection of ContactAnnotationList instances associated with the UserDataAccount.
    public func findContactAnnotationListsAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsApplicationModelContacts_ContactAnnotationList?>?> {
        try COM.NullResult.unwrap(_interop.findContactAnnotationListsAsync())
    }

    // MARK: Windows.ApplicationModel.UserDataAccounts.IUserDataAccount2 members

    /// Gets the enterprise identity associated with the user account.
    /// - Returns: The enterprise identity associated with the user account.
    public var enterpriseId: Swift.String {
        get throws {
            try _iuserDataAccount2.get_EnterpriseId()
        }
    }

    /// Gets a Boolean value indicating if the user account data is encrypted when the device becomes locked.
    /// - Returns: A Boolean value indicating if the user account data is encrypted when the device becomes locked.
    public var isProtectedUnderLock: Swift.Bool {
        get throws {
            try _iuserDataAccount2.get_IsProtectedUnderLock()
        }
    }

    // MARK: Windows.ApplicationModel.UserDataAccounts.IUserDataAccount3 members

    /// Gets or sets the human readable display name for the user data account.
    /// - Returns: The human readable display name for the user data account.
    public var displayName: Swift.String {
        get throws {
            try _iuserDataAccount3.get_DisplayName()
        }
    }

    /// Gets or sets the human readable display name for the user data account.
    /// - Returns: The human readable display name for the user data account.
    public func displayName(_ value: Swift.String) throws {
        try _iuserDataAccount3.put_DisplayName(value)
    }

    /// Gets a list of package family names for apps that have explicit read access even if they don't have the system capability.
    /// - Returns: A list of package family names for apps that have explicit read access even if they don't have the system capability.
    public var explictReadAccessPackageFamilyNames: WindowsFoundationCollections_IVector<Swift.String> {
        get throws {
            try COM.NullResult.unwrap(_iuserDataAccount3.get_ExplictReadAccessPackageFamilyNames())
        }
    }

    // MARK: Windows.ApplicationModel.UserDataAccounts.IUserDataAccount4 members

    /// This API supports the product infrastructure and is not intended to be used directly from your code.
    /// - Returns: A ContactGroup.
    public var canShowCreateContactGroup: Swift.Bool {
        get throws {
            try _iuserDataAccount4.get_CanShowCreateContactGroup()
        }
    }

    /// This API supports the product infrastructure and is not intended to be used directly from your code.
    /// - Returns: A ContactGroup.
    public func canShowCreateContactGroup(_ value: Swift.Bool) throws {
        try _iuserDataAccount4.put_CanShowCreateContactGroup(value)
    }

    /// Gets the icon associated with the UserDataAccount.
    /// - Returns: The icon associated with the UserDataAccount.
    public func icon(_ value: WindowsStorageStreams_IRandomAccessStreamReference?) throws {
        try _iuserDataAccount4.put_Icon(value)
    }

    /// Gets a Boolean value indicating if the user account data is encrypted when the device becomes locked.
    /// - Returns: A Boolean value indicating if the user account data is encrypted when the device becomes locked.
    public func isProtectedUnderLock(_ value: Swift.Bool) throws {
        try _iuserDataAccount4.put_IsProtectedUnderLock(value)
    }

    /// Provides a place to store data to be used by the app when interacting with a UserDataAccount provider.
    /// - Returns: Data to be used by the app when interacting with a UserDataAccount provider.
    public var providerProperties: WindowsFoundationCollections_IPropertySet {
        get throws {
            try COM.NullResult.unwrap(_iuserDataAccount4.get_ProviderProperties())
        }
    }

    /// Returns a collection of UserDataTask instances associated with the UserDataAccount.
    /// - Returns: A collection of UserDataTask instances associated with the UserDataAccount.
    public func findUserDataTaskListsAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsApplicationModelUserDataTasks_UserDataTaskList?>?> {
        try COM.NullResult.unwrap(_iuserDataAccount4.findUserDataTaskListsAsync())
    }

    /// This API supports the product infrastructure and is not intended to be used directly from your code.
    /// - Returns: A collection of ContactGroup instances.
    public func findContactGroupsAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsApplicationModelContacts_ContactGroup?>?> {
        try COM.NullResult.unwrap(_iuserDataAccount4.findContactGroupsAsync())
    }

    /// This API supports the product infrastructure and is not intended to be used directly from your code.
    public func tryShowCreateContactGroupAsync() throws -> WindowsFoundation_IAsyncOperation<Swift.String> {
        try COM.NullResult.unwrap(_iuserDataAccount4.tryShowCreateContactGroupAsync())
    }

    // MARK: Implementation details

    private var _iuserDataAccount2_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelUserDataAccounts_IUserDataAccount2>? = nil

    internal var _iuserDataAccount2: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelUserDataAccounts_IUserDataAccount2> {
        get throws {
            try _iuserDataAccount2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelUserDataAccounts_IUserDataAccount2.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelUserDataAccounts_IUserDataAccount2.self)
            }
        }
    }

    private var _iuserDataAccount3_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelUserDataAccounts_IUserDataAccount3>? = nil

    internal var _iuserDataAccount3: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelUserDataAccounts_IUserDataAccount3> {
        get throws {
            try _iuserDataAccount3_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelUserDataAccounts_IUserDataAccount3.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelUserDataAccounts_IUserDataAccount3.self)
            }
        }
    }

    private var _iuserDataAccount4_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelUserDataAccounts_IUserDataAccount4>? = nil

    internal var _iuserDataAccount4: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelUserDataAccounts_IUserDataAccount4> {
        get throws {
            try _iuserDataAccount4_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelUserDataAccounts_IUserDataAccount4.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelUserDataAccounts_IUserDataAccount4.self)
            }
        }
    }

    deinit {
        _iuserDataAccount2_storage?.release()
        _iuserDataAccount3_storage?.release()
        _iuserDataAccount4_storage?.release()
    }
}