// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the result of a operation that deletes imported media items from the source.
public final class WindowsMediaImport_PhotoImportDeleteImportedItemsFromSourceResult: WindowsRuntime.WinRTImport<WindowsMediaImport_PhotoImportDeleteImportedItemsFromSourceResultProjection> {
    // MARK: Windows.Media.Import.IPhotoImportDeleteImportedItemsFromSourceResult members

    /// Gets a list of items that were deleted from the source.
    /// - Returns: A list of items that were deleted from the source.
    public var deletedItems: WindowsFoundationCollections_IVectorView<WindowsMediaImport_PhotoImportItem?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_DeletedItems())
        }
    }

    /// Gets a value indicating whether the delete operation has succeeded.
    /// - Returns: True if the delete operation has succeeded; otherwise, false.
    public var hasSucceeded: Swift.Bool {
        get throws {
            try _interop.get_HasSucceeded()
        }
    }

    /// Gets the number of photos deleted in the operation.
    /// - Returns: The number of photos deleted in the operation.
    public var photosCount: Swift.UInt32 {
        get throws {
            try _interop.get_PhotosCount()
        }
    }

    /// Gets the size of the deleted photos, in bytes.
    /// - Returns: The size of the deleted photos, in bytes.
    public var photosSizeInBytes: Swift.UInt64 {
        get throws {
            try _interop.get_PhotosSizeInBytes()
        }
    }

    /// Gets the photo import session associated with the delete operation.
    /// - Returns: The photo import session associated with the delete operation.
    public var session: WindowsMediaImport_PhotoImportSession {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Session())
        }
    }

    /// Gets the number of sibling files deleted in the operation.
    /// - Returns: The number of sibling files deleted in the operation.
    public var siblingsCount: Swift.UInt32 {
        get throws {
            try _interop.get_SiblingsCount()
        }
    }

    /// Gets the size of the deleted sibling files, in bytes.
    /// - Returns: The size of the deleted sibling files, in bytes.
    public var siblingsSizeInBytes: Swift.UInt64 {
        get throws {
            try _interop.get_SiblingsSizeInBytes()
        }
    }

    /// Gets the number of sidecar files deleted in the operation.
    /// - Returns: The number of sidecar files deleted in the operation.
    public var sidecarsCount: Swift.UInt32 {
        get throws {
            try _interop.get_SidecarsCount()
        }
    }

    /// Gets the size of the deleted sidecar files, in bytes.
    /// - Returns: The size of the deleted sidecar files, in bytes.
    public var sidecarsSizeInBytes: Swift.UInt64 {
        get throws {
            try _interop.get_SidecarsSizeInBytes()
        }
    }

    /// Gets the total number of items deleted in the operation.
    /// - Returns: The total number of items deleted in the operation.
    public var totalCount: Swift.UInt32 {
        get throws {
            try _interop.get_TotalCount()
        }
    }

    /// Gets the total size of the all deleted items, in bytes.
    /// - Returns: The total size of the all deleted items, in bytes.
    public var totalSizeInBytes: Swift.UInt64 {
        get throws {
            try _interop.get_TotalSizeInBytes()
        }
    }

    /// Gets the number of videos deleted in the operation.
    /// - Returns: The number of videos deleted in the operation.
    public var videosCount: Swift.UInt32 {
        get throws {
            try _interop.get_VideosCount()
        }
    }

    /// Gets the size of the deleted videos, in bytes.
    /// - Returns: The size of the deleted videos, in bytes.
    public var videosSizeInBytes: Swift.UInt64 {
        get throws {
            try _interop.get_VideosSizeInBytes()
        }
    }

    // MARK: Implementation details
}