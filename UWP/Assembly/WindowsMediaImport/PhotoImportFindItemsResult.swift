// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the result of a operation that finds media items on a source.
public final class WindowsMediaImport_PhotoImportFindItemsResult: WindowsRuntime.WinRTImport<WindowsMediaImport_PhotoImportFindItemsResultProjection> {
    // MARK: Windows.Media.Import.IPhotoImportFindItemsResult members

    /// Gets a list of items that were found on the source.
    /// - Returns: A list of items that were found on the source.
    public var foundItems: WindowsFoundationCollections_IVectorView<WindowsMediaImport_PhotoImportItem?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_FoundItems())
        }
    }

    /// Gets a value indicating whether the find operation has succeeded.
    /// - Returns: True if the find operation has succeeded; otherwise, false.
    public var hasSucceeded: Swift.Bool {
        get throws {
            try _interop.get_HasSucceeded()
        }
    }

    /// Gets the photo import mode that determines which types of files are included in the ImportItemsAsync operation.
    /// - Returns: The photo import mode.
    public var importMode: WindowsMediaImport_PhotoImportImportMode {
        get throws {
            try _interop.get_ImportMode()
        }
    }

    /// Gets the number of photos found on the source.
    /// - Returns: The number of photos found on the source.
    public var photosCount: Swift.UInt32 {
        get throws {
            try _interop.get_PhotosCount()
        }
    }

    /// Gets the size of the photos found on the source, in bytes.
    /// - Returns: The size of the found photos, in bytes.
    public var photosSizeInBytes: Swift.UInt64 {
        get throws {
            try _interop.get_PhotosSizeInBytes()
        }
    }

    /// Gets the number of photos that are currently selected to be included in the ImportItemsAsync operation.
    /// - Returns: The number of photos that are currently selected.
    public var selectedPhotosCount: Swift.UInt32 {
        get throws {
            try _interop.get_SelectedPhotosCount()
        }
    }

    /// Gets the size of the photos that are currently selected to be included in the ImportItemsAsync operation, in bytes.
    /// - Returns: The size of the photos that are currently selected, in bytes.
    public var selectedPhotosSizeInBytes: Swift.UInt64 {
        get throws {
            try _interop.get_SelectedPhotosSizeInBytes()
        }
    }

    /// Gets the number of sibling files that are currently selected to be included in the ImportItemsAsync operation.
    /// - Returns: The number of sibling files that are currently selected.
    public var selectedSiblingsCount: Swift.UInt32 {
        get throws {
            try _interop.get_SelectedSiblingsCount()
        }
    }

    /// Gets the size of the sibling files that are currently selected to be included in the ImportItemsAsync operation, in bytes.
    /// - Returns: The size of the sibling files that are currently selected.
    public var selectedSiblingsSizeInBytes: Swift.UInt64 {
        get throws {
            try _interop.get_SelectedSiblingsSizeInBytes()
        }
    }

    /// Gets the number of sidecar files that are currently selected to be included in the ImportItemsAsync operation.
    /// - Returns: The number of sidecar files that are currently selected.
    public var selectedSidecarsCount: Swift.UInt32 {
        get throws {
            try _interop.get_SelectedSidecarsCount()
        }
    }

    /// Gets the size of the sidecar files that are currently selected to be included in the ImportItemsAsync operation, in bytes.
    /// - Returns: The size of the sidecar files that are currently selected.
    public var selectedSidecarsSizeInBytes: Swift.UInt64 {
        get throws {
            try _interop.get_SelectedSidecarsSizeInBytes()
        }
    }

    /// Gets the total number of items that are currently selected to be included in the ImportItemsAsync operation.
    /// - Returns: The total number of items that are currently selected
    public var selectedTotalCount: Swift.UInt32 {
        get throws {
            try _interop.get_SelectedTotalCount()
        }
    }

    /// Gets the total size of the all items that are currently selected to be included in the ImportItemsAsync operation, in bytes.
    /// - Returns: The total size of the all items that are currently selected, in bytes.
    public var selectedTotalSizeInBytes: Swift.UInt64 {
        get throws {
            try _interop.get_SelectedTotalSizeInBytes()
        }
    }

    /// Gets the number of videos that are currently selected to be included in the ImportItemsAsync operation.
    /// - Returns: The number of videos that are currently selected.
    public var selectedVideosCount: Swift.UInt32 {
        get throws {
            try _interop.get_SelectedVideosCount()
        }
    }

    /// Gets the size of the videos that are currently selected to be included in the ImportItemsAsync operation, in bytes.
    /// - Returns: The size of the videos that are currently selected, in bytes.
    public var selectedVideosSizeInBytes: Swift.UInt64 {
        get throws {
            try _interop.get_SelectedVideosSizeInBytes()
        }
    }

    /// Gets the photo import session associated with the find operation.
    /// - Returns: The photo import session associated with the find operation.
    public var session: WindowsMediaImport_PhotoImportSession {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Session())
        }
    }

    /// Gets the number of sibling files found on the source.
    /// - Returns: The number of sibling files found on the source.
    public var siblingsCount: Swift.UInt32 {
        get throws {
            try _interop.get_SiblingsCount()
        }
    }

    /// Gets the size of the found sibling files, in bytes.
    /// - Returns: The size of the found sibling files, in bytes.
    public var siblingsSizeInBytes: Swift.UInt64 {
        get throws {
            try _interop.get_SiblingsSizeInBytes()
        }
    }

    /// Gets the number of sidecar files found on the source.
    /// - Returns: The number of sidecar files found on the source.
    public var sidecarsCount: Swift.UInt32 {
        get throws {
            try _interop.get_SidecarsCount()
        }
    }

    /// Gets the size of the found sidecar files, in bytes.
    /// - Returns: The size of the found sidecar files, in bytes.
    public var sidecarsSizeInBytes: Swift.UInt64 {
        get throws {
            try _interop.get_SidecarsSizeInBytes()
        }
    }

    /// Gets the total number of items found on the source.
    /// - Returns: The total number of items found on the source.
    public var totalCount: Swift.UInt32 {
        get throws {
            try _interop.get_TotalCount()
        }
    }

    /// Gets the total size of all items found on the source, in bytes.
    /// - Returns: The total size of all items found on the source, in bytes.
    public var totalSizeInBytes: Swift.UInt64 {
        get throws {
            try _interop.get_TotalSizeInBytes()
        }
    }

    /// Gets the number of videos found on the source.
    /// - Returns: The number of videos found on the source.
    public var videosCount: Swift.UInt32 {
        get throws {
            try _interop.get_VideosCount()
        }
    }

    /// Gets the size of the videos found on the source, in bytes.
    /// - Returns: The size of the found videos, in bytes.
    public var videosSizeInBytes: Swift.UInt64 {
        get throws {
            try _interop.get_VideosSizeInBytes()
        }
    }

    /// Occurs when an item is imported.
    public func itemImported(adding value: WindowsFoundation_TypedEventHandler<WindowsMediaImport_PhotoImportFindItemsResult?, WindowsMediaImport_PhotoImportItemImportedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_ItemImported(value)
        return WindowsRuntime.EventRegistration(token: _token, remover: itemImported)
    }

    public func itemImported(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_ItemImported(token)
    }

    /// Occurs when the set of items selected to be included in the ImportItemsAsync operation changes.
    public func selectionChanged(adding value: WindowsFoundation_TypedEventHandler<WindowsMediaImport_PhotoImportFindItemsResult?, WindowsMediaImport_PhotoImportSelectionChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_SelectionChanged(value)
        return WindowsRuntime.EventRegistration(token: _token, remover: selectionChanged)
    }

    public func selectionChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_SelectionChanged(token)
    }

    /// Selects all items found on the source to be included in the ImportItemsAsync operation.
    public func selectAll() throws {
        try _interop.selectAll()
    }

    /// Deselects all items found on the source, preventing them from being included in the ImportItemsAsync operation.
    public func selectNone() throws {
        try _interop.selectNone()
    }

    /// Selects all new items found on the source to be included in the ImportItemsAsync operation.
    /// - Returns: An asynchronous operation.
    public func selectNewAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.selectNewAsync())
    }

    /// Sets the photo import mode that determines which types of files are included in the ImportItemsAsync operation.
    /// - Parameter value: The photo import mode.
    public func setImportMode(_ value: WindowsMediaImport_PhotoImportImportMode) throws {
        try _interop.setImportMode(value)
    }

    /// Asynchronously imports the selected items from the source.
    /// - Returns: An asynchronous operation that returns a PhotoImportImportItemsResult on successful completion.
    public func importItemsAsync() throws -> WindowsFoundation_IAsyncOperationWithProgress<WindowsMediaImport_PhotoImportImportItemsResult?, WindowsMediaImport_PhotoImportProgress> {
        try COM.NullResult.unwrap(_interop.importItemsAsync())
    }

    // MARK: Windows.Media.Import.IPhotoImportFindItemsResult2 members

    /// Adds all items in the specified date range to the current selection.
    /// - Parameter rangeStart: The start of the date range.
    /// - Parameter rangeLength: The length of the date range.
    public func addItemsInDateRangeToSelection(_ rangeStart: WindowsFoundation_DateTime, _ rangeLength: WindowsFoundation_TimeSpan) throws {
        try _iphotoImportFindItemsResult2.addItemsInDateRangeToSelection(rangeStart, rangeLength)
    }

    // MARK: Implementation details

    private var _iphotoImportFindItemsResult2_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaImport_IPhotoImportFindItemsResult2>? = nil

    internal var _iphotoImportFindItemsResult2: COM.COMInterop<CWinRT.SWRT_WindowsMediaImport_IPhotoImportFindItemsResult2> {
        get throws {
            try _iphotoImportFindItemsResult2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaImport_IPhotoImportFindItemsResult2.iid).cast(to: CWinRT.SWRT_WindowsMediaImport_IPhotoImportFindItemsResult2.self)
            }
        }
    }

    deinit {
        _iphotoImportFindItemsResult2_storage?.release()
    }
}