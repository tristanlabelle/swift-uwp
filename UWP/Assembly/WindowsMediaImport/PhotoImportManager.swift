// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides APIs for determining if photo import is supported on the current device, finding sources from which to import photos, and getting references to any pending photo import operations.
public enum WindowsMediaImport_PhotoImportManager {
    // MARK: Windows.Media.Import.IPhotoImportManagerStatics members

    /// Gets a value indicating if photo import is supported on the current device.
    /// - Returns: An asynchronous operation that returns true if photo import is supported. Otherwise, returns false.
    public static func isSupportedAsync() throws -> WindowsFoundation_IAsyncOperation<Swift.Bool> {
        try COM.NullResult.unwrap(_iphotoImportManagerStatics.isSupportedAsync())
    }

    /// Finds all currently available sources from which photos can be imported.
    /// - Returns: An asynchronous operation that returns a list of available sources on successful completion.
    public static func findAllSourcesAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsMediaImport_PhotoImportSource?>?> {
        try COM.NullResult.unwrap(_iphotoImportManagerStatics.findAllSourcesAsync())
    }

    /// Gets the list of all pending photo import operations.
    /// - Returns: The list of all pending photo operations.
    public static func getPendingOperations() throws -> WindowsFoundationCollections_IVectorView<WindowsMediaImport_PhotoImportOperation?> {
        try COM.NullResult.unwrap(_iphotoImportManagerStatics.getPendingOperations())
    }

    // MARK: Implementation details

    private static var _iphotoImportManagerStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaImport_IPhotoImportManagerStatics>? = nil

    internal static var _iphotoImportManagerStatics: COM.COMInterop<CWinRT.SWRT_WindowsMediaImport_IPhotoImportManagerStatics> {
        get throws {
            try _iphotoImportManagerStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.Import.PhotoImportManager", id: CWinRT.SWRT_WindowsMediaImport_IPhotoImportManagerStatics.iid)
            }
        }
    }
}