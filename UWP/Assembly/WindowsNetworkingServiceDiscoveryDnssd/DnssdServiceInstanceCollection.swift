// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// A collection of DNS Service Discovery (DNS-SD) service instances.
public final class WindowsNetworkingServiceDiscoveryDnssd_DnssdServiceInstanceCollection: WindowsRuntime.WinRTImport<WindowsNetworkingServiceDiscoveryDnssd_DnssdServiceInstanceCollectionProjection>, WindowsFoundationCollections_IVectorViewProtocol, WindowsFoundationCollections_IIterableProtocol {
    public typealias T = WindowsNetworkingServiceDiscoveryDnssd_DnssdServiceInstance?

    // MARK: Windows.Foundation.Collections.IVectorView`1<Windows.Networking.ServiceDiscovery.Dnssd.DnssdServiceInstance> members

    /// Gets the number of items in the collection
    /// - Returns: The number of items in the collection.
    public var size: Swift.UInt32 {
        get throws {
            try _interop.get_Size()
        }
    }

    /// Gets the DnssdServiceInstance at a given index into the DnssdServiceInstanceCollection.
    /// - Parameter index: The index of the instance to be retrieved. Indices are 0-based. If your code specifies an index that is out of bounds, an exception is thrown. The maximum valid index is equal to one less than the DnssdServiceInstanceCollection.Size value.
    /// - Returns: The DnssdServiceInstance at the given index in the collection.
    public func getAt(_ index: Swift.UInt32) throws -> WindowsNetworkingServiceDiscoveryDnssd_DnssdServiceInstance? {
        try _interop.getAt(index)
    }

    /// Gets a value indicating whether a given DnssdServiceInstance is at the specified index in this service instance collection.
    /// - Parameter value: The DnssdServiceInstance to get the index of.
    /// - Parameter index: The index, if the DnssdServiceInstance is found.
    /// - Returns: **true** if *value* is found at *index*, **false** otherwise.
    public func indexOf(_ value: WindowsNetworkingServiceDiscoveryDnssd_DnssdServiceInstance?, _ index: inout Swift.UInt32) throws -> Swift.Bool {
        try _interop.indexOf(value, &index)
    }

    /// Gets multiple DnssdServiceInstance objects from a DNS-SD service instance collection.
    /// - Parameter startIndex: Index of the first collection item to be retrieved.
    /// - Parameter items: The retrieved DnssdServiceInstance objects.
    /// - Returns: The number of items in *items*.
    public func getMany(_ startIndex: Swift.UInt32, _ items: [WindowsNetworkingServiceDiscoveryDnssd_DnssdServiceInstance?]) throws -> Swift.UInt32 {
        try _interop.getMany(startIndex, items)
    }

    // MARK: Windows.Foundation.Collections.IIterable`1<Windows.Networking.ServiceDiscovery.Dnssd.DnssdServiceInstance> members

    /// Gets an iterator that is initialized to refer to the first item in the instance collection.
    /// - Returns: Gets an iterator instance initialized to the first item in the service instance collection. Your code can use this iterator to enumerate all members of the collection.
    public func first() throws -> WindowsFoundationCollections_IIterator<WindowsNetworkingServiceDiscoveryDnssd_DnssdServiceInstance?> {
        try COM.NullResult.unwrap(_iiterable.first())
    }

    // MARK: Implementation details

    private var _iiterable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsNetworkingServiceDiscoveryDnssd_DnssdServiceInstance>? = nil

    internal var _iiterable: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsNetworkingServiceDiscoveryDnssd_DnssdServiceInstance> {
        get throws {
            try _iiterable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsNetworkingServiceDiscoveryDnssd_DnssdServiceInstance.iid).cast(to: CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsNetworkingServiceDiscoveryDnssd_DnssdServiceInstance.self)
            }
        }
    }

    deinit {
        _iiterable_storage?.release()
    }
}