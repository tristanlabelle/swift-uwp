// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides access to common locations that contain user content. This includes content from a user's local libraries (such as Documents, Pictures, Music, and Videos), HomeGroup, removable devices, and media server devices.
public enum WindowsStorage_KnownFolders {
    // MARK: Windows.Storage.IKnownFoldersSavedPicturesStatics members

    /// Gets the Saved Pictures folder.
    /// - Returns: The Saved Pictures folder.
    public static var savedPictures: WindowsStorage_StorageFolder {
        get throws {
            try COM.NullResult.unwrap(_iknownFoldersSavedPicturesStatics.get_SavedPictures())
        }
    }

    // MARK: Windows.Storage.IKnownFoldersStatics4 members

    public static func requestAccessAsync(_ folderId: WindowsStorage_KnownFolderId) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_KnownFoldersAccessStatus> {
        try COM.NullResult.unwrap(_iknownFoldersStatics4.requestAccessAsync(folderId))
    }

    public static func requestAccessForUserAsync(_ user: WindowsSystem_User?, _ folderId: WindowsStorage_KnownFolderId) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_KnownFoldersAccessStatus> {
        try COM.NullResult.unwrap(_iknownFoldersStatics4.requestAccessForUserAsync(user, folderId))
    }

    public static func getFolderAsync(_ folderId: WindowsStorage_KnownFolderId) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFolder?> {
        try COM.NullResult.unwrap(_iknownFoldersStatics4.getFolderAsync(folderId))
    }

    // MARK: Windows.Storage.IKnownFoldersStatics3 members

    /// Static method that returns a specified known folder for a User.
    /// - Parameter user: The User for which the folder is returned. Use `null` for the current user. In context of this API, current user refers to the user context of the process from where the API call is made.
    /// - Parameter folderId: The ID of the folder to be returned.
    /// - Returns: When this method completes, it returns the requested StorageFolder object.
    public static func getFolderForUserAsync(_ user: WindowsSystem_User?, _ folderId: WindowsStorage_KnownFolderId) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFolder?> {
        try COM.NullResult.unwrap(_iknownFoldersStatics3.getFolderForUserAsync(user, folderId))
    }

    // MARK: Windows.Storage.IKnownFoldersStatics2 members

    /// Gets the App Captures folder.
    /// - Returns: The App Captures folder.
    public static var appCaptures: WindowsStorage_StorageFolder {
        get throws {
            try COM.NullResult.unwrap(_iknownFoldersStatics2.get_AppCaptures())
        }
    }

    /// Gets the Objects 3D folder.
    /// - Returns: The Objects 3D folder.
    public static var objects3D: WindowsStorage_StorageFolder {
        get throws {
            try COM.NullResult.unwrap(_iknownFoldersStatics2.get_Objects3D())
        }
    }

    /// Gets the recorded calls folder.
    /// - Returns: The recorded calls folder.
    public static var recordedCalls: WindowsStorage_StorageFolder {
        get throws {
            try COM.NullResult.unwrap(_iknownFoldersStatics2.get_RecordedCalls())
        }
    }

    // MARK: Windows.Storage.IKnownFoldersStatics members

    /// Gets the Documents library. The Documents library is not intended for general use.
    /// - Returns: The Documents library.
    public static var documentsLibrary: WindowsStorage_StorageFolder {
        get throws {
            try COM.NullResult.unwrap(_iknownFoldersStatics.get_DocumentsLibrary())
        }
    }

    /// Gets the HomeGroup folder.
    /// - Returns: The HomeGroup folder.
    public static var homeGroup: WindowsStorage_StorageFolder {
        get throws {
            try COM.NullResult.unwrap(_iknownFoldersStatics.get_HomeGroup())
        }
    }

    /// Gets the folder of media server (Digital Living Network Alliance (DLNA)) devices.
    /// - Returns: The folder of media server (Digital Living Network Alliance (DLNA)) devices.
    public static var mediaServerDevices: WindowsStorage_StorageFolder {
        get throws {
            try COM.NullResult.unwrap(_iknownFoldersStatics.get_MediaServerDevices())
        }
    }

    /// Gets the Music library.
    /// - Returns: The Music library.
    public static var musicLibrary: WindowsStorage_StorageFolder {
        get throws {
            try COM.NullResult.unwrap(_iknownFoldersStatics.get_MusicLibrary())
        }
    }

    /// Gets the Pictures library.
    /// - Returns: The Pictures library.
    public static var picturesLibrary: WindowsStorage_StorageFolder {
        get throws {
            try COM.NullResult.unwrap(_iknownFoldersStatics.get_PicturesLibrary())
        }
    }

    /// Gets the removable devices folder.
    /// - Returns: The removable devices folder.
    public static var removableDevices: WindowsStorage_StorageFolder {
        get throws {
            try COM.NullResult.unwrap(_iknownFoldersStatics.get_RemovableDevices())
        }
    }

    /// Gets the Videos library.
    /// - Returns: The Videos library.
    public static var videosLibrary: WindowsStorage_StorageFolder {
        get throws {
            try COM.NullResult.unwrap(_iknownFoldersStatics.get_VideosLibrary())
        }
    }

    // MARK: Windows.Storage.IKnownFoldersCameraRollStatics members

    /// Gets the Camera Roll folder.
    /// - Returns: The Camera Roll folder.
    public static var cameraRoll: WindowsStorage_StorageFolder {
        get throws {
            try COM.NullResult.unwrap(_iknownFoldersCameraRollStatics.get_CameraRoll())
        }
    }

    // MARK: Windows.Storage.IKnownFoldersPlaylistsStatics members

    /// Gets the play lists folder.
    /// - Returns: The play lists folder.
    public static var playlists: WindowsStorage_StorageFolder {
        get throws {
            try COM.NullResult.unwrap(_iknownFoldersPlaylistsStatics.get_Playlists())
        }
    }

    // MARK: Implementation details

    private static var _iknownFoldersSavedPicturesStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IKnownFoldersSavedPicturesStatics>? = nil

    internal static var _iknownFoldersSavedPicturesStatics: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IKnownFoldersSavedPicturesStatics> {
        get throws {
            try _iknownFoldersSavedPicturesStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Storage.KnownFolders", id: CWinRT.SWRT_WindowsStorage_IKnownFoldersSavedPicturesStatics.iid)
            }
        }
    }

    private static var _iknownFoldersStatics4_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IKnownFoldersStatics4>? = nil

    internal static var _iknownFoldersStatics4: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IKnownFoldersStatics4> {
        get throws {
            try _iknownFoldersStatics4_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Storage.KnownFolders", id: CWinRT.SWRT_WindowsStorage_IKnownFoldersStatics4.iid)
            }
        }
    }

    private static var _iknownFoldersStatics3_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IKnownFoldersStatics3>? = nil

    internal static var _iknownFoldersStatics3: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IKnownFoldersStatics3> {
        get throws {
            try _iknownFoldersStatics3_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Storage.KnownFolders", id: CWinRT.SWRT_WindowsStorage_IKnownFoldersStatics3.iid)
            }
        }
    }

    private static var _iknownFoldersStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IKnownFoldersStatics2>? = nil

    internal static var _iknownFoldersStatics2: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IKnownFoldersStatics2> {
        get throws {
            try _iknownFoldersStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Storage.KnownFolders", id: CWinRT.SWRT_WindowsStorage_IKnownFoldersStatics2.iid)
            }
        }
    }

    private static var _iknownFoldersStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IKnownFoldersStatics>? = nil

    internal static var _iknownFoldersStatics: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IKnownFoldersStatics> {
        get throws {
            try _iknownFoldersStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Storage.KnownFolders", id: CWinRT.SWRT_WindowsStorage_IKnownFoldersStatics.iid)
            }
        }
    }

    private static var _iknownFoldersCameraRollStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IKnownFoldersCameraRollStatics>? = nil

    internal static var _iknownFoldersCameraRollStatics: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IKnownFoldersCameraRollStatics> {
        get throws {
            try _iknownFoldersCameraRollStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Storage.KnownFolders", id: CWinRT.SWRT_WindowsStorage_IKnownFoldersCameraRollStatics.iid)
            }
        }
    }

    private static var _iknownFoldersPlaylistsStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IKnownFoldersPlaylistsStatics>? = nil

    internal static var _iknownFoldersPlaylistsStatics: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IKnownFoldersPlaylistsStatics> {
        get throws {
            try _iknownFoldersPlaylistsStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Storage.KnownFolders", id: CWinRT.SWRT_WindowsStorage_IKnownFoldersPlaylistsStatics.iid)
            }
        }
    }
}