// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Enables the calling app to read through the changes to items in a storage library.
public final class WindowsStorage_StorageLibraryChangeReader: WindowsRuntime.WinRTImport<WindowsStorage_StorageLibraryChangeReaderProjection> {
    // MARK: Windows.Storage.IStorageLibraryChangeReader members

    /// Asynchronously gets a list of StorageLibraryChange objects.
    /// - Returns: A list of StorageLibraryChange objects.
    public func readBatchAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsStorage_StorageLibraryChange?>?> {
        try COM.NullResult.unwrap(_interop.readBatchAsync())
    }

    /// Tells the system that all of the changes described in the StorageLibraryChange objects returned by the call to ReadBatchAsync have been addressed by the app.
    /// - Returns: An object that is used to manage the asynchronous accept change operation.
    public func acceptChangesAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.acceptChangesAsync())
    }

    // MARK: Windows.Storage.IStorageLibraryChangeReader2 members

    public func getLastChangeId() throws -> Swift.UInt64 {
        try _istorageLibraryChangeReader2.getLastChangeId()
    }

    // MARK: Implementation details

    private var _istorageLibraryChangeReader2_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IStorageLibraryChangeReader2>? = nil

    internal var _istorageLibraryChangeReader2: COM.COMInterop<CWinRT.SWRT_WindowsStorage_IStorageLibraryChangeReader2> {
        get throws {
            try _istorageLibraryChangeReader2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsStorage_IStorageLibraryChangeReader2.iid).cast(to: CWinRT.SWRT_WindowsStorage_IStorageLibraryChangeReader2.self)
            }
        }
    }

    deinit {
        _istorageLibraryChangeReader2_storage?.release()
    }
}