// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Exposes methods for operating on a single frame of an image.
public protocol WindowsGraphicsImaging_IBitmapFrameProtocol: IInspectableProtocol {
    /// Returns the default alpha mode of the frame.
    /// - Returns: The default alpha mode of the frame.
    var bitmapAlphaMode: WindowsGraphicsImaging_BitmapAlphaMode { get throws }

    /// Returns the default pixel format of the frame.
    /// - Returns: The default pixel format of the frame.
    var bitmapPixelFormat: WindowsGraphicsImaging_BitmapPixelFormat { get throws }

    /// Returns a read-only view of the metadata within the frame.
    /// - Returns: A read-only view of the metadata within the frame.
    var bitmapProperties: WindowsGraphicsImaging_BitmapPropertiesView { get throws }

    /// Returns the horizontal resolution of the frame in dots per inch.
    /// - Returns: The horizontal resolution of the frame in dots per inch.
    var dpiX: Swift.Double { get throws }

    /// Returns the vertical resolution of the frame in dots per inch.
    /// - Returns: The vertical resolution of the frame in dots per inch.
    var dpiY: Swift.Double { get throws }

    /// Returns the height of the frame in pixels, after any EXIF orientation has been applied to the bitmap.
    /// - Returns: The height of the frame in pixels, after any EXIF orientation has been applied.
    var orientedPixelHeight: Swift.UInt32 { get throws }

    /// Returns the width of the frame in pixels, after any EXIF orientation has been applied to the bitmap.
    /// - Returns: The width of the frame in pixels, after any EXIF orientation has been applied.
    var orientedPixelWidth: Swift.UInt32 { get throws }

    /// Returns the height of the frame in pixels.
    /// - Returns: The height of the frame in pixels.
    var pixelHeight: Swift.UInt32 { get throws }

    /// Returns the width of the frame in pixels.
    /// - Returns: The width of the frame in pixels.
    var pixelWidth: Swift.UInt32 { get throws }

    /// Asynchronously retrieves the thumbnail data for the frame.
    /// - Returns: Object that manages the asynchronous retrieval of the thumbnail data.
    func getThumbnailAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsGraphicsImaging_ImageStream?>

    /// Asynchronously requests the pixel data for the frame. The resulting pixel data array will use the bitmap pixel format and alpha mode specified in the BitmapPixelFormat and BitmapAlphaMode properties. It will also have color management and EXIF orientation applied (see the Remarks section for more information).
    /// - Returns: Object that manages the asynchronous retrieval of the pixel data.
    func getPixelDataAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsGraphicsImaging_PixelDataProvider?>

    /// Asynchronously requests the pixel data for the frame using the specified parameters.
    /// - Parameter pixelFormat: The specified pixel format.
    /// - Parameter alphaMode: The specified alpha mode.
    /// - Parameter transform: The set of transformations to be applied to the frame.
    /// - Parameter exifOrientationMode: Indicates whether the EXIF orientation flag should be ignored or respected.
    /// - Parameter colorManagementMode: Indicates whether the pixel data should be color managed to the sRGB color space.
    /// - Returns: Object that manages the asynchronous retrieval of the pixel data.
    func getPixelDataAsync(_ pixelFormat: WindowsGraphicsImaging_BitmapPixelFormat, _ alphaMode: WindowsGraphicsImaging_BitmapAlphaMode, _ transform: WindowsGraphicsImaging_BitmapTransform?, _ exifOrientationMode: WindowsGraphicsImaging_ExifOrientationMode, _ colorManagementMode: WindowsGraphicsImaging_ColorManagementMode) throws -> WindowsFoundation_IAsyncOperation<WindowsGraphicsImaging_PixelDataProvider?>
}

/// Exposes methods for operating on a single frame of an image.
public typealias WindowsGraphicsImaging_IBitmapFrame = any WindowsGraphicsImaging_IBitmapFrameProtocol