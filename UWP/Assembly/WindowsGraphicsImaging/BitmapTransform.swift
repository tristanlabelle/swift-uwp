// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Contains transformations that can be applied to pixel data.
public final class WindowsGraphicsImaging_BitmapTransform: WindowsRuntime.WinRTImport<WindowsGraphicsImaging_BitmapTransformProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsGraphicsImaging_BitmapTransformProjection.self))
    }

    // MARK: Windows.Graphics.Imaging.IBitmapTransform members

    /// Specifies the bounding rectangle that is used to crop the bitmap. This rectangle is defined in the coordinate space after scale, rotation, and flip are applied.
    /// - Returns: A structure that specifies the bounding rectangle.
    public var bounds: WindowsGraphicsImaging_BitmapBounds {
        get throws {
            try _interop.get_Bounds()
        }
    }

    /// Specifies the bounding rectangle that is used to crop the bitmap. This rectangle is defined in the coordinate space after scale, rotation, and flip are applied.
    /// - Returns: A structure that specifies the bounding rectangle.
    public func bounds(_ value: WindowsGraphicsImaging_BitmapBounds) throws {
        try _interop.put_Bounds(value)
    }

    /// Specifies the flip operation that is used to transform the bitmap.
    /// - Returns: The type of flip operation. One of the values of the BitmapFlip enumeration.
    public var flip: WindowsGraphicsImaging_BitmapFlip {
        get throws {
            try _interop.get_Flip()
        }
    }

    /// Specifies the flip operation that is used to transform the bitmap.
    /// - Returns: The type of flip operation. One of the values of the BitmapFlip enumeration.
    public func flip(_ value: WindowsGraphicsImaging_BitmapFlip) throws {
        try _interop.put_Flip(value)
    }

    /// Specifies the interpolation mode that is used to scale the bitmap.
    /// - Returns: The interpolation mode. One of the values of the BitmapInterpolationMode enumeration.
    public var interpolationMode: WindowsGraphicsImaging_BitmapInterpolationMode {
        get throws {
            try _interop.get_InterpolationMode()
        }
    }

    /// Specifies the interpolation mode that is used to scale the bitmap.
    /// - Returns: The interpolation mode. One of the values of the BitmapInterpolationMode enumeration.
    public func interpolationMode(_ value: WindowsGraphicsImaging_BitmapInterpolationMode) throws {
        try _interop.put_InterpolationMode(value)
    }

    /// Specifies the rotation operation that is used to transform the bitmap.
    /// - Returns: The type of rotation. One of the values of the BitmapRotation enumeration.
    public var rotation: WindowsGraphicsImaging_BitmapRotation {
        get throws {
            try _interop.get_Rotation()
        }
    }

    /// Specifies the rotation operation that is used to transform the bitmap.
    /// - Returns: The type of rotation. One of the values of the BitmapRotation enumeration.
    public func rotation(_ value: WindowsGraphicsImaging_BitmapRotation) throws {
        try _interop.put_Rotation(value)
    }

    /// Specifies the height, in pixels, of the bitmap after it is scaled. This is defined in the coordinate space of the source image, before rotation and flip are applied.
    /// - Returns: The height of the bitmap, in pixels.
    public var scaledHeight: Swift.UInt32 {
        get throws {
            try _interop.get_ScaledHeight()
        }
    }

    /// Specifies the height, in pixels, of the bitmap after it is scaled. This is defined in the coordinate space of the source image, before rotation and flip are applied.
    /// - Returns: The height of the bitmap, in pixels.
    public func scaledHeight(_ value: Swift.UInt32) throws {
        try _interop.put_ScaledHeight(value)
    }

    /// Specifies the width, in pixels, of the bitmap after it is scaled. This is defined in the coordinate space of the source image, before rotation and flip are applied.
    /// - Returns: The width of the bitmap, in pixels.
    public var scaledWidth: Swift.UInt32 {
        get throws {
            try _interop.get_ScaledWidth()
        }
    }

    /// Specifies the width, in pixels, of the bitmap after it is scaled. This is defined in the coordinate space of the source image, before rotation and flip are applied.
    /// - Returns: The width of the bitmap, in pixels.
    public func scaledWidth(_ value: Swift.UInt32) throws {
        try _interop.put_ScaledWidth(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Graphics.Imaging.BitmapTransform", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}