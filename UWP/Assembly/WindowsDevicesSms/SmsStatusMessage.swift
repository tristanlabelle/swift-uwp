// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Encapsulates an SMS status message.
public final class WindowsDevicesSms_SmsStatusMessage: WindowsRuntime.WinRTImport<WindowsDevicesSms_SmsStatusMessageProjection>, WindowsDevicesSms_ISmsMessageBaseProtocol {
    // MARK: Windows.Devices.Sms.ISmsStatusMessage members

    /// Gets the body of the status message.
    /// - Returns: The plain text body of the message.
    public var body: Swift.String {
        get throws {
            try _interop.get_Body()
        }
    }

    /// The discharge time of the status message.
    /// - Returns: The discharge time.
    public var dischargeTime: WindowsFoundation_DateTime {
        get throws {
            try _interop.get_DischargeTime()
        }
    }

    /// Gets the phone number that sent the status message.
    /// - Returns: The sending phone number, as a string.
    public var from: Swift.String {
        get throws {
            try _interop.get_From()
        }
    }

    /// Gets the reference number of the status message.
    /// - Returns: The message number.
    public var messageReferenceNumber: Swift.Int32 {
        get throws {
            try _interop.get_MessageReferenceNumber()
        }
    }

    /// Gets the service center timestamp of the status message.
    /// - Returns: The service center date and time when the status message was sent.
    public var serviceCenterTimestamp: WindowsFoundation_DateTime {
        get throws {
            try _interop.get_ServiceCenterTimestamp()
        }
    }

    /// The status code associated with this message.
    /// - Returns: The status in this status message.
    public var status: Swift.Int32 {
        get throws {
            try _interop.get_Status()
        }
    }

    /// Gets the phone number the status message was sent to.
    /// - Returns: The phone number, as a string.
    public var to: Swift.String {
        get throws {
            try _interop.get_To()
        }
    }

    // MARK: Windows.Devices.Sms.ISmsMessageBase members

    /// Gets the cellular class of the message.
    /// - Returns: An enumeration value describing the message's cellular class.
    public var cellularClass: WindowsDevicesSms_CellularClass {
        get throws {
            try _ismsMessageBase.get_CellularClass()
        }
    }

    /// Gets the device identifier associated with the status message.
    /// - Returns: The unique device identifier, as a string.
    public var deviceId: Swift.String {
        get throws {
            try _ismsMessageBase.get_DeviceId()
        }
    }

    /// Gets the message class of the status message.
    /// - Returns: An enumeration value giving the message class of the status message.
    public var messageClass: WindowsDevicesSms_SmsMessageClass {
        get throws {
            try _ismsMessageBase.get_MessageClass()
        }
    }

    /// Gets the message type of the status message.
    /// - Returns: An enumeration value giving the message type of this message.
    public var messageType: WindowsDevicesSms_SmsMessageType {
        get throws {
            try _ismsMessageBase.get_MessageType()
        }
    }

    /// Gets the ICCID (Integrated Circuit Card Identifier) of the SIM that received the message.
    /// - Returns: The ICCID of the SIM.
    public var simIccId: Swift.String {
        get throws {
            try _ismsMessageBase.get_SimIccId()
        }
    }

    // MARK: Implementation details

    private var _ismsMessageBase_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesSms_ISmsMessageBase>? = nil

    internal var _ismsMessageBase: COM.COMInterop<CWinRT.SWRT_WindowsDevicesSms_ISmsMessageBase> {
        get throws {
            try _ismsMessageBase_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsDevicesSms_ISmsMessageBase.iid).cast(to: CWinRT.SWRT_WindowsDevicesSms_ISmsMessageBase.self)
            }
        }
    }

    deinit {
        _ismsMessageBase_storage?.release()
    }
}