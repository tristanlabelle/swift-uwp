// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// This enumerated type is used to determine the encoding algorithm to send or calculate the length of an SmsTextMessage object.
public struct WindowsDevicesSms_SmsEncoding: RawRepresentable, Hashable, Codable {
    public var rawValue: Swift.Int32

    public init(rawValue: Swift.Int32 = 0) {
        self.rawValue = rawValue
    }

    /// The data encoding is unknown.
    public static let unknown = Self()

    /// 7-bit encoding if all characters can be represented, otherwise 2-byte Universal Character Set (UCS-2) encoding.
    public static let optimal = Self(rawValue: 1)

    /// Seven-bit ASCII encoding.
    public static let sevenBitAscii = Self(rawValue: 2)

    /// Unicode encoding.
    public static let unicode = Self(rawValue: 3)

    /// Standard 7-bit GSM encoding.
    public static let gsmSevenBit = Self(rawValue: 4)

    /// Standard eight bit encoding.
    public static let eightBit = Self(rawValue: 5)

    /// Latin encoding.
    public static let latin = Self(rawValue: 6)

    /// Korean encoding.
    public static let korean = Self(rawValue: 7)

    /// IA5 encoding.
    public static let ia5 = Self(rawValue: 8)

    /// Shift-JIS encoding for the Japanese language.
    public static let shiftJis = Self(rawValue: 9)

    /// Latin Hebrew encoding.
    public static let latinHebrew = Self(rawValue: 10)
}