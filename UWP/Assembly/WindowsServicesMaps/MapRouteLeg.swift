// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the set of actions (maneuvers) required to travel between two waypoints along a route.
public final class WindowsServicesMaps_MapRouteLeg: WindowsRuntime.WinRTImport<WindowsServicesMaps_MapRouteLegProjection> {
    // MARK: Windows.Services.Maps.IMapRouteLeg members

    /// Gets the bounding box that contains the route leg.
    /// - Returns: The bounding box that contains the route leg.
    public var boundingBox: WindowsDevicesGeolocation_GeoboundingBox {
        get throws {
            try COM.NullResult.unwrap(_interop.get_BoundingBox())
        }
    }

    /// Gets the estimated time required to traverse the route leg.
    /// - Returns: The estimated time required to traverse the route leg.
    public var estimatedDuration: WindowsFoundation_TimeSpan {
        get throws {
            try _interop.get_EstimatedDuration()
        }
    }

    /// Gets the length of the route leg in meters.
    /// - Returns: The length of the route leg in meters.
    public var lengthInMeters: Swift.Double {
        get throws {
            try _interop.get_LengthInMeters()
        }
    }

    /// Gets the list of maneuvers associated with the route leg.
    /// - Returns: The list of maneuvers associated with the route leg. This property returns a collection of MapRouteManeuver objects.
    public var maneuvers: WindowsFoundationCollections_IVectorView<WindowsServicesMaps_MapRouteManeuver?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Maneuvers())
        }
    }

    /// Gets the path of the route leg.
    /// - Returns: The path of the route leg.
    public var path: WindowsDevicesGeolocation_Geopath {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Path())
        }
    }

    // MARK: Windows.Services.Maps.IMapRouteLeg2 members

    /// Gets the estimated time required to traverse the route without traffic.
    /// - Returns: The estimated time required to traverse the route without traffic.
    public var durationWithoutTraffic: WindowsFoundation_TimeSpan {
        get throws {
            try _imapRouteLeg2.get_DurationWithoutTraffic()
        }
    }

    /// Gets the level of traffic congestion along a map route leg.
    /// - Returns: The level of traffic congestion along a map route leg.
    public var trafficCongestion: WindowsServicesMaps_TrafficCongestion {
        get throws {
            try _imapRouteLeg2.get_TrafficCongestion()
        }
    }

    // MARK: Implementation details

    private var _imapRouteLeg2_storage: COM.COMInterop<CWinRT.SWRT_WindowsServicesMaps_IMapRouteLeg2>? = nil

    internal var _imapRouteLeg2: COM.COMInterop<CWinRT.SWRT_WindowsServicesMaps_IMapRouteLeg2> {
        get throws {
            try _imapRouteLeg2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsServicesMaps_IMapRouteLeg2.iid).cast(to: CWinRT.SWRT_WindowsServicesMaps_IMapRouteLeg2.self)
            }
        }
    }

    deinit {
        _imapRouteLeg2_storage?.release()
    }
}