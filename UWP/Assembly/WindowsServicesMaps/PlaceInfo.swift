// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Displays a map location and information that describes that location in a light-dismissible window which closes automatically when the user clicks outside of the window.
public final class WindowsServicesMaps_PlaceInfo: WindowsRuntime.WinRTImport<WindowsServicesMaps_PlaceInfoProjection> {
    // MARK: Windows.Services.Maps.IPlaceInfo members

    /// Gets the address associated with the PlaceInfo.
    /// - Returns: The address associated with the PlaceInfo.
    public var displayAddress: Swift.String {
        get throws {
            try _interop.get_DisplayAddress()
        }
    }

    /// Gets the display name associated with the PlaceInfo.
    /// - Returns: The display name associated with the PlaceInfo.
    public var displayName: Swift.String {
        get throws {
            try _interop.get_DisplayName()
        }
    }

    /// Gets the geographical shape associated with the PlaceInfo.
    /// - Returns: The geographical shape associated with the PlaceInfo.
    public var geoshape: WindowsDevicesGeolocation_IGeoshape {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Geoshape())
        }
    }

    /// Gets the identifier associated with the PlaceInfo.
    /// - Returns: Gets the identifier associated with the PlaceInfo.
    public var identifier: Swift.String {
        get throws {
            try _interop.get_Identifier()
        }
    }

    /// Shows in a pop-up window, the map location and related information that is described in the PlaceInfo.
    /// - Parameter selection: The Rect is the rectangular area of user selection (for example, pressing a button), around which the operating system displays the light-dismissible window, not within that rectangular area. For example, if an app uses a button to show the place, pass the Rect of the button so the light-dismissible window displays around the button, not overlapping it.
    public func show(_ selection: WindowsFoundation_Rect) throws {
        try _interop.show(selection)
    }

    /// Shows in a light-dismissible window, the map location and related information that is described in the PlaceInfo.
    /// - Parameter selection: The Rect is the rectangular area of user selection (for example, pressing a button), around which the operating system displays the light-dismissible window, not within that rectangular area. For example, if an app uses a button to show the place, pass the Rect of the button so the light-dismissible window displays around the button, not overlapping it.
    /// - Parameter preferredPlacement: The preferred placement of the light-dismissible window relative to the rectangle.
    public func show(_ selection: WindowsFoundation_Rect, _ preferredPlacement: WindowsUIPopups_Placement) throws {
        try _interop.showWithPreferredPlacement(selection, preferredPlacement)
    }

    // MARK: Windows.Services.Maps.IPlaceInfoStatics2 members

    /// Creates a PlaceInfo instance by using an address.
    /// - Parameter displayAddress: The address of the location that you want to appear in the placecard.
    public static func createFromAddress(_ displayAddress: Swift.String) throws -> WindowsServicesMaps_PlaceInfo {
        try COM.NullResult.unwrap(_iplaceInfoStatics2.createFromAddress(displayAddress))
    }

    /// Creates a PlaceInfo instance by using an address and a display name.
    /// - Parameter displayAddress: The address of the location that you want to appear in the placecard.
    /// - Parameter displayName: The name that you want to appear as a label in the placecard.
    public static func createFromAddress(_ displayAddress: Swift.String, _ displayName: Swift.String) throws -> WindowsServicesMaps_PlaceInfo {
        try COM.NullResult.unwrap(_iplaceInfoStatics2.createFromAddressWithName(displayAddress, displayName))
    }

    // MARK: Windows.Services.Maps.IPlaceInfoStatics members

    /// Gets a value that indicates whether your app can show a light-dismissible window that contains a map location and related information given the current context.
    /// - Returns: **true** if your app can show a light-dismissible window that contains a map location and related information given the current context; otherwise, **false**.
    public static var isShowSupported: Swift.Bool {
        get throws {
            try _iplaceInfoStatics.get_IsShowSupported()
        }
    }

    /// Creates a PlaceInfo instance.
    /// - Parameter referencePoint: The geographic map location that you want to show in a light-dismissible window.
    /// - Returns: A PlaceInfo instance that describes the location.
    public static func create(_ referencePoint: WindowsDevicesGeolocation_Geopoint?) throws -> WindowsServicesMaps_PlaceInfo {
        try COM.NullResult.unwrap(_iplaceInfoStatics.create(referencePoint))
    }

    /// Creates a PlaceInfo instance.
    /// - Parameter referencePoint: The geographic map location that you want to show in a light-dismissible window.
    /// - Parameter options: The optional information that describes this location. This information will appear in the light-dismissible window.
    /// - Returns: A PlaceInfo instance that describes the location.
    public static func create(_ referencePoint: WindowsDevicesGeolocation_Geopoint?, _ options: WindowsServicesMaps_PlaceInfoCreateOptions?) throws -> WindowsServicesMaps_PlaceInfo {
        try COM.NullResult.unwrap(_iplaceInfoStatics.createWithGeopointAndOptions(referencePoint, options))
    }

    /// Creates a PlaceInfo instance.
    /// - Parameter identifier: The identifier of the location.
    /// - Returns: A PlaceInfo instance that describes the location.
    public static func createFromIdentifier(_ identifier: Swift.String) throws -> WindowsServicesMaps_PlaceInfo {
        try COM.NullResult.unwrap(_iplaceInfoStatics.createFromIdentifier(identifier))
    }

    /// Creates a PlaceInfo instance.
    /// - Parameter identifier: The identifier of the location.
    /// - Parameter defaultPoint: The geographic map location that you want to show in a light-dismissible window.
    /// - Parameter options: The optional information that describes this location. This information will appear in the light-dismissible window.
    /// - Returns: A PlaceInfo instance that describes the location.
    public static func createFromIdentifier(_ identifier: Swift.String, _ defaultPoint: WindowsDevicesGeolocation_Geopoint?, _ options: WindowsServicesMaps_PlaceInfoCreateOptions?) throws -> WindowsServicesMaps_PlaceInfo {
        try COM.NullResult.unwrap(_iplaceInfoStatics.createFromIdentifierWithOptions(identifier, defaultPoint, options))
    }

    /// Creates a PlaceInfo instance.
    /// - Parameter location: The geographic map location that you want to show in a light-dismissible window.
    /// - Returns: A PlaceInfo instance that describes the location.
    public static func createFromMapLocation(_ location: WindowsServicesMaps_MapLocation?) throws -> WindowsServicesMaps_PlaceInfo {
        try COM.NullResult.unwrap(_iplaceInfoStatics.createFromMapLocation(location))
    }

    // MARK: Implementation details

    private static var _iplaceInfoStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsServicesMaps_IPlaceInfoStatics2>? = nil

    internal static var _iplaceInfoStatics2: COM.COMInterop<CWinRT.SWRT_WindowsServicesMaps_IPlaceInfoStatics2> {
        get throws {
            try _iplaceInfoStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Services.Maps.PlaceInfo", id: CWinRT.SWRT_WindowsServicesMaps_IPlaceInfoStatics2.iid)
            }
        }
    }

    private static var _iplaceInfoStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsServicesMaps_IPlaceInfoStatics>? = nil

    internal static var _iplaceInfoStatics: COM.COMInterop<CWinRT.SWRT_WindowsServicesMaps_IPlaceInfoStatics> {
        get throws {
            try _iplaceInfoStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Services.Maps.PlaceInfo", id: CWinRT.SWRT_WindowsServicesMaps_IPlaceInfoStatics.iid)
            }
        }
    }
}