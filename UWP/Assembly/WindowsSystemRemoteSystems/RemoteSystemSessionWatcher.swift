// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Watches for activity related to the discovery of remote sessions and raises the appropriate events.
public final class WindowsSystemRemoteSystems_RemoteSystemSessionWatcher: WindowsRuntime.WinRTImport<WindowsSystemRemoteSystems_RemoteSystemSessionWatcherProjection> {
    // MARK: Windows.System.RemoteSystems.IRemoteSystemSessionWatcher members

    /// Gets the operational status of this remote session watcher.
    /// - Returns: A RemoteSystemSessionWatcherStatus value describing the status of the watcher.
    public var status: WindowsSystemRemoteSystems_RemoteSystemSessionWatcherStatus {
        get throws {
            try _interop.get_Status()
        }
    }

    /// Raised when a new remote session has been discovered by the RemoteSystemSessionWatcher.
    public func added(adding handler: WindowsFoundation_TypedEventHandler<WindowsSystemRemoteSystems_RemoteSystemSessionWatcher?, WindowsSystemRemoteSystems_RemoteSystemSessionAddedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Added(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: added)
    }

    public func added(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Added(token)
    }

    /// Raised when a previously discovered remote session has disappeared.
    public func removed(adding handler: WindowsFoundation_TypedEventHandler<WindowsSystemRemoteSystems_RemoteSystemSessionWatcher?, WindowsSystemRemoteSystems_RemoteSystemSessionRemovedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Removed(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: removed)
    }

    public func removed(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Removed(token)
    }

    /// Raised when a previously discovered remote session has some part of its information updated.
    public func updated(adding handler: WindowsFoundation_TypedEventHandler<WindowsSystemRemoteSystems_RemoteSystemSessionWatcher?, WindowsSystemRemoteSystems_RemoteSystemSessionUpdatedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Updated(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: updated)
    }

    public func updated(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Updated(token)
    }

    /// Starts watching for discoverable remote sessions. The discovery process runs until the Stop method is called. A RemoteSystemSessionWatcher object can have its **Start** method called again at a later time.
    public func start() throws {
        try _interop.start()
    }

    /// Stops watching for discoverable remote sessions.
    public func stop() throws {
        try _interop.stop()
    }

    // MARK: Implementation details
}