// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Handles a dedicated data transfer channel within a remote session. This class owns the functionality for both sending and receiving.
public final class WindowsSystemRemoteSystems_RemoteSystemSessionMessageChannel: WindowsRuntime.WinRTImport<WindowsSystemRemoteSystems_RemoteSystemSessionMessageChannelProjection> {
    // MARK: Windows.System.RemoteSystems.IRemoteSystemSessionMessageChannelFactory members

    public convenience init(_ session: WindowsSystemRemoteSystems_RemoteSystemSession?, _ channelName: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iremoteSystemSessionMessageChannelFactory.create(session, channelName)))
    }

    public convenience init(_ session: WindowsSystemRemoteSystems_RemoteSystemSession?, _ channelName: Swift.String, _ reliability: WindowsSystemRemoteSystems_RemoteSystemSessionMessageChannelReliability) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iremoteSystemSessionMessageChannelFactory.createWithReliability(session, channelName, reliability)))
    }

    // MARK: Windows.System.RemoteSystems.IRemoteSystemSessionMessageChannel members

    /// Gets the remote session to which this messaging channel corresponds.
    /// - Returns: A RemoteSystemSession object representing the remote session.
    public var session: WindowsSystemRemoteSystems_RemoteSystemSession {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Session())
        }
    }

    /// Raised when a message (in the form of a key-value pair) is received by the channel. The contents of the message are contained by the RemoteSystemSessionValueSetReceivedEventArgs object that is passed in.
    public func valueSetReceived(adding handler: WindowsFoundation_TypedEventHandler<WindowsSystemRemoteSystems_RemoteSystemSessionMessageChannel?, WindowsSystemRemoteSystems_RemoteSystemSessionValueSetReceivedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_ValueSetReceived(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: valueSetReceived)
    }

    public func valueSetReceived(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_ValueSetReceived(token)
    }

    /// Sends a message to all other participants in this remote session messaging channel.
    /// - Parameter messageData: A ValueSet object containing the data to be sent to all participants in the channel.
    /// - Returns: An asynchronous operation containing a boolean value: **true** if the send operation was a success, otherwise **false**.
    public func broadcastValueSetAsync(_ messageData: WindowsFoundationCollections_ValueSet?) throws -> WindowsFoundation_IAsyncOperation<Swift.Bool> {
        try COM.NullResult.unwrap(_interop.broadcastValueSetAsync(messageData))
    }

    /// Sends a message to a participant in this remote session messaging channel.
    /// - Parameter messageData: A ValueSet object containing the data to be sent to the specified participant.
    /// - Parameter participant: A RemoteSystemSessionParticipant object corresponding to the participant to which the message should be sent.
    /// - Returns: An asynchronous operation containing a boolean value: **true** if the send operation was a success, otherwise **false**.
    public func sendValueSetAsync(_ messageData: WindowsFoundationCollections_ValueSet?, _ participant: WindowsSystemRemoteSystems_RemoteSystemSessionParticipant?) throws -> WindowsFoundation_IAsyncOperation<Swift.Bool> {
        try COM.NullResult.unwrap(_interop.sendValueSetAsync(messageData, participant))
    }

    public func sendValueSetToParticipantsAsync(_ messageData: WindowsFoundationCollections_ValueSet?, _ participants: WindowsFoundationCollections_IIterable<WindowsSystemRemoteSystems_RemoteSystemSessionParticipant?>?) throws -> WindowsFoundation_IAsyncOperation<Swift.Bool> {
        try COM.NullResult.unwrap(_interop.sendValueSetToParticipantsAsync(messageData, participants))
    }

    // MARK: Implementation details

    private static var _iremoteSystemSessionMessageChannelFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemSessionMessageChannelFactory>? = nil

    internal static var _iremoteSystemSessionMessageChannelFactory: COM.COMInterop<CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemSessionMessageChannelFactory> {
        get throws {
            try _iremoteSystemSessionMessageChannelFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.System.RemoteSystems.RemoteSystemSessionMessageChannel", id: CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemSessionMessageChannelFactory.iid)
            }
        }
    }
}