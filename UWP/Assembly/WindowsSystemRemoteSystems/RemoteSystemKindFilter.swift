// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// An IRemoteSystemFilter that limits the set of discoverable remote systems by allowing only those of specific device types.
public final class WindowsSystemRemoteSystems_RemoteSystemKindFilter: WindowsRuntime.WinRTImport<WindowsSystemRemoteSystems_RemoteSystemKindFilterProjection>, WindowsSystemRemoteSystems_IRemoteSystemFilterProtocol {
    // MARK: Windows.System.RemoteSystems.IRemoteSystemKindFilterFactory members

    public convenience init(_ remoteSystemKinds: WindowsFoundationCollections_IIterable<Swift.String>?) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iremoteSystemKindFilterFactory.create(remoteSystemKinds)))
    }

    // MARK: Windows.System.RemoteSystems.IRemoteSystemKindFilter members

    /// String representation(s) of the device type(s) that the containing RemoteSystemKindFilter object targets.
    /// - Returns: A read-only list of string representations of the device types to target.
    public var remoteSystemKinds: WindowsFoundationCollections_IVectorView<Swift.String> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_RemoteSystemKinds())
        }
    }

    // MARK: Implementation details

    private var _iremoteSystemFilter_storage: COM.COMInterop<CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemFilter>? = nil

    internal var _iremoteSystemFilter: COM.COMInterop<CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemFilter> {
        get throws {
            try _iremoteSystemFilter_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemFilter.iid).cast(to: CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemFilter.self)
            }
        }
    }

    deinit {
        _iremoteSystemFilter_storage?.release()
    }

    private static var _iremoteSystemKindFilterFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemKindFilterFactory>? = nil

    internal static var _iremoteSystemKindFilterFactory: COM.COMInterop<CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemKindFilterFactory> {
        get throws {
            try _iremoteSystemKindFilterFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.System.RemoteSystems.RemoteSystemKindFilter", id: CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemKindFilterFactory.iid)
            }
        }
    }
}