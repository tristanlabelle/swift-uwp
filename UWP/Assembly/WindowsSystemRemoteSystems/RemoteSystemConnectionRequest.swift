// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents an intent to communicate with a specific remote system (device).
public final class WindowsSystemRemoteSystems_RemoteSystemConnectionRequest: WindowsRuntime.WinRTImport<WindowsSystemRemoteSystems_RemoteSystemConnectionRequestProjection> {
    // MARK: Windows.System.RemoteSystems.IRemoteSystemConnectionRequestFactory members

    public convenience init(_ remoteSystem: WindowsSystemRemoteSystems_RemoteSystem?) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iremoteSystemConnectionRequestFactory.create(remoteSystem)))
    }

    // MARK: Windows.System.RemoteSystems.IRemoteSystemConnectionRequest members

    /// Represents the remote system (device) that the app intends to communicate with.
    /// - Returns: The remote system to communicate with.
    public var remoteSystem: WindowsSystemRemoteSystems_RemoteSystem {
        get throws {
            try COM.NullResult.unwrap(_interop.get_RemoteSystem())
        }
    }

    // MARK: Windows.System.RemoteSystems.IRemoteSystemConnectionRequest2 members

    /// Represents the remote application that the app intends to communicate with.
    /// - Returns: The remote application to communicate with.
    public var remoteSystemApp: WindowsSystemRemoteSystems_RemoteSystemApp {
        get throws {
            try COM.NullResult.unwrap(_iremoteSystemConnectionRequest2.get_RemoteSystemApp())
        }
    }

    // MARK: Windows.System.RemoteSystems.IRemoteSystemConnectionRequest3 members

    /// Gets a token that persists connection info of a RemoteSystemConnectionRequest so that it can be connected back to later.
    /// - Returns: A string of the ConnectionToken.
    public var connectionToken: Swift.String {
        get throws {
            try _iremoteSystemConnectionRequest3.get_ConnectionToken()
        }
    }

    // MARK: Windows.System.RemoteSystems.IRemoteSystemConnectionRequestStatics2 members

    /// Returns a RemoteSystemConnectionRequest based on a ConnectionToken.
    /// - Parameter connectionToken: The specific connection token for which the RemoteSystemConnectionRequest will be created with.
    /// - Returns: An instance of the RemoteSystemConnectionRequest class.
    public static func createFromConnectionToken(_ connectionToken: Swift.String) throws -> WindowsSystemRemoteSystems_RemoteSystemConnectionRequest {
        try COM.NullResult.unwrap(_iremoteSystemConnectionRequestStatics2.createFromConnectionToken(connectionToken))
    }

    /// Returns a RemoteSystemConnectionRequest based on a ConnectionToken and a specific user.
    /// - Parameter user: The specific User for which the RemoteSystemConnectionRequest will be created for.
    /// - Parameter connectionToken: The specific connection token for which the RemoteSystemConnectionRequest will be created with.
    /// - Returns: An instance of the RemoteSystemConnectionRequest class.
    public static func createFromConnectionTokenForUser(_ user: WindowsSystem_User?, _ connectionToken: Swift.String) throws -> WindowsSystemRemoteSystems_RemoteSystemConnectionRequest {
        try COM.NullResult.unwrap(_iremoteSystemConnectionRequestStatics2.createFromConnectionTokenForUser(user, connectionToken))
    }

    // MARK: Windows.System.RemoteSystems.IRemoteSystemConnectionRequestStatics members

    /// Initializes a new instance of the RemoteSystemConnectionRequest class for a particular application on a remote system.
    /// - Parameter remoteSystemApp: The underlying remote application to attempt to connect to.
    /// - Returns: An instance of the RemoteSystemConnectionRequest class.
    public static func createForApp(_ remoteSystemApp: WindowsSystemRemoteSystems_RemoteSystemApp?) throws -> WindowsSystemRemoteSystems_RemoteSystemConnectionRequest {
        try COM.NullResult.unwrap(_iremoteSystemConnectionRequestStatics.createForApp(remoteSystemApp))
    }

    // MARK: Implementation details

    private var _iremoteSystemConnectionRequest2_storage: COM.COMInterop<CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemConnectionRequest2>? = nil

    internal var _iremoteSystemConnectionRequest2: COM.COMInterop<CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemConnectionRequest2> {
        get throws {
            try _iremoteSystemConnectionRequest2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemConnectionRequest2.iid).cast(to: CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemConnectionRequest2.self)
            }
        }
    }

    private var _iremoteSystemConnectionRequest3_storage: COM.COMInterop<CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemConnectionRequest3>? = nil

    internal var _iremoteSystemConnectionRequest3: COM.COMInterop<CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemConnectionRequest3> {
        get throws {
            try _iremoteSystemConnectionRequest3_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemConnectionRequest3.iid).cast(to: CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemConnectionRequest3.self)
            }
        }
    }

    deinit {
        _iremoteSystemConnectionRequest2_storage?.release()
        _iremoteSystemConnectionRequest3_storage?.release()
    }

    private static var _iremoteSystemConnectionRequestFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemConnectionRequestFactory>? = nil

    internal static var _iremoteSystemConnectionRequestFactory: COM.COMInterop<CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemConnectionRequestFactory> {
        get throws {
            try _iremoteSystemConnectionRequestFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.System.RemoteSystems.RemoteSystemConnectionRequest", id: CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemConnectionRequestFactory.iid)
            }
        }
    }

    private static var _iremoteSystemConnectionRequestStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemConnectionRequestStatics2>? = nil

    internal static var _iremoteSystemConnectionRequestStatics2: COM.COMInterop<CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemConnectionRequestStatics2> {
        get throws {
            try _iremoteSystemConnectionRequestStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.System.RemoteSystems.RemoteSystemConnectionRequest", id: CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemConnectionRequestStatics2.iid)
            }
        }
    }

    private static var _iremoteSystemConnectionRequestStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemConnectionRequestStatics>? = nil

    internal static var _iremoteSystemConnectionRequestStatics: COM.COMInterop<CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemConnectionRequestStatics> {
        get throws {
            try _iremoteSystemConnectionRequestStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.System.RemoteSystems.RemoteSystemConnectionRequest", id: CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemConnectionRequestStatics.iid)
            }
        }
    }
}