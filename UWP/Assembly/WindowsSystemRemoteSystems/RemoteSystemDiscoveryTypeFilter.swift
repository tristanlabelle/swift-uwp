// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// An IRemoteSystemFilter that limits the set of discoverable remote systems by allowing only those of a specific discovery type.
public final class WindowsSystemRemoteSystems_RemoteSystemDiscoveryTypeFilter: WindowsRuntime.WinRTImport<WindowsSystemRemoteSystems_RemoteSystemDiscoveryTypeFilterProjection>, WindowsSystemRemoteSystems_IRemoteSystemFilterProtocol {
    // MARK: Windows.System.RemoteSystems.IRemoteSystemDiscoveryTypeFilterFactory members

    public convenience init(_ discoveryType: WindowsSystemRemoteSystems_RemoteSystemDiscoveryType) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iremoteSystemDiscoveryTypeFilterFactory.create(discoveryType)))
    }

    // MARK: Windows.System.RemoteSystems.IRemoteSystemDiscoveryTypeFilter members

    /// The discovery type that the containing RemoteSystemDiscoveryTypeFilter object targets.
    /// - Returns: The discovery type to target.
    public var remoteSystemDiscoveryType: WindowsSystemRemoteSystems_RemoteSystemDiscoveryType {
        get throws {
            try _interop.get_RemoteSystemDiscoveryType()
        }
    }

    // MARK: Implementation details

    private var _iremoteSystemFilter_storage: COM.COMInterop<CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemFilter>? = nil

    internal var _iremoteSystemFilter: COM.COMInterop<CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemFilter> {
        get throws {
            try _iremoteSystemFilter_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemFilter.iid).cast(to: CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemFilter.self)
            }
        }
    }

    deinit {
        _iremoteSystemFilter_storage?.release()
    }

    private static var _iremoteSystemDiscoveryTypeFilterFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemDiscoveryTypeFilterFactory>? = nil

    internal static var _iremoteSystemDiscoveryTypeFilterFactory: COM.COMInterop<CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemDiscoveryTypeFilterFactory> {
        get throws {
            try _iremoteSystemDiscoveryTypeFilterFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.System.RemoteSystems.RemoteSystemDiscoveryTypeFilter", id: CWinRT.SWRT_WindowsSystemRemoteSystems_IRemoteSystemDiscoveryTypeFilterFactory.iid)
            }
        }
    }
}