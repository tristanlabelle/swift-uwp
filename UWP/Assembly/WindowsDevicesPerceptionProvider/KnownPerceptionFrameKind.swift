// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// A string used to identify the type classification of a frame.
public enum WindowsDevicesPerceptionProvider_KnownPerceptionFrameKind {
    // MARK: Windows.Devices.Perception.Provider.IKnownPerceptionFrameKindStatics members

    /// Gets the string representing the Color FrameKind of a PerceptionFrameProviderInfo.
    /// - Returns: The string representing the Color FrameKind of a PerceptionFrameProviderInfo.
    public static var color: Swift.String {
        get throws {
            try _iknownPerceptionFrameKindStatics.get_Color()
        }
    }

    /// Gets the string representing the Depth FrameKind of a PerceptionFrameProviderInfo.
    /// - Returns: The string representing the Depth FrameKind of a PerceptionFrameProviderInfo.
    public static var depth: Swift.String {
        get throws {
            try _iknownPerceptionFrameKindStatics.get_Depth()
        }
    }

    /// Gets the string representing the Infrared FrameKind of a PerceptionFrameProviderInfo.
    /// - Returns: The string representing the Infrared FrameKind of a PerceptionFrameProviderInfo.
    public static var infrared: Swift.String {
        get throws {
            try _iknownPerceptionFrameKindStatics.get_Infrared()
        }
    }

    // MARK: Implementation details

    private static var _iknownPerceptionFrameKindStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesPerceptionProvider_IKnownPerceptionFrameKindStatics>? = nil

    internal static var _iknownPerceptionFrameKindStatics: COM.COMInterop<CWinRT.SWRT_WindowsDevicesPerceptionProvider_IKnownPerceptionFrameKindStatics> {
        get throws {
            try _iknownPerceptionFrameKindStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Perception.Provider.KnownPerceptionFrameKind", id: CWinRT.SWRT_WindowsDevicesPerceptionProvider_IKnownPerceptionFrameKindStatics.iid)
            }
        }
    }
}