// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides access to the high contrast accessibility settings.
public final class WindowsUIViewManagement_AccessibilitySettings: WindowsRuntime.WinRTImport<WindowsUIViewManagement_AccessibilitySettingsProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIViewManagement_AccessibilitySettingsProjection.self))
    }

    // MARK: Windows.UI.ViewManagement.IAccessibilitySettings members

    /// Gets a value that indicates whether the system high contrast feature is on or off.
    /// - Returns: True if the high contrast feature is on; otherwise false.
    public var highContrast: Swift.Bool {
        get throws {
            try _interop.get_HighContrast()
        }
    }

    /// Gets the name of the default high contrast color scheme.
    /// - Returns: The name of the default high contrast color scheme.
    public var highContrastScheme: Swift.String {
        get throws {
            try _interop.get_HighContrastScheme()
        }
    }

    /// Occurs when the system high contrast feature turns on or off.
    public func highContrastChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIViewManagement_AccessibilitySettings?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_HighContrastChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: highContrastChanged)
    }

    public func highContrastChanged(removing cookie: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_HighContrastChanged(cookie)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.ViewManagement.AccessibilitySettings", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}