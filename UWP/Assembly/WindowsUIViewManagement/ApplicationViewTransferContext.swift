// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents information about a window drag operation.
public final class WindowsUIViewManagement_ApplicationViewTransferContext: WindowsRuntime.WinRTImport<WindowsUIViewManagement_ApplicationViewTransferContextProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIViewManagement_ApplicationViewTransferContextProjection.self))
    }

    // MARK: Windows.UI.ViewManagement.IApplicationViewTransferContext members

    /// Gets or sets the ID of the application view.
    /// - Returns: The ID of the application view.
    public var viewId: Swift.Int32 {
        get throws {
            try _interop.get_ViewId()
        }
    }

    /// Gets or sets the ID of the application view.
    /// - Returns: The ID of the application view.
    public func viewId(_ value: Swift.Int32) throws {
        try _interop.put_ViewId(value)
    }

    // MARK: Windows.UI.ViewManagement.IApplicationViewTransferContextStatics members

    /// Gets the format ID of the DataPackage for the drag operation.
    /// - Returns: The format ID of the DataPackage for the drag operation.
    public static var dataPackageFormatId: Swift.String {
        get throws {
            try _iapplicationViewTransferContextStatics.get_DataPackageFormatId()
        }
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.ViewManagement.ApplicationViewTransferContext", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _iapplicationViewTransferContextStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIViewManagement_IApplicationViewTransferContextStatics>? = nil

    internal static var _iapplicationViewTransferContextStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIViewManagement_IApplicationViewTransferContextStatics> {
        get throws {
            try _iapplicationViewTransferContextStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.ViewManagement.ApplicationViewTransferContext", id: CWinRT.SWRT_WindowsUIViewManagement_IApplicationViewTransferContextStatics.iid)
            }
        }
    }
}