// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the settings for a variable photo sequence.
public final class WindowsMediaDevicesCore_VariablePhotoSequenceController: WindowsRuntime.WinRTImport<WindowsMediaDevicesCore_VariablePhotoSequenceControllerProjection> {
    // MARK: Windows.Media.Devices.Core.IVariablePhotoSequenceController members

    /// Gets the list of FrameController objects that determine the settings for each frame in a variable photo sequence.
    /// - Returns: The list of FrameController objects that determine the settings for each frame in a variable photo sequence.
    public var desiredFrameControllers: WindowsFoundationCollections_IVector<WindowsMediaDevicesCore_FrameController?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_DesiredFrameControllers())
        }
    }

    /// Gets a FrameControlCapabilities object that provides information about the variable photo sequence capabilities of the capture device.
    /// - Returns: A FrameControlCapabilities object that provides information about the variable photo sequence capabilities of the capture device.
    public var frameCapabilities: WindowsMediaDevicesCore_FrameControlCapabilities {
        get throws {
            try COM.NullResult.unwrap(_interop.get_FrameCapabilities())
        }
    }

    /// Gets the maximum number of photos that can be taken per second in a variable photo sequence.
    /// - Returns: The maximum number of photos that can be taken per second in a variable photo sequence.
    public var maxPhotosPerSecond: Swift.Float {
        get throws {
            try _interop.get_MaxPhotosPerSecond()
        }
    }

    /// Gets or sets the number of photos that are taken per second in a variable photo sequence.
    /// - Returns: The number of photos that are taken per second in a variable photo sequence.
    public var photosPerSecondLimit: Swift.Float {
        get throws {
            try _interop.get_PhotosPerSecondLimit()
        }
    }

    /// Gets or sets the number of photos that are taken per second in a variable photo sequence.
    /// - Returns: The number of photos that are taken per second in a variable photo sequence.
    public func photosPerSecondLimit(_ value: Swift.Float) throws {
        try _interop.put_PhotosPerSecondLimit(value)
    }

    /// Gets a value that indicates whether variable photo sequences are supported by the capture device.
    /// - Returns: A value that indicates whether variable photo sequences are supported by the capture device.
    public var supported: Swift.Bool {
        get throws {
            try _interop.get_Supported()
        }
    }

    /// Gets the highest frame rate supported when video and a variable photo sequence are being captured concurrently.
    /// - Parameter captureProperties: The media encoding properties.
    /// - Returns: The highest supported concurrent frame rate.
    public func getHighestConcurrentFrameRate(_ captureProperties: WindowsMediaMediaProperties_IMediaEncodingProperties?) throws -> WindowsMediaMediaProperties_MediaRatio {
        try COM.NullResult.unwrap(_interop.getHighestConcurrentFrameRate(captureProperties))
    }

    /// Gets the current frame rate at which pictures can be taken in a variable photo sequence.
    /// - Returns: The current frame rate at which pictures can be taken in a variable photo sequence.
    public func getCurrentFrameRate() throws -> WindowsMediaMediaProperties_MediaRatio {
        try COM.NullResult.unwrap(_interop.getCurrentFrameRate())
    }

    // MARK: Implementation details
}