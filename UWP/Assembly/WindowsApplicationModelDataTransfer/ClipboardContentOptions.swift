// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Specifies options for using the SetContentWithOptions method to set content in the clipboard.
public final class WindowsApplicationModelDataTransfer_ClipboardContentOptions: WindowsRuntime.WinRTImport<WindowsApplicationModelDataTransfer_ClipboardContentOptionsProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsApplicationModelDataTransfer_ClipboardContentOptionsProjection.self))
    }

    // MARK: Windows.ApplicationModel.DataTransfer.IClipboardContentOptions members

    /// Gets the list of data formats supported in the clipboard history for the content being added to the clipboard.
    /// - Returns: The list of data formats supported in the clipboard history for the content being added to the clipboard. We recommend that you add data formats to this list by using the static properties of the StandardDataFormats class.
    public var historyFormats: WindowsFoundationCollections_IVector<Swift.String> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_HistoryFormats())
        }
    }

    /// Gets or sets a value that indicates whether the new content being added to the clipboard is allowed in the clipboard history.
    /// - Returns: True if the new content being added to the clipboard is allowed in the clipboard history; otherwise, false.
    public var isAllowedInHistory: Swift.Bool {
        get throws {
            try _interop.get_IsAllowedInHistory()
        }
    }

    /// Gets or sets a value that indicates whether the new content being added to the clipboard is allowed in the clipboard history.
    /// - Returns: True if the new content being added to the clipboard is allowed in the clipboard history; otherwise, false.
    public func isAllowedInHistory(_ value: Swift.Bool) throws {
        try _interop.put_IsAllowedInHistory(value)
    }

    /// Gets or sets a value that indicates whether the new content being added to the clipboard can be synced to other devices.
    /// - Returns: True if the new content being added to the clipboard can be synced to other devices; otherwise, false.
    public var isRoamable: Swift.Bool {
        get throws {
            try _interop.get_IsRoamable()
        }
    }

    /// Gets or sets a value that indicates whether the new content being added to the clipboard can be synced to other devices.
    /// - Returns: True if the new content being added to the clipboard can be synced to other devices; otherwise, false.
    public func isRoamable(_ value: Swift.Bool) throws {
        try _interop.put_IsRoamable(value)
    }

    /// Gets the list of data formats that can be synced to other devices for the content being added to the clipboard.
    /// - Returns: The list of data formats that can be synced to other devices for the content being added to the clipboard. We recommend that you add data formats to this list by using the static properties of the StandardDataFormats class.
    public var roamingFormats: WindowsFoundationCollections_IVector<Swift.String> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_RoamingFormats())
        }
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.DataTransfer.ClipboardContentOptions", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}