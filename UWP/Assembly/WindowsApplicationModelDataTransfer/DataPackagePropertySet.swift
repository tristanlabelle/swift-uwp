// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Defines a set of properties to use with a DataPackage object.
public final class WindowsApplicationModelDataTransfer_DataPackagePropertySet: WindowsRuntime.WinRTImport<WindowsApplicationModelDataTransfer_DataPackagePropertySetProjection>, WindowsFoundationCollections_IMapProtocol, WindowsFoundationCollections_IIterableProtocol {
    public typealias K = Swift.String
    public typealias V = WindowsRuntime.IInspectable?
    public typealias T = WindowsFoundationCollections_IKeyValuePair<Swift.String, WindowsRuntime.IInspectable?>?

    // MARK: Windows.ApplicationModel.DataTransfer.IDataPackagePropertySet members

    /// Gets or sets the Uniform Resource Identifier (URI) of the app's location in the Windows Store.
    /// - Returns: The Uniform Resource Identifier (URI) of the app in the Windows Store.
    public var applicationListingUri: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_interop.get_ApplicationListingUri())
        }
    }

    /// Gets or sets the Uniform Resource Identifier (URI) of the app's location in the Windows Store.
    /// - Returns: The Uniform Resource Identifier (URI) of the app in the Windows Store.
    public func applicationListingUri(_ value: WindowsFoundation_Uri?) throws {
        try _interop.put_ApplicationListingUri(value)
    }

    /// Gets or sets the name of the app that created the DataPackage object.
    /// - Returns: Specifies the name of the app that created the DataPackage object.
    public var applicationName: Swift.String {
        get throws {
            try _interop.get_ApplicationName()
        }
    }

    /// Gets or sets the name of the app that created the DataPackage object.
    /// - Returns: Specifies the name of the app that created the DataPackage object.
    public func applicationName(_ value: Swift.String) throws {
        try _interop.put_ApplicationName(value)
    }

    /// Gets or sets text that describes the contents of the DataPackage.
    /// - Returns: Text that describes the contents of the DataPackage.
    public var description: Swift.String {
        get throws {
            try _interop.get_Description()
        }
    }

    /// Gets or sets text that describes the contents of the DataPackage.
    /// - Returns: Text that describes the contents of the DataPackage.
    public func description(_ value: Swift.String) throws {
        try _interop.put_Description(value)
    }

    /// Specifies a vector object that contains the types of files stored in the DataPackage object.
    /// - Returns: Contains the types of files stored in the DataPackage object.
    public var fileTypes: WindowsFoundationCollections_IVector<Swift.String> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_FileTypes())
        }
    }

    /// Gets or sets a thumbnail image for the DataPackage.
    /// - Returns: The IRandomAccessStreamReference that represents the thumbnail image.
    public var thumbnail: WindowsStorageStreams_IRandomAccessStreamReference {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Thumbnail())
        }
    }

    /// Gets or sets a thumbnail image for the DataPackage.
    /// - Returns: The IRandomAccessStreamReference that represents the thumbnail image.
    public func thumbnail(_ value: WindowsStorageStreams_IRandomAccessStreamReference?) throws {
        try _interop.put_Thumbnail(value)
    }

    /// Gets or sets the text that displays as a title for the contents of the DataPackage object.
    /// - Returns: The text that displays as a title for the contents of the DataPackage object.
    public var title: Swift.String {
        get throws {
            try _interop.get_Title()
        }
    }

    /// Gets or sets the text that displays as a title for the contents of the DataPackage object.
    /// - Returns: The text that displays as a title for the contents of the DataPackage object.
    public func title(_ value: Swift.String) throws {
        try _interop.put_Title(value)
    }

    // MARK: Windows.Foundation.Collections.IMap`2<String, Object> members

    /// Gets the number of items that are contained in the property set.
    /// - Returns: The number of elements in the property set.
    public var size: Swift.UInt32 {
        get throws {
            try _imap.get_Size()
        }
    }

    /// Retrieves the value of a specific property.
    /// - Parameter key: The key.
    /// - Returns: The value, if an item with the specified key exists. Use the **HasKey** method to determine whether the key exists.
    public func lookup(_ key: Swift.String) throws -> WindowsRuntime.IInspectable? {
        try _imap.lookup(key)
    }

    /// Indicates whether the DataPackagePropertySet object contains a specific property.
    /// - Parameter key: The key.
    /// - Returns: True if the property set has an item with the specified key; otherwise false.
    public func hasKey(_ key: Swift.String) throws -> Swift.Bool {
        try _imap.hasKey(key)
    }

    /// Gets an immutable view of the property set.
    /// - Returns: The immutable view.
    public func getView() throws -> WindowsFoundationCollections_IMapView<Swift.String, WindowsRuntime.IInspectable?> {
        try COM.NullResult.unwrap(_imap.getView())
    }

    /// Adds a property to the DataPackagePropertySet object.
    /// - Parameter key: The key to insert.
    /// - Parameter value: The value to insert.
    /// - Returns: True if the method replaced a value that already existed for the key; false if this is a new key.
    public func insert(_ key: Swift.String, _ value: WindowsRuntime.IInspectable?) throws -> Swift.Bool {
        try _imap.insert(key, value)
    }

    /// Removes an item from the property set.
    /// - Parameter key: The key.
    public func remove(_ key: Swift.String) throws {
        try _imap.remove(key)
    }

    /// Removes all items from the property set.
    public func clear() throws {
        try _imap.clear()
    }

    // MARK: Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Object>> members

    /// Returns an iterator to enumerate the items in the property set.
    /// - Returns: The first item in the DataPackage object.
    public func first() throws -> WindowsFoundationCollections_IIterator<WindowsFoundationCollections_IKeyValuePair<Swift.String, WindowsRuntime.IInspectable?>?> {
        try COM.NullResult.unwrap(_iiterable.first())
    }

    // MARK: Windows.ApplicationModel.DataTransfer.IDataPackagePropertySet2 members

    /// Gets or sets the application link to the content from the source app.
    /// - Returns: The Uniform Resource Identifier (URI) of the application link to shared content.
    public var contentSourceApplicationLink: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_idataPackagePropertySet2.get_ContentSourceApplicationLink())
        }
    }

    /// Gets or sets the application link to the content from the source app.
    /// - Returns: The Uniform Resource Identifier (URI) of the application link to shared content.
    public func contentSourceApplicationLink(_ value: WindowsFoundation_Uri?) throws {
        try _idataPackagePropertySet2.put_ContentSourceApplicationLink(value)
    }

    /// Provides a web link to shared content that's currently displayed in the app.
    /// - Returns: The Uniform Resource Identifier (URI) of the web link to shared content.
    public var contentSourceWebLink: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_idataPackagePropertySet2.get_ContentSourceWebLink())
        }
    }

    /// Provides a web link to shared content that's currently displayed in the app.
    /// - Returns: The Uniform Resource Identifier (URI) of the web link to shared content.
    public func contentSourceWebLink(_ value: WindowsFoundation_Uri?) throws {
        try _idataPackagePropertySet2.put_ContentSourceWebLink(value)
    }

    /// Gets or sets a background color for the sharing app's Square30x30Logo.
    /// - Returns: The color of the logo's background.
    public var logoBackgroundColor: WindowsUI_Color {
        get throws {
            try _idataPackagePropertySet2.get_LogoBackgroundColor()
        }
    }

    /// Gets or sets a background color for the sharing app's Square30x30Logo.
    /// - Returns: The color of the logo's background.
    public func logoBackgroundColor(_ value: WindowsUI_Color) throws {
        try _idataPackagePropertySet2.put_LogoBackgroundColor(value)
    }

    /// Gets or sets the package family name of the source app.
    /// - Returns: The package family name.
    public var packageFamilyName: Swift.String {
        get throws {
            try _idataPackagePropertySet2.get_PackageFamilyName()
        }
    }

    /// Gets or sets the package family name of the source app.
    /// - Returns: The package family name.
    public func packageFamilyName(_ value: Swift.String) throws {
        try _idataPackagePropertySet2.put_PackageFamilyName(value)
    }

    /// Gets or sets the source app's logo.
    /// - Returns: The logo's bitmap.
    public var square30x30Logo: WindowsStorageStreams_IRandomAccessStreamReference {
        get throws {
            try COM.NullResult.unwrap(_idataPackagePropertySet2.get_Square30x30Logo())
        }
    }

    /// Gets or sets the source app's logo.
    /// - Returns: The logo's bitmap.
    public func square30x30Logo(_ value: WindowsStorageStreams_IRandomAccessStreamReference?) throws {
        try _idataPackagePropertySet2.put_Square30x30Logo(value)
    }

    // MARK: Windows.ApplicationModel.DataTransfer.IDataPackagePropertySet3 members

    /// Gets or sets the enterprise identity (see Enterprise data protection ).
    /// - Returns: The enterprise Id.
    public var enterpriseId: Swift.String {
        get throws {
            try _idataPackagePropertySet3.get_EnterpriseId()
        }
    }

    /// Gets or sets the enterprise identity (see Enterprise data protection ).
    /// - Returns: The enterprise Id.
    public func enterpriseId(_ value: Swift.String) throws {
        try _idataPackagePropertySet3.put_EnterpriseId(value)
    }

    // MARK: Windows.ApplicationModel.DataTransfer.IDataPackagePropertySet4 members

    /// Gets or sets the UserActivity in serialized JSON format to be shared with another app.
    /// - Returns: The UserActivity in serialized JSON format to be shared with another app.
    public var contentSourceUserActivityJson: Swift.String {
        get throws {
            try _idataPackagePropertySet4.get_ContentSourceUserActivityJson()
        }
    }

    /// Gets or sets the UserActivity in serialized JSON format to be shared with another app.
    /// - Returns: The UserActivity in serialized JSON format to be shared with another app.
    public func contentSourceUserActivityJson(_ value: Swift.String) throws {
        try _idataPackagePropertySet4.put_ContentSourceUserActivityJson(value)
    }

    // MARK: Implementation details

    private var _imap_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IMap_String_Object>? = nil

    internal var _imap: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IMap_String_Object> {
        get throws {
            try _imap_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundationCollections_IMap_String_Object.iid).cast(to: CWinRT.SWRT_WindowsFoundationCollections_IMap_String_Object.self)
            }
        }
    }

    private var _iiterable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_Object>? = nil

    internal var _iiterable: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_Object> {
        get throws {
            try _iiterable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_Object.iid).cast(to: CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_Object.self)
            }
        }
    }

    private var _idataPackagePropertySet2_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySet2>? = nil

    internal var _idataPackagePropertySet2: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySet2> {
        get throws {
            try _idataPackagePropertySet2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySet2.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySet2.self)
            }
        }
    }

    private var _idataPackagePropertySet3_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySet3>? = nil

    internal var _idataPackagePropertySet3: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySet3> {
        get throws {
            try _idataPackagePropertySet3_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySet3.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySet3.self)
            }
        }
    }

    private var _idataPackagePropertySet4_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySet4>? = nil

    internal var _idataPackagePropertySet4: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySet4> {
        get throws {
            try _idataPackagePropertySet4_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySet4.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelDataTransfer_IDataPackagePropertySet4.self)
            }
        }
    }

    deinit {
        _imap_storage?.release()
        _iiterable_storage?.release()
        _idataPackagePropertySet2_storage?.release()
        _idataPackagePropertySet3_storage?.release()
        _idataPackagePropertySet4_storage?.release()
    }
}