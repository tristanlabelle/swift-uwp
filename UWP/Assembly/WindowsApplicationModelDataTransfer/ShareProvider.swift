// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// This class represents a custom provider which can be shared.
public final class WindowsApplicationModelDataTransfer_ShareProvider: WindowsRuntime.WinRTImport<WindowsApplicationModelDataTransfer_ShareProviderProjection> {
    // MARK: Windows.ApplicationModel.DataTransfer.IShareProviderFactory members

    public convenience init(_ title: Swift.String, _ displayIcon: WindowsStorageStreams_RandomAccessStreamReference?, _ backgroundColor: WindowsUI_Color, _ handler: WindowsApplicationModelDataTransfer_ShareProviderHandler?) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ishareProviderFactory.create(title, displayIcon, backgroundColor, handler)))
    }

    // MARK: Windows.ApplicationModel.DataTransfer.IShareProvider members

    /// Gets the background color of the share provider.
    /// - Returns: The background color of the share provider.
    public var backgroundColor: WindowsUI_Color {
        get throws {
            try _interop.get_BackgroundColor()
        }
    }

    /// Gets the display icon of the share provider.
    /// - Returns: The display icon of the share provider.
    public var displayIcon: WindowsStorageStreams_RandomAccessStreamReference {
        get throws {
            try COM.NullResult.unwrap(_interop.get_DisplayIcon())
        }
    }

    /// Gets or sets the tag of the share provider.
    /// - Returns: The tag of the share provider.
    public var tag: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Tag())
        }
    }

    /// Gets or sets the tag of the share provider.
    /// - Returns: The tag of the share provider.
    public func tag(_ value: WindowsRuntime.IInspectable?) throws {
        try _interop.put_Tag(value)
    }

    /// Gets the title of the share provider.
    /// - Returns: The title of the share provider.
    public var title: Swift.String {
        get throws {
            try _interop.get_Title()
        }
    }

    // MARK: Implementation details

    private static var _ishareProviderFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelDataTransfer_IShareProviderFactory>? = nil

    internal static var _ishareProviderFactory: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelDataTransfer_IShareProviderFactory> {
        get throws {
            try _ishareProviderFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.DataTransfer.ShareProvider", id: CWinRT.SWRT_WindowsApplicationModelDataTransfer_IShareProviderFactory.iid)
            }
        }
    }
}