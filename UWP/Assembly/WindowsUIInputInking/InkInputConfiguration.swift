// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Manages which types of secondary input can be processed by the InkPresenter object.
public final class WindowsUIInputInking_InkInputConfiguration: WindowsRuntime.WinRTImport<WindowsUIInputInking_InkInputConfigurationProjection> {
    // MARK: Windows.UI.Input.Inking.IInkInputConfiguration members

    /// Gets or sets whether input from a pen's eraser tip is processed by the InkPresenter object.
    /// - Returns: True, if input from the eraser tip is processed; otherwise, false.
    public var isEraserInputEnabled: Swift.Bool {
        get throws {
            try _interop.get_IsEraserInputEnabled()
        }
    }

    /// Gets or sets whether input from a pen's eraser tip is processed by the InkPresenter object.
    /// - Returns: True, if input from the eraser tip is processed; otherwise, false.
    public func isEraserInputEnabled(_ value: Swift.Bool) throws {
        try _interop.put_IsEraserInputEnabled(value)
    }

    /// Gets or sets whether input from a pen's primary barrel button is processed by the InkPresenter object.
    /// - Returns: True, if input from the primary barrel button is processed; otherwise, false.
    public var isPrimaryBarrelButtonInputEnabled: Swift.Bool {
        get throws {
            try _interop.get_IsPrimaryBarrelButtonInputEnabled()
        }
    }

    /// Gets or sets whether input from a pen's primary barrel button is processed by the InkPresenter object.
    /// - Returns: True, if input from the primary barrel button is processed; otherwise, false.
    public func isPrimaryBarrelButtonInputEnabled(_ value: Swift.Bool) throws {
        try _interop.put_IsPrimaryBarrelButtonInputEnabled(value)
    }

    // MARK: Windows.UI.Input.Inking.IInkInputConfiguration2 members

    public var isPenHapticFeedbackEnabled: Swift.Bool {
        get throws {
            try _iinkInputConfiguration2.get_IsPenHapticFeedbackEnabled()
        }
    }

    public func isPenHapticFeedbackEnabled(_ value: Swift.Bool) throws {
        try _iinkInputConfiguration2.put_IsPenHapticFeedbackEnabled(value)
    }

    // MARK: Implementation details

    private var _iinkInputConfiguration2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIInputInking_IInkInputConfiguration2>? = nil

    internal var _iinkInputConfiguration2: COM.COMInterop<CWinRT.SWRT_WindowsUIInputInking_IInkInputConfiguration2> {
        get throws {
            try _iinkInputConfiguration2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIInputInking_IInkInputConfiguration2.iid).cast(to: CWinRT.SWRT_WindowsUIInputInking_IInkInputConfiguration2.self)
            }
        }
    }

    deinit {
        _iinkInputConfiguration2_storage?.release()
    }
}