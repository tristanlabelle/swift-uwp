// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// A single ink stroke, including the BÃ©zier curve parameters used for final rendering of the stroke.
public final class WindowsUIInputInking_InkStroke: WindowsRuntime.WinRTImport<WindowsUIInputInking_InkStrokeProjection> {
    // MARK: Windows.UI.Input.Inking.IInkStroke members

    /// Gets the bounding box for the InkStroke.
    /// - Returns: The bounding box.
    public var boundingRect: WindowsFoundation_Rect {
        get throws {
            try _interop.get_BoundingRect()
        }
    }

    /// Gets or sets the properties associated with an InkStroke.
    /// - Returns: The drawing attributes.
    public var drawingAttributes: WindowsUIInputInking_InkDrawingAttributes {
        get throws {
            try COM.NullResult.unwrap(_interop.get_DrawingAttributes())
        }
    }

    /// Gets or sets the properties associated with an InkStroke.
    /// - Returns: The drawing attributes.
    public func drawingAttributes(_ value: WindowsUIInputInking_InkDrawingAttributes?) throws {
        try _interop.put_DrawingAttributes(value)
    }

    /// Gets whether the stroke is recognized.
    /// - Returns: True if the stroke is recognized; otherwise, false.
    public var recognized: Swift.Bool {
        get throws {
            try _interop.get_Recognized()
        }
    }

    /// Gets whether the stroke is selected.
    /// - Returns: True if the stroke is selected; otherwise, false.
    public var selected: Swift.Bool {
        get throws {
            try _interop.get_Selected()
        }
    }

    /// Gets whether the stroke is selected.
    /// - Returns: True if the stroke is selected; otherwise, false.
    public func selected(_ value: Swift.Bool) throws {
        try _interop.put_Selected(value)
    }

    /// Gets the rendering segments of the stroke.
    /// - Returns: The collection of InkStrokeRenderingSegment objects.
    public func getRenderingSegments() throws -> WindowsFoundationCollections_IVectorView<WindowsUIInputInking_InkStrokeRenderingSegment?> {
        try COM.NullResult.unwrap(_interop.getRenderingSegments())
    }

    /// Copies the InkStroke to another InkManager (or InkStrokeContainer ).
    /// - Returns: The new stroke.
    public func clone() throws -> WindowsUIInputInking_InkStroke {
        try COM.NullResult.unwrap(_interop.clone())
    }

    // MARK: Windows.UI.Input.Inking.IInkStroke2 members

    /// Gets or sets an affine transformation matrix to apply to the InkStroke object.
    /// - Returns: The 2-D transformation matrix.
    public var pointTransform: WindowsFoundationNumerics_Matrix3x2 {
        get throws {
            try _iinkStroke2.get_PointTransform()
        }
    }

    /// Gets or sets an affine transformation matrix to apply to the InkStroke object.
    /// - Returns: The 2-D transformation matrix.
    public func pointTransform(_ value: WindowsFoundationNumerics_Matrix3x2) throws {
        try _iinkStroke2.put_PointTransform(value)
    }

    /// Gets the collection of InkPoint objects used to construct the InkStroke.
    /// - Returns: The collection of InkPoint objects used to construct the InkStroke.
    public func getInkPoints() throws -> WindowsFoundationCollections_IVectorView<WindowsUIInputInking_InkPoint?> {
        try COM.NullResult.unwrap(_iinkStroke2.getInkPoints())
    }

    // MARK: Windows.UI.Input.Inking.IInkStroke3 members

    /// Gets the ink stroke identifier.
    /// - Returns: The identifier for the ink stroke.
    public var id: Swift.UInt32 {
        get throws {
            try _iinkStroke3.get_Id()
        }
    }

    /// Gets or sets the time taken by the user to draw a single ink stroke.
    /// - Returns: The time period expressed in 100-nanosecond units.
    public var strokeDuration: WindowsFoundation_IReference<WindowsFoundation_TimeSpan>? {
        get throws {
            try _iinkStroke3.get_StrokeDuration()
        }
    }

    /// Gets or sets the time taken by the user to draw a single ink stroke.
    /// - Returns: The time period expressed in 100-nanosecond units.
    public func strokeDuration(_ value: WindowsFoundation_IReference<WindowsFoundation_TimeSpan>?) throws {
        try _iinkStroke3.put_StrokeDuration(value)
    }

    /// Gets or sets the date and time when the InkStroke was started.
    /// - Returns: The date and time of day.
    public var strokeStartedTime: WindowsFoundation_IReference<WindowsFoundation_DateTime>? {
        get throws {
            try _iinkStroke3.get_StrokeStartedTime()
        }
    }

    /// Gets or sets the date and time when the InkStroke was started.
    /// - Returns: The date and time of day.
    public func strokeStartedTime(_ value: WindowsFoundation_IReference<WindowsFoundation_DateTime>?) throws {
        try _iinkStroke3.put_StrokeStartedTime(value)
    }

    // MARK: Windows.UI.Input.Inking.IInkStroke4 members

    public var pointerId: Swift.UInt32 {
        get throws {
            try _iinkStroke4.get_PointerId()
        }
    }

    // MARK: Implementation details

    private var _iinkStroke2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIInputInking_IInkStroke2>? = nil

    internal var _iinkStroke2: COM.COMInterop<CWinRT.SWRT_WindowsUIInputInking_IInkStroke2> {
        get throws {
            try _iinkStroke2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIInputInking_IInkStroke2.iid).cast(to: CWinRT.SWRT_WindowsUIInputInking_IInkStroke2.self)
            }
        }
    }

    private var _iinkStroke3_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIInputInking_IInkStroke3>? = nil

    internal var _iinkStroke3: COM.COMInterop<CWinRT.SWRT_WindowsUIInputInking_IInkStroke3> {
        get throws {
            try _iinkStroke3_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIInputInking_IInkStroke3.iid).cast(to: CWinRT.SWRT_WindowsUIInputInking_IInkStroke3.self)
            }
        }
    }

    private var _iinkStroke4_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIInputInking_IInkStroke4>? = nil

    internal var _iinkStroke4: COM.COMInterop<CWinRT.SWRT_WindowsUIInputInking_IInkStroke4> {
        get throws {
            try _iinkStroke4_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIInputInking_IInkStroke4.iid).cast(to: CWinRT.SWRT_WindowsUIInputInking_IInkStroke4.self)
            }
        }
    }

    deinit {
        _iinkStroke2_storage?.release()
        _iinkStroke3_storage?.release()
        _iinkStroke4_storage?.release()
    }
}