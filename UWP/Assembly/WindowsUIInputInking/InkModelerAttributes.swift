// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Manages which types of ink modeler attributes can be processed by the InkPresenter object.
public final class WindowsUIInputInking_InkModelerAttributes: WindowsRuntime.WinRTImport<WindowsUIInputInking_InkModelerAttributesProjection> {
    // MARK: Windows.UI.Input.Inking.IInkModelerAttributes members

    /// Gets or sets the amount of time into the future used to predict the expected location of the input pointer.
    /// - Returns: The time in milliseconds. The default is 15 ms, with a valid range between 0 to 20 ms.
    public var predictionTime: WindowsFoundation_TimeSpan {
        get throws {
            try _interop.get_PredictionTime()
        }
    }

    /// Gets or sets the amount of time into the future used to predict the expected location of the input pointer.
    /// - Returns: The time in milliseconds. The default is 15 ms, with a valid range between 0 to 20 ms.
    public func predictionTime(_ value: WindowsFoundation_TimeSpan) throws {
        try _interop.put_PredictionTime(value)
    }

    /// Gets or sets the scale transform for the coordinate space of the ink stroke.
    /// - Returns: The scale factor in himetric units (one thousandth of a centimeter, and independent of the display or screen resolution).
    public var scalingFactor: Swift.Float {
        get throws {
            try _interop.get_ScalingFactor()
        }
    }

    /// Gets or sets the scale transform for the coordinate space of the ink stroke.
    /// - Returns: The scale factor in himetric units (one thousandth of a centimeter, and independent of the display or screen resolution).
    public func scalingFactor(_ value: Swift.Float) throws {
        try _interop.put_ScalingFactor(value)
    }

    // MARK: Windows.UI.Input.Inking.IInkModelerAttributes2 members

    /// Gets or sets whether pen velocity is used in combination with pressure on the inking surface to calculate final pressure value.
    /// - Returns: True, if pen velocity is used. Otherwise, false.
    public var useVelocityBasedPressure: Swift.Bool {
        get throws {
            try _iinkModelerAttributes2.get_UseVelocityBasedPressure()
        }
    }

    /// Gets or sets whether pen velocity is used in combination with pressure on the inking surface to calculate final pressure value.
    /// - Returns: True, if pen velocity is used. Otherwise, false.
    public func useVelocityBasedPressure(_ value: Swift.Bool) throws {
        try _iinkModelerAttributes2.put_UseVelocityBasedPressure(value)
    }

    // MARK: Implementation details

    private var _iinkModelerAttributes2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIInputInking_IInkModelerAttributes2>? = nil

    internal var _iinkModelerAttributes2: COM.COMInterop<CWinRT.SWRT_WindowsUIInputInking_IInkModelerAttributes2> {
        get throws {
            try _iinkModelerAttributes2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIInputInking_IInkModelerAttributes2.iid).cast(to: CWinRT.SWRT_WindowsUIInputInking_IInkModelerAttributes2.self)
            }
        }
    }

    deinit {
        _iinkModelerAttributes2_storage?.release()
    }
}