// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides raw input data for a single point used in the construction of an InkStroke.
public final class WindowsUIInputInking_InkPoint: WindowsRuntime.WinRTImport<WindowsUIInputInking_InkPointProjection> {
    // MARK: Windows.UI.Input.Inking.IInkPointFactory2 members

    public convenience init(_ position: WindowsFoundation_Point, _ pressure: Swift.Float, _ tiltX: Swift.Float, _ tiltY: Swift.Float, _ timestamp: Swift.UInt64) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iinkPointFactory2.createInkPointWithTiltAndTimestamp(position, pressure, tiltX, tiltY, timestamp)))
    }

    // MARK: Windows.UI.Input.Inking.IInkPointFactory members

    /// Generates an InkPoint object that includes position and pressure information used in the construction of an InkStroke.
    /// - Parameter position: The screen coordinates for the InkPoint object.
    /// - Parameter pressure: The pressure of the contact on the digitizer surface. The default is 0.5.
    /// - Returns: A single point.
    public convenience init(_ position: WindowsFoundation_Point, _ pressure: Swift.Float) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iinkPointFactory.createInkPoint(position, pressure)))
    }

    // MARK: Windows.UI.Input.Inking.IInkPoint members

    /// The X, Y coordinates of the InkPoint, in device-independent pixel (DIP) relative to the upper left-hand corner of the inking area.
    /// - Returns: The X, Y coordinates relative to the upper left-hand corner of the inking area.
    public var position: WindowsFoundation_Point {
        get throws {
            try _interop.get_Position()
        }
    }

    /// The pressure of the contact on the digitizer surface for the InkPoint.
    /// - Returns: The pressure of the contact.
    public var pressure: Swift.Float {
        get throws {
            try _interop.get_Pressure()
        }
    }

    // MARK: Windows.UI.Input.Inking.IInkPoint2 members

    /// Gets the plane angle between the Y-Z plane and the plane containing the Y axis and the axis of the input device.
    /// - Returns: A value in the range of -90 to +90 degrees. A positive X tilt is to the right.
    public var tiltX: Swift.Float {
        get throws {
            try _iinkPoint2.get_TiltX()
        }
    }

    /// Gets the plane angle between the X-Z plane and the plane containing the X axis and the axis of the input device.
    /// - Returns: A value in the range of -90 to +90 degrees. A positive Y tilt is toward the user.
    public var tiltY: Swift.Float {
        get throws {
            try _iinkPoint2.get_TiltY()
        }
    }

    /// Gets the timestamp for the first InkPoint of an InkStroke, or when an entire InkStroke is pasted or loaded.
    /// - Returns: The time, relative to the system boot time, in microseconds.
    public var timestamp: Swift.UInt64 {
        get throws {
            try _iinkPoint2.get_Timestamp()
        }
    }

    // MARK: Implementation details

    private var _iinkPoint2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIInputInking_IInkPoint2>? = nil

    internal var _iinkPoint2: COM.COMInterop<CWinRT.SWRT_WindowsUIInputInking_IInkPoint2> {
        get throws {
            try _iinkPoint2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIInputInking_IInkPoint2.iid).cast(to: CWinRT.SWRT_WindowsUIInputInking_IInkPoint2.self)
            }
        }
    }

    deinit {
        _iinkPoint2_storage?.release()
    }

    private static var _iinkPointFactory2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIInputInking_IInkPointFactory2>? = nil

    internal static var _iinkPointFactory2: COM.COMInterop<CWinRT.SWRT_WindowsUIInputInking_IInkPointFactory2> {
        get throws {
            try _iinkPointFactory2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Input.Inking.InkPoint", id: CWinRT.SWRT_WindowsUIInputInking_IInkPointFactory2.iid)
            }
        }
    }

    private static var _iinkPointFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIInputInking_IInkPointFactory>? = nil

    internal static var _iinkPointFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIInputInking_IInkPointFactory> {
        get throws {
            try _iinkPointFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Input.Inking.InkPoint", id: CWinRT.SWRT_WindowsUIInputInking_IInkPointFactory.iid)
            }
        }
    }
}