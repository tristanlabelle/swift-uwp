// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Builds strokes from raw pointer input.
public final class WindowsUIInputInking_InkStrokeBuilder: WindowsRuntime.WinRTImport<WindowsUIInputInking_InkStrokeBuilderProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUIInputInking_InkStrokeBuilderProjection.self))
    }

    // MARK: Windows.UI.Input.Inking.IInkStrokeBuilder members

    /// Starts building the ink stroke.
    /// - Parameter pointerPoint: The first point for the stroke.
    public func beginStroke(_ pointerPoint: WindowsUIInput_PointerPoint?) throws {
        try _interop.beginStroke(pointerPoint)
    }

    /// Adds a new segment to the ink stroke.
    /// - Parameter pointerPoint: The end point of the new segment.
    /// - Returns: The previous end point. This end point can be used when rendering the stroke.
    public func appendToStroke(_ pointerPoint: WindowsUIInput_PointerPoint?) throws -> WindowsUIInput_PointerPoint {
        try COM.NullResult.unwrap(_interop.appendToStroke(pointerPoint))
    }

    /// Stops building the ink stroke.
    /// - Parameter pointerPoint: The last point for the stroke.
    /// - Returns: The stroke built from the points.
    public func endStroke(_ pointerPoint: WindowsUIInput_PointerPoint?) throws -> WindowsUIInputInking_InkStroke {
        try COM.NullResult.unwrap(_interop.endStroke(pointerPoint))
    }

    public func createStroke(_ points: WindowsFoundationCollections_IIterable<WindowsFoundation_Point>?) throws -> WindowsUIInputInking_InkStroke {
        try COM.NullResult.unwrap(_interop.createStroke(points))
    }

    /// Sets the default InkDrawingAttributes for all new ink strokes created after the current stroke.
    /// - Parameter drawingAttributes: The default attributes.
    public func setDefaultDrawingAttributes(_ drawingAttributes: WindowsUIInputInking_InkDrawingAttributes?) throws {
        try _interop.setDefaultDrawingAttributes(drawingAttributes)
    }

    // MARK: Windows.UI.Input.Inking.IInkStrokeBuilder2 members

    public func createStrokeFromInkPoints(_ inkPoints: WindowsFoundationCollections_IIterable<WindowsUIInputInking_InkPoint?>?, _ transform: WindowsFoundationNumerics_Matrix3x2) throws -> WindowsUIInputInking_InkStroke {
        try COM.NullResult.unwrap(_iinkStrokeBuilder2.createStrokeFromInkPoints(inkPoints, transform))
    }

    // MARK: Windows.UI.Input.Inking.IInkStrokeBuilder3 members

    public func createStrokeFromInkPoints(_ inkPoints: WindowsFoundationCollections_IIterable<WindowsUIInputInking_InkPoint?>?, _ transform: WindowsFoundationNumerics_Matrix3x2, _ strokeStartedTime: WindowsFoundation_IReference<WindowsFoundation_DateTime>?, _ strokeDuration: WindowsFoundation_IReference<WindowsFoundation_TimeSpan>?) throws -> WindowsUIInputInking_InkStroke {
        try COM.NullResult.unwrap(_iinkStrokeBuilder3.createStrokeFromInkPoints(inkPoints, transform, strokeStartedTime, strokeDuration))
    }

    // MARK: Implementation details

    private var _iinkStrokeBuilder2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIInputInking_IInkStrokeBuilder2>? = nil

    internal var _iinkStrokeBuilder2: COM.COMInterop<CWinRT.SWRT_WindowsUIInputInking_IInkStrokeBuilder2> {
        get throws {
            try _iinkStrokeBuilder2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIInputInking_IInkStrokeBuilder2.iid).cast(to: CWinRT.SWRT_WindowsUIInputInking_IInkStrokeBuilder2.self)
            }
        }
    }

    private var _iinkStrokeBuilder3_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIInputInking_IInkStrokeBuilder3>? = nil

    internal var _iinkStrokeBuilder3: COM.COMInterop<CWinRT.SWRT_WindowsUIInputInking_IInkStrokeBuilder3> {
        get throws {
            try _iinkStrokeBuilder3_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIInputInking_IInkStrokeBuilder3.iid).cast(to: CWinRT.SWRT_WindowsUIInputInking_IInkStrokeBuilder3.self)
            }
        }
    }

    deinit {
        _iinkStrokeBuilder2_storage?.release()
        _iinkStrokeBuilder3_storage?.release()
    }

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Input.Inking.InkStrokeBuilder", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}