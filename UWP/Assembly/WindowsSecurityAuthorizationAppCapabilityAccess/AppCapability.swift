// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Creates an AppCapability object for the app's user and the current process.
public final class WindowsSecurityAuthorizationAppCapabilityAccess_AppCapability: WindowsRuntime.WinRTImport<WindowsSecurityAuthorizationAppCapabilityAccess_AppCapabilityProjection> {
    // MARK: Windows.Security.Authorization.AppCapabilityAccess.IAppCapability members

    /// Accesses the stored capability.
    /// - Returns: The stored capability as a string property.
    public var capabilityName: Swift.String {
        get throws {
            try _interop.get_CapabilityName()
        }
    }

    /// The user under which the AppCapability is created.
    /// - Returns: The user property.
    public var user: WindowsSystem_User {
        get throws {
            try COM.NullResult.unwrap(_interop.get_User())
        }
    }

    /// Raised when there is a change to access status.
    public func accessChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsSecurityAuthorizationAppCapabilityAccess_AppCapability?, WindowsSecurityAuthorizationAppCapabilityAccess_AppCapabilityAccessChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_AccessChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: accessChanged)
    }

    public func accessChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_AccessChanged(token)
    }

    /// Requests access for the object’s stored capability and user.
    /// - Returns: Returns an AppCapabilityAccessStatus enum.
    public func requestAccessAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsSecurityAuthorizationAppCapabilityAccess_AppCapabilityAccessStatus> {
        try COM.NullResult.unwrap(_interop.requestAccessAsync())
    }

    /// Checks access for the object’s stored capability and user.
    /// - Returns: Returns an AppCapabilityAccessStatus (can be UserPromptRequired).
    public func checkAccess() throws -> WindowsSecurityAuthorizationAppCapabilityAccess_AppCapabilityAccessStatus {
        try _interop.checkAccess()
    }

    // MARK: Windows.Security.Authorization.AppCapabilityAccess.IAppCapabilityStatics members

    public static func requestAccessForCapabilitiesAsync(_ capabilityNames: WindowsFoundationCollections_IIterable<Swift.String>?) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IMapView<Swift.String, WindowsSecurityAuthorizationAppCapabilityAccess_AppCapabilityAccessStatus>?> {
        try COM.NullResult.unwrap(_iappCapabilityStatics.requestAccessForCapabilitiesAsync(capabilityNames))
    }

    public static func requestAccessForCapabilitiesForUserAsync(_ user: WindowsSystem_User?, _ capabilityNames: WindowsFoundationCollections_IIterable<Swift.String>?) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IMapView<Swift.String, WindowsSecurityAuthorizationAppCapabilityAccess_AppCapabilityAccessStatus>?> {
        try COM.NullResult.unwrap(_iappCapabilityStatics.requestAccessForCapabilitiesForUserAsync(user, capabilityNames))
    }

    /// Creates an AppCapability object.
    /// - Parameter capabilityName: The string property of CapabilityName.
    /// - Returns: Returns the created instance.
    public static func create(_ capabilityName: Swift.String) throws -> WindowsSecurityAuthorizationAppCapabilityAccess_AppCapability {
        try COM.NullResult.unwrap(_iappCapabilityStatics.create(capabilityName))
    }

    /// Creates an AppCapability object for the specified process and user.
    /// - Parameter user: The user property for which the object was created.
    /// - Parameter capabilityName: The string property of CapabilityName.
    /// - Parameter pid: The Process ID.
    /// - Returns: Returns the created instance.
    public static func createWithProcessIdForUser(_ user: WindowsSystem_User?, _ capabilityName: Swift.String, _ pid: Swift.UInt32) throws -> WindowsSecurityAuthorizationAppCapabilityAccess_AppCapability {
        try COM.NullResult.unwrap(_iappCapabilityStatics.createWithProcessIdForUser(user, capabilityName, pid))
    }

    // MARK: Implementation details

    private static var _iappCapabilityStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsSecurityAuthorizationAppCapabilityAccess_IAppCapabilityStatics>? = nil

    internal static var _iappCapabilityStatics: COM.COMInterop<CWinRT.SWRT_WindowsSecurityAuthorizationAppCapabilityAccess_IAppCapabilityStatics> {
        get throws {
            try _iappCapabilityStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Security.Authorization.AppCapabilityAccess.AppCapability", id: CWinRT.SWRT_WindowsSecurityAuthorizationAppCapabilityAccess_IAppCapabilityStatics.iid)
            }
        }
    }
}