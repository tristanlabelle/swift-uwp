// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Defines properties for specifying a currency and its amount.
public final class WindowsGlobalization_CurrencyAmount: WindowsRuntime.WinRTImport<WindowsGlobalization_CurrencyAmountProjection> {
    // MARK: Windows.Globalization.ICurrencyAmountFactory members

    public convenience init(_ amount: Swift.String, _ currency: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._icurrencyAmountFactory.create(amount, currency)))
    }

    // MARK: Windows.Globalization.ICurrencyAmount members

    /// An amount.
    /// - Returns: A string containing a decimal number in the invariant culture format (for example, a culture-insensitive amount such as  "100.00").
    public var amount: Swift.String {
        get throws {
            try _interop.get_Amount()
        }
    }

    /// A currency in general use in a specific country.
    /// - Returns: A string containing a value from CurrencyIdentifiers (such as USD, or other **ISO 4217** alphabetic currency code), vendor-specific code prefixed with *"X-"* (for example, *"X-ContosoPoints"*), or another currency name (including cryptocurrency, such as *"Bitcoin"* or *"TRON"*).
    public var currency: Swift.String {
        get throws {
            try _interop.get_Currency()
        }
    }

    // MARK: Implementation details

    private static var _icurrencyAmountFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsGlobalization_ICurrencyAmountFactory>? = nil

    internal static var _icurrencyAmountFactory: COM.COMInterop<CWinRT.SWRT_WindowsGlobalization_ICurrencyAmountFactory> {
        get throws {
            try _icurrencyAmountFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Globalization.CurrencyAmount", id: CWinRT.SWRT_WindowsGlobalization_ICurrencyAmountFactory.iid)
            }
        }
    }
}