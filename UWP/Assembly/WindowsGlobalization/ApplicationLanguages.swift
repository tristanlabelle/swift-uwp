// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Specifies the language-related preferences that the app can use and maintain.
public enum WindowsGlobalization_ApplicationLanguages {
    // MARK: Windows.Globalization.IApplicationLanguagesStatics2 members

    /// Retrieves the language preferences of the specified user. This API is part of support for multi-user apps (MUA).
    /// - Parameter user: The user to retrieve preferences for.
    /// - Returns: A list of normalized BCP-47 language tags representing the language preferences of the specified user.
    public static func getLanguagesForUser(_ user: WindowsSystem_User?) throws -> WindowsFoundationCollections_IVectorView<Swift.String> {
        try COM.NullResult.unwrap(_iapplicationLanguagesStatics2.getLanguagesForUser(user))
    }

    // MARK: Windows.Globalization.IApplicationLanguagesStatics members

    /// Gets the ranked list of current runtime language values preferred by the user.
    /// - Returns: A computed list of languages that merges the app's declared supported languages (ApplicationLanguages.ManifestLanguages ) with the user's ranked list of preferred languages.
    public static var languages: WindowsFoundationCollections_IVectorView<Swift.String> {
        get throws {
            try COM.NullResult.unwrap(_iapplicationLanguagesStatics.get_Languages())
        }
    }

    /// Gets the app's declared list of supported languages.
    /// - Returns: The list of supported languages declared in the app's manifest.
    public static var manifestLanguages: WindowsFoundationCollections_IVectorView<Swift.String> {
        get throws {
            try COM.NullResult.unwrap(_iapplicationLanguagesStatics.get_ManifestLanguages())
        }
    }

    /// Gets or sets an override for the app's preferred language, expressed as a BCP-47 language tag. This setting is persisted.
    /// - Returns: A BCP-47 language tag. The app can set it to override the top language of the user's ranked list of preferred languages (ApplicationLanguages.Languages ), and its value will persist between app sessions. It must be a single language tag; a delimited list of language tags will fail.
    public static var primaryLanguageOverride: Swift.String {
        get throws {
            try _iapplicationLanguagesStatics.get_PrimaryLanguageOverride()
        }
    }

    /// Gets or sets an override for the app's preferred language, expressed as a BCP-47 language tag. This setting is persisted.
    /// - Returns: A BCP-47 language tag. The app can set it to override the top language of the user's ranked list of preferred languages (ApplicationLanguages.Languages ), and its value will persist between app sessions. It must be a single language tag; a delimited list of language tags will fail.
    public static func primaryLanguageOverride(_ value: Swift.String) throws {
        try _iapplicationLanguagesStatics.put_PrimaryLanguageOverride(value)
    }

    // MARK: Implementation details

    private static var _iapplicationLanguagesStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsGlobalization_IApplicationLanguagesStatics2>? = nil

    internal static var _iapplicationLanguagesStatics2: COM.COMInterop<CWinRT.SWRT_WindowsGlobalization_IApplicationLanguagesStatics2> {
        get throws {
            try _iapplicationLanguagesStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Globalization.ApplicationLanguages", id: CWinRT.SWRT_WindowsGlobalization_IApplicationLanguagesStatics2.iid)
            }
        }
    }

    private static var _iapplicationLanguagesStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsGlobalization_IApplicationLanguagesStatics>? = nil

    internal static var _iapplicationLanguagesStatics: COM.COMInterop<CWinRT.SWRT_WindowsGlobalization_IApplicationLanguagesStatics> {
        get throws {
            try _iapplicationLanguagesStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Globalization.ApplicationLanguages", id: CWinRT.SWRT_WindowsGlobalization_IApplicationLanguagesStatics.iid)
            }
        }
    }
}