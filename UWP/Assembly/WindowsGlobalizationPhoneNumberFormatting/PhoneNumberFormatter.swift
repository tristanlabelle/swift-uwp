// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Formats phone numbers.
public final class WindowsGlobalizationPhoneNumberFormatting_PhoneNumberFormatter: WindowsRuntime.WinRTImport<WindowsGlobalizationPhoneNumberFormatting_PhoneNumberFormatterProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsGlobalizationPhoneNumberFormatting_PhoneNumberFormatterProjection.self))
    }

    // MARK: Windows.Globalization.PhoneNumberFormatting.IPhoneNumberFormatter members

    /// Returns a string representation of the provided phone number.
    /// - Parameter number: The phone number to be formatted. The PhoneNumberInfo specifies not just the subscriber number, but also other relevant information such as country code.
    /// - Returns: A string containing the formatted phone number, using the default format for the region specified when this PhoneNumberFormatter was created.
    public func format(_ number: WindowsGlobalizationPhoneNumberFormatting_PhoneNumberInfo?) throws -> Swift.String {
        try _interop.format(number)
    }

    /// Returns a string representing the given phone number, using the given format.
    /// - Parameter number: The phone number to be formatted. The PhoneNumberInfo specifies not just the subscriber number, but also other relevant information such as country code.
    /// - Parameter numberFormat: The specific format to be used.
    /// - Returns: A string containing the phone number, in the specified format.
    public func format(_ number: WindowsGlobalizationPhoneNumberFormatting_PhoneNumberInfo?, _ numberFormat: WindowsGlobalizationPhoneNumberFormatting_PhoneNumberFormat) throws -> Swift.String {
        try _interop.formatWithOutputFormat(number, numberFormat)
    }

    /// Returns a string representing the formatted partial phone number given.
    /// - Parameter number: A string representing a partial phone number.
    /// - Returns: The input string, formatted as a partial phone number.
    public func formatPartialString(_ number: Swift.String) throws -> Swift.String {
        try _interop.formatPartialString(number)
    }

    /// Returns the input string, formatted as a phone number.
    /// - Parameter number: The input string to be formatted.
    /// - Returns: The input string, formatted as a phone number, using the region specified when this PhoneNumberFormatter was created.
    public func formatString(_ number: Swift.String) throws -> Swift.String {
        try _interop.formatString(number)
    }

    /// Returns the input string, formatted as a phone number, surrounded by Unicode Left to Right (LTR) markers.
    /// - Parameter number: The input string to be formatted.
    /// - Returns: The input string, formatted as a phone number, using the region specified when this PhoneNumberFormatter was created. The string is surrounded by Unicode Left to Right (LTR) markers.
    public func formatStringWithLeftToRightMarkers(_ number: Swift.String) throws -> Swift.String {
        try _interop.formatStringWithLeftToRightMarkers(number)
    }

    // MARK: Windows.Globalization.PhoneNumberFormatting.IPhoneNumberFormatterStatics members

    /// Attempts to create a PhoneNumberFormatter for a given region code, and doesn't throw on failure.
    /// - Parameter regionCode: The region code of the new PhoneNumberFormatter.
    /// - Parameter phoneNumber: On success, a new PhoneNumberFormatter for the requested region code.
    public static func tryCreate(_ regionCode: Swift.String, _ phoneNumber: inout WindowsGlobalizationPhoneNumberFormatting_PhoneNumberFormatter?) throws {
        try _iphoneNumberFormatterStatics.tryCreate(regionCode, &phoneNumber)
    }

    /// Static method that returns the country code for a given region code.
    /// - Parameter regionCode: The two-letter ISO region code.
    /// - Returns: The telephone country code, as an integer.
    public static func getCountryCodeForRegion(_ regionCode: Swift.String) throws -> Swift.Int32 {
        try _iphoneNumberFormatterStatics.getCountryCodeForRegion(regionCode)
    }

    /// Static method that returns the national direct dialing prefix for the given region.
    /// - Parameter regionCode: The region code of interest.
    /// - Parameter stripNonDigit: When **true**, all non-digit characters are stripped from the returned string.
    /// - Returns: The national direct dialing prefix for the given region.
    public static func getNationalDirectDialingPrefixForRegion(_ regionCode: Swift.String, _ stripNonDigit: Swift.Bool) throws -> Swift.String {
        try _iphoneNumberFormatterStatics.getNationalDirectDialingPrefixForRegion(regionCode, stripNonDigit)
    }

    /// Wraps a string with Unicode Left to Right (LTR) markers.
    /// - Parameter number: The string to be surrounded with LTR markers.
    /// - Returns: The input string, surrounded with LTR markers.
    public static func wrapWithLeftToRightMarkers(_ number: Swift.String) throws -> Swift.String {
        try _iphoneNumberFormatterStatics.wrapWithLeftToRightMarkers(number)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Globalization.PhoneNumberFormatting.PhoneNumberFormatter", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _iphoneNumberFormatterStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsGlobalizationPhoneNumberFormatting_IPhoneNumberFormatterStatics>? = nil

    internal static var _iphoneNumberFormatterStatics: COM.COMInterop<CWinRT.SWRT_WindowsGlobalizationPhoneNumberFormatting_IPhoneNumberFormatterStatics> {
        get throws {
            try _iphoneNumberFormatterStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Globalization.PhoneNumberFormatting.PhoneNumberFormatter", id: CWinRT.SWRT_WindowsGlobalizationPhoneNumberFormatting_IPhoneNumberFormatterStatics.iid)
            }
        }
    }
}