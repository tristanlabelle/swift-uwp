// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Information about a phone number.
public final class WindowsGlobalizationPhoneNumberFormatting_PhoneNumberInfo: WindowsRuntime.WinRTImport<WindowsGlobalizationPhoneNumberFormatting_PhoneNumberInfoProjection>, WindowsFoundation_IStringableProtocol {
    // MARK: Windows.Globalization.PhoneNumberFormatting.IPhoneNumberInfoFactory members

    public convenience init(_ number: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iphoneNumberInfoFactory.create(number)))
    }

    // MARK: Windows.Globalization.PhoneNumberFormatting.IPhoneNumberInfo members

    /// Gets the two-letter country code for this phone number.
    /// - Returns: A country code.
    public var countryCode: Swift.Int32 {
        get throws {
            try _interop.get_CountryCode()
        }
    }

    /// Gets the phone number.
    /// - Returns: The phone number.
    public var phoneNumber: Swift.String {
        get throws {
            try _interop.get_PhoneNumber()
        }
    }

    /// Gets the length in characters of the geographical area code.
    /// - Returns: Length, in characters, of the area code.
    public func getLengthOfGeographicalAreaCode() throws -> Swift.Int32 {
        try _interop.getLengthOfGeographicalAreaCode()
    }

    /// Gets the national significant number of this object.
    /// - Returns: The national significant number.
    public func getNationalSignificantNumber() throws -> Swift.String {
        try _interop.getNationalSignificantNumber()
    }

    /// Gets the length, in characters, of the national destination code.
    /// - Returns: The length of the national destination code.
    public func getLengthOfNationalDestinationCode() throws -> Swift.Int32 {
        try _interop.getLengthOfNationalDestinationCode()
    }

    /// Heuristically predicts what kind of number is represented in this object.
    /// - Returns: An enumeration value describing the kind of phone number this object represents.
    public func predictNumberKind() throws -> WindowsGlobalizationPhoneNumberFormatting_PredictedPhoneNumberKind {
        try _interop.predictNumberKind()
    }

    /// Gets the geographic region code for this number.
    /// - Returns: A string representing the geographic region code.
    public func getGeographicRegionCode() throws -> Swift.String {
        try _interop.getGeographicRegionCode()
    }

    /// Compares two PhoneNumberInfo objects.
    /// - Parameter otherNumber: The number to be compared to this object.
    /// - Returns: An enumeration value describing the result of the comparison.
    public func checkNumberMatch(_ otherNumber: WindowsGlobalizationPhoneNumberFormatting_PhoneNumberInfo?) throws -> WindowsGlobalizationPhoneNumberFormatting_PhoneNumberMatchResult {
        try _interop.checkNumberMatch(otherNumber)
    }

    // MARK: Windows.Foundation.IStringable members

    /// Renders the phone number as a string.
    /// - Returns: The number, rendered as a string.
    public func toString() throws -> Swift.String {
        try _istringable.toString()
    }

    // MARK: Windows.Globalization.PhoneNumberFormatting.IPhoneNumberInfoStatics members

    /// Static method that attempts to parse a given input string as a phone number, and creates a PhoneNumberInfo encapsulating it.
    /// - Parameter input: A phone number, in string form.
    /// - Parameter phoneNumber: On success, this object encapsulates the given phone number.
    /// - Returns: An enumeration value giving details of the attempt to parse *input*.
    public static func tryParse(_ input: Swift.String, _ phoneNumber: inout WindowsGlobalizationPhoneNumberFormatting_PhoneNumberInfo?) throws -> WindowsGlobalizationPhoneNumberFormatting_PhoneNumberParseResult {
        try _iphoneNumberInfoStatics.tryParse(input, &phoneNumber)
    }

    /// Static method that attempts to parse a given input string as a phone number (using a given region code) and creates a PhoneNumberInfo encapsulating it.
    /// - Parameter input: A phone number, in string form.
    /// - Parameter regionCode: The two-letter region code to be used to parse *input*. Region codes should use upper-case letters.
    /// - Parameter phoneNumber: On success, this object encapsulates the given phone number.
    /// - Returns: An enumeration value giving details of the attempt to parse *input*.
    public static func tryParse(_ input: Swift.String, _ regionCode: Swift.String, _ phoneNumber: inout WindowsGlobalizationPhoneNumberFormatting_PhoneNumberInfo?) throws -> WindowsGlobalizationPhoneNumberFormatting_PhoneNumberParseResult {
        try _iphoneNumberInfoStatics.tryParseWithRegion(input, regionCode, &phoneNumber)
    }

    // MARK: Implementation details

    private var _istringable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IStringable>? = nil

    internal var _istringable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IStringable> {
        get throws {
            try _istringable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IStringable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IStringable.self)
            }
        }
    }

    deinit {
        _istringable_storage?.release()
    }

    private static var _iphoneNumberInfoFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsGlobalizationPhoneNumberFormatting_IPhoneNumberInfoFactory>? = nil

    internal static var _iphoneNumberInfoFactory: COM.COMInterop<CWinRT.SWRT_WindowsGlobalizationPhoneNumberFormatting_IPhoneNumberInfoFactory> {
        get throws {
            try _iphoneNumberInfoFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Globalization.PhoneNumberFormatting.PhoneNumberInfo", id: CWinRT.SWRT_WindowsGlobalizationPhoneNumberFormatting_IPhoneNumberInfoFactory.iid)
            }
        }
    }

    private static var _iphoneNumberInfoStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsGlobalizationPhoneNumberFormatting_IPhoneNumberInfoStatics>? = nil

    internal static var _iphoneNumberInfoStatics: COM.COMInterop<CWinRT.SWRT_WindowsGlobalizationPhoneNumberFormatting_IPhoneNumberInfoStatics> {
        get throws {
            try _iphoneNumberInfoStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Globalization.PhoneNumberFormatting.PhoneNumberInfo", id: CWinRT.SWRT_WindowsGlobalizationPhoneNumberFormatting_IPhoneNumberInfoStatics.iid)
            }
        }
    }
}