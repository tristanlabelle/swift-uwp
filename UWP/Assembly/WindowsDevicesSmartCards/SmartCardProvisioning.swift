// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents info about, and operations for, configuring smart cards.
public final class WindowsDevicesSmartCards_SmartCardProvisioning: WindowsRuntime.WinRTImport<WindowsDevicesSmartCards_SmartCardProvisioningProjection> {
    // MARK: Windows.Devices.SmartCards.ISmartCardProvisioning members

    /// Gets the configured smart card.
    /// - Returns: The configured smart card.
    public var smartCard: WindowsDevicesSmartCards_SmartCard {
        get throws {
            try COM.NullResult.unwrap(_interop.get_SmartCard())
        }
    }

    /// Returns the smart card's ID.
    /// - Returns: After the asynchronous operation completes, returns the smart card's ID.
    public func getIdAsync() throws -> WindowsFoundation_IAsyncOperation<Foundation.UUID> {
        try COM.NullResult.unwrap(_interop.getIdAsync())
    }

    /// Returns the smart card's minidriver name.
    /// - Returns: After the asynchronous operation completes, returns the smart card's name.
    public func getNameAsync() throws -> WindowsFoundation_IAsyncOperation<Swift.String> {
        try COM.NullResult.unwrap(_interop.getNameAsync())
    }

    /// Returns a smart card's authentication challenge/response context.
    /// - Returns: After the asynchronous operation completes, returns an instance of SmartCardChalllengeContext, representing the smart card's authentication challenge/response context.
    public func getChallengeContextAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesSmartCards_SmartCardChallengeContext?> {
        try COM.NullResult.unwrap(_interop.getChallengeContextAsync())
    }

    /// Changes a smart card's personal identification number (PIN).
    /// - Returns: After the smart card PIN change attempt completes, returns true if the smart card's PIN was successfully changed; otherwise false.
    public func requestPinChangeAsync() throws -> WindowsFoundation_IAsyncOperation<Swift.Bool> {
        try COM.NullResult.unwrap(_interop.requestPinChangeAsync())
    }

    /// Resets a smart card's personal identification number (PIN).
    /// - Parameter handler: The method that handles the smart card PIN reset.
    /// - Returns: After the smart card PIN reset attempt completes, returns true if the smart card's PIN was successfully reset; otherwise false.
    public func requestPinResetAsync(_ handler: WindowsDevicesSmartCards_SmartCardPinResetHandler?) throws -> WindowsFoundation_IAsyncOperation<Swift.Bool> {
        try COM.NullResult.unwrap(_interop.requestPinResetAsync(handler))
    }

    // MARK: Windows.Devices.SmartCards.ISmartCardProvisioning2 members

    /// Asynchronously gets the name of the authority key container.
    /// - Returns: An async operation that provides access to a string containing the name of the authority key container.
    public func getAuthorityKeyContainerNameAsync() throws -> WindowsFoundation_IAsyncOperation<Swift.String> {
        try COM.NullResult.unwrap(_ismartCardProvisioning2.getAuthorityKeyContainerNameAsync())
    }

    // MARK: Windows.Devices.SmartCards.ISmartCardProvisioningStatics members

    /// Returns a smart card to be configured.
    /// - Parameter card: The specified smart card.
    /// - Returns: An instance of SmartCardProvisioning, representing the smart card to be configured.
    public static func fromSmartCardAsync(_ card: WindowsDevicesSmartCards_SmartCard?) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesSmartCards_SmartCardProvisioning?> {
        try COM.NullResult.unwrap(_ismartCardProvisioningStatics.fromSmartCardAsync(card))
    }

    /// Creates a Trusted Platform Module (TPM) virtual smart card with a given human-readable name, admin key, and personal identification number (PIN) rules set.
    /// - Parameter friendlyName: The smart card's human-readable name.
    /// - Parameter administrativeKey: The smart card's admin key (also known as an *administrator PIN* or *unblock PIN*).
    /// - Parameter pinPolicy: The smart card's PIN rules set.
    /// - Returns: After the operation completes, returns an instance of SmartCardProvisioning, representing the configured TPM virtual smart card.
    public static func requestVirtualSmartCardCreationAsync(_ friendlyName: Swift.String, _ administrativeKey: WindowsStorageStreams_IBuffer?, _ pinPolicy: WindowsDevicesSmartCards_SmartCardPinPolicy?) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesSmartCards_SmartCardProvisioning?> {
        try COM.NullResult.unwrap(_ismartCardProvisioningStatics.requestVirtualSmartCardCreationAsync(friendlyName, administrativeKey, pinPolicy))
    }

    /// Creates a Trusted Platform Module (TPM) virtual smart card with a given human-readable name, admin key, personal identification number (PIN) rules set, and ID.
    /// - Parameter friendlyName: The smart card's human-readable name.
    /// - Parameter administrativeKey: The smart card's admin key (also known as an *administrator PIN* or *unblock PIN*).
    /// - Parameter pinPolicy: The smart card's PIN rules set.
    /// - Parameter cardId: The smart card's ID.
    /// - Returns: After the operation completes, returns an instance of SmartCardProvisioning, representing the configured TPM virtual smart card.
    public static func requestVirtualSmartCardCreationAsync(_ friendlyName: Swift.String, _ administrativeKey: WindowsStorageStreams_IBuffer?, _ pinPolicy: WindowsDevicesSmartCards_SmartCardPinPolicy?, _ cardId: Foundation.UUID) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesSmartCards_SmartCardProvisioning?> {
        try COM.NullResult.unwrap(_ismartCardProvisioningStatics.requestVirtualSmartCardCreationAsyncWithCardId(friendlyName, administrativeKey, pinPolicy, cardId))
    }

    /// Deletes a Trusted Platform Module (TPM) virtual smart card.
    /// - Parameter card: The TPM virtual smart card to delete.
    /// - Returns: After the deletion attempt completes, returns true if the TPM virtual smart card was successfully deleted; otherwise false.
    public static func requestVirtualSmartCardDeletionAsync(_ card: WindowsDevicesSmartCards_SmartCard?) throws -> WindowsFoundation_IAsyncOperation<Swift.Bool> {
        try COM.NullResult.unwrap(_ismartCardProvisioningStatics.requestVirtualSmartCardDeletionAsync(card))
    }

    // MARK: Windows.Devices.SmartCards.ISmartCardProvisioningStatics2 members

    /// Creates an attested Trusted Platform Module (TPM) virtual smart card with the specified parameters.
    /// - Parameter friendlyName: The smart card's human-readable name.
    /// - Parameter administrativeKey: The smart card's admin key (also known as an *administrator PIN* or *unblock PIN*).
    /// - Parameter pinPolicy: The smart card's PIN rules set.
    /// - Returns: After the operation completes, returns an instance of SmartCardProvisioning, representing the configured TPM virtual smart card.
    public static func requestAttestedVirtualSmartCardCreationAsync(_ friendlyName: Swift.String, _ administrativeKey: WindowsStorageStreams_IBuffer?, _ pinPolicy: WindowsDevicesSmartCards_SmartCardPinPolicy?) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesSmartCards_SmartCardProvisioning?> {
        try COM.NullResult.unwrap(_ismartCardProvisioningStatics2.requestAttestedVirtualSmartCardCreationAsync(friendlyName, administrativeKey, pinPolicy))
    }

    /// Creates an attested Trusted Platform Module (TPM) virtual smart card with the specified parameters.
    /// - Parameter friendlyName: The smart card's human-readable name.
    /// - Parameter administrativeKey: The smart card's admin key (also known as an *administrator PIN* or *unblock PIN*).
    /// - Parameter pinPolicy: The smart card's PIN rules set.
    /// - Parameter cardId: The smart card's ID.
    /// - Returns: After the operation completes, returns an instance of SmartCardProvisioning, representing the configured TPM virtual smart card.
    public static func requestAttestedVirtualSmartCardCreationAsync(_ friendlyName: Swift.String, _ administrativeKey: WindowsStorageStreams_IBuffer?, _ pinPolicy: WindowsDevicesSmartCards_SmartCardPinPolicy?, _ cardId: Foundation.UUID) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesSmartCards_SmartCardProvisioning?> {
        try COM.NullResult.unwrap(_ismartCardProvisioningStatics2.requestAttestedVirtualSmartCardCreationAsyncWithCardId(friendlyName, administrativeKey, pinPolicy, cardId))
    }

    // MARK: Implementation details

    private var _ismartCardProvisioning2_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesSmartCards_ISmartCardProvisioning2>? = nil

    internal var _ismartCardProvisioning2: COM.COMInterop<CWinRT.SWRT_WindowsDevicesSmartCards_ISmartCardProvisioning2> {
        get throws {
            try _ismartCardProvisioning2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsDevicesSmartCards_ISmartCardProvisioning2.iid).cast(to: CWinRT.SWRT_WindowsDevicesSmartCards_ISmartCardProvisioning2.self)
            }
        }
    }

    deinit {
        _ismartCardProvisioning2_storage?.release()
    }

    private static var _ismartCardProvisioningStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesSmartCards_ISmartCardProvisioningStatics>? = nil

    internal static var _ismartCardProvisioningStatics: COM.COMInterop<CWinRT.SWRT_WindowsDevicesSmartCards_ISmartCardProvisioningStatics> {
        get throws {
            try _ismartCardProvisioningStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.SmartCards.SmartCardProvisioning", id: CWinRT.SWRT_WindowsDevicesSmartCards_ISmartCardProvisioningStatics.iid)
            }
        }
    }

    private static var _ismartCardProvisioningStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesSmartCards_ISmartCardProvisioningStatics2>? = nil

    internal static var _ismartCardProvisioningStatics2: COM.COMInterop<CWinRT.SWRT_WindowsDevicesSmartCards_ISmartCardProvisioningStatics2> {
        get throws {
            try _ismartCardProvisioningStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.SmartCards.SmartCardProvisioning", id: CWinRT.SWRT_WindowsDevicesSmartCards_ISmartCardProvisioningStatics2.iid)
            }
        }
    }
}