// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a smart card authentication challenge/response operation.
public final class WindowsDevicesSmartCards_SmartCardChallengeContext: WindowsRuntime.WinRTImport<WindowsDevicesSmartCards_SmartCardChallengeContextProjection>, WindowsFoundation_IClosableProtocol {
    // MARK: Windows.Devices.SmartCards.ISmartCardChallengeContext members

    /// Gets the smart card's challenge value.
    /// - Returns: The smart card's challenge value.
    public var challenge: WindowsStorageStreams_IBuffer {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Challenge())
        }
    }

    /// Verifies the response to the smart card challenge request.
    /// - Parameter response: The response to the smart card challenge request.
    /// - Returns: After the verification attempt is done, true if the response was successfully verified; otherwise false.
    public func verifyResponseAsync(_ response: WindowsStorageStreams_IBuffer?) throws -> WindowsFoundation_IAsyncOperation<Swift.Bool> {
        try COM.NullResult.unwrap(_interop.verifyResponseAsync(response))
    }

    /// Reconfigures an existing, configured smart card with a new response. Optionally, formats the smart card.
    /// - Parameter response: The new response to a smart card authentication challenge/response operation.
    /// - Parameter formatCard: True to format the smart card; otherwise false.
    /// - Returns: An asynchronous action that completes after the smart card reconfiguration attempt is done.
    public func provisionAsync(_ response: WindowsStorageStreams_IBuffer?, _ formatCard: Swift.Bool) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.provisionAsync(response, formatCard))
    }

    /// Reconfigures an existing, configured smart card with a new response and ID. Optionally, formats the smart card.
    /// - Parameter response: The new response to a smart card authentication challenge/response operation.
    /// - Parameter formatCard: True to format the smart card; otherwise false.
    /// - Parameter newCardId: The new smart card ID.
    /// - Returns: An asynchronous action that completes after the smart card reconfiguration attempt is done.
    public func provisionAsync(_ response: WindowsStorageStreams_IBuffer?, _ formatCard: Swift.Bool, _ newCardId: Foundation.UUID) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.provisionAsyncWithNewCardId(response, formatCard, newCardId))
    }

    /// Changes the smart card's admin key (also known as an *administrator PIN* or *unblock PIN*).
    /// - Parameter response: The response to a smart card authentication challenge/response operation.
    /// - Parameter newAdministrativeKey: The new smart card admin key.
    /// - Returns: An asynchronous action that completes after the admin key change attempt is done.
    public func changeAdministrativeKeyAsync(_ response: WindowsStorageStreams_IBuffer?, _ newAdministrativeKey: WindowsStorageStreams_IBuffer?) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.changeAdministrativeKeyAsync(response, newAdministrativeKey))
    }

    // MARK: Windows.Foundation.IClosable members

    /// Completes the smart card authentication challenge/response operation and frees associated system resources.
    public func close() throws {
        try _iclosable.close()
    }

    // MARK: Implementation details

    private var _iclosable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable>? = nil

    internal var _iclosable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable> {
        get throws {
            try _iclosable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IClosable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IClosable.self)
            }
        }
    }

    deinit {
        _iclosable_storage?.release()
    }
}