// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Supplies a set of font recommendations for a given language or script for various usage cases.
public final class WindowsGlobalizationFonts_LanguageFontGroup: WindowsRuntime.WinRTImport<WindowsGlobalizationFonts_LanguageFontGroupProjection> {
    // MARK: Windows.Globalization.Fonts.ILanguageFontGroupFactory members

    public convenience init(_ languageTag: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ilanguageFontGroupFactory.createLanguageFontGroup(languageTag)))
    }

    // MARK: Windows.Globalization.Fonts.ILanguageFontGroup members

    /// Gets a font that is recommended as an additional option for use in documents beyond the recommendations provided by DocumentHeadingFont, ModernDocumentFont and TraditionalDocumentFont.
    /// - Returns: The recommended LanguageFont, or **NULL** if no font recommendation is available.
    public var documentAlternate1Font: WindowsGlobalizationFonts_LanguageFont {
        get throws {
            try COM.NullResult.unwrap(_interop.get_DocumentAlternate1Font())
        }
    }

    /// Gets a font that is recommended as an additional option for use in documents beyond the recommendations provided by DocumentHeadingFont, ModernDocumentFont and TraditionalDocumentFont.
    /// - Returns: The recommended LanguageFont, or **NULL** if no font recommendation is available.
    public var documentAlternate2Font: WindowsGlobalizationFonts_LanguageFont {
        get throws {
            try COM.NullResult.unwrap(_interop.get_DocumentAlternate2Font())
        }
    }

    /// Gets a font that is recommended for use in document headings.
    /// - Returns: The recommended LanguageFont.
    public var documentHeadingFont: WindowsGlobalizationFonts_LanguageFont {
        get throws {
            try COM.NullResult.unwrap(_interop.get_DocumentHeadingFont())
        }
    }

    /// Gets a font that is recommended for displaying fixed-width characters.
    /// - Returns: The recommended LanguageFont, or **NULL** if no font recommendation is available.
    public var fixedWidthTextFont: WindowsGlobalizationFonts_LanguageFont {
        get throws {
            try COM.NullResult.unwrap(_interop.get_FixedWidthTextFont())
        }
    }

    /// Gets a font that is recommended for typical document body text following modern style conventions.
    /// - Returns: The recommended LanguageFont.
    public var modernDocumentFont: WindowsGlobalizationFonts_LanguageFont {
        get throws {
            try COM.NullResult.unwrap(_interop.get_ModernDocumentFont())
        }
    }

    /// Gets a font that is recommended for typical document body text following traditional style conventions.
    /// - Returns: The recommended LanguageFont.
    public var traditionalDocumentFont: WindowsGlobalizationFonts_LanguageFont {
        get throws {
            try COM.NullResult.unwrap(_interop.get_TraditionalDocumentFont())
        }
    }

    /// Gets a font that is recommended for special UI elements, such as captions, that are displayed at sizes smaller than typical UI body text.
    /// - Returns: The recommended LanguageFont.
    public var uicaptionFont: WindowsGlobalizationFonts_LanguageFont {
        get throws {
            try COM.NullResult.unwrap(_interop.get_UICaptionFont())
        }
    }

    /// Gets a font that is recommended for special UI elements, such as headings, that are displayed at sizes somewhat larger than typical UI body text.
    /// - Returns: The recommended LanguageFont.
    public var uiheadingFont: WindowsGlobalizationFonts_LanguageFont {
        get throws {
            try COM.NullResult.unwrap(_interop.get_UIHeadingFont())
        }
    }

    /// Gets a font that is recommended for special UI elements, such as headings in notifications or other app messages, that are displayed at UIÂ  body text size or only slightly larger yet need to be differentiated from UI body text.
    /// - Returns: The recommended LanguageFont.
    public var uinotificationHeadingFont: WindowsGlobalizationFonts_LanguageFont {
        get throws {
            try COM.NullResult.unwrap(_interop.get_UINotificationHeadingFont())
        }
    }

    /// Gets a font that is recommended for typical UI body text.
    /// - Returns: The recommended LanguageFont.
    public var uitextFont: WindowsGlobalizationFonts_LanguageFont {
        get throws {
            try COM.NullResult.unwrap(_interop.get_UITextFont())
        }
    }

    /// Gets a font that is recommended for special UI elements set at sizes much larger than typical UI body text.
    /// - Returns: The recommended LanguageFont.
    public var uititleFont: WindowsGlobalizationFonts_LanguageFont {
        get throws {
            try COM.NullResult.unwrap(_interop.get_UITitleFont())
        }
    }

    // MARK: Implementation details

    private static var _ilanguageFontGroupFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsGlobalizationFonts_ILanguageFontGroupFactory>? = nil

    internal static var _ilanguageFontGroupFactory: COM.COMInterop<CWinRT.SWRT_WindowsGlobalizationFonts_ILanguageFontGroupFactory> {
        get throws {
            try _ilanguageFontGroupFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Globalization.Fonts.LanguageFontGroup", id: CWinRT.SWRT_WindowsGlobalizationFonts_ILanguageFontGroupFactory.iid)
            }
        }
    }
}