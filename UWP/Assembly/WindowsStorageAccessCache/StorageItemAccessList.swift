// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents your app's future-access list (obtained from the static StorageApplicationPermissions.FutureAccessList property). By picking files and folders, your user grants your app permission to access items that might not be accessible otherwise. If you add these items to your future-access list then you'll retain that permission when your app wants to access those items again later. Items are stored in the future-access list as StorageFile and StorageFolder objects.
public final class WindowsStorageAccessCache_StorageItemAccessList: WindowsRuntime.WinRTImport<WindowsStorageAccessCache_StorageItemAccessListProjection>, WindowsStorageAccessCache_IStorageItemAccessListProtocol {
    // MARK: Windows.Storage.AccessCache.IStorageItemAccessList members

    /// Gets an object for retrieving storage items from the access list.
    /// - Returns: The object for retrieving storage items.
    public var entries: WindowsStorageAccessCache_AccessListEntryView {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Entries())
        }
    }

    /// Gets the maximum number of storage items that the access list can contain.
    /// - Returns: The maximum number of storage items.
    public var maximumItemsAllowed: Swift.UInt32 {
        get throws {
            try _interop.get_MaximumItemsAllowed()
        }
    }

    /// Adds a new storage item to the access list.
    /// - Parameter file: The storage item to add.
    /// - Returns: A token that the app can use later to retrieve the storage item.
    public func add(_ file: WindowsStorage_IStorageItem?) throws -> Swift.String {
        try _interop.addOverloadDefaultMetadata(file)
    }

    /// Adds a new storage item and accompanying metadata to the access list.
    /// - Parameter file: The storage item to add.
    /// - Parameter metadata: Optional metadata to associate with the storage item.
    /// - Returns: A token that the app can use later to retrieve the storage item.
    public func add(_ file: WindowsStorage_IStorageItem?, _ metadata: Swift.String) throws -> Swift.String {
        try _interop.add(file, metadata)
    }

    /// Adds a new storage item to the access list, or replaces the specified item if it already exists in the list.
    /// - Parameter token: The token associated with the new storage item. If the access list already contains a storage item that has this token, the new item replaces the existing one.
    /// - Parameter file: The storage item to add or replace.
    public func addOrReplace(_ token: Swift.String, _ file: WindowsStorage_IStorageItem?) throws {
        try _interop.addOrReplaceOverloadDefaultMetadata(token, file)
    }

    /// Adds a new storage item and accompanying metadata to the access list, or replaces the specified item if it already exists in the list.
    /// - Parameter token: A token that the app can use later to retrieve this storage item.
    /// - Parameter file: The storage item to add or replace.
    /// - Parameter metadata: Optional metadata to associate with the storage item.
    public func addOrReplace(_ token: Swift.String, _ file: WindowsStorage_IStorageItem?, _ metadata: Swift.String) throws {
        try _interop.addOrReplace(token, file, metadata)
    }

    /// Retrieves the specified item (like a file or folder) from the most recently used (MRU) list.
    /// - Parameter token: The token of the item to retrieve.
    /// - Returns: When this method completes successfully, it returns the item (type IStorageItem ) that is associated with the specified *token*.
    public func getItemAsync(_ token: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_IStorageItem?> {
        try COM.NullResult.unwrap(_interop.getItemAsync(token))
    }

    /// Retrieves the specified StorageFile from the list.
    /// - Parameter token: The token of the StorageFile to retrieve.
    /// - Returns: When this method completes successfully, it returns the StorageFile that is associated with the specified *token*.
    public func getFileAsync(_ token: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFile?> {
        try COM.NullResult.unwrap(_interop.getFileAsync(token))
    }

    /// Retrieves the specified StorageFolder from the list.
    /// - Parameter token: The token of the StorageFolder to retrieve.
    /// - Returns: When this method completes successfully, it returns the StorageFolder that is associated with the specified *token*.
    public func getFolderAsync(_ token: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFolder?> {
        try COM.NullResult.unwrap(_interop.getFolderAsync(token))
    }

    /// Retrieves the specified item (like a file or folder) from the list using the specified options.
    /// - Parameter token: The token of the item to retrieve.
    /// - Parameter options: The enum value that describes the behavior to use when the app accesses the item.
    /// - Returns: When this method completes successfully, it returns the item (type IStorageItem ) that is associated with the specified *token*.
    public func getItemAsync(_ token: Swift.String, _ options: WindowsStorageAccessCache_AccessCacheOptions) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_IStorageItem?> {
        try COM.NullResult.unwrap(_interop.getItemWithOptionsAsync(token, options))
    }

    /// Retrieves the StorageFile from the list using the specified options.
    /// - Parameter token: The token of the StorageFile to retrieve.
    /// - Parameter options: The enum value that describes the behavior to use when the app accesses the item.
    /// - Returns: When this method completes successfully, it returns the StorageFile that is associated with the specified *token*.
    public func getFileAsync(_ token: Swift.String, _ options: WindowsStorageAccessCache_AccessCacheOptions) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFile?> {
        try COM.NullResult.unwrap(_interop.getFileWithOptionsAsync(token, options))
    }

    /// Retrieves the specified StorageFolder from the list using the specified options.
    /// - Parameter token: The token of the StorageFolder to retrieve.
    /// - Parameter options: The enum value that describes the behavior to use when the app accesses the item.
    /// - Returns: When this method completes successfully, it returns the StorageFolder that is associated with the specified *token*.
    public func getFolderAsync(_ token: Swift.String, _ options: WindowsStorageAccessCache_AccessCacheOptions) throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFolder?> {
        try COM.NullResult.unwrap(_interop.getFolderWithOptionsAsync(token, options))
    }

    /// Removes the specified storage item from the access list.
    /// - Parameter token: The token of the storage item to remove.
    public func remove(_ token: Swift.String) throws {
        try _interop.remove(token)
    }

    /// Determines whether the access list contains the specified storage item.
    /// - Parameter token: The token of the storage item to look for.
    /// - Returns: True if the access list contains the specified storage item; false otherwise.
    public func containsItem(_ token: Swift.String) throws -> Swift.Bool {
        try _interop.containsItem(token)
    }

    /// Removes all storage items from the access list.
    public func clear() throws {
        try _interop.clear()
    }

    /// Determines whether the app has access to the specified storage item in the access list.
    /// - Parameter file: The storage item to check for access.
    /// - Returns: True if the app can access the storage item; otherwise false.
    public func checkAccess(_ file: WindowsStorage_IStorageItem?) throws -> Swift.Bool {
        try _interop.checkAccess(file)
    }

    // MARK: Implementation details
}