// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Details of a request to read a batch of server-side search results.
public final class WindowsApplicationModelEmailDataProvider_EmailMailboxServerSearchReadBatchRequest: WindowsRuntime.WinRTImport<WindowsApplicationModelEmailDataProvider_EmailMailboxServerSearchReadBatchRequestProjection> {
    // MARK: Windows.ApplicationModel.Email.DataProvider.IEmailMailboxServerSearchReadBatchRequest members

    /// Gets the folder ID of the folder where the search is to be performed.
    /// - Returns: A folder ID.
    public var emailFolderId: Swift.String {
        get throws {
            try _interop.get_EmailFolderId()
        }
    }

    /// Gets the mailbox ID of the mailbox where the search is to be performed.
    /// - Returns: A mailbox ID.
    public var emailMailboxId: Swift.String {
        get throws {
            try _interop.get_EmailMailboxId()
        }
    }

    /// Gets the search options to be applied to this search.
    /// - Returns: An EmailQueryOptions object specifying the search options.
    public var options: WindowsApplicationModelEmail_EmailQueryOptions {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Options())
        }
    }

    /// Gets the search session ID of this server-side batch read request.
    /// - Returns: A search session ID.
    public var sessionId: Swift.String {
        get throws {
            try _interop.get_SessionId()
        }
    }

    /// Gets the suggested batch size for the server-side search batch read.
    /// - Returns: The suggested number of messages in a batch. Clients suggest a batch size based on client-side criteria such as screen real estate, storage capacity, or bandwidth.
    public var suggestedBatchSize: Swift.UInt32 {
        get throws {
            try _interop.get_SuggestedBatchSize()
        }
    }

    /// Saves a message that meets server-side search criteria.
    /// - Parameter message: A message that matches the search criteria of a server-side batch read request.
    /// - Returns: An asynchronous message save operation on an EmailMailboxServerSearchReadBatchRequest.
    public func saveMessageAsync(_ message: WindowsApplicationModelEmail_EmailMessage?) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.saveMessageAsync(message))
    }

    /// Informs the email client that the request was processed successfully.
    /// - Returns: An asynchronous batch read request operation on an EmailMailboxServerSearchReadBatchRequest.
    public func reportCompletedAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.reportCompletedAsync())
    }

    /// Informs the client that the request was not processed successfully.
    /// - Parameter batchStatus: An EmailBatchStatus value describing the current status of the batch.
    /// - Returns: An asynchronous batch read request operation on an EmailMailboxServerSearchReadBatchRequest.
    public func reportFailedAsync(_ batchStatus: WindowsApplicationModelEmail_EmailBatchStatus) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.reportFailedAsync(batchStatus))
    }

    // MARK: Implementation details
}