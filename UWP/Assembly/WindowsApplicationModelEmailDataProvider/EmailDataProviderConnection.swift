// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a connection to a data provider client.
public final class WindowsApplicationModelEmailDataProvider_EmailDataProviderConnection: WindowsRuntime.WinRTImport<WindowsApplicationModelEmailDataProvider_EmailDataProviderConnectionProjection> {
    // MARK: Windows.ApplicationModel.Email.DataProvider.IEmailDataProviderConnection members

    /// Occurs when the email client has requested that a folder be created on the server.
    public func createFolderRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelEmailDataProvider_EmailDataProviderConnection?, WindowsApplicationModelEmailDataProvider_EmailMailboxCreateFolderRequestEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_CreateFolderRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: createFolderRequested)
    }

    public func createFolderRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_CreateFolderRequested(token)
    }

    /// Occurs when the email client has requested that a folder be deleted on the server.
    public func deleteFolderRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelEmailDataProvider_EmailDataProviderConnection?, WindowsApplicationModelEmailDataProvider_EmailMailboxDeleteFolderRequestEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_DeleteFolderRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: deleteFolderRequested)
    }

    public func deleteFolderRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_DeleteFolderRequested(token)
    }

    /// Occurs when the email client has requested to download an attachment from the server.
    public func downloadAttachmentRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelEmailDataProvider_EmailDataProviderConnection?, WindowsApplicationModelEmailDataProvider_EmailMailboxDownloadAttachmentRequestEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_DownloadAttachmentRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: downloadAttachmentRequested)
    }

    public func downloadAttachmentRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_DownloadAttachmentRequested(token)
    }

    /// Occurs when the email client has requested to download a message from the server.
    public func downloadMessageRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelEmailDataProvider_EmailDataProviderConnection?, WindowsApplicationModelEmailDataProvider_EmailMailboxDownloadMessageRequestEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_DownloadMessageRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: downloadMessageRequested)
    }

    public func downloadMessageRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_DownloadMessageRequested(token)
    }

    /// Occurs when the email client has requested that a folder be emptied the server.
    public func emptyFolderRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelEmailDataProvider_EmailDataProviderConnection?, WindowsApplicationModelEmailDataProvider_EmailMailboxEmptyFolderRequestEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_EmptyFolderRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: emptyFolderRequested)
    }

    public func emptyFolderRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_EmptyFolderRequested(token)
    }

    /// Occurs when the email client has requested to forward a meeting request.
    public func forwardMeetingRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelEmailDataProvider_EmailDataProviderConnection?, WindowsApplicationModelEmailDataProvider_EmailMailboxForwardMeetingRequestEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_ForwardMeetingRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: forwardMeetingRequested)
    }

    public func forwardMeetingRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_ForwardMeetingRequested(token)
    }

    /// Occurs when the email client has requested the auto reply settings.
    public func getAutoReplySettingsRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelEmailDataProvider_EmailDataProviderConnection?, WindowsApplicationModelEmailDataProvider_EmailMailboxGetAutoReplySettingsRequestEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_GetAutoReplySettingsRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: getAutoReplySettingsRequested)
    }

    public func getAutoReplySettingsRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_GetAutoReplySettingsRequested(token)
    }

    /// Occurs when the email client has requested to sync with the mailbox on the server.
    public func mailboxSyncRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelEmailDataProvider_EmailDataProviderConnection?, WindowsApplicationModelEmailDataProvider_EmailMailboxSyncManagerSyncRequestEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_MailboxSyncRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: mailboxSyncRequested)
    }

    public func mailboxSyncRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_MailboxSyncRequested(token)
    }

    /// Occurs when the email client has requested that a folder be moved on the server.
    public func moveFolderRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelEmailDataProvider_EmailDataProviderConnection?, WindowsApplicationModelEmailDataProvider_EmailMailboxMoveFolderRequestEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_MoveFolderRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: moveFolderRequested)
    }

    public func moveFolderRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_MoveFolderRequested(token)
    }

    /// Occurs when the email client has requested that a new meeting time be proposed.
    public func proposeNewTimeForMeetingRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelEmailDataProvider_EmailDataProviderConnection?, WindowsApplicationModelEmailDataProvider_EmailMailboxProposeNewTimeForMeetingRequestEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_ProposeNewTimeForMeetingRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: proposeNewTimeForMeetingRequested)
    }

    public func proposeNewTimeForMeetingRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_ProposeNewTimeForMeetingRequested(token)
    }

    /// Occurs when the email client has requested that the recipients of a message be resolved.
    public func resolveRecipientsRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelEmailDataProvider_EmailDataProviderConnection?, WindowsApplicationModelEmailDataProvider_EmailMailboxResolveRecipientsRequestEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_ResolveRecipientsRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: resolveRecipientsRequested)
    }

    public func resolveRecipientsRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_ResolveRecipientsRequested(token)
    }

    /// Occurs when the email client has requested a batch of server-side search results.
    public func serverSearchReadBatchRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelEmailDataProvider_EmailDataProviderConnection?, WindowsApplicationModelEmailDataProvider_EmailMailboxServerSearchReadBatchRequestEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_ServerSearchReadBatchRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: serverSearchReadBatchRequested)
    }

    public func serverSearchReadBatchRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_ServerSearchReadBatchRequested(token)
    }

    /// Occurs when the email client has requested to set auto reply settings.
    public func setAutoReplySettingsRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelEmailDataProvider_EmailDataProviderConnection?, WindowsApplicationModelEmailDataProvider_EmailMailboxSetAutoReplySettingsRequestEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_SetAutoReplySettingsRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: setAutoReplySettingsRequested)
    }

    public func setAutoReplySettingsRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_SetAutoReplySettingsRequested(token)
    }

    /// Occurs when the email client has requested that a meeting response be updated.
    public func updateMeetingResponseRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelEmailDataProvider_EmailDataProviderConnection?, WindowsApplicationModelEmailDataProvider_EmailMailboxUpdateMeetingResponseRequestEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_UpdateMeetingResponseRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: updateMeetingResponseRequested)
    }

    public func updateMeetingResponseRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_UpdateMeetingResponseRequested(token)
    }

    /// Occurs when the email client has requested that certificates be validated with respect to a particular mailbox.
    public func validateCertificatesRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelEmailDataProvider_EmailDataProviderConnection?, WindowsApplicationModelEmailDataProvider_EmailMailboxValidateCertificatesRequestEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_ValidateCertificatesRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: validateCertificatesRequested)
    }

    public func validateCertificatesRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_ValidateCertificatesRequested(token)
    }

    /// Call this method to indicate that all event handlers have been set, and the data provider is ready to start handling requests.
    public func start() throws {
        try _interop.start()
    }

    // MARK: Implementation details
}