// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Details of a request to validate certificates.
public final class WindowsApplicationModelEmailDataProvider_EmailMailboxValidateCertificatesRequest: WindowsRuntime.WinRTImport<WindowsApplicationModelEmailDataProvider_EmailMailboxValidateCertificatesRequestProjection> {
    // MARK: Windows.ApplicationModel.Email.DataProvider.IEmailMailboxValidateCertificatesRequest members

    /// Gets the list of certificates to be validated.
    /// - Returns: A list of certificates to be validated.
    public var certificates: WindowsFoundationCollections_IVectorView<WindowsSecurityCryptographyCertificates_Certificate?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Certificates())
        }
    }

    /// Gets the mailbox ID against which the certificates are to be validated.
    /// - Returns: A mailbox ID.
    public var emailMailboxId: Swift.String {
        get throws {
            try _interop.get_EmailMailboxId()
        }
    }

    public func reportCompletedAsync(_ validationStatuses: WindowsFoundationCollections_IIterable<WindowsApplicationModelEmail_EmailCertificateValidationStatus>?) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.reportCompletedAsync(validationStatuses))
    }

    /// Informs the client that the request was not processed successfully. Specifically, not all of the certificates' validation state was assessed successfully.
    /// - Returns: An asynchronous validation operation on an EmailMailboxValidateCertificatesRequest.
    public func reportFailedAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.reportFailedAsync())
    }

    // MARK: Implementation details
}