// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Details of a request to propose a new time for a meeting.
public final class WindowsApplicationModelEmailDataProvider_EmailMailboxProposeNewTimeForMeetingRequest: WindowsRuntime.WinRTImport<WindowsApplicationModelEmailDataProvider_EmailMailboxProposeNewTimeForMeetingRequestProjection> {
    // MARK: Windows.ApplicationModel.Email.DataProvider.IEmailMailboxProposeNewTimeForMeetingRequest members

    /// Gets the comment to be added to the proposal for a new meeting time.
    /// - Returns: The comment, as text.
    public var comment: Swift.String {
        get throws {
            try _interop.get_Comment()
        }
    }

    /// Gets the mailbox ID to use to send the proposed new meeting time.
    /// - Returns: A mailbox ID.
    public var emailMailboxId: Swift.String {
        get throws {
            try _interop.get_EmailMailboxId()
        }
    }

    /// Gets the message ID of the meeting invitation for which a new time is being proposed.
    /// - Returns: A message ID.
    public var emailMessageId: Swift.String {
        get throws {
            try _interop.get_EmailMessageId()
        }
    }

    /// Gets the proposed new duration of the meeting.
    /// - Returns: The new duration of the meeting.
    public var newDuration: WindowsFoundation_TimeSpan {
        get throws {
            try _interop.get_NewDuration()
        }
    }

    /// Gets the proposed new start time for the meeting.
    /// - Returns: The new start time.
    public var newStartTime: WindowsFoundation_DateTime {
        get throws {
            try _interop.get_NewStartTime()
        }
    }

    /// Gets the subject of the proposal for a new meeting time.
    /// - Returns: A subject line. Data providers that use email use this value for the Subject of the email.
    public var subject: Swift.String {
        get throws {
            try _interop.get_Subject()
        }
    }

    /// Informs the email client that the request was processed successfully.
    /// - Returns: An asynchronous move operation on an EmailMailboxProposeNewTimeForMeetingRequest.
    public func reportCompletedAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.reportCompletedAsync())
    }

    /// Informs the client that the request was not processed successfully.
    /// - Returns: An asynchronous proposal operation on an EmailMailboxProposeNewTimeForMeetingRequest.
    public func reportFailedAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.reportFailedAsync())
    }

    // MARK: Implementation details
}