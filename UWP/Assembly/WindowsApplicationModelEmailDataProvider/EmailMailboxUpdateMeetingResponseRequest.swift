// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Details of a request from a client to update a meeting response.
public final class WindowsApplicationModelEmailDataProvider_EmailMailboxUpdateMeetingResponseRequest: WindowsRuntime.WinRTImport<WindowsApplicationModelEmailDataProvider_EmailMailboxUpdateMeetingResponseRequestProjection> {
    // MARK: Windows.ApplicationModel.Email.DataProvider.IEmailMailboxUpdateMeetingResponseRequest members

    /// Gets the comment to be used in updating the meeting response.
    /// - Returns: The comment text.
    public var comment: Swift.String {
        get throws {
            try _interop.get_Comment()
        }
    }

    /// Gets the mailbox ID of the mailbox that holds the meeting response to be updated.
    /// - Returns: A mailbox ID.
    public var emailMailboxId: Swift.String {
        get throws {
            try _interop.get_EmailMailboxId()
        }
    }

    /// Gets the message ID of the meeting response to be updated.
    /// - Returns: A message ID.
    public var emailMessageId: Swift.String {
        get throws {
            try _interop.get_EmailMessageId()
        }
    }

    /// Gets the response value to be used in updating the meeting response.
    /// - Returns: An EmailMeetingResponseType value specifying the new response in the updated meeting response.
    public var response: WindowsApplicationModelEmail_EmailMeetingResponseType {
        get throws {
            try _interop.get_Response()
        }
    }

    /// Gets a value that indicates whether an update should be sent to the meeting owner when the meeting response is updated.
    /// - Returns: When true, notify the owner that the meeting response has been updated.
    public var sendUpdate: Swift.Bool {
        get throws {
            try _interop.get_SendUpdate()
        }
    }

    /// Gets the subject to be used on the updated meeting response.
    /// - Returns: The subject, as text.
    public var subject: Swift.String {
        get throws {
            try _interop.get_Subject()
        }
    }

    /// Informs the email client that the request was processed successfully.
    /// - Returns: An asynchronous update operation on an EmailMailboxUpdateMeetingResponseRequest.
    public func reportCompletedAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.reportCompletedAsync())
    }

    /// Informs the client that the request was not processed successfully.
    /// - Returns: An asynchronous update operation on an EmailMailboxUpdateMeetingResponseRequest.
    public func reportFailedAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.reportFailedAsync())
    }

    // MARK: Implementation details
}