// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Describes a connection between app and system for relaying calendar appointment information.
public final class WindowsApplicationModelAppointmentsDataProvider_AppointmentDataProviderConnection: WindowsRuntime.WinRTImport<WindowsApplicationModelAppointmentsDataProvider_AppointmentDataProviderConnectionProjection> {
    // MARK: Windows.ApplicationModel.Appointments.DataProvider.IAppointmentDataProviderConnection members

    /// Raised when the user elects to cancel a meeting.
    public func cancelMeetingRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelAppointmentsDataProvider_AppointmentDataProviderConnection?, WindowsApplicationModelAppointmentsDataProvider_AppointmentCalendarCancelMeetingRequestEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_CancelMeetingRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: cancelMeetingRequested)
    }

    public func cancelMeetingRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_CancelMeetingRequested(token)
    }

    /// Raised when the user elects to create or update a meeting.
    public func createOrUpdateAppointmentRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelAppointmentsDataProvider_AppointmentDataProviderConnection?, WindowsApplicationModelAppointmentsDataProvider_AppointmentCalendarCreateOrUpdateAppointmentRequestEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_CreateOrUpdateAppointmentRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: createOrUpdateAppointmentRequested)
    }

    public func createOrUpdateAppointmentRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_CreateOrUpdateAppointmentRequested(token)
    }

    /// Raised when the user elects to forward a meeting.
    public func forwardMeetingRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelAppointmentsDataProvider_AppointmentDataProviderConnection?, WindowsApplicationModelAppointmentsDataProvider_AppointmentCalendarForwardMeetingRequestEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_ForwardMeetingRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: forwardMeetingRequested)
    }

    public func forwardMeetingRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_ForwardMeetingRequested(token)
    }

    /// Raised when the user elects to change the time of a meeting.
    public func proposeNewTimeForMeetingRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelAppointmentsDataProvider_AppointmentDataProviderConnection?, WindowsApplicationModelAppointmentsDataProvider_AppointmentCalendarProposeNewTimeForMeetingRequestEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_ProposeNewTimeForMeetingRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: proposeNewTimeForMeetingRequested)
    }

    public func proposeNewTimeForMeetingRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_ProposeNewTimeForMeetingRequested(token)
    }

    /// Raised when the user elects to sync all calendar appointments with the server.
    public func syncRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelAppointmentsDataProvider_AppointmentDataProviderConnection?, WindowsApplicationModelAppointmentsDataProvider_AppointmentCalendarSyncManagerSyncRequestEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_SyncRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: syncRequested)
    }

    public func syncRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_SyncRequested(token)
    }

    /// Raised when the user elects to change their response to a proposed meeting.
    public func updateMeetingResponseRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelAppointmentsDataProvider_AppointmentDataProviderConnection?, WindowsApplicationModelAppointmentsDataProvider_AppointmentCalendarUpdateMeetingResponseRequestEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_UpdateMeetingResponseRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: updateMeetingResponseRequested)
    }

    public func updateMeetingResponseRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_UpdateMeetingResponseRequested(token)
    }

    /// Starts the connection for transfer of data.
    public func start() throws {
        try _interop.start()
    }

    // MARK: Implementation details
}