// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides a way for an app to respond to system provided back-navigation events.
public final class WindowsUICore_SystemNavigationManager: WindowsRuntime.WinRTImport<WindowsUICore_SystemNavigationManagerProjection> {
    // MARK: Windows.UI.Core.ISystemNavigationManager members

    /// Occurs when the user invokes the system provided button, gesture, or voice command for back-navigation.
    public func backRequested(adding handler: WindowsFoundation_EventHandler<WindowsUICore_BackRequestedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_BackRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: backRequested)
    }

    public func backRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_BackRequested(token)
    }

    // MARK: Windows.UI.Core.ISystemNavigationManager2 members

    /// Gets or sets a value that indicates whether a back button is shown in the system UI.
    /// - Returns: One of the enumeration values that specifies whether a back button is shown in the system UI. The default is **Collapsed**.
    public var appViewBackButtonVisibility: WindowsUICore_AppViewBackButtonVisibility {
        get throws {
            try _isystemNavigationManager2.get_AppViewBackButtonVisibility()
        }
    }

    /// Gets or sets a value that indicates whether a back button is shown in the system UI.
    /// - Returns: One of the enumeration values that specifies whether a back button is shown in the system UI. The default is **Collapsed**.
    public func appViewBackButtonVisibility(_ value: WindowsUICore_AppViewBackButtonVisibility) throws {
        try _isystemNavigationManager2.put_AppViewBackButtonVisibility(value)
    }

    // MARK: Windows.UI.Core.ISystemNavigationManagerStatics members

    /// Returns the SystemNavigationManager object associated with the current window.
    /// - Returns: The SystemNavigationManager object associated with the current window.
    public static func getForCurrentView() throws -> WindowsUICore_SystemNavigationManager {
        try COM.NullResult.unwrap(_isystemNavigationManagerStatics.getForCurrentView())
    }

    // MARK: Implementation details

    private var _isystemNavigationManager2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUICore_ISystemNavigationManager2>? = nil

    internal var _isystemNavigationManager2: COM.COMInterop<CWinRT.SWRT_WindowsUICore_ISystemNavigationManager2> {
        get throws {
            try _isystemNavigationManager2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUICore_ISystemNavigationManager2.iid).cast(to: CWinRT.SWRT_WindowsUICore_ISystemNavigationManager2.self)
            }
        }
    }

    deinit {
        _isystemNavigationManager2_storage?.release()
    }

    private static var _isystemNavigationManagerStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUICore_ISystemNavigationManagerStatics>? = nil

    internal static var _isystemNavigationManagerStatics: COM.COMInterop<CWinRT.SWRT_WindowsUICore_ISystemNavigationManagerStatics> {
        get throws {
            try _isystemNavigationManagerStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Core.SystemNavigationManager", id: CWinRT.SWRT_WindowsUICore_ISystemNavigationManagerStatics.iid)
            }
        }
    }
}