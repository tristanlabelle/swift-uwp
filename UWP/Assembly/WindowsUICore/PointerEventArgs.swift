// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Contains the arguments returned by the last pointer event.
public final class WindowsUICore_PointerEventArgs: WindowsRuntime.WinRTImport<WindowsUICore_PointerEventArgsProjection>, WindowsUICore_ICoreWindowEventArgsProtocol {
    // MARK: Windows.UI.Core.IPointerEventArgs members

    /// Gets the pointer data of the last pointer event.
    /// - Returns: Information about the state and screen position of the pointer.
    public var currentPoint: WindowsUIInput_PointerPoint {
        get throws {
            try COM.NullResult.unwrap(_interop.get_CurrentPoint())
        }
    }

    /// Gets the keyboard key or keys used to modify the pointer input, such as the "Ctrl" key when pressed in conjunction with another key, as in Ctrl+C.
    /// - Returns: The active key modifiers.
    public var keyModifiers: WindowsSystem_VirtualKeyModifiers {
        get throws {
            try _interop.get_KeyModifiers()
        }
    }

    /// Retrieves the pointer data for up to the last 64 pointer locations since the last pointer event.
    /// - Returns: The data for each pointer.
    public func getIntermediatePoints() throws -> WindowsFoundationCollections_IVector<WindowsUIInput_PointerPoint?> {
        try COM.NullResult.unwrap(_interop.getIntermediatePoints())
    }

    // MARK: Windows.UI.Core.ICoreWindowEventArgs members

    /// Gets or sets whether the pointer event was handled.
    /// - Returns: True if the pointer event has been handled by the appropriate delegate; false if it has not.
    public var handled: Swift.Bool {
        get throws {
            try _icoreWindowEventArgs.get_Handled()
        }
    }

    /// Gets or sets whether the pointer event was handled.
    /// - Returns: True if the pointer event has been handled by the appropriate delegate; false if it has not.
    public func handled(_ value: Swift.Bool) throws {
        try _icoreWindowEventArgs.put_Handled(value)
    }

    // MARK: Implementation details

    private var _icoreWindowEventArgs_storage: COM.COMInterop<CWinRT.SWRT_WindowsUICore_ICoreWindowEventArgs>? = nil

    internal var _icoreWindowEventArgs: COM.COMInterop<CWinRT.SWRT_WindowsUICore_ICoreWindowEventArgs> {
        get throws {
            try _icoreWindowEventArgs_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUICore_ICoreWindowEventArgs.iid).cast(to: CWinRT.SWRT_WindowsUICore_ICoreWindowEventArgs.self)
            }
        }
    }

    deinit {
        _icoreWindowEventArgs_storage?.release()
    }
}