// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Contains the arguments returned by a virtual key event.
public final class WindowsUICore_KeyEventArgs: WindowsRuntime.WinRTImport<WindowsUICore_KeyEventArgsProjection>, WindowsUICore_ICoreWindowEventArgsProtocol {
    // MARK: Windows.UI.Core.IKeyEventArgs members

    /// Gets the status of a key at the time the event is fired.
    /// - Returns: The status of the key.
    public var keyStatus: WindowsUICore_CorePhysicalKeyStatus {
        get throws {
            try _interop.get_KeyStatus()
        }
    }

    /// Gets the virtual key that maps to the key that was pressed.
    /// - Returns: The virtual key value.
    public var virtualKey: WindowsSystem_VirtualKey {
        get throws {
            try _interop.get_VirtualKey()
        }
    }

    // MARK: Windows.UI.Core.ICoreWindowEventArgs members

    /// Gets or sets whether the key press event was handled.
    /// - Returns: True if the key press event has been handled by the appropriate delegate; false if it has not.
    public var handled: Swift.Bool {
        get throws {
            try _icoreWindowEventArgs.get_Handled()
        }
    }

    /// Gets or sets whether the key press event was handled.
    /// - Returns: True if the key press event has been handled by the appropriate delegate; false if it has not.
    public func handled(_ value: Swift.Bool) throws {
        try _icoreWindowEventArgs.put_Handled(value)
    }

    // MARK: Windows.UI.Core.IKeyEventArgs2 members

    /// Gets a unique ID for the input device that generated this key event.
    /// - Returns: A unique identifier for the input device associated with the key event, or an empty string. The same device can be assigned a different ID each time it is connected.
    public var deviceId: Swift.String {
        get throws {
            try _ikeyEventArgs2.get_DeviceId()
        }
    }

    // MARK: Implementation details

    private var _icoreWindowEventArgs_storage: COM.COMInterop<CWinRT.SWRT_WindowsUICore_ICoreWindowEventArgs>? = nil

    internal var _icoreWindowEventArgs: COM.COMInterop<CWinRT.SWRT_WindowsUICore_ICoreWindowEventArgs> {
        get throws {
            try _icoreWindowEventArgs_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUICore_ICoreWindowEventArgs.iid).cast(to: CWinRT.SWRT_WindowsUICore_ICoreWindowEventArgs.self)
            }
        }
    }

    private var _ikeyEventArgs2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUICore_IKeyEventArgs2>? = nil

    internal var _ikeyEventArgs2: COM.COMInterop<CWinRT.SWRT_WindowsUICore_IKeyEventArgs2> {
        get throws {
            try _ikeyEventArgs2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUICore_IKeyEventArgs2.iid).cast(to: CWinRT.SWRT_WindowsUICore_IKeyEventArgs2.self)
            }
        }
    }

    deinit {
        _icoreWindowEventArgs_storage?.release()
        _ikeyEventArgs2_storage?.release()
    }
}