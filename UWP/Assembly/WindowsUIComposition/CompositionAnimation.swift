// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the base animation class.
open class WindowsUIComposition_CompositionAnimation: WindowsRuntime.WinRTComposableClass, WindowsUIComposition_ICompositionAnimationBaseProtocol {
    // MARK: Windows.UI.Composition.ICompositionAnimation members

    /// Clears all of the parameters of the animation.
    public func clearAllParameters() throws {
        try _icompositionAnimation.clearAllParameters()
    }

    /// Clears a parameter from the animation.
    /// - Parameter key: The parameter to clear.
    public func clearParameter(_ key: Swift.String) throws {
        try _icompositionAnimation.clearParameter(key)
    }

    /// Sets a Color value parameter for use with an ExpressionAnimation or an expression keyframe.
    /// - Parameter key: The name of the parameter to set.
    /// - Parameter value: The Color value.
    public func setColorParameter(_ key: Swift.String, _ value: WindowsUI_Color) throws {
        try _icompositionAnimation.setColorParameter(key, value)
    }

    /// Sets a Matrix3x2 value parameter for use with an ExpressionAnimation or an expression keyframe.
    /// - Parameter key: The name of the parameter to set.
    /// - Parameter value: The Matrix3x2 value.
    public func setMatrix3x2Parameter(_ key: Swift.String, _ value: WindowsFoundationNumerics_Matrix3x2) throws {
        try _icompositionAnimation.setMatrix3x2Parameter(key, value)
    }

    /// Sets a Matrix4x4 value parameter for use with an ExpressionAnimation or an expression keyframe.
    /// - Parameter key: The name of the parameter to set.
    /// - Parameter value: The Matrix4x4 value.
    public func setMatrix4x4Parameter(_ key: Swift.String, _ value: WindowsFoundationNumerics_Matrix4x4) throws {
        try _icompositionAnimation.setMatrix4x4Parameter(key, value)
    }

    /// Sets a Quaternion value for use with an ExpressionAnimation or an expression keyframe.
    /// - Parameter key: The name of the parameter to set.
    /// - Parameter value: The quaternion value.
    public func setQuaternionParameter(_ key: Swift.String, _ value: WindowsFoundationNumerics_Quaternion) throws {
        try _icompositionAnimation.setQuaternionParameter(key, value)
    }

    /// Sets a reference to a Composition object for use with an ExpressionAnimation or an expression keyframe.
    /// - Parameter key: The name of the parameter to set. The name can be used to reference the parameter in the ExpressionAnimation.
    /// - Parameter compositionObject: The CompositionObject value.
    public func setReferenceParameter(_ key: Swift.String, _ compositionObject: WindowsUIComposition_CompositionObject?) throws {
        try _icompositionAnimation.setReferenceParameter(key, compositionObject)
    }

    /// Sets a Scalar value parameter for use with an ExpressionAnimation or an expression keyframe.
    /// - Parameter key: The name of the parameter to set.
    /// - Parameter value: The Single value.
    public func setScalarParameter(_ key: Swift.String, _ value: Swift.Float) throws {
        try _icompositionAnimation.setScalarParameter(key, value)
    }

    /// Sets a Vector2 value parameter for use with an ExpressionAnimation or an expression keyframe.
    /// - Parameter key: The name of the parameter to set.
    /// - Parameter value: The Vector2 value.
    public func setVector2Parameter(_ key: Swift.String, _ value: WindowsFoundationNumerics_Vector2) throws {
        try _icompositionAnimation.setVector2Parameter(key, value)
    }

    /// Sets a Vector3 value parameter for use with an ExpressionAnimation or an expression keyframe.
    /// - Parameter key: The name of the parameter to set.
    /// - Parameter value: The Vector3 value.
    public func setVector3Parameter(_ key: Swift.String, _ value: WindowsFoundationNumerics_Vector3) throws {
        try _icompositionAnimation.setVector3Parameter(key, value)
    }

    /// Sets a Vector4 value parameter for use with an ExpressionAnimation or an expression keyframe.
    /// - Parameter key: The name of the parameter.
    /// - Parameter value: The Vector4 value.
    public func setVector4Parameter(_ key: Swift.String, _ value: WindowsFoundationNumerics_Vector4) throws {
        try _icompositionAnimation.setVector4Parameter(key, value)
    }

    // MARK: Windows.UI.Composition.ICompositionAnimation2 members

    /// The target of the animation.
    /// - Returns: The target of the animation.
    public var target: Swift.String {
        get throws {
            try _icompositionAnimation2.get_Target()
        }
    }

    /// The target of the animation.
    /// - Returns: The target of the animation.
    public func target(_ value: Swift.String) throws {
        try _icompositionAnimation2.put_Target(value)
    }

    /// Sets a boolean value parameter for use with an ExpressionAnimation or an expression keyframe.
    /// - Parameter key: The name of the parameter to set.
    /// - Parameter value: The boolean value.
    public func setBooleanParameter(_ key: Swift.String, _ value: Swift.Bool) throws {
        try _icompositionAnimation2.setBooleanParameter(key, value)
    }

    // MARK: Windows.UI.Composition.ICompositionAnimation3 members

    /// Gets the initial values for the animation.
    /// - Returns: The initial values for the animation.
    public var initialValueExpressions: WindowsUIComposition_InitialValueExpressionCollection {
        get throws {
            try COM.NullResult.unwrap(_icompositionAnimation3.get_InitialValueExpressions())
        }
    }

    // MARK: Windows.UI.Composition.ICompositionAnimation4 members

    /// Sets an IAnimationObject value parameter for use with an ExpressionAnimation or an expression keyframe.
    /// - Parameter parameterName: The name of the parameter to set.
    /// - Parameter source: The source object.
    public func setExpressionReferenceParameter(_ parameterName: Swift.String, _ source: WindowsUIComposition_IAnimationObject?) throws {
        try _icompositionAnimation4.setExpressionReferenceParameter(parameterName, source)
    }

    // MARK: Implementation details

    private var _icompositionAnimation_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIComposition_ICompositionAnimation>? = nil

    internal var _icompositionAnimation: COM.COMInterop<CWinRT.SWRT_WindowsUIComposition_ICompositionAnimation> {
        get throws {
            try _icompositionAnimation_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIComposition_ICompositionAnimation.iid).cast(to: CWinRT.SWRT_WindowsUIComposition_ICompositionAnimation.self)
            }
        }
    }

    private var _icompositionAnimation2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIComposition_ICompositionAnimation2>? = nil

    internal var _icompositionAnimation2: COM.COMInterop<CWinRT.SWRT_WindowsUIComposition_ICompositionAnimation2> {
        get throws {
            try _icompositionAnimation2_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIComposition_ICompositionAnimation2.iid).cast(to: CWinRT.SWRT_WindowsUIComposition_ICompositionAnimation2.self)
            }
        }
    }

    private var _icompositionAnimation3_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIComposition_ICompositionAnimation3>? = nil

    internal var _icompositionAnimation3: COM.COMInterop<CWinRT.SWRT_WindowsUIComposition_ICompositionAnimation3> {
        get throws {
            try _icompositionAnimation3_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIComposition_ICompositionAnimation3.iid).cast(to: CWinRT.SWRT_WindowsUIComposition_ICompositionAnimation3.self)
            }
        }
    }

    private var _icompositionAnimation4_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIComposition_ICompositionAnimation4>? = nil

    internal var _icompositionAnimation4: COM.COMInterop<CWinRT.SWRT_WindowsUIComposition_ICompositionAnimation4> {
        get throws {
            try _icompositionAnimation4_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIComposition_ICompositionAnimation4.iid).cast(to: CWinRT.SWRT_WindowsUIComposition_ICompositionAnimation4.self)
            }
        }
    }

    private var _icompositionAnimationBase_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIComposition_ICompositionAnimationBase>? = nil

    internal var _icompositionAnimationBase: COM.COMInterop<CWinRT.SWRT_WindowsUIComposition_ICompositionAnimationBase> {
        get throws {
            try _icompositionAnimationBase_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIComposition_ICompositionAnimationBase.iid).cast(to: CWinRT.SWRT_WindowsUIComposition_ICompositionAnimationBase.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIComposition_ICompositionAnimation>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _icompositionAnimation_storage?.release()
        _icompositionAnimation2_storage?.release()
        _icompositionAnimation3_storage?.release()
        _icompositionAnimation4_storage?.release()
        _icompositionAnimationBase_storage?.release()
    }

    private static var _icompositionAnimationFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIComposition_ICompositionAnimationFactory>? = nil

    internal static var _icompositionAnimationFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIComposition_ICompositionAnimationFactory> {
        get throws {
            try _icompositionAnimationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Composition.CompositionAnimation", id: CWinRT.SWRT_WindowsUIComposition_ICompositionAnimationFactory.iid)
            }
        }
    }
}