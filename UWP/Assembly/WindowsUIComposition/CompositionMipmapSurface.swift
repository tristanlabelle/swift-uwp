// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a drawing surface for mipmap textures.
public final class WindowsUIComposition_CompositionMipmapSurface: WindowsRuntime.WinRTImport<WindowsUIComposition_CompositionMipmapSurfaceProjection>, WindowsUIComposition_ICompositionSurfaceProtocol {
    // MARK: Windows.UI.Composition.ICompositionMipmapSurface members

    /// Gets the alpha mode of the mipmap surface.
    /// - Returns: The alpha mode of the mipmap surface.
    public var alphaMode: WindowsGraphicsDirectX_DirectXAlphaMode {
        get throws {
            try _interop.get_AlphaMode()
        }
    }

    /// Gets the number of texture levels in the mipmap.
    /// - Returns: The number of texture levels in the mipmap.
    public var levelCount: Swift.UInt32 {
        get throws {
            try _interop.get_LevelCount()
        }
    }

    /// Gets the pixel format of the mipmap surface.
    /// - Returns: The pixel format of the mipmap surface.
    public var pixelFormat: WindowsGraphicsDirectX_DirectXPixelFormat {
        get throws {
            try _interop.get_PixelFormat()
        }
    }

    /// Gets the size of the mipmap surface.
    /// - Returns: The size of the mipmap surface.
    public var sizeInt32: WindowsGraphics_SizeInt32 {
        get throws {
            try _interop.get_SizeInt32()
        }
    }

    /// Retrieves the texture at the specified level of the mipmap.
    /// - Parameter level: The level from which to retrieve the texture.
    /// - Returns: The texture at the specified level of the mipmap.
    public func getDrawingSurfaceForLevel(_ level: Swift.UInt32) throws -> WindowsUIComposition_CompositionDrawingSurface {
        try COM.NullResult.unwrap(_interop.getDrawingSurfaceForLevel(level))
    }

    // MARK: Implementation details

    private var _icompositionSurface_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIComposition_ICompositionSurface>? = nil

    internal var _icompositionSurface: COM.COMInterop<CWinRT.SWRT_WindowsUIComposition_ICompositionSurface> {
        get throws {
            try _icompositionSurface_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIComposition_ICompositionSurface.iid).cast(to: CWinRT.SWRT_WindowsUIComposition_ICompositionSurface.self)
            }
        }
    }

    deinit {
        _icompositionSurface_storage?.release()
    }
}