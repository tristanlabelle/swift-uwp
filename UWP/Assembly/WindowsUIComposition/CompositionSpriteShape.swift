// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// A CompositionShape that draws Stroked and Filled CompositionGeometry.
public final class WindowsUIComposition_CompositionSpriteShape: WindowsRuntime.WinRTImport<WindowsUIComposition_CompositionSpriteShapeProjection> {
    // MARK: Windows.UI.Composition.ICompositionSpriteShape members

    /// Gets or sets the brush that paints the interior area of the shape.
    /// - Returns: A brush that paints/fills the shape interior.
    public var fillBrush: WindowsUIComposition_CompositionBrush {
        get throws {
            try COM.NullResult.unwrap(_interop.get_FillBrush())
        }
    }

    /// Gets or sets the brush that paints the interior area of the shape.
    /// - Returns: A brush that paints/fills the shape interior.
    public func fillBrush(_ value: WindowsUIComposition_CompositionBrush?) throws {
        try _interop.put_FillBrush(value)
    }

    /// Gets or sets the geometry that defines this shape.
    /// - Returns: The geometry that defines this shape.
    public var geometry: WindowsUIComposition_CompositionGeometry {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Geometry())
        }
    }

    /// Gets or sets the geometry that defines this shape.
    /// - Returns: The geometry that defines this shape.
    public func geometry(_ value: WindowsUIComposition_CompositionGeometry?) throws {
        try _interop.put_Geometry(value)
    }

    /// Gets or sets a value that specifies whether the shape's outline scales.
    /// - Returns: **true** if the shape's outline does not scale; otherwise, **false**.
    public var isStrokeNonScaling: Swift.Bool {
        get throws {
            try _interop.get_IsStrokeNonScaling()
        }
    }

    /// Gets or sets a value that specifies whether the shape's outline scales.
    /// - Returns: **true** if the shape's outline does not scale; otherwise, **false**.
    public func isStrokeNonScaling(_ value: Swift.Bool) throws {
        try _interop.put_IsStrokeNonScaling(value)
    }

    /// Gets or sets the brush that paints the outline of the shape.
    /// - Returns: A brush that paints the shape outline.
    public var strokeBrush: WindowsUIComposition_CompositionBrush {
        get throws {
            try COM.NullResult.unwrap(_interop.get_StrokeBrush())
        }
    }

    /// Gets or sets the brush that paints the outline of the shape.
    /// - Returns: A brush that paints the shape outline.
    public func strokeBrush(_ value: WindowsUIComposition_CompositionBrush?) throws {
        try _interop.put_StrokeBrush(value)
    }

    /// Gets the collection of values that indicates the pattern of dashes and gaps used to outline shapes.
    /// - Returns: The collection of values that indicates the pattern of dashes and gaps used to outline shapes.
    public var strokeDashArray: WindowsUIComposition_CompositionStrokeDashArray {
        get throws {
            try COM.NullResult.unwrap(_interop.get_StrokeDashArray())
        }
    }

    /// Gets or sets a CompositionStrokeCap enumeration value that specifies how the ends of a dash are drawn.
    /// - Returns: An enumeration value that specifies how the ends of a dash are drawn. The default is **Flat**.
    public var strokeDashCap: WindowsUIComposition_CompositionStrokeCap {
        get throws {
            try _interop.get_StrokeDashCap()
        }
    }

    /// Gets or sets a CompositionStrokeCap enumeration value that specifies how the ends of a dash are drawn.
    /// - Returns: An enumeration value that specifies how the ends of a dash are drawn. The default is **Flat**.
    public func strokeDashCap(_ value: WindowsUIComposition_CompositionStrokeCap) throws {
        try _interop.put_StrokeDashCap(value)
    }

    /// Gets or sets a value that specifies the distance within the dash pattern where a dash begins.
    /// - Returns: A value that represents the distance within the dash pattern where a dash begins. The default is 0.
    public var strokeDashOffset: Swift.Float {
        get throws {
            try _interop.get_StrokeDashOffset()
        }
    }

    /// Gets or sets a value that specifies the distance within the dash pattern where a dash begins.
    /// - Returns: A value that represents the distance within the dash pattern where a dash begins. The default is 0.
    public func strokeDashOffset(_ value: Swift.Float) throws {
        try _interop.put_StrokeDashOffset(value)
    }

    /// Gets or sets a CompositionStrokeCap enumeration value that specifies how the end of a line is drawn.
    /// - Returns: An enumeration value that specifies how the end of a line is drawn. The default is **Flat**.
    public var strokeEndCap: WindowsUIComposition_CompositionStrokeCap {
        get throws {
            try _interop.get_StrokeEndCap()
        }
    }

    /// Gets or sets a CompositionStrokeCap enumeration value that specifies how the end of a line is drawn.
    /// - Returns: An enumeration value that specifies how the end of a line is drawn. The default is **Flat**.
    public func strokeEndCap(_ value: WindowsUIComposition_CompositionStrokeCap) throws {
        try _interop.put_StrokeEndCap(value)
    }

    /// Gets or sets a CompositionStrokeLineJoin enumeration value that specifies the type of join used at the vertices of a shape.
    /// - Returns: An enumeration value that specifies  the type of join used at the vertices of a shape. The default is **Miter**.
    public var strokeLineJoin: WindowsUIComposition_CompositionStrokeLineJoin {
        get throws {
            try _interop.get_StrokeLineJoin()
        }
    }

    /// Gets or sets a CompositionStrokeLineJoin enumeration value that specifies the type of join used at the vertices of a shape.
    /// - Returns: An enumeration value that specifies  the type of join used at the vertices of a shape. The default is **Miter**.
    public func strokeLineJoin(_ value: WindowsUIComposition_CompositionStrokeLineJoin) throws {
        try _interop.put_StrokeLineJoin(value)
    }

    /// Gets or sets a limit on the ratio of the miter length to half the StrokeThickness of a shape element.
    /// - Returns: The limit on the ratio of the miter length to the StrokeThickness of a shape element. This value is always a positive number that is greater than or equal to 1.
    public var strokeMiterLimit: Swift.Float {
        get throws {
            try _interop.get_StrokeMiterLimit()
        }
    }

    /// Gets or sets a limit on the ratio of the miter length to half the StrokeThickness of a shape element.
    /// - Returns: The limit on the ratio of the miter length to the StrokeThickness of a shape element. This value is always a positive number that is greater than or equal to 1.
    public func strokeMiterLimit(_ value: Swift.Float) throws {
        try _interop.put_StrokeMiterLimit(value)
    }

    /// Gets or sets a CompositionStrokeCap enumeration value that specifies how the start of a line is drawn.
    /// - Returns: An enumeration value that specifies how the start of a line is drawn. The default is **Flat**.
    public var strokeStartCap: WindowsUIComposition_CompositionStrokeCap {
        get throws {
            try _interop.get_StrokeStartCap()
        }
    }

    /// Gets or sets a CompositionStrokeCap enumeration value that specifies how the start of a line is drawn.
    /// - Returns: An enumeration value that specifies how the start of a line is drawn. The default is **Flat**.
    public func strokeStartCap(_ value: WindowsUIComposition_CompositionStrokeCap) throws {
        try _interop.put_StrokeStartCap(value)
    }

    /// Gets or sets the width of the shape outline.
    /// - Returns: The width of the shape outline, in pixels. The default value is 0.
    public var strokeThickness: Swift.Float {
        get throws {
            try _interop.get_StrokeThickness()
        }
    }

    /// Gets or sets the width of the shape outline.
    /// - Returns: The width of the shape outline, in pixels. The default value is 0.
    public func strokeThickness(_ value: Swift.Float) throws {
        try _interop.put_StrokeThickness(value)
    }

    // MARK: Implementation details
}