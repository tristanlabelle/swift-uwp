// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a connection to the endpoint for an app service. App services enable app-to-app communication by allowing you to provide services from your Universal Windows app to other Universal Windows app.
public final class WindowsApplicationModelAppService_AppServiceConnection: WindowsRuntime.WinRTImport<WindowsApplicationModelAppService_AppServiceConnectionProjection>, WindowsFoundation_IClosableProtocol {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsApplicationModelAppService_AppServiceConnectionProjection.self))
    }

    // MARK: Windows.ApplicationModel.AppService.IAppServiceConnection members

    /// Gets or sets the name of the app service to which you want to connect.
    /// - Returns: The name of the app service to which you want to connect.
    public var appServiceName: Swift.String {
        get throws {
            try _interop.get_AppServiceName()
        }
    }

    /// Gets or sets the name of the app service to which you want to connect.
    /// - Returns: The name of the app service to which you want to connect.
    public func appServiceName(_ value: Swift.String) throws {
        try _interop.put_AppServiceName(value)
    }

    /// Gets or sets the package family name for the package that contains the endpoint for the app service.
    /// - Returns: The package family name for the package that contains the endpoint for the app service.
    public var packageFamilyName: Swift.String {
        get throws {
            try _interop.get_PackageFamilyName()
        }
    }

    /// Gets or sets the package family name for the package that contains the endpoint for the app service.
    /// - Returns: The package family name for the package that contains the endpoint for the app service.
    public func packageFamilyName(_ value: Swift.String) throws {
        try _interop.put_PackageFamilyName(value)
    }

    /// Occurs when a message arrives from the other endpoint of the app service connection.
    public func requestReceived(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelAppService_AppServiceConnection?, WindowsApplicationModelAppService_AppServiceRequestReceivedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_RequestReceived(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: requestReceived)
    }

    public func requestReceived(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_RequestReceived(token)
    }

    /// Occurs when the other endpoint closes the connection to the app service.
    public func serviceClosed(adding handler: WindowsFoundation_TypedEventHandler<WindowsApplicationModelAppService_AppServiceConnection?, WindowsApplicationModelAppService_AppServiceClosedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_ServiceClosed(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: serviceClosed)
    }

    public func serviceClosed(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_ServiceClosed(token)
    }

    /// Opens a connection to the endpoint for the app service.
    /// - Returns: An asynchronous operation to open a connection to the endpoint for the app service.
    public func openAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelAppService_AppServiceConnectionStatus> {
        try COM.NullResult.unwrap(_interop.openAsync())
    }

    /// Sends a message to the other endpoint of the app service connection.
    /// - Parameter message: The message that you want to send.
    /// - Returns: An asynchronous operation to send the message that optionally returns a response message when complete.
    public func sendMessageAsync(_ message: WindowsFoundationCollections_ValueSet?) throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelAppService_AppServiceResponse?> {
        try COM.NullResult.unwrap(_interop.sendMessageAsync(message))
    }

    // MARK: Windows.ApplicationModel.AppService.IAppServiceConnection2 members

    /// Gets/sets the user context. This property returns **null** if the caller did not specify a user.
    /// - Returns: The user of the app service.
    public var user: WindowsSystem_User {
        get throws {
            try COM.NullResult.unwrap(_iappServiceConnection2.get_User())
        }
    }

    /// Gets/sets the user context. This property returns **null** if the caller did not specify a user.
    /// - Returns: The user of the app service.
    public func user(_ value: WindowsSystem_User?) throws {
        try _iappServiceConnection2.put_User(value)
    }

    /// Opens a connection to the endpoint on another device for the app service.
    /// - Parameter remoteSystemConnectionRequest: Specifies the connection preferences for the AppServiceConnection, such as transport preferences (cloud/proximal/any) as well as the target System.RemoteSystems object.
    /// - Returns: An asynchronous operation to open a connection to the endpoint for the app service on another device.
    public func openRemoteAsync(_ remoteSystemConnectionRequest: WindowsSystemRemoteSystems_RemoteSystemConnectionRequest?) throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelAppService_AppServiceConnectionStatus> {
        try COM.NullResult.unwrap(_iappServiceConnection2.openRemoteAsync(remoteSystemConnectionRequest))
    }

    // MARK: Windows.Foundation.IClosable members

    /// Closes the connection to the app service.
    public func close() throws {
        try _iclosable.close()
    }

    // MARK: Windows.ApplicationModel.AppService.IAppServiceConnectionStatics members

    /// Opens an app service connection, sends a single message, waits for a single response, and then closes the connection.
    /// - Parameter connection: The app service to connect to.
    /// - Parameter connectionRequest: Specifies the connection preferences for the AppServiceConnection, such as transport preferences (cloud/proximal/any) as well as the target System.RemoteSystems object.
    /// - Parameter message: The message that you want to send.
    /// - Returns: An asynchronous operation to send the message that optionally returns a response message when complete.
    public static func sendStatelessMessageAsync(_ connection: WindowsApplicationModelAppService_AppServiceConnection?, _ connectionRequest: WindowsSystemRemoteSystems_RemoteSystemConnectionRequest?, _ message: WindowsFoundationCollections_ValueSet?) throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelAppService_StatelessAppServiceResponse?> {
        try COM.NullResult.unwrap(_iappServiceConnectionStatics.sendStatelessMessageAsync(connection, connectionRequest, message))
    }

    // MARK: Implementation details

    private var _iappServiceConnection2_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelAppService_IAppServiceConnection2>? = nil

    internal var _iappServiceConnection2: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelAppService_IAppServiceConnection2> {
        get throws {
            try _iappServiceConnection2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelAppService_IAppServiceConnection2.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelAppService_IAppServiceConnection2.self)
            }
        }
    }

    private var _iclosable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable>? = nil

    internal var _iclosable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable> {
        get throws {
            try _iclosable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IClosable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IClosable.self)
            }
        }
    }

    deinit {
        _iappServiceConnection2_storage?.release()
        _iclosable_storage?.release()
    }

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.AppService.AppServiceConnection", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _iappServiceConnectionStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelAppService_IAppServiceConnectionStatics>? = nil

    internal static var _iappServiceConnectionStatics: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelAppService_IAppServiceConnectionStatics> {
        get throws {
            try _iappServiceConnectionStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.AppService.AppServiceConnection", id: CWinRT.SWRT_WindowsApplicationModelAppService_IAppServiceConnectionStatics.iid)
            }
        }
    }
}