// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Describes the status when an app tries to send a message to an app service by calling the AppServiceConnection.SendMessageAsync method. App service providers enable app-to-app communication by providing services that other Universal Windows app can consume.
public struct WindowsApplicationModelAppService_AppServiceResponseStatus: RawRepresentable, Hashable, Codable {
    public var rawValue: Swift.Int32

    public init(rawValue: Swift.Int32 = 0) {
        self.rawValue = rawValue
    }

    /// The app service successfully received and processed the message.
    public static let success = Self()

    /// The app service failed to receive and process the message.
    public static let failure = Self(rawValue: 1)

    /// The app service exited because not enough resources were available.
    public static let resourceLimitsExceeded = Self(rawValue: 2)

    /// An unknown error occurred.
    public static let unknown = Self(rawValue: 3)

    /// The device to which the message was sent is not available.
    public static let remoteSystemUnavailable = Self(rawValue: 4)

    /// The app service failed to process the message because it is too large.
    public static let messageSizeTooLarge = Self(rawValue: 5)

    /// The operation failed due to the app failing to start.
    public static let appUnavailable = Self(rawValue: 6)

    /// The operation failed due to unsuccessful account authentication. The user must re-validate the account to continue.
    public static let authenticationError = Self(rawValue: 7)

    /// The operation failed due to lack of an internet connection.
    public static let networkNotAvailable = Self(rawValue: 8)

    /// The operation failed, as the app service needed service or capabilities disabled by some policies on the local or remote device.
    public static let disabledByPolicy = Self(rawValue: 9)

    /// The operation failed because one or more necessary cloud services were temporarily unavailable.
    public static let webServiceUnavailable = Self(rawValue: 10)
}