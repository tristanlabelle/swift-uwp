// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents details associated with the background task for the app service. App services enable app-to-app communication by allowing you to provide services from your Universal Windows app to other Universal Windows app.
public final class WindowsApplicationModelAppService_AppServiceTriggerDetails: WindowsRuntime.WinRTImport<WindowsApplicationModelAppService_AppServiceTriggerDetailsProjection> {
    // MARK: Windows.ApplicationModel.AppService.IAppServiceTriggerDetails members

    /// Gets the connection to the endpoint of the other app service.
    /// - Returns: The connection to the endpoint of the other app service.
    public var appServiceConnection: WindowsApplicationModelAppService_AppServiceConnection {
        get throws {
            try COM.NullResult.unwrap(_interop.get_AppServiceConnection())
        }
    }

    /// Gets the name of the package family for the client app that called the background task for the app service.
    /// - Returns: The name of the package family for the client app that called the background task for the app service.
    public var callerPackageFamilyName: Swift.String {
        get throws {
            try _interop.get_CallerPackageFamilyName()
        }
    }

    /// Gets the name of the app service.
    /// - Returns: The name of the app service.
    public var name: Swift.String {
        get throws {
            try _interop.get_Name()
        }
    }

    // MARK: Windows.ApplicationModel.AppService.IAppServiceTriggerDetails2 members

    /// Gets whether the client app that called the background task for the app service is on another device.
    /// - Returns: Returns **true** if the client app is calling from another device; **false** otherwise.
    public var isRemoteSystemConnection: Swift.Bool {
        get throws {
            try _iappServiceTriggerDetails2.get_IsRemoteSystemConnection()
        }
    }

    // MARK: Windows.ApplicationModel.AppService.IAppServiceTriggerDetails3 members

    /// Determines whether the caller of the app service has the specified capability.
    /// - Parameter capabilityName: The name of the capability.
    /// - Returns: **True** if it was possible to get the capabilities of the caller and the caller has the specified capability; **false** otherwise.
    public func checkCallerForCapabilityAsync(_ capabilityName: Swift.String) throws -> WindowsFoundation_IAsyncOperation<Swift.Bool> {
        try COM.NullResult.unwrap(_iappServiceTriggerDetails3.checkCallerForCapabilityAsync(capabilityName))
    }

    // MARK: Windows.ApplicationModel.AppService.IAppServiceTriggerDetails4 members

    /// A string token which can be used to connect back to caller of a remote app service via RemoteSystemConnectionRequest.CreateFromConnectionToken.
    /// - Returns: The string token.
    public var callerRemoteConnectionToken: Swift.String {
        get throws {
            try _iappServiceTriggerDetails4.get_CallerRemoteConnectionToken()
        }
    }

    // MARK: Implementation details

    private var _iappServiceTriggerDetails2_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelAppService_IAppServiceTriggerDetails2>? = nil

    internal var _iappServiceTriggerDetails2: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelAppService_IAppServiceTriggerDetails2> {
        get throws {
            try _iappServiceTriggerDetails2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelAppService_IAppServiceTriggerDetails2.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelAppService_IAppServiceTriggerDetails2.self)
            }
        }
    }

    private var _iappServiceTriggerDetails3_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelAppService_IAppServiceTriggerDetails3>? = nil

    internal var _iappServiceTriggerDetails3: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelAppService_IAppServiceTriggerDetails3> {
        get throws {
            try _iappServiceTriggerDetails3_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelAppService_IAppServiceTriggerDetails3.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelAppService_IAppServiceTriggerDetails3.self)
            }
        }
    }

    private var _iappServiceTriggerDetails4_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelAppService_IAppServiceTriggerDetails4>? = nil

    internal var _iappServiceTriggerDetails4: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelAppService_IAppServiceTriggerDetails4> {
        get throws {
            try _iappServiceTriggerDetails4_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelAppService_IAppServiceTriggerDetails4.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelAppService_IAppServiceTriggerDetails4.self)
            }
        }
    }

    deinit {
        _iappServiceTriggerDetails2_storage?.release()
        _iappServiceTriggerDetails3_storage?.release()
        _iappServiceTriggerDetails4_storage?.release()
    }
}