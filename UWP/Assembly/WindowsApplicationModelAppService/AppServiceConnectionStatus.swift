// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Describes the status for the attempt that an app makes to open a connection to an app service by calling the AppServiceConnection.OpenAsync method. App service providers enable app-to-app communication by providing services that other Universal Windows app can consume.
public struct WindowsApplicationModelAppService_AppServiceConnectionStatus: RawRepresentable, Hashable, Codable {
    public var rawValue: Swift.Int32

    public init(rawValue: Swift.Int32 = 0) {
        self.rawValue = rawValue
    }

    /// The connection to the app service was opened successfully.
    public static let success = Self()

    /// The package for the app service to which a connection was attempted is not installed on the device. Check that the package is installed before trying to open a connection to the app service.
    public static let appNotInstalled = Self(rawValue: 1)

    /// The package for the app service to which a connection was attempted is temporarily unavailable. Try to connect again later.
    public static let appUnavailable = Self(rawValue: 2)

    /// The app with the specified package family name is installed and available, but the app does not declare support for the specified app service. Check that the name of the app service and the version of the app are correct.
    public static let appServiceUnavailable = Self(rawValue: 3)

    /// An unknown error occurred.
    public static let unknown = Self(rawValue: 4)

    /// The device to which a connection was attempted is not available.
    public static let remoteSystemUnavailable = Self(rawValue: 5)

    /// The app on the remote device does not support remote connections. It needs to specify SupportsRemoteSystems="true" on the appService extension in its AppXManifest to accept remote connections.
    public static let remoteSystemNotSupportedByApp = Self(rawValue: 6)

    /// The user for your app is not authorized to connect to the service.
    public static let notAuthorized = Self(rawValue: 7)

    /// The operation failed due to unsuccessful account authentication. The user must re-validate the account to continue.
    public static let authenticationError = Self(rawValue: 8)

    /// The operation failed due to lack of an internet connection.
    public static let networkNotAvailable = Self(rawValue: 9)

    /// The operation failed, as the app service needed service or capabilities disabled by some policies on the local or remote device.
    public static let disabledByPolicy = Self(rawValue: 10)

    /// The operation failed because one or more necessary cloud services were temporarily unavailable.
    public static let webServiceUnavailable = Self(rawValue: 11)
}