// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a single wallet transaction in the transaction history.
public final class WindowsApplicationModelWallet_WalletTransaction: WindowsRuntime.WinRTImport<WindowsApplicationModelWallet_WalletTransactionProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsApplicationModelWallet_WalletTransactionProjection.self))
    }

    // MARK: Windows.ApplicationModel.Wallet.IWalletTransaction members

    /// Gets or sets the summary description (suitable for user UI) of the transaction.
    /// - Returns: The transaction description.
    public var description: Swift.String {
        get throws {
            try _interop.get_Description()
        }
    }

    /// Gets or sets the summary description (suitable for user UI) of the transaction.
    /// - Returns: The transaction description.
    public func description(_ value: Swift.String) throws {
        try _interop.put_Description(value)
    }

    /// Gets or sets the transaction amount.
    /// - Returns: The transaction amount.
    public var displayAmount: Swift.String {
        get throws {
            try _interop.get_DisplayAmount()
        }
    }

    /// Gets or sets the transaction amount.
    /// - Returns: The transaction amount.
    public func displayAmount(_ value: Swift.String) throws {
        try _interop.put_DisplayAmount(value)
    }

    /// Gets or sets a description (suitable for user UI) of the transaction location.
    /// - Returns: The text description of the transaction location.
    public var displayLocation: Swift.String {
        get throws {
            try _interop.get_DisplayLocation()
        }
    }

    /// Gets or sets a description (suitable for user UI) of the transaction location.
    /// - Returns: The text description of the transaction location.
    public func displayLocation(_ value: Swift.String) throws {
        try _interop.put_DisplayLocation(value)
    }

    /// Gets or sets whether to display the time of the transaction.
    /// - Returns: **true** if the time of the transaction should be displayed; otherwise, **false**.
    public var ignoreTimeOfDay: Swift.Bool {
        get throws {
            try _interop.get_IgnoreTimeOfDay()
        }
    }

    /// Gets or sets whether to display the time of the transaction.
    /// - Returns: **true** if the time of the transaction should be displayed; otherwise, **false**.
    public func ignoreTimeOfDay(_ value: Swift.Bool) throws {
        try _interop.put_IgnoreTimeOfDay(value)
    }

    /// Gets or sets whether to launch your app when the user taps "see more transaction history".
    /// - Returns: **true** if your app should be launched when the user taps "see more transaction history"; otherwise, **false**.
    public var isLaunchable: Swift.Bool {
        get throws {
            try _interop.get_IsLaunchable()
        }
    }

    /// Gets or sets whether to launch your app when the user taps "see more transaction history".
    /// - Returns: **true** if your app should be launched when the user taps "see more transaction history"; otherwise, **false**.
    public func isLaunchable(_ value: Swift.Bool) throws {
        try _interop.put_IsLaunchable(value)
    }

    /// Gets or sets the date and time of the transaction.
    /// - Returns: The date and time of the transaction. Can be **null** (the default), but for this particular property it's uncommon for the value to remain **null** when you're viewing an existing transaction.
    public var transactionDate: WindowsFoundation_IReference<WindowsFoundation_DateTime>? {
        get throws {
            try _interop.get_TransactionDate()
        }
    }

    /// Gets or sets the date and time of the transaction.
    /// - Returns: The date and time of the transaction. Can be **null** (the default), but for this particular property it's uncommon for the value to remain **null** when you're viewing an existing transaction.
    public func transactionDate(_ value: WindowsFoundation_IReference<WindowsFoundation_DateTime>?) throws {
        try _interop.put_TransactionDate(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Wallet.WalletTransaction", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}