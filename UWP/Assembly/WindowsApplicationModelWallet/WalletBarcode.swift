// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a bar code assigned to a wallet item.
public final class WindowsApplicationModelWallet_WalletBarcode: WindowsRuntime.WinRTImport<WindowsApplicationModelWallet_WalletBarcodeProjection> {
    // MARK: Windows.ApplicationModel.Wallet.IWalletBarcodeFactory members

    public convenience init(_ symbology: WindowsApplicationModelWallet_WalletBarcodeSymbology, _ value: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iwalletBarcodeFactory.createWalletBarcode(symbology, value)))
    }

    public convenience init(_ streamToBarcodeImage: WindowsStorageStreams_IRandomAccessStreamReference?) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iwalletBarcodeFactory.createCustomWalletBarcode(streamToBarcodeImage)))
    }

    // MARK: Windows.ApplicationModel.Wallet.IWalletBarcode members

    /// Gets the symbology used by the bar code.
    /// - Returns: The bar code's symbology.
    public var symbology: WindowsApplicationModelWallet_WalletBarcodeSymbology {
        get throws {
            try _interop.get_Symbology()
        }
    }

    /// Gets a string representation of the barcode (its message).
    /// - Returns: The string representation of the barcode, which is the data message that the barcode represents.
    public var value: Swift.String {
        get throws {
            try _interop.get_Value()
        }
    }

    /// Creates and returns a bitmap image stream for the barcode (or returns the custom image used during instantiation).
    /// - Returns: An asynchronous operation. If you use Asynchronous programming, the result type on successful completion is an IRandomAccessStreamReference instance. This can be assigned as the source for an image (with some additional code).
    public func getImageAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsStorageStreams_IRandomAccessStreamReference?> {
        try COM.NullResult.unwrap(_interop.getImageAsync())
    }

    // MARK: Implementation details

    private static var _iwalletBarcodeFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelWallet_IWalletBarcodeFactory>? = nil

    internal static var _iwalletBarcodeFactory: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelWallet_IWalletBarcodeFactory> {
        get throws {
            try _iwalletBarcodeFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Wallet.WalletBarcode", id: CWinRT.SWRT_WindowsApplicationModelWallet_IWalletBarcodeFactory.iid)
            }
        }
    }
}