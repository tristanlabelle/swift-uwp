// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents relevant location data for a wallet item. A WalletRelevantLocation object represents the individual items for the WalletItem.RelevantLocations property.
public final class WindowsApplicationModelWallet_WalletRelevantLocation: WindowsRuntime.WinRTImport<WindowsApplicationModelWallet_WalletRelevantLocationProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsApplicationModelWallet_WalletRelevantLocationProjection.self))
    }

    // MARK: Windows.ApplicationModel.Wallet.IWalletRelevantLocation members

    /// Gets or sets the message associated with a relevant location.
    /// - Returns: The message associated with a relevant location.
    public var displayMessage: Swift.String {
        get throws {
            try _interop.get_DisplayMessage()
        }
    }

    /// Gets or sets the message associated with a relevant location.
    /// - Returns: The message associated with a relevant location.
    public func displayMessage(_ value: Swift.String) throws {
        try _interop.put_DisplayMessage(value)
    }

    /// Gets or sets the basic geographic position information of the location.
    /// - Returns: The basic geographic position of the location. BasicGeoposition is a structure, so use field syntax to set the **Latitude** and **Longitude** data.
    public var position: WindowsDevicesGeolocation_BasicGeoposition {
        get throws {
            try _interop.get_Position()
        }
    }

    /// Gets or sets the basic geographic position information of the location.
    /// - Returns: The basic geographic position of the location. BasicGeoposition is a structure, so use field syntax to set the **Latitude** and **Longitude** data.
    public func position(_ value: WindowsDevicesGeolocation_BasicGeoposition) throws {
        try _interop.put_Position(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Wallet.WalletRelevantLocation", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}