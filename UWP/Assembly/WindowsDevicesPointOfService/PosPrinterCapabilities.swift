// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the capabilities of the point-of-service printer.
public final class WindowsDevicesPointOfService_PosPrinterCapabilities: WindowsRuntime.WinRTImport<WindowsDevicesPointOfService_PosPrinterCapabilitiesProjection> {
    // MARK: Windows.Devices.PointOfService.IPosPrinterCapabilities members

    /// Gets whether the point-of-service printer can map the characters that the application sends (in the character set that the ClaimedPosPrinter.CharacterSet property defines) to the character sets that the PosPrinter.SupportedCharacterSets property defines.
    /// - Returns: True if the point-of-service printer can map the characters that the application sends to the code page used by the printer. If false, the user must make sure that the Unicode characters have the low byte as the value that will be used to send to the printer.
    public var canMapCharacterSet: Swift.Bool {
        get throws {
            try _interop.get_CanMapCharacterSet()
        }
    }

    /// Gets the character set that the point-of-service printer uses by default.
    /// - Returns: The character set that the point-of-service printer uses by default.
    public var defaultCharacterSet: Swift.UInt32 {
        get throws {
            try _interop.get_DefaultCharacterSet()
        }
    }

    /// Gets whether the point-of-service printer has a sensor that detects if the printer cover is open.
    /// - Returns: True if the point-of-service printer has a sensor that detects if the printer cover is open; otherwise false.
    public var hasCoverSensor: Swift.Bool {
        get throws {
            try _interop.get_HasCoverSensor()
        }
    }

    /// Gets whether the point-of-service printer supports reporting statistics.
    /// - Returns: True if the point-of-service printer supports reporting statistics; otherwise, false.
    public var isStatisticsReportingSupported: Swift.Bool {
        get throws {
            try _interop.get_IsStatisticsReportingSupported()
        }
    }

    /// Gets whether the point-of-service printer supports updating statistics.
    /// - Returns: True if the point-of-service printer supports updating statistics; otherwise, false.
    public var isStatisticsUpdatingSupported: Swift.Bool {
        get throws {
            try _interop.get_IsStatisticsUpdatingSupported()
        }
    }

    /// Gets whether the point-of-service printer supports printer transactions.
    /// - Returns: True if the point-of-service printer supports printer transactions; otherwise false.
    public var isTransactionSupported: Swift.Bool {
        get throws {
            try _interop.get_IsTransactionSupported()
        }
    }

    /// Gets the capabilities of the journal station for the point-of-service printer.
    /// - Returns: The capabilities of the journal station for the point-of-service printer.
    public var journal: WindowsDevicesPointOfService_JournalPrinterCapabilities {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Journal())
        }
    }

    /// Gets the power reporting capabilities of the point-of-service printer.
    /// - Returns: The power reporting capabilities of the point-of-service printer, such as whether the printer can determine and report two or three different power states.
    public var powerReportingType: WindowsDevicesPointOfService_UnifiedPosPowerReportingType {
        get throws {
            try _interop.get_PowerReportingType()
        }
    }

    /// Gets the capabilities of the receipt station for the point-of-service printer.
    /// - Returns: The capabilities of the receipt station for the point-of-service printer.
    public var receipt: WindowsDevicesPointOfService_ReceiptPrinterCapabilities {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Receipt())
        }
    }

    /// Gets the capabilities of the slip station for the point-of-service printer.
    /// - Returns: The capabilities of the slip station for the point-of-service printer.
    public var slip: WindowsDevicesPointOfService_SlipPrinterCapabilities {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Slip())
        }
    }

    // MARK: Implementation details
}