// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the print options of the text that you want to print to a point-of-service printer.
public final class WindowsDevicesPointOfService_PosPrinterPrintOptions: WindowsRuntime.WinRTImport<WindowsDevicesPointOfService_PosPrinterPrintOptionsProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsDevicesPointOfService_PosPrinterPrintOptionsProjection.self))
    }

    // MARK: Windows.Devices.PointOfService.IPosPrinterPrintOptions members

    /// Gets or sets a value that indicates the alignment that the application wants to use for printing text.
    /// - Returns: The alignment that the application wants to use for printing text.
    public var alignment: WindowsDevicesPointOfService_PosPrinterAlignment {
        get throws {
            try _interop.get_Alignment()
        }
    }

    /// Gets or sets a value that indicates the alignment that the application wants to use for printing text.
    /// - Returns: The alignment that the application wants to use for printing text.
    public func alignment(_ value: WindowsDevicesPointOfService_PosPrinterAlignment) throws {
        try _interop.put_Alignment(value)
    }

    /// Gets or sets a value that indicates if the application wants to print characters in bold style.
    /// - Returns: True if the application wants to print characters in bold style; otherwise, false.
    public var bold: Swift.Bool {
        get throws {
            try _interop.get_Bold()
        }
    }

    /// Gets or sets a value that indicates if the application wants to print characters in bold style.
    /// - Returns: True if the application wants to print characters in bold style; otherwise, false.
    public func bold(_ value: Swift.Bool) throws {
        try _interop.put_Bold(value)
    }

    /// Gets or sets a numeric value that indicates the character height that the application wants to use for printing characters.
    /// - Returns: The character height that the application wants to use for printing characters. The value must be 0 or one of the supported height values of the font if the font is not scalable.
    public var characterHeight: Swift.UInt32 {
        get throws {
            try _interop.get_CharacterHeight()
        }
    }

    /// Gets or sets a numeric value that indicates the character height that the application wants to use for printing characters.
    /// - Returns: The character height that the application wants to use for printing characters. The value must be 0 or one of the supported height values of the font if the font is not scalable.
    public func characterHeight(_ value: Swift.UInt32) throws {
        try _interop.put_CharacterHeight(value)
    }

    /// Gets or sets a numeric value that indicates the character set that the application wants to use for printing characters.
    /// - Returns: The character set that the application wants to use for printing characters. The value must be 0 or one of the supported character set values of the point-of-service printer.
    public var characterSet: Swift.UInt32 {
        get throws {
            try _interop.get_CharacterSet()
        }
    }

    /// Gets or sets a numeric value that indicates the character set that the application wants to use for printing characters.
    /// - Returns: The character set that the application wants to use for printing characters. The value must be 0 or one of the supported character set values of the point-of-service printer.
    public func characterSet(_ value: Swift.UInt32) throws {
        try _interop.put_CharacterSet(value)
    }

    /// Gets or sets a value that indicates if the application wants to print characters in double-high style.
    /// - Returns: True if the application wants to print characters in double-high style; otherwise, false.
    public var doubleHigh: Swift.Bool {
        get throws {
            try _interop.get_DoubleHigh()
        }
    }

    /// Gets or sets a value that indicates if the application wants to print characters in double-high style.
    /// - Returns: True if the application wants to print characters in double-high style; otherwise, false.
    public func doubleHigh(_ value: Swift.Bool) throws {
        try _interop.put_DoubleHigh(value)
    }

    /// Gets or sets a value that indicates if the application wants to print characters in double-wide style.
    /// - Returns: True if the application wants to print characters in double-wide style; otherwise, false.
    public var doubleWide: Swift.Bool {
        get throws {
            try _interop.get_DoubleWide()
        }
    }

    /// Gets or sets a value that indicates if the application wants to print characters in double-wide style.
    /// - Returns: True if the application wants to print characters in double-wide style; otherwise, false.
    public func doubleWide(_ value: Swift.Bool) throws {
        try _interop.put_DoubleWide(value)
    }

    /// Gets or sets a value that indicates if the application wants to print characters in italic style.
    /// - Returns: True if the application wants to print characters in italic style; otherwise, false.
    public var italic: Swift.Bool {
        get throws {
            try _interop.get_Italic()
        }
    }

    /// Gets or sets a value that indicates if the application wants to print characters in italic style.
    /// - Returns: True if the application wants to print characters in italic style; otherwise, false.
    public func italic(_ value: Swift.Bool) throws {
        try _interop.put_Italic(value)
    }

    /// Gets or sets a value that indicates if the application wants to print characters in reverse-video style.
    /// - Returns: True if the application wants to print characters in reverse-video style; otherwise, false.
    public var reverseVideo: Swift.Bool {
        get throws {
            try _interop.get_ReverseVideo()
        }
    }

    /// Gets or sets a value that indicates if the application wants to print characters in reverse-video style.
    /// - Returns: True if the application wants to print characters in reverse-video style; otherwise, false.
    public func reverseVideo(_ value: Swift.Bool) throws {
        try _interop.put_ReverseVideo(value)
    }

    /// Gets or sets a value that indicates if the application wants to print characters in strikethrough style.
    /// - Returns: True if the application wants to print characters in strikethrough style; otherwise, false.
    public var strikethrough: Swift.Bool {
        get throws {
            try _interop.get_Strikethrough()
        }
    }

    /// Gets or sets a value that indicates if the application wants to print characters in strikethrough style.
    /// - Returns: True if the application wants to print characters in strikethrough style; otherwise, false.
    public func strikethrough(_ value: Swift.Bool) throws {
        try _interop.put_Strikethrough(value)
    }

    /// Gets or sets a value that indicates if the application wants to print characters in subscript style.
    /// - Returns: True if the application wants to print characters in subscript style; otherwise, false.
    public var `subscript`: Swift.Bool {
        get throws {
            try _interop.get_Subscript()
        }
    }

    /// Gets or sets a value that indicates if the application wants to print characters in subscript style.
    /// - Returns: True if the application wants to print characters in subscript style; otherwise, false.
    public func `subscript`(_ value: Swift.Bool) throws {
        try _interop.put_Subscript(value)
    }

    /// Gets or sets a value that indicates if the application wants to print characters in superscript style.
    /// - Returns: True if the application wants to print characters in superscript style; otherwise, false.
    public var superscript: Swift.Bool {
        get throws {
            try _interop.get_Superscript()
        }
    }

    /// Gets or sets a value that indicates if the application wants to print characters in superscript style.
    /// - Returns: True if the application wants to print characters in superscript style; otherwise, false.
    public func superscript(_ value: Swift.Bool) throws {
        try _interop.put_Superscript(value)
    }

    /// Gets or sets a string value that indicates the typeface that the application wants to use for printing characters.
    /// - Returns: The typeface that the application wants to use for printing characters.
    public var typeFace: Swift.String {
        get throws {
            try _interop.get_TypeFace()
        }
    }

    /// Gets or sets a string value that indicates the typeface that the application wants to use for printing characters.
    /// - Returns: The typeface that the application wants to use for printing characters.
    public func typeFace(_ value: Swift.String) throws {
        try _interop.put_TypeFace(value)
    }

    /// Gets or sets a value that indicates if the application wants to print characters in underline style.
    /// - Returns: True if the application wants to print characters in underline style; otherwise, false.
    public var underline: Swift.Bool {
        get throws {
            try _interop.get_Underline()
        }
    }

    /// Gets or sets a value that indicates if the application wants to print characters in underline style.
    /// - Returns: True if the application wants to print characters in underline style; otherwise, false.
    public func underline(_ value: Swift.Bool) throws {
        try _interop.put_Underline(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.PointOfService.PosPrinterPrintOptions", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}