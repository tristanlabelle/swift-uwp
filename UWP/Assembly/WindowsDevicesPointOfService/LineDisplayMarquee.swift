// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents an object containing properties describing and allowing control of marquee scrolling on a line display.
public final class WindowsDevicesPointOfService_LineDisplayMarquee: WindowsRuntime.WinRTImport<WindowsDevicesPointOfService_LineDisplayMarqueeProjection> {
    // MARK: Windows.Devices.PointOfService.ILineDisplayMarquee members

    /// Gets or sets the current format of the marquee.
    /// - Returns: The current format of the marquee.
    public var format: WindowsDevicesPointOfService_LineDisplayMarqueeFormat {
        get throws {
            try _interop.get_Format()
        }
    }

    /// Gets or sets the current format of the marquee.
    /// - Returns: The current format of the marquee.
    public func format(_ value: WindowsDevicesPointOfService_LineDisplayMarqueeFormat) throws {
        try _interop.put_Format(value)
    }

    /// Gets or sets the marquee repeat wait period.
    /// - Returns: The delay between finishing a marquee scroll and starting over again.
    public var repeatWaitInterval: WindowsFoundation_TimeSpan {
        get throws {
            try _interop.get_RepeatWaitInterval()
        }
    }

    /// Gets or sets the marquee repeat wait period.
    /// - Returns: The delay between finishing a marquee scroll and starting over again.
    public func repeatWaitInterval(_ value: WindowsFoundation_TimeSpan) throws {
        try _interop.put_RepeatWaitInterval(value)
    }

    /// Gets or sets the scroll wait interval.
    /// - Returns: The delay between placing or walking each character in the marquee.
    public var scrollWaitInterval: WindowsFoundation_TimeSpan {
        get throws {
            try _interop.get_ScrollWaitInterval()
        }
    }

    /// Gets or sets the scroll wait interval.
    /// - Returns: The delay between placing or walking each character in the marquee.
    public func scrollWaitInterval(_ value: WindowsFoundation_TimeSpan) throws {
        try _interop.put_ScrollWaitInterval(value)
    }

    /// Attempts to asynchronously cause the window which owns this marquee to enter Marquee Mode and start scrolling.
    /// - Parameter direction: The direction in which to start scrolling.
    /// - Returns: Returns True if the marquee successfully started scrolling; otherwise, False.
    public func tryStartScrollingAsync(_ direction: WindowsDevicesPointOfService_LineDisplayScrollDirection) throws -> WindowsFoundation_IAsyncOperation<Swift.Bool> {
        try COM.NullResult.unwrap(_interop.tryStartScrollingAsync(direction))
    }

    /// Attempts to asynchronously exit Marquee mode and/or Marquee Init mode. Format is set to None.
    /// - Returns: Returns True if the marquee was successfully stopped; otherwise, False.
    public func tryStopScrollingAsync() throws -> WindowsFoundation_IAsyncOperation<Swift.Bool> {
        try COM.NullResult.unwrap(_interop.tryStopScrollingAsync())
    }

    // MARK: Implementation details
}