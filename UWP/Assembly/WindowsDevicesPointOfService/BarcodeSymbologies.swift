// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Contains the barcode symbology.
public enum WindowsDevicesPointOfService_BarcodeSymbologies {
    // MARK: Windows.Devices.PointOfService.IBarcodeSymbologiesStatics2 members

    /// Gets the GS1DWCode barcode symbology.
    /// - Returns: The GS1DWCode barcode symbology.
    public static var gs1DWCode: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics2.get_Gs1DWCode()
        }
    }

    // MARK: Windows.Devices.PointOfService.IBarcodeSymbologiesStatics members

    /// Gets the Australia Postal barcode symbology.
    /// - Returns: The Australia Postal barcode symbology.
    public static var ausPost: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_AusPost()
        }
    }

    /// Gets the Aztec barcode symbology.
    /// - Returns: The Aztec barcode symbology.
    public static var aztec: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Aztec()
        }
    }

    /// Gets the Canada Postal barcode symbology.
    /// - Returns: The Canada Postal barcode symbology.
    public static var canPost: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_CanPost()
        }
    }

    /// Gets the Composite Component A or B barcode symbology.
    /// - Returns: The Composite Component A or B barcode symbology.
    public static var ccab: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Ccab()
        }
    }

    /// Gets the Composite Component-C barcode symbology.
    /// - Returns: The Composite Component-C barcode symbology.
    public static var ccc: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Ccc()
        }
    }

    /// Gets the China Postal barcode symbology.
    /// - Returns: The China Postal barcode symbology.
    public static var chinaPost: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_ChinaPost()
        }
    }

    /// Gets the Codabar barcode symbology.
    /// - Returns: The Codabar barcode symbology.
    public static var codabar: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Codabar()
        }
    }

    /// Gets the Codablock 128 barcode symbology.
    /// - Returns: The Codablock 128 barcode symbology.
    public static var codablock128: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Codablock128()
        }
    }

    /// Gets the Codablock A barcode symbology.
    /// - Returns: The Codablock A barcode symbology.
    public static var codablockA: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_CodablockA()
        }
    }

    /// Gets the Codablock F barcode symbology.
    /// - Returns: The Codablock F barcode symbology.
    public static var codablockF: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_CodablockF()
        }
    }

    /// Gets the Code 11 barcode symbology.
    /// - Returns: The Code 11 barcode symbology.
    public static var code11: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Code11()
        }
    }

    /// Gets the Code 128 barcode symbology.
    /// - Returns: The Code 128 barcode symbology.
    public static var code128: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Code128()
        }
    }

    /// Gets the Code 16k barcode symbology.
    /// - Returns: The Code 16k barcode symbology.
    public static var code16k: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Code16k()
        }
    }

    /// Gets the Code 32 barcode symbology.
    /// - Returns: The Code 32 barcode symbology.
    public static var code32: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Code32()
        }
    }

    /// Gets the Code 39 barcode symbology.
    /// - Returns: The Code 39 barcode symbology.
    public static var code39: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Code39()
        }
    }

    /// Gets the Code 39 Extended barcode symbology.
    /// - Returns: The Code 39 Extended barcode symbology.
    public static var code39Ex: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Code39Ex()
        }
    }

    /// Gets the Code 49 barcode symbology.
    /// - Returns: The Code 49 barcode symbology.
    public static var code49: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Code49()
        }
    }

    /// Gets the Code 93 barcode symbology.
    /// - Returns: The Code 93 barcode symbology.
    public static var code93: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Code93()
        }
    }

    /// Gets the Code 93 Extended barcode symbology.
    /// - Returns: The Code 93 Extended barcode symbology.
    public static var code93Ex: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Code93Ex()
        }
    }

    /// Gets the Data Code barcode symbology.
    /// - Returns: The Data Code barcode symbology.
    public static var dataCode: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_DataCode()
        }
    }

    /// Gets the Data Matric barcode symbology.
    /// - Returns: The Data Matrix barcode symbology.
    public static var dataMatrix: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_DataMatrix()
        }
    }

    /// Gets the Dutch Postal barcode symbology.
    /// - Returns: The Dutch Postal barcode symbology.
    public static var dutchKix: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_DutchKix()
        }
    }

    /// Gets the EAN (European Article Number) 13 barcode symbology.
    /// - Returns: The EAN 13 barcode symbology.
    public static var ean13: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Ean13()
        }
    }

    /// Gets the EAN 13 with 2 digit supplement barcode symbology.
    /// - Returns: The EAN 13 with 2 digit supplement barcode symbology.
    public static var ean13Add2: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Ean13Add2()
        }
    }

    /// Gets the EAN 13 with 5 digit supplement barcode symbology.
    /// - Returns: The EAN 13 with 5 digit supplement barcode symbology.
    public static var ean13Add5: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Ean13Add5()
        }
    }

    /// Gets the EAN 8 barcode symbology.
    /// - Returns: The EAN 8 barcode symbology.
    public static var ean8: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Ean8()
        }
    }

    /// Gets the EAN 8 with 2 digit supplement barcode symbology.
    /// - Returns: The EAN 8 with 2 digit supplement barcode symbology.
    public static var ean8Add2: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Ean8Add2()
        }
    }

    /// Gets the EAN 8 with 5 digit supplement barcode symbology.
    /// - Returns: The EAN 8 with 5 digit supplement barcode symbology.
    public static var ean8Add5: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Ean8Add5()
        }
    }

    /// Gets the EAN 99 barcode symbology.
    /// - Returns: The EAN 99 barcode symbology.
    public static var ean99: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Ean99()
        }
    }

    /// Gets the EAN 99 with 2 digit supplement barcode symbology.
    /// - Returns: The EAN 99 with 2 digit supplement barcode symbology.
    public static var ean99Add2: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Ean99Add2()
        }
    }

    /// Gets the EAN 99 with 5 digit supplement barcode symbology.
    /// - Returns: The EAN 99 with 5 digit supplementbarcode symbology.
    public static var ean99Add5: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Ean99Add5()
        }
    }

    /// Gets the EAN Velocity barcode symbology.
    /// - Returns: The EAN Velocity barcode symbology.
    public static var eanv: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Eanv()
        }
    }

    /// Gets the EAN Velocity with 2 digit supplement barcode symbology.
    /// - Returns: The EAN Velocity with 2 digit supplement barcode symbology.
    public static var eanvAdd2: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_EanvAdd2()
        }
    }

    /// Gets the EAN Velocity with 5 digit supplement barcode symbology.
    /// - Returns: The EAN Velocity with 5 digit supplement barcode symbology.
    public static var eanvAdd5: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_EanvAdd5()
        }
    }

    /// Gets the first possible OEM defined barcode symbology when the symbology type is not included in the current list.
    /// - Returns: The OEM defined barcode symbology.
    public static var extendedBase: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_ExtendedBase()
        }
    }

    /// Gets the GS1 128 shipping container barcode symbology.
    /// - Returns: The GS1 128 shipping container barcode symbology.
    public static var gs1128: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Gs1128()
        }
    }

    /// Gets the GS1 128 Coupon barcode symbology.
    /// - Returns: The GS1 128 Coupon barcode symbology.
    public static var gs1128Coupon: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Gs1128Coupon()
        }
    }

    /// Gets the GS1 Databar Omnidirectional, GS1 Databar Stacked Omnidirectional, GS1 Databar Stacked, or GS1 Databar Truncated barcode symbology.
    /// - Returns: The GS1 Databar Omnidirectional, GS1 Databar Stacked Omnidirectional, GS1 Databar Stacked, or GS1 Databar Truncated barcode symbology.
    public static var gs1DatabarType1: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Gs1DatabarType1()
        }
    }

    /// Gets the GS1 DataBar Limited or RSS Limited barcode symbology.
    /// - Returns: The GS1 DataBar Limited or RSS Limited barcode symbology.
    public static var gs1DatabarType2: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Gs1DatabarType2()
        }
    }

    /// Gets the GS1 Databar Expanded, GS1 Databar Expanded Stacked, or RSS Expanded barcode symbology.
    /// - Returns: The GS1 Databar Expanded, GS1 Databar Expanded Stacked, or RSS Expanded barcode symbology.
    public static var gs1DatabarType3: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Gs1DatabarType3()
        }
    }

    /// Gets the Han Xin barcode symbology.
    /// - Returns: The Han Xin barcode symbology.
    public static var hanXin: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_HanXin()
        }
    }

    /// Gets the InfoMail barcode symbology.
    /// - Returns: The InfoMail barcode symbology.
    public static var infoMail: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_InfoMail()
        }
    }

    /// Gets the International Standard Book Number (ISBN), also known as Bookland or Bookland EAN, barcode symbology.
    /// - Returns: The International Standard Book Number (ISBN), also known as Bookland or Bookland EAN, barcode symbology.
    public static var isbn: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Isbn()
        }
    }

    /// Gets the ISBN with 5 digit supplement barcode symbology.
    /// - Returns: The ISBN with 5 digit supplement barcode symbology.
    public static var isbnAdd5: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_IsbnAdd5()
        }
    }

    /// Gets the International Society of Blood Transfusion (ISBT) 128 barcode symbology.
    /// - Returns: The International Society of Blood Transfusion (ISBT) 128 barcode symbology.
    public static var isbt: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Isbt()
        }
    }

    /// Gets the International Standard Music Number (ISMN) barcode symbology.
    /// - Returns: The International Standard Music Number (ISMN) barcode symbology.
    public static var ismn: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Ismn()
        }
    }

    /// Gets the ISMN with 2 digit supplement barcode symbology.
    /// - Returns: The ISMN with 2 digit supplement barcode symbology.
    public static var ismnAdd2: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_IsmnAdd2()
        }
    }

    /// Gets the ISMN with 5 digit supplement barcode symbology.
    /// - Returns: The ISMN with 5 digit supplement barcode symbology.
    public static var ismnAdd5: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_IsmnAdd5()
        }
    }

    /// Gets the International Standard Serial Number (ISSN) barcode symbology.
    /// - Returns: The International Standard Serial Number (ISSN) barcode symbology.
    public static var issn: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Issn()
        }
    }

    /// Gets the ISSN with 2 digit supplement barcode symbology.
    /// - Returns: The ISMN with 2 digit supplement barcode symbology.
    public static var issnAdd2: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_IssnAdd2()
        }
    }

    /// Gets the ISSN with 5 digit supplement barcode symbology.
    /// - Returns: The ISSN with 5 digit supplement barcode symbology.
    public static var issnAdd5: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_IssnAdd5()
        }
    }

    /// Gets the Italian Post 25 barcode symbology.
    /// - Returns: The Italian Post 25 barcode symbology.
    public static var italianPost25: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_ItalianPost25()
        }
    }

    /// Gets the Italian Post 39 barcode symbology.
    /// - Returns: The Italian Post 39 barcode symbology.
    public static var italianPost39: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_ItalianPost39()
        }
    }

    /// Gets the Japan Postal barcode symbology.
    /// - Returns: The Japan Postal barcode symbology.
    public static var japanPost: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_JapanPost()
        }
    }

    /// Gets the Korea Postal barcode symbology.
    /// - Returns: The Korea Postal barcode symbology.
    public static var koreanPost: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_KoreanPost()
        }
    }

    /// Gets the MaxiCode barcode symbology.
    /// - Returns: The MaxiCode barcode symbology.
    public static var maxicode: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Maxicode()
        }
    }

    /// Gets the Magnetic Ink Character Recognition (MICR) barcode symbology.
    /// - Returns: The Magnetic Ink Character Recognition (MICR) barcode symbology.
    public static var micr: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Micr()
        }
    }

    /// Gets the Micro PDF 417 barcode symbology.
    /// - Returns: The Micro PDF 417 barcode symbology.
    public static var microPdf417: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_MicroPdf417()
        }
    }

    /// Gets the Micro QR Code barcode symbology.
    /// - Returns: The Micro QR Code barcode symbology.
    public static var microQr: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_MicroQr()
        }
    }

    /// Gets the Microsoft tag barcode symbology.
    /// - Returns: The Microsoft tag barcode symbology.
    public static var msTag: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_MsTag()
        }
    }

    /// Gets the MSI barcode symbology.
    /// - Returns: The MSI barcode symbology.
    public static var msi: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Msi()
        }
    }

    /// Gets the OCR-A barcode symbology.
    /// - Returns: The OCR-A barcode symbology.
    public static var ocrA: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_OcrA()
        }
    }

    /// Gets the OCR-B barcode symbology.
    /// - Returns: The OCR-B barcode symbology.
    public static var ocrB: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_OcrB()
        }
    }

    /// Gets the PDF 417 barcode symbology.
    /// - Returns: The PDF 417 barcode symbology.
    public static var pdf417: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Pdf417()
        }
    }

    /// Gets the Plessey barcode symbology.
    /// - Returns: The Plessey barcode symbology.
    public static var plessey: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Plessey()
        }
    }

    /// Gets the Pharma-Zentral-Nummer (Pzn) barcode symbology.
    /// - Returns: The Pharma-Zentral-Nummer (Pzn) barcode symbology.
    public static var pzn: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Pzn()
        }
    }

    /// Gets the Quick Response (QR) Code barcode symbology.
    /// - Returns: The Quick Response (QR) Code barcode symbology.
    public static var qr: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Qr()
        }
    }

    /// Gets the Serials Industry Systems Advisory Committee (SISAC) barcode symbology.
    /// - Returns: The Serials Industry Systems Advisory Committee (SISAC) barcode symbology.
    public static var sisac: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Sisac()
        }
    }

    /// Gets the Sweden Postal barcode symbology.
    /// - Returns: The Sweden Postal barcode symbology.
    public static var swedenPost: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_SwedenPost()
        }
    }

    /// Gets the Telepen barcode symbology.
    /// - Returns: The Telepen barcode symbology.
    public static var telepen: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Telepen()
        }
    }

    /// Gets the Discreet 2 of 5 barcode symbology.
    /// - Returns: The Discreet 2 of 5 barcode symbology.
    public static var tfDis: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_TfDis()
        }
    }

    /// Gets the 2 of 5 International Air Transportation Association (IATA) barcode symbology.
    /// - Returns: The 2 of 5 International Air Transportation Association (IATA) barcode symbology.
    public static var tfIata: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_TfIata()
        }
    }

    /// Gets the Industrial 2 of 5 barcode symbology.
    /// - Returns: The Industrial 2 of 5 barcode symbology.
    public static var tfInd: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_TfInd()
        }
    }

    /// Gets the Interleaved 2 of 5 barcode symbology.
    /// - Returns: The Interleaved 2 of 5 barcode symbology.
    public static var tfInt: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_TfInt()
        }
    }

    /// Gets the 2 of 5 Matrix barcode symbology.
    /// - Returns: The 2 of 5 Matrix barcode symbology.
    public static var tfMat: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_TfMat()
        }
    }

    /// Gets the Standard 2 of 5 barcode symbology.
    /// - Returns: The Standard 2 of 5 barcode symbology.
    public static var tfStd: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_TfStd()
        }
    }

    /// Gets the TLC 39 barcode symbology.
    /// - Returns: The TLC 39 barcode symbology.
    public static var tlc39: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Tlc39()
        }
    }

    /// Gets the Tri-Optic Media Storage Devices barcode symbology.
    /// - Returns: The Tri-Optic Media Storage Devices barcode symbology.
    public static var trioptic39: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Trioptic39()
        }
    }

    /// Gets the UCC/EAN 128 barcode symbology.
    /// - Returns: The UCC/EAN 128 barcode symbology.
    public static var uccEan128: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_UccEan128()
        }
    }

    /// Gets the UK Postal barcode symbology.
    /// - Returns: The UK Postal barcode symbology.
    public static var ukPost: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_UkPost()
        }
    }

    /// Unknown barcode symbology.
    /// - Returns: Unknown barcode symbology.
    public static var unknown: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Unknown()
        }
    }

    /// Gets the UPC Coupon with supplemental barcode symbology.
    /// - Returns: The UPC Coupon with supplemental barcode symbology.
    public static var upcCoupon: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_UpcCoupon()
        }
    }

    /// Gets the Universal Product Code (UPC) version A barcode symbology.
    /// - Returns: The Universal Product Code (UPC) version A barcode symbology.
    public static var upca: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Upca()
        }
    }

    /// Gets the UPC A with 2 digit supplemental barcode symbology.
    /// - Returns: The UPC A with 2 digit supplemental barcode symbology.
    public static var upcaAdd2: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_UpcaAdd2()
        }
    }

    /// Gets the UPC A with 5 digit supplement barcode symbology.
    /// - Returns: The UPC A with 5 digit supplement barcode symbology.
    public static var upcaAdd5: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_UpcaAdd5()
        }
    }

    /// Gets the Universal Product Code (UPC) version E barcode symbology.
    /// - Returns: The Universal Product Code (UPC) version E barcode symbology.
    public static var upce: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Upce()
        }
    }

    /// Gets the UPC-E with 2 digit supplemnent barcode symbology.
    /// - Returns: The UPC-E with 2 digit supplemnent barcode symbology.
    public static var upceAdd2: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_UpceAdd2()
        }
    }

    /// Gets the UPC-E with 5 digit supplement barcode symbology.
    /// - Returns: The UPC-E with 5 digit supplement barcode symbology.
    public static var upceAdd5: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_UpceAdd5()
        }
    }

    /// Gets the United States Postal Service 4-State Flat Mail Identification Code Sort (FICS) barcode symbology.
    /// - Returns: The United States Postal Service 4-State Flat Mail Identification Code Sort (FICS) barcode symbology.
    public static var us4StateFics: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_Us4StateFics()
        }
    }

    /// Gets the United States Postal Service (USPS) Intelligent Mail barcode symbology.
    /// - Returns: The United States Postal Service (USPS) Intelligent Mail barcode symbology.
    public static var usIntelligent: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_UsIntelligent()
        }
    }

    /// Gets the United States Postal Service (USPS) Intelligent Mail Package barcode symbology.
    /// - Returns: The United States Postal Service (USPS) Intelligent Mail Package barcode symbology.
    public static var usIntelligentPkg: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_UsIntelligentPkg()
        }
    }

    /// Gets the United States Postal Service PLANET barcode symbology.
    /// - Returns: The United States Postal Service PLANET barcode symbology.
    public static var usPlanet: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_UsPlanet()
        }
    }

    /// Gets the United States Postal Numeric Encoding Technique (POSTNET) barcode symbology.
    /// - Returns: The United States Postal Numeric Encoding Technique (POSTNET) barcode symbology.
    public static var usPostNet: Swift.UInt32 {
        get throws {
            try _ibarcodeSymbologiesStatics.get_UsPostNet()
        }
    }

    /// Returns the barcode symbology type as a string.
    /// - Parameter scanDataType: The barcode symbology type.
    /// - Returns: The barcode symbology type as a string.
    public static func getName(_ scanDataType: Swift.UInt32) throws -> Swift.String {
        try _ibarcodeSymbologiesStatics.getName(scanDataType)
    }

    // MARK: Implementation details

    private static var _ibarcodeSymbologiesStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesPointOfService_IBarcodeSymbologiesStatics2>? = nil

    internal static var _ibarcodeSymbologiesStatics2: COM.COMInterop<CWinRT.SWRT_WindowsDevicesPointOfService_IBarcodeSymbologiesStatics2> {
        get throws {
            try _ibarcodeSymbologiesStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.PointOfService.BarcodeSymbologies", id: CWinRT.SWRT_WindowsDevicesPointOfService_IBarcodeSymbologiesStatics2.iid)
            }
        }
    }

    private static var _ibarcodeSymbologiesStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesPointOfService_IBarcodeSymbologiesStatics>? = nil

    internal static var _ibarcodeSymbologiesStatics: COM.COMInterop<CWinRT.SWRT_WindowsDevicesPointOfService_IBarcodeSymbologiesStatics> {
        get throws {
            try _ibarcodeSymbologiesStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.PointOfService.BarcodeSymbologies", id: CWinRT.SWRT_WindowsDevicesPointOfService_IBarcodeSymbologiesStatics.iid)
            }
        }
    }
}