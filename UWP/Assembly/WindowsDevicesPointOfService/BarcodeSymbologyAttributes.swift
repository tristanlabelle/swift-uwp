// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// The attributes of a barcode scanner symbology.
public final class WindowsDevicesPointOfService_BarcodeSymbologyAttributes: WindowsRuntime.WinRTImport<WindowsDevicesPointOfService_BarcodeSymbologyAttributesProjection> {
    // MARK: Windows.Devices.PointOfService.IBarcodeSymbologyAttributes members

    /// Gets or sets the first value used to determine the barcode symbology decode length.
    /// - Returns: The first part of the decode length.
    public var decodeLength1: Swift.UInt32 {
        get throws {
            try _interop.get_DecodeLength1()
        }
    }

    /// Gets or sets the first value used to determine the barcode symbology decode length.
    /// - Returns: The first part of the decode length.
    public func decodeLength1(_ value: Swift.UInt32) throws {
        try _interop.put_DecodeLength1(value)
    }

    /// Gets or sets the second value used to determine the barcode symbology decode length.
    /// - Returns: The second part of the decode length.
    public var decodeLength2: Swift.UInt32 {
        get throws {
            try _interop.get_DecodeLength2()
        }
    }

    /// Gets or sets the second value used to determine the barcode symbology decode length.
    /// - Returns: The second part of the decode length.
    public func decodeLength2(_ value: Swift.UInt32) throws {
        try _interop.put_DecodeLength2(value)
    }

    /// Gets or sets the decode length kind used by the barcode symbology.
    /// - Returns: The decode length kind used by the barcode symbology.
    public var decodeLengthKind: WindowsDevicesPointOfService_BarcodeSymbologyDecodeLengthKind {
        get throws {
            try _interop.get_DecodeLengthKind()
        }
    }

    /// Gets or sets the decode length kind used by the barcode symbology.
    /// - Returns: The decode length kind used by the barcode symbology.
    public func decodeLengthKind(_ value: WindowsDevicesPointOfService_BarcodeSymbologyDecodeLengthKind) throws {
        try _interop.put_DecodeLengthKind(value)
    }

    /// Gets or sets whether the check digit will be transmitted to the host as part of the raw data.
    /// - Returns: True if the check digit will be tranmissted to the host as raw data; otherwise, false.
    public var isCheckDigitTransmissionEnabled: Swift.Bool {
        get throws {
            try _interop.get_IsCheckDigitTransmissionEnabled()
        }
    }

    /// Gets or sets whether the check digit will be transmitted to the host as part of the raw data.
    /// - Returns: True if the check digit will be tranmissted to the host as raw data; otherwise, false.
    public func isCheckDigitTransmissionEnabled(_ value: Swift.Bool) throws {
        try _interop.put_IsCheckDigitTransmissionEnabled(value)
    }

    /// Gets whether the barcode symbology supports transmitting the check digit to the host as part of the raw data.
    /// - Returns: True if the barcode symbology supports transmitting the check digit as raw data; otherwise, false.
    public var isCheckDigitTransmissionSupported: Swift.Bool {
        get throws {
            try _interop.get_IsCheckDigitTransmissionSupported()
        }
    }

    /// Gets whether barcode check digit will be validated.
    /// - Returns: True if the barcode check digit will be validated; otherwise, false.
    public var isCheckDigitValidationEnabled: Swift.Bool {
        get throws {
            try _interop.get_IsCheckDigitValidationEnabled()
        }
    }

    /// Gets whether barcode check digit will be validated.
    /// - Returns: True if the barcode check digit will be validated; otherwise, false.
    public func isCheckDigitValidationEnabled(_ value: Swift.Bool) throws {
        try _interop.put_IsCheckDigitValidationEnabled(value)
    }

    /// Gets whether the barcode symbology supports check digit validation.
    /// - Returns: True if the barcode symbology supports check digit validation; otherwise, false.
    public var isCheckDigitValidationSupported: Swift.Bool {
        get throws {
            try _interop.get_IsCheckDigitValidationSupported()
        }
    }

    /// Gets whether the barcode symbology supports multiple decode lengths.
    /// - Returns: True if the barcode symbology supports multiple decode lengths; otherwise, false.
    public var isDecodeLengthSupported: Swift.Bool {
        get throws {
            try _interop.get_IsDecodeLengthSupported()
        }
    }

    // MARK: Implementation details
}