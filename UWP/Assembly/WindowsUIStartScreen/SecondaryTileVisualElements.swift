// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Contains properties through which you can get or set a secondary tile's background color, foreground text, tile images, and app name display options. The properties in this class replace these SecondaryTile properties: 
public final class WindowsUIStartScreen_SecondaryTileVisualElements: WindowsRuntime.WinRTImport<WindowsUIStartScreen_SecondaryTileVisualElementsProjection> {
    // MARK: Windows.UI.StartScreen.ISecondaryTileVisualElements members

    /// Gets or sets the secondary tile's background color.
    /// - Returns: The background color. Specify in #ffffff format. 
    public var backgroundColor: WindowsUI_Color {
        get throws {
            try _interop.get_BackgroundColor()
        }
    }

    /// Gets or sets the secondary tile's background color.
    /// - Returns: The background color. Specify in #ffffff format. 
    public func backgroundColor(_ value: WindowsUI_Color) throws {
        try _interop.put_BackgroundColor(value)
    }

    /// Specifies whether the tile should use dark or light text.
    /// - Returns: One of the two values that specifies either the default dark or default light text.
    public var foregroundText: WindowsUIStartScreen_ForegroundText {
        get throws {
            try _interop.get_ForegroundText()
        }
    }

    /// Specifies whether the tile should use dark or light text.
    /// - Returns: One of the two values that specifies either the default dark or default light text.
    public func foregroundText(_ value: WindowsUIStartScreen_ForegroundText) throws {
        try _interop.put_ForegroundText(value)
    }

    /// Specifies whether the display name should be shown on the medium secondary tile.
    /// - Returns: **True** to show the display name on the tile; otherwise, **false**. The default value is **false**.
    public var showNameOnSquare150x150Logo: Swift.Bool {
        get throws {
            try _interop.get_ShowNameOnSquare150x150Logo()
        }
    }

    /// Specifies whether the display name should be shown on the medium secondary tile.
    /// - Returns: **True** to show the display name on the tile; otherwise, **false**. The default value is **false**.
    public func showNameOnSquare150x150Logo(_ value: Swift.Bool) throws {
        try _interop.put_ShowNameOnSquare150x150Logo(value)
    }

    /// Specifies whether the display name should be shown on the large secondary tile.
    /// - Returns: **True** to dhow the display name on the tile; otherwise, **false**. The default value is **false**.
    public var showNameOnSquare310x310Logo: Swift.Bool {
        get throws {
            try _interop.get_ShowNameOnSquare310x310Logo()
        }
    }

    /// Specifies whether the display name should be shown on the large secondary tile.
    /// - Returns: **True** to dhow the display name on the tile; otherwise, **false**. The default value is **false**.
    public func showNameOnSquare310x310Logo(_ value: Swift.Bool) throws {
        try _interop.put_ShowNameOnSquare310x310Logo(value)
    }

    /// Specifies whether the display name should be shown on the wide secondary tile.
    /// - Returns: **True** to show the display name on the tile; otherwise, **false**. The default value is **false**.
    public var showNameOnWide310x150Logo: Swift.Bool {
        get throws {
            try _interop.get_ShowNameOnWide310x150Logo()
        }
    }

    /// Specifies whether the display name should be shown on the wide secondary tile.
    /// - Returns: **True** to show the display name on the tile; otherwise, **false**. The default value is **false**.
    public func showNameOnWide310x150Logo(_ value: Swift.Bool) throws {
        try _interop.put_ShowNameOnWide310x150Logo(value)
    }

    /// Gets or sets the medium secondary tile image.
    /// - Returns: The location of the image. This can be expressed as one of these schemes: <termdeflist><termdef><name>ms-appx:///</name>A path within the deployed app package. This path is resolved for languages and DPI plateau supported by the app.</termdef><termdef><name>ms-appdata:///local/</name>A file found in the per-user app storage.</termdef></termdeflist>
    public var square150x150Logo: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Square150x150Logo())
        }
    }

    /// Gets or sets the medium secondary tile image.
    /// - Returns: The location of the image. This can be expressed as one of these schemes: <termdeflist><termdef><name>ms-appx:///</name>A path within the deployed app package. This path is resolved for languages and DPI plateau supported by the app.</termdef><termdef><name>ms-appdata:///local/</name>A file found in the per-user app storage.</termdef></termdeflist>
    public func square150x150Logo(_ value: WindowsFoundation_Uri?) throws {
        try _interop.put_Square150x150Logo(value)
    }

    /// Gets or sets the square30x30 secondary tile image.
    /// - Returns: The location of the image. This can be expressed as one of these schemes: <termdeflist><termdef><name>ms-appx:///</name>A path within the deployed app package. This path is resolved for languages and DPI plateau supported by the app.</termdef><termdef><name>ms-appdata:///local/</name>A file found in the per-user app storage.</termdef></termdeflist>
    public var square30x30Logo: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Square30x30Logo())
        }
    }

    /// Gets or sets the square30x30 secondary tile image.
    /// - Returns: The location of the image. This can be expressed as one of these schemes: <termdeflist><termdef><name>ms-appx:///</name>A path within the deployed app package. This path is resolved for languages and DPI plateau supported by the app.</termdef><termdef><name>ms-appdata:///local/</name>A file found in the per-user app storage.</termdef></termdeflist>
    public func square30x30Logo(_ value: WindowsFoundation_Uri?) throws {
        try _interop.put_Square30x30Logo(value)
    }

    /// Gets or sets the large secondary tile image.
    /// - Returns: The location of the image. This can be expressed as one of these schemes: <termdeflist><termdef><name>ms-appx:///</name>A path within the deployed app package. This path is resolved for languages and DPI plateau supported by the app.</termdef><termdef><name>ms-appdata:///local/</name>A file found in the per-user app storage.</termdef></termdeflist>
    public var square310x310Logo: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Square310x310Logo())
        }
    }

    /// Gets or sets the large secondary tile image.
    /// - Returns: The location of the image. This can be expressed as one of these schemes: <termdeflist><termdef><name>ms-appx:///</name>A path within the deployed app package. This path is resolved for languages and DPI plateau supported by the app.</termdef><termdef><name>ms-appdata:///local/</name>A file found in the per-user app storage.</termdef></termdeflist>
    public func square310x310Logo(_ value: WindowsFoundation_Uri?) throws {
        try _interop.put_Square310x310Logo(value)
    }

    /// Gets or sets the small secondary tile image.
    /// - Returns: The location of the image. This can be expressed as one of these schemes: <termdeflist><termdef><name>ms-appx:///</name>A path within the deployed app package. This path is resolved for languages and DPI plateau supported by the app.</termdef><termdef><name>ms-appdata:///local/</name>A file found in the per-user app storage.</termdef></termdeflist>
    public var square70x70Logo: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Square70x70Logo())
        }
    }

    /// Gets or sets the small secondary tile image.
    /// - Returns: The location of the image. This can be expressed as one of these schemes: <termdeflist><termdef><name>ms-appx:///</name>A path within the deployed app package. This path is resolved for languages and DPI plateau supported by the app.</termdef><termdef><name>ms-appdata:///local/</name>A file found in the per-user app storage.</termdef></termdeflist>
    public func square70x70Logo(_ value: WindowsFoundation_Uri?) throws {
        try _interop.put_Square70x70Logo(value)
    }

    /// Gets or sets the wide secondary tile image.
    /// - Returns: The location of the image. This can be expressed as one of these schemes: <termdeflist><termdef><name>ms-appx:///</name>A path within the deployed app package. This path is resolved for languages and DPI plateau supported by the app.</termdef><termdef><name>ms-appdata:///local/</name>A file found in the per-user app storage.</termdef></termdeflist>
    public var wide310x150Logo: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Wide310x150Logo())
        }
    }

    /// Gets or sets the wide secondary tile image.
    /// - Returns: The location of the image. This can be expressed as one of these schemes: <termdeflist><termdef><name>ms-appx:///</name>A path within the deployed app package. This path is resolved for languages and DPI plateau supported by the app.</termdef><termdef><name>ms-appdata:///local/</name>A file found in the per-user app storage.</termdef></termdeflist>
    public func wide310x150Logo(_ value: WindowsFoundation_Uri?) throws {
        try _interop.put_Wide310x150Logo(value)
    }

    // MARK: Windows.UI.StartScreen.ISecondaryTileVisualElements2 members

    /// Gets or sets the small secondary tile image.
    /// - Returns: The location of the image. This can be expressed as one of these schemes: <termdeflist><termdef><name>ms-appx:///</name>A path within the deployed app package. This path is resolved for languages and DPI plateau supported by the app.</termdef><termdef><name>ms-appdata:///local/</name>A file found in the per-user app storage.</termdef></termdeflist>
    public var square71x71Logo: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_isecondaryTileVisualElements2.get_Square71x71Logo())
        }
    }

    /// Gets or sets the small secondary tile image.
    /// - Returns: The location of the image. This can be expressed as one of these schemes: <termdeflist><termdef><name>ms-appx:///</name>A path within the deployed app package. This path is resolved for languages and DPI plateau supported by the app.</termdef><termdef><name>ms-appdata:///local/</name>A file found in the per-user app storage.</termdef></termdeflist>
    public func square71x71Logo(_ value: WindowsFoundation_Uri?) throws {
        try _isecondaryTileVisualElements2.put_Square71x71Logo(value)
    }

    // MARK: Windows.UI.StartScreen.ISecondaryTileVisualElements3 members

    /// Gets or sets the square44x44 secondary tile image.
    /// - Returns: The location of the image. This can be expressed as one of these schemes: <termdeflist><termdef><name>ms-appx:///</name>A path within the deployed app package. This path is resolved for languages and DPI plateau supported by the app.</termdef><termdef><name>ms-appdata:///local/</name>A file found in the per-user app storage.</termdef></termdeflist>
    public var square44x44Logo: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_isecondaryTileVisualElements3.get_Square44x44Logo())
        }
    }

    /// Gets or sets the square44x44 secondary tile image.
    /// - Returns: The location of the image. This can be expressed as one of these schemes: <termdeflist><termdef><name>ms-appx:///</name>A path within the deployed app package. This path is resolved for languages and DPI plateau supported by the app.</termdef><termdef><name>ms-appdata:///local/</name>A file found in the per-user app storage.</termdef></termdeflist>
    public func square44x44Logo(_ value: WindowsFoundation_Uri?) throws {
        try _isecondaryTileVisualElements3.put_Square44x44Logo(value)
    }

    // MARK: Windows.UI.StartScreen.ISecondaryTileVisualElements4 members

    /// Gets an object representing a 3D model asset for use as an app launcher in the Windows Mixed Reality home environment.
    /// - Returns: The mixed reality model.
    public var mixedRealityModel: WindowsUIStartScreen_TileMixedRealityModel {
        get throws {
            try COM.NullResult.unwrap(_isecondaryTileVisualElements4.get_MixedRealityModel())
        }
    }

    // MARK: Implementation details

    private var _isecondaryTileVisualElements2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIStartScreen_ISecondaryTileVisualElements2>? = nil

    internal var _isecondaryTileVisualElements2: COM.COMInterop<CWinRT.SWRT_WindowsUIStartScreen_ISecondaryTileVisualElements2> {
        get throws {
            try _isecondaryTileVisualElements2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIStartScreen_ISecondaryTileVisualElements2.iid).cast(to: CWinRT.SWRT_WindowsUIStartScreen_ISecondaryTileVisualElements2.self)
            }
        }
    }

    private var _isecondaryTileVisualElements3_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIStartScreen_ISecondaryTileVisualElements3>? = nil

    internal var _isecondaryTileVisualElements3: COM.COMInterop<CWinRT.SWRT_WindowsUIStartScreen_ISecondaryTileVisualElements3> {
        get throws {
            try _isecondaryTileVisualElements3_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIStartScreen_ISecondaryTileVisualElements3.iid).cast(to: CWinRT.SWRT_WindowsUIStartScreen_ISecondaryTileVisualElements3.self)
            }
        }
    }

    private var _isecondaryTileVisualElements4_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIStartScreen_ISecondaryTileVisualElements4>? = nil

    internal var _isecondaryTileVisualElements4: COM.COMInterop<CWinRT.SWRT_WindowsUIStartScreen_ISecondaryTileVisualElements4> {
        get throws {
            try _isecondaryTileVisualElements4_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIStartScreen_ISecondaryTileVisualElements4.iid).cast(to: CWinRT.SWRT_WindowsUIStartScreen_ISecondaryTileVisualElements4.self)
            }
        }
    }

    deinit {
        _isecondaryTileVisualElements2_storage?.release()
        _isecondaryTileVisualElements3_storage?.release()
        _isecondaryTileVisualElements4_storage?.release()
    }
}