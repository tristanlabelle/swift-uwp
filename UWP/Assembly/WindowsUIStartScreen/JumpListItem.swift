// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides functionality for creating and defining jump list items for an app's jump list.
public final class WindowsUIStartScreen_JumpListItem: WindowsRuntime.WinRTImport<WindowsUIStartScreen_JumpListItemProjection> {
    // MARK: Windows.UI.StartScreen.IJumpListItem members

    /// Gets the command line arguments for the jump list item.
    /// - Returns: The jump list item command line arguments.
    public var arguments: Swift.String {
        get throws {
            try _interop.get_Arguments()
        }
    }

    /// Gets or sets the jump list item task description.
    /// - Returns: The jump list item task description specified as a string. If localization is desired, this string must be a *ms-resource:* scheme specified URI.
    public var description: Swift.String {
        get throws {
            try _interop.get_Description()
        }
    }

    /// Gets or sets the jump list item task description.
    /// - Returns: The jump list item task description specified as a string. If localization is desired, this string must be a *ms-resource:* scheme specified URI.
    public func description(_ value: Swift.String) throws {
        try _interop.put_Description(value)
    }

    /// Gets or sets the jump list item display name. The display name can also be specified as a parameter using the CreateWithArguments method when the jump list item is created.
    /// - Returns: The display name of the jump list item in the app's jump list. If localization is desired, this string must be a*ms-resource:* scheme specified URI.
    public var displayName: Swift.String {
        get throws {
            try _interop.get_DisplayName()
        }
    }

    /// Gets or sets the jump list item display name. The display name can also be specified as a parameter using the CreateWithArguments method when the jump list item is created.
    /// - Returns: The display name of the jump list item in the app's jump list. If localization is desired, this string must be a*ms-resource:* scheme specified URI.
    public func displayName(_ value: Swift.String) throws {
        try _interop.put_DisplayName(value)
    }

    /// Gets or sets the jump list item custom group name. If no name is specified, the item will be added to the Tasks group by default.
    /// - Returns: The custom group name for the jump list item specified as a string. If localization is desired, this string must be a *ms-resource:* scheme specified URI.
    public var groupName: Swift.String {
        get throws {
            try _interop.get_GroupName()
        }
    }

    /// Gets or sets the jump list item custom group name. If no name is specified, the item will be added to the Tasks group by default.
    /// - Returns: The custom group name for the jump list item specified as a string. If localization is desired, this string must be a *ms-resource:* scheme specified URI.
    public func groupName(_ value: Swift.String) throws {
        try _interop.put_GroupName(value)
    }

    /// Gets the JumpListItemKind of a jump list item.
    /// - Returns: The JumpListItemKind enumeration indicating the kind of item represented by a jump list item.
    public var kind: WindowsUIStartScreen_JumpListItemKind {
        get throws {
            try _interop.get_Kind()
        }
    }

    /// Gets or sets the jump list item's logo.
    /// - Returns: The Uri for the jump list item logo. This can be specified using one of these schemes:<termdeflist><termdef><name>ms-appx:///</name>A path within the deployed app package. This path is resolved for languages and DPI plateau supported by the app.</termdef><termdef><name>ms-appdata:///local/</name>A file found in the per-user app storage.</termdef></termdeflist>
    public var logo: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Logo())
        }
    }

    /// Gets or sets the jump list item's logo.
    /// - Returns: The Uri for the jump list item logo. This can be specified using one of these schemes:<termdeflist><termdef><name>ms-appx:///</name>A path within the deployed app package. This path is resolved for languages and DPI plateau supported by the app.</termdef><termdef><name>ms-appdata:///local/</name>A file found in the per-user app storage.</termdef></termdeflist>
    public func logo(_ value: WindowsFoundation_Uri?) throws {
        try _interop.put_Logo(value)
    }

    /// Gets a boolean indicating whether the jump list item was removed from the app's jump list by the user.
    /// - Returns: True when a user manually removed a jump list item from the app's jump list, otherwise False.
    public var removedByUser: Swift.Bool {
        get throws {
            try _interop.get_RemovedByUser()
        }
    }

    // MARK: Windows.UI.StartScreen.IJumpListItemStatics members

    /// Creates a new jump list item for an app's jump list.
    /// - Parameter arguments: String that specifies any command line arguments that should be passed onto the app when the jump list item is selected by a user.
    /// - Parameter displayName: String that specifies a display name for the jump list item. If localization is desired, this string must be a *ms-resource:* scheme specified URI.
    /// - Returns: A jump list item with the specified parameters that can be added to an app's jump list through the items property.
    public static func createWithArguments(_ arguments: Swift.String, _ displayName: Swift.String) throws -> WindowsUIStartScreen_JumpListItem {
        try COM.NullResult.unwrap(_ijumpListItemStatics.createWithArguments(arguments, displayName))
    }

    /// Creates a jump list item that is an inert separator for a custom group within the app's jump list.
    /// - Returns: A jump list item that can be added to an app's jump list through the items property.
    public static func createSeparator() throws -> WindowsUIStartScreen_JumpListItem {
        try COM.NullResult.unwrap(_ijumpListItemStatics.createSeparator())
    }

    // MARK: Implementation details

    private static var _ijumpListItemStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIStartScreen_IJumpListItemStatics>? = nil

    internal static var _ijumpListItemStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIStartScreen_IJumpListItemStatics> {
        get throws {
            try _ijumpListItemStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.StartScreen.JumpListItem", id: CWinRT.SWRT_WindowsUIStartScreen_IJumpListItemStatics.iid)
            }
        }
    }
}