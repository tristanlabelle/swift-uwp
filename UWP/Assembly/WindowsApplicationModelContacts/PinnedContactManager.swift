// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a service that source apps can call to pin and unpin contacts to and from the taskbar or **Start** menu.
public final class WindowsApplicationModelContacts_PinnedContactManager: WindowsRuntime.WinRTImport<WindowsApplicationModelContacts_PinnedContactManagerProjection> {
    // MARK: Windows.ApplicationModel.Contacts.IPinnedContactManager members

    /// Gets the User associated with the PinnedContactManager.
    /// - Returns: The User associated with the PinnedContactManager.
    public var user: WindowsSystem_User {
        get throws {
            try COM.NullResult.unwrap(_interop.get_User())
        }
    }

    /// Indicates whether the specified location in the Windows UI supports contact pinning.
    /// - Parameter surface: A pinnedContactSurface value that specifies a pinning location in the Windows UI. This property determines whether pinning is supported in that location.
    /// - Returns: A Boolean value that indicates whether the location in the Windows UI supports contact pinning.
    public func isPinSurfaceSupported(_ surface: WindowsApplicationModelContacts_PinnedContactSurface) throws -> Swift.Bool {
        try _interop.isPinSurfaceSupported(surface)
    }

    /// Indicates whether the specified contact is pinned to the specified location in the Windows user interface.
    /// - Parameter contact: A contact of interest. This property indicates whether that contact is pinned or not pinned.
    /// - Parameter surface: A pinnedContactSurface value that specifies the location in the UI that you'd like to check for pinned contacts.
    /// - Returns: A Boolean value that specifies whether the specified contact is pinned to the specified location in the Windows user interface.
    public func isContactPinned(_ contact: WindowsApplicationModelContacts_Contact?, _ surface: WindowsApplicationModelContacts_PinnedContactSurface) throws -> Swift.Bool {
        try _interop.isContactPinned(contact, surface)
    }

    /// Pins a contact to the taskbar or **Start** menu.
    /// - Parameter contact: The contact to pin to the taskbar or **Start** menu.
    /// - Parameter surface: A pinnedContactSurface value that specifies where in the Windows UI you would like to pin the contact.
    /// - Returns: An asynchronous operation that returns a Boolean value that indicates whether the contact was successfully pinned to the specified location.
    public func requestPinContactAsync(_ contact: WindowsApplicationModelContacts_Contact?, _ surface: WindowsApplicationModelContacts_PinnedContactSurface) throws -> WindowsFoundation_IAsyncOperation<Swift.Bool> {
        try COM.NullResult.unwrap(_interop.requestPinContactAsync(contact, surface))
    }

    public func requestPinContactsAsync(_ contacts: WindowsFoundationCollections_IIterable<WindowsApplicationModelContacts_Contact?>?, _ surface: WindowsApplicationModelContacts_PinnedContactSurface) throws -> WindowsFoundation_IAsyncOperation<Swift.Bool> {
        try COM.NullResult.unwrap(_interop.requestPinContactsAsync(contacts, surface))
    }

    /// Unpins a contact from the taskbar or **Start** menu.
    /// - Parameter contact: The contact to unpin from the taskbar or **Start** menu.
    /// - Parameter surface: A pinnedContactSurface value that specifies from which area in the Windows UI you would like to unpin the contact.
    /// - Returns: An asynchronous operation that returns a Boolean value that indicates whether the contact was successfully unpinned from the specified location.
    public func requestUnpinContactAsync(_ contact: WindowsApplicationModelContacts_Contact?, _ surface: WindowsApplicationModelContacts_PinnedContactSurface) throws -> WindowsFoundation_IAsyncOperation<Swift.Bool> {
        try COM.NullResult.unwrap(_interop.requestUnpinContactAsync(contact, surface))
    }

    /// Indicates to Windows when activity that is related to a pinned contact occurs.
    /// - Parameter contact: The contact that is exhibits activity.
    public func signalContactActivity(_ contact: WindowsApplicationModelContacts_Contact?) throws {
        try _interop.signalContactActivity(contact)
    }

    /// Gets the ID's of all contacts that are pinned to the taskbar or **Start** menu.
    /// - Returns: An asynchronous operation that returns a PinnedContactIdsQueryResult that you can use to get the ID's of all pinned contacts.
    public func getPinnedContactIdsAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelContacts_PinnedContactIdsQueryResult?> {
        try COM.NullResult.unwrap(_interop.getPinnedContactIdsAsync())
    }

    // MARK: Windows.ApplicationModel.Contacts.IPinnedContactManagerStatics members

    /// Gets the default an instance of a PinnedContactManager.
    /// - Returns: the default PinnedContactManager.
    public static func getDefault() throws -> WindowsApplicationModelContacts_PinnedContactManager {
        try COM.NullResult.unwrap(_ipinnedContactManagerStatics.getDefault())
    }

    /// Gets a PinnedContactManager for the specified user.
    /// - Parameter user: The user account to use to get the PinnedContactManager.
    /// - Returns: Returns the PinnedContactManager for the account specified by the *user* parameter.
    public static func getForUser(_ user: WindowsSystem_User?) throws -> WindowsApplicationModelContacts_PinnedContactManager {
        try COM.NullResult.unwrap(_ipinnedContactManagerStatics.getForUser(user))
    }

    /// Indicates whether the Windows UI supports contact pinning.
    /// - Returns: A Boolean value that indicates whether the Windows UI supports contact pinning.
    public static func isSupported() throws -> Swift.Bool {
        try _ipinnedContactManagerStatics.isSupported()
    }

    // MARK: Implementation details

    private static var _ipinnedContactManagerStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelContacts_IPinnedContactManagerStatics>? = nil

    internal static var _ipinnedContactManagerStatics: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelContacts_IPinnedContactManagerStatics> {
        get throws {
            try _ipinnedContactManagerStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Contacts.PinnedContactManager", id: CWinRT.SWRT_WindowsApplicationModelContacts_IPinnedContactManagerStatics.iid)
            }
        }
    }
}