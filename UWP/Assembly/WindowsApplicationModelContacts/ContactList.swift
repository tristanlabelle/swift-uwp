// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a list of Contact objects.
public final class WindowsApplicationModelContacts_ContactList: WindowsRuntime.WinRTImport<WindowsApplicationModelContacts_ContactListProjection> {
    // MARK: Windows.ApplicationModel.Contacts.IContactList members

    /// Gets the app's ContactChangeTracker for this ContactList.
    /// - Returns: The app's ContactChangeTracker for this ContactList.
    public var changeTracker: WindowsApplicationModelContacts_ContactChangeTracker {
        get throws {
            try COM.NullResult.unwrap(_interop.get_ChangeTracker())
        }
    }

    /// Gets or puts the name of the ContactList, suitable for display in the user interface.
    /// - Returns: The name of the ContactList, suitable for display in the user interface.
    public var displayName: Swift.String {
        get throws {
            try _interop.get_DisplayName()
        }
    }

    /// Gets or puts the name of the ContactList, suitable for display in the user interface.
    /// - Returns: The name of the ContactList, suitable for display in the user interface.
    public func displayName(_ value: Swift.String) throws {
        try _interop.put_DisplayName(value)
    }

    /// Gets the locally unique identifier for this ContactList.
    /// - Returns: The locally unique identifier for this ContactList.
    public var id: Swift.String {
        get throws {
            try _interop.get_Id()
        }
    }

    /// Gets or puts a Boolean value indicating of the ContactList is hidden in the user interface.
    /// - Returns: A Boolean value indicating of the ContactList is hidden in the user interface.
    public var isHidden: Swift.Bool {
        get throws {
            try _interop.get_IsHidden()
        }
    }

    /// Gets or puts a Boolean value indicating of the ContactList is hidden in the user interface.
    /// - Returns: A Boolean value indicating of the ContactList is hidden in the user interface.
    public func isHidden(_ value: Swift.Bool) throws {
        try _interop.put_IsHidden(value)
    }

    /// Gets or puts a value indicating the read access level to this ContactList for other apps on the system.
    /// - Returns: A value indicating the read access level to this ContactList for other apps on the system.
    public var otherAppReadAccess: WindowsApplicationModelContacts_ContactListOtherAppReadAccess {
        get throws {
            try _interop.get_OtherAppReadAccess()
        }
    }

    /// Gets or puts a value indicating the read access level to this ContactList for other apps on the system.
    /// - Returns: A value indicating the read access level to this ContactList for other apps on the system.
    public func otherAppReadAccess(_ value: WindowsApplicationModelContacts_ContactListOtherAppReadAccess) throws {
        try _interop.put_OtherAppReadAccess(value)
    }

    /// Gets or puts a value indicating the write access level to this ContactList for other apps on the system.
    /// - Returns: A value indicating the write access level to this ContactList for other apps on the system.
    public var otherAppWriteAccess: WindowsApplicationModelContacts_ContactListOtherAppWriteAccess {
        get throws {
            try _interop.get_OtherAppWriteAccess()
        }
    }

    /// Gets or puts a value indicating the write access level to this ContactList for other apps on the system.
    /// - Returns: A value indicating the write access level to this ContactList for other apps on the system.
    public func otherAppWriteAccess(_ value: WindowsApplicationModelContacts_ContactListOtherAppWriteAccess) throws {
        try _interop.put_OtherAppWriteAccess(value)
    }

    /// Gets the name of the source of the ContactList, suitable for display in the user interface.
    /// - Returns: The name of the source of the ContactList, suitable for display in the user interface.
    public var sourceDisplayName: Swift.String {
        get throws {
            try _interop.get_SourceDisplayName()
        }
    }

    /// Gets or sets a Boolean value indicating if you can search the remote server with this ContactList.
    /// - Returns: A Boolean value indicating if you can search the remote server with this ContactList.
    public var supportsServerSearch: Swift.Bool {
        get throws {
            try _interop.get_SupportsServerSearch()
        }
    }

    /// Gets the ContactListSyncManager used to communicate with the server.
    /// - Returns: The ContactListSyncManager used to communicate with the server.
    public var syncManager: WindowsApplicationModelContacts_ContactListSyncManager {
        get throws {
            try COM.NullResult.unwrap(_interop.get_SyncManager())
        }
    }

    /// Gets a string that represents the ID of the user data account for this ContactList.
    /// - Returns: A string that represents the ID of the user data account for this ContactList.
    public var userDataAccountId: Swift.String {
        get throws {
            try _interop.get_UserDataAccountId()
        }
    }

    /// Occurs when a Contact in this ContactList has been changed.
    public func contactChanged(adding value: WindowsFoundation_TypedEventHandler<WindowsApplicationModelContacts_ContactList?, WindowsApplicationModelContacts_ContactChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_ContactChanged(value)
        return WindowsRuntime.EventRegistration(token: _token, remover: contactChanged)
    }

    public func contactChanged(removing value: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_ContactChanged(value)
    }

    /// Asynchronously saves this ContactList.
    /// - Returns: An async action indicating that the method has completed.
    public func saveAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.saveAsync())
    }

    /// Asynchronously deletes this ContactList, including all Contact objects in the ContactStore.
    /// - Returns: An async action indicating that the method is complete.
    public func deleteAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.deleteAsync())
    }

    /// Asynchronously gets the Contact identified by the specified RemoteId.
    /// - Parameter remoteId: An ID that can be used by a service provider to access the Contact in their remote system.
    /// - Returns: The Contact identified by the *remoteId* parameter.
    public func getContactFromRemoteIdAsync(_ remoteId: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelContacts_Contact?> {
        try COM.NullResult.unwrap(_interop.getContactFromRemoteIdAsync(remoteId))
    }

    /// Asynchronously gets the Contact object for the current user.
    /// - Returns: The Contact object for the current user.
    public func getMeContactAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelContacts_Contact?> {
        try COM.NullResult.unwrap(_interop.getMeContactAsync())
    }

    /// Gets a ContactReader object associated with this ContactList.
    /// - Returns: A ContactReader object associated with this ContactList.
    public func getContactReader() throws -> WindowsApplicationModelContacts_ContactReader {
        try COM.NullResult.unwrap(_interop.getContactReader())
    }

    /// Gets a ContactReader object associated with this ContactList and using the specified ContactQueryOptions.
    /// - Parameter options: The ContactQueryOptions to use when creating the ContactReader.
    /// - Returns: A ContactReader object associated with this ContactList.
    public func getContactReader(_ options: WindowsApplicationModelContacts_ContactQueryOptions?) throws -> WindowsApplicationModelContacts_ContactReader {
        try COM.NullResult.unwrap(_interop.getContactReaderWithOptions(options))
    }

    /// Asynchronously saves the specified Contact to the ContactStore.
    /// - Parameter contact: The contact to save.
    /// - Returns: An async action indicating that the method has completed.
    public func saveContactAsync(_ contact: WindowsApplicationModelContacts_Contact?) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.saveContactAsync(contact))
    }

    /// Asynchronously deletes and individual Contact from this ContactList and the ContactStore.
    /// - Parameter contact: The Contact to delete.
    /// - Returns: An async action indicating that the method is complete.
    public func deleteContactAsync(_ contact: WindowsApplicationModelContacts_Contact?) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.deleteContactAsync(contact))
    }

    /// Asynchronously retrieves the specified Contact object from the ContactList.
    /// - Parameter contactId: The string that identifies the Contact to return.
    /// - Returns: The Contact identified by the *contactId* parameter.
    public func getContactAsync(_ contactId: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelContacts_Contact?> {
        try COM.NullResult.unwrap(_interop.getContactAsync(contactId))
    }

    // MARK: Windows.ApplicationModel.Contacts.IContactList2 members

    /// Gets or sets a Boolean value indicating if you can search the remote server with this ContactList.
    /// - Returns: A Boolean value indicating if you can search the remote server with this ContactList.
    public func supportsServerSearch(_ value: Swift.Bool) throws {
        try _icontactList2.put_SupportsServerSearch(value)
    }

    /// Gets the ContactListSyncConstraints which indicates the maximum amount of contact list data that can be synchronized.
    /// - Returns: The ContactListSyncConstraints for this contact list.
    public var syncConstraints: WindowsApplicationModelContacts_ContactListSyncConstraints {
        get throws {
            try COM.NullResult.unwrap(_icontactList2.get_SyncConstraints())
        }
    }

    /// Adds a SyncManager  to the ContactList.
    /// - Returns: An asynchronous registration operation that you can await.
    public func registerSyncManagerAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_icontactList2.registerSyncManagerAsync())
    }

    // MARK: Windows.ApplicationModel.Contacts.IContactList3 members

    /// Gets an object that provides operations that an app can perform on a contact list that it has not created.
    /// - Returns: An object that provides operations that an app can perform on a contact list that it has not created.
    public var limitedWriteOperations: WindowsApplicationModelContacts_ContactListLimitedWriteOperations {
        get throws {
            try COM.NullResult.unwrap(_icontactList3.get_LimitedWriteOperations())
        }
    }

    /// Gets a ContactChangeTracker that provides functionality for monitoring changes to Contact objects in the ContactList.
    /// - Parameter identity: A string that identifies the ContactChangeTracker instance in the ContactList.
    /// - Returns: A ContactChangeTracker that provides functionality for monitoring changes to Contact objects in the ContactList.
    public func getChangeTracker(_ identity: Swift.String) throws -> WindowsApplicationModelContacts_ContactChangeTracker {
        try COM.NullResult.unwrap(_icontactList3.getChangeTracker(identity))
    }

    // MARK: Implementation details

    private var _icontactList2_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelContacts_IContactList2>? = nil

    internal var _icontactList2: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelContacts_IContactList2> {
        get throws {
            try _icontactList2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelContacts_IContactList2.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelContacts_IContactList2.self)
            }
        }
    }

    private var _icontactList3_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelContacts_IContactList3>? = nil

    internal var _icontactList3: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelContacts_IContactList3> {
        get throws {
            try _icontactList3_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelContacts_IContactList3.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelContacts_IContactList3.self)
            }
        }
    }

    deinit {
        _icontactList2_storage?.release()
        _icontactList3_storage?.release()
    }
}