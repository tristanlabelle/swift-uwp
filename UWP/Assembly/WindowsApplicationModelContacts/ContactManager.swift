// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a service that source apps can call to access contact data.
public enum WindowsApplicationModelContacts_ContactManager {
    // MARK: Windows.ApplicationModel.Contacts.IContactManagerStatics5 members

    /// Gets or sets a Boolean that indicates whether the middle name of a contact is included in the DisplayName and SortName of a contact.
    /// - Returns: A Boolean that indicates whether the middle name of a contact is included in the DisplayName and SortName of a contact.
    public static var includeMiddleNameInSystemDisplayAndSort: Swift.Bool {
        get throws {
            try _icontactManagerStatics5.get_IncludeMiddleNameInSystemDisplayAndSort()
        }
    }

    /// Gets or sets a Boolean that indicates whether the middle name of a contact is included in the DisplayName and SortName of a contact.
    /// - Returns: A Boolean that indicates whether the middle name of a contact is included in the DisplayName and SortName of a contact.
    public static func includeMiddleNameInSystemDisplayAndSort(_ value: Swift.Bool) throws {
        try _icontactManagerStatics5.put_IncludeMiddleNameInSystemDisplayAndSort(value)
    }

    /// Gets a Boolean value indicating if the ShowFullContactCard method is supported on the current platform.
    /// - Returns: An asynchronous operation that returns **true** if the ShowFullContactCard method is supported on the current platform.
    public static func isShowFullContactCardSupportedAsync() throws -> WindowsFoundation_IAsyncOperation<Swift.Bool> {
        try COM.NullResult.unwrap(_icontactManagerStatics5.isShowFullContactCardSupportedAsync())
    }

    // MARK: Windows.ApplicationModel.Contacts.IContactManagerStatics members

    /// Queries the operating system for a user’s contact and shows the contact data in a contact card.
    /// - Parameter contact: The object that represents the contact that the app wants to display the contact card for.*contact* must contain at least an Id, Emails, or a phone number from a Phones list to query the user’s contact database to retrieve a matching contact to display. Id has higher priority for querying. If an Id matches, the rest of query parameters will be ignored for matching purposes. If an Id does not find a match, the query uses the rest of query parameters.
    /// - Parameter selection: The Rect is the rectangular area of user selection (for example, pressing a button), around which the operating system displays the contact card, not within that rectangular area. For example, if an app uses a button to show the contact card, pass the Rect of the button so the contact card displays around the button, not overlapping it.
    public static func showContactCard(_ contact: WindowsApplicationModelContacts_Contact?, _ selection: WindowsFoundation_Rect) throws {
        try _icontactManagerStatics.showContactCard(contact, selection)
    }

    /// Queries the operating system for a user’s contact and shows the contact data in a contact card.
    /// - Parameter contact: The object that represents the contact that the app wants to display the contact card for.*contact* must contain at least an Id, Emails, or a phone number from a Phones list to query the user’s contact database to retrieve a matching contact to display. Id has higher priority for querying. If an Id matches, the rest of query parameters will be ignored for matching purposes. If an Id does not find a match, the query uses the rest of query parameters.
    /// - Parameter selection: The Rect is the rectangular area of user selection (for example, pressing a button), around which the operating system displays the contact card, not within that rectangular area. For example, if an app uses a button to show the contact card, pass the Rect of the button so the contact card displays around the button, not overlapping it.
    /// - Parameter preferredPlacement: The Placement that describes the preferred placement of the contact card.
    public static func showContactCard(_ contact: WindowsApplicationModelContacts_Contact?, _ selection: WindowsFoundation_Rect, _ preferredPlacement: WindowsUIPopups_Placement) throws {
        try _icontactManagerStatics.showContactCardWithPlacement(contact, selection, preferredPlacement)
    }

    /// Shows a contact card that can be updated later if the contact does not exist in the user’s contact database.
    /// - Parameter contact: The object that represents the contact that the app wants to display the contact card for.*contact* must contain at least an Id, Emails, or a phone number from a Phones list to query the user’s contact database to retrieve a matching contact to display. Id has higher priority for querying. If an Id matches, the rest of query parameters will be ignored for matching purposes. If an Id does not find a match, the query uses the rest of query parameters.
    /// - Parameter selection: The Rect is the rectangular area of user selection (for example, pressing a button), around which the operating system displays the contact card, not within that rectangular area. For example, if an app uses a button to show the contact card, pass the Rect of the button so the contact card displays around the button, not overlapping it.
    /// - Parameter preferredPlacement: The Placement that describes the preferred placement of the contact card.
    /// - Returns: Returns the ContactCardDelayedDataLoader object that can be used to update the contact card.
    public static func showDelayLoadedContactCard(_ contact: WindowsApplicationModelContacts_Contact?, _ selection: WindowsFoundation_Rect, _ preferredPlacement: WindowsUIPopups_Placement) throws -> WindowsApplicationModelContacts_ContactCardDelayedDataLoader {
        try COM.NullResult.unwrap(_icontactManagerStatics.showDelayLoadedContactCard(contact, selection, preferredPlacement))
    }

    // MARK: Windows.ApplicationModel.Contacts.IContactManagerStatics4 members

    /// Gets the ContactManagerForUser object for the specified user.
    /// - Parameter user: The user account to use to get the ContactManagerForUser object.
    /// - Returns: Returns the contact manager for the account specified by the *user* parameter.
    public static func getForUser(_ user: WindowsSystem_User?) throws -> WindowsApplicationModelContacts_ContactManagerForUser {
        try COM.NullResult.unwrap(_icontactManagerStatics4.getForUser(user))
    }

    // MARK: Windows.ApplicationModel.Contacts.IContactManagerStatics3 members

    /// Gets or puts the display name order.
    /// - Returns: Specifies the display name order.
    public static var systemDisplayNameOrder: WindowsApplicationModelContacts_ContactNameOrder {
        get throws {
            try _icontactManagerStatics3.get_SystemDisplayNameOrder()
        }
    }

    /// Gets or puts the display name order.
    /// - Returns: Specifies the display name order.
    public static func systemDisplayNameOrder(_ value: WindowsApplicationModelContacts_ContactNameOrder) throws {
        try _icontactManagerStatics3.put_SystemDisplayNameOrder(value)
    }

    /// Gets or puts the sort order.
    /// - Returns: Specifies the sort order.
    public static var systemSortOrder: WindowsApplicationModelContacts_ContactNameOrder {
        get throws {
            try _icontactManagerStatics3.get_SystemSortOrder()
        }
    }

    /// Gets or puts the sort order.
    /// - Returns: Specifies the sort order.
    public static func systemSortOrder(_ value: WindowsApplicationModelContacts_ContactNameOrder) throws {
        try _icontactManagerStatics3.put_SystemSortOrder(value)
    }

    /// Asynchronously converts a Contact to a vCard.
    /// - Parameter contact: The Contact to convert.
    /// - Returns: A stream containing the vCard data.
    public static func convertContactToVCardAsync(_ contact: WindowsApplicationModelContacts_Contact?) throws -> WindowsFoundation_IAsyncOperation<WindowsStorageStreams_RandomAccessStreamReference?> {
        try COM.NullResult.unwrap(_icontactManagerStatics3.convertContactToVCardAsync(contact))
    }

    /// Asynchronously converts a Contact to a vCard.
    /// - Parameter contact: The Contact to convert.
    /// - Parameter maxBytes: The maximum size for the vCard in bytes.
    /// - Returns: A stream containing the vCard data.
    public static func convertContactToVCardAsync(_ contact: WindowsApplicationModelContacts_Contact?, _ maxBytes: Swift.UInt32) throws -> WindowsFoundation_IAsyncOperation<WindowsStorageStreams_RandomAccessStreamReference?> {
        try COM.NullResult.unwrap(_icontactManagerStatics3.convertContactToVCardAsyncWithMaxBytes(contact, maxBytes))
    }

    /// Asynchronously converts a vCard to a Contact.
    /// - Parameter vCard: A stream containing the vCard data.
    /// - Returns: The converted Contact.
    public static func convertVCardToContactAsync(_ vCard: WindowsStorageStreams_IRandomAccessStreamReference?) throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelContacts_Contact?> {
        try COM.NullResult.unwrap(_icontactManagerStatics3.convertVCardToContactAsync(vCard))
    }

    /// Retrieves a ContactStore object that enables searching or retrieving contacts on the device.
    /// - Parameter accessType: Specifies the type of read/write access requested.
    /// - Returns: An asynchronous operation that returns a ContactStore object on successful completion.
    public static func requestStoreAsync(_ accessType: WindowsApplicationModelContacts_ContactStoreAccessType) throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelContacts_ContactStore?> {
        try COM.NullResult.unwrap(_icontactManagerStatics3.requestStoreAsyncWithAccessType(accessType))
    }

    /// Asynchronously requests access to the ContactAnnotationStore.
    /// - Parameter accessType: Specifies the type of access request, app contact annotations or all annotations.
    /// - Returns: The requested ContactAnnotationStore.
    public static func requestAnnotationStoreAsync(_ accessType: WindowsApplicationModelContacts_ContactAnnotationStoreAccessType) throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelContacts_ContactAnnotationStore?> {
        try COM.NullResult.unwrap(_icontactManagerStatics3.requestAnnotationStoreAsync(accessType))
    }

    /// Gets a Boolean value indicating if the ShowContactCard method is supported on the current platform.
    /// - Returns: A Boolean value indicating if the ShowContactCard method is supported on the current platform.
    public static func isShowContactCardSupported() throws -> Swift.Bool {
        try _icontactManagerStatics3.isShowContactCardSupported()
    }

    /// Shows a contact card with the specified parameters.
    /// - Parameter contact: The object that represents the contact that the app wants to display the contact card for.*contact* must contain at least an Id, Emails, or a phone number from a Phones list to query the user’s contact database to retrieve a matching contact to display. Id has higher priority for querying. If an Id matches, the rest of query parameters will be ignored for matching purposes. If an Id does not find a match, the query uses the rest of query parameters.
    /// - Parameter selection: The Rect is the rectangular area of user selection (for example, pressing a button), around which the operating system displays the contact card, not within that rectangular area. For example, if an app uses a button to show the contact card, pass the Rect of the button so the contact card displays around the button, not overlapping it.
    /// - Parameter preferredPlacement: The Placement that describes the preferred placement of the contact card.
    /// - Parameter contactCardOptions: Specifies how to display the contact card, such as which tab to start on when displaying a mini contact card.
    public static func showContactCard(_ contact: WindowsApplicationModelContacts_Contact?, _ selection: WindowsFoundation_Rect, _ preferredPlacement: WindowsUIPopups_Placement, _ contactCardOptions: WindowsApplicationModelContacts_ContactCardOptions?) throws {
        try _icontactManagerStatics3.showContactCardWithOptions(contact, selection, preferredPlacement, contactCardOptions)
    }

    /// Gets a Boolean value indicating if the ShowDelayLoadedContactCard method is supported on the current platform.
    /// - Returns: A Boolean value indicating if the ShowDelayLoadedContactCard method is supported on the current platform.
    public static func isShowDelayLoadedContactCardSupported() throws -> Swift.Bool {
        try _icontactManagerStatics3.isShowDelayLoadedContactCardSupported()
    }

    /// Shows a contact card that can be updated later if the contact does not exist in the user’s contact database.
    /// - Parameter contact: The object that represents the contact that the app wants to display the contact card for.*contact* must contain at least an Id, Emails, or a phone number from a Phones list to query the user’s contact database to retrieve a matching contact to display. Id has higher priority for querying. If an Id matches, the rest of query parameters will be ignored for matching purposes. If an Id does not find a match, the query uses the rest of query parameters.
    /// - Parameter selection: The Rect is the rectangular area of user selection (for example, pressing a button), around which the operating system displays the contact card, not within that rectangular area. For example, if an app uses a button to show the contact card, pass the Rect of the button so the contact card displays around the button, not overlapping it.
    /// - Parameter preferredPlacement: The Placement that describes the preferred placement of the contact card.
    /// - Parameter contactCardOptions: Specifies how to display the contact card, such as which tab to start on if you are displaying a mini contact card, or what header type to use if you are showing a full contact card.
    /// - Returns: Returns the ContactCardDelayedDataLoader object that can be used to update the contact card.
    public static func showDelayLoadedContactCard(_ contact: WindowsApplicationModelContacts_Contact?, _ selection: WindowsFoundation_Rect, _ preferredPlacement: WindowsUIPopups_Placement, _ contactCardOptions: WindowsApplicationModelContacts_ContactCardOptions?) throws -> WindowsApplicationModelContacts_ContactCardDelayedDataLoader {
        try COM.NullResult.unwrap(_icontactManagerStatics3.showDelayLoadedContactCardWithOptions(contact, selection, preferredPlacement, contactCardOptions))
    }

    /// Queries the operating system for a user’s contact and shows the contact data in a full contact card.
    /// - Parameter contact: The object that represents the contact that the app wants to display the contact card for.*contact* must contain at least an Id, Emails, or a phone number from a Phones list to query the user’s contact database to retrieve a matching contact to display. Id has higher priority for querying. If an Id matches, the rest of query parameters will be ignored for matching purposes. If an Id does not find a match, the query uses the rest of query parameters.
    /// - Parameter fullContactCardOptions: Specifies how to display the full contact card.
    public static func showFullContactCard(_ contact: WindowsApplicationModelContacts_Contact?, _ fullContactCardOptions: WindowsApplicationModelContacts_FullContactCardOptions?) throws {
        try _icontactManagerStatics3.showFullContactCard(contact, fullContactCardOptions)
    }

    // MARK: Windows.ApplicationModel.Contacts.IContactManagerStatics2 members

    /// Retrieves a ContactStore object that enables searching or retrieving contacts on the device.
    /// - Returns: An asynchronous operation that returns a ContactStore object on successful completion.
    public static func requestStoreAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelContacts_ContactStore?> {
        try COM.NullResult.unwrap(_icontactManagerStatics2.requestStoreAsync())
    }

    // MARK: Implementation details

    private static var _icontactManagerStatics5_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelContacts_IContactManagerStatics5>? = nil

    internal static var _icontactManagerStatics5: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelContacts_IContactManagerStatics5> {
        get throws {
            try _icontactManagerStatics5_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Contacts.ContactManager", id: CWinRT.SWRT_WindowsApplicationModelContacts_IContactManagerStatics5.iid)
            }
        }
    }

    private static var _icontactManagerStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelContacts_IContactManagerStatics>? = nil

    internal static var _icontactManagerStatics: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelContacts_IContactManagerStatics> {
        get throws {
            try _icontactManagerStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Contacts.ContactManager", id: CWinRT.SWRT_WindowsApplicationModelContacts_IContactManagerStatics.iid)
            }
        }
    }

    private static var _icontactManagerStatics4_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelContacts_IContactManagerStatics4>? = nil

    internal static var _icontactManagerStatics4: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelContacts_IContactManagerStatics4> {
        get throws {
            try _icontactManagerStatics4_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Contacts.ContactManager", id: CWinRT.SWRT_WindowsApplicationModelContacts_IContactManagerStatics4.iid)
            }
        }
    }

    private static var _icontactManagerStatics3_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelContacts_IContactManagerStatics3>? = nil

    internal static var _icontactManagerStatics3: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelContacts_IContactManagerStatics3> {
        get throws {
            try _icontactManagerStatics3_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Contacts.ContactManager", id: CWinRT.SWRT_WindowsApplicationModelContacts_IContactManagerStatics3.iid)
            }
        }
    }

    private static var _icontactManagerStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelContacts_IContactManagerStatics2>? = nil

    internal static var _icontactManagerStatics2: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelContacts_IContactManagerStatics2> {
        get throws {
            try _icontactManagerStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Contacts.ContactManager", id: CWinRT.SWRT_WindowsApplicationModelContacts_IContactManagerStatics2.iid)
            }
        }
    }
}