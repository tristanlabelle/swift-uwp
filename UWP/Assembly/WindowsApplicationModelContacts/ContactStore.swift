// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a database that contains contacts.
public final class WindowsApplicationModelContacts_ContactStore: WindowsRuntime.WinRTImport<WindowsApplicationModelContacts_ContactStoreProjection> {
    // MARK: Windows.ApplicationModel.Contacts.IContactStore members

    /// Retrieves the list of all contacts in the contact store.
    /// - Returns: An asynchronous operation that returns a list of all Contact objects in the contact store. If you use Asynchronous programming, the result type is a read-only list/vector of Contact items. (You can use APIs of IVectorView<Contact> for C++ or JavaScript, APIs of IReadOnlyList<Contact> for .NET.)
    public func findContactsAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsApplicationModelContacts_Contact?>?> {
        try COM.NullResult.unwrap(_interop.findContactsAsync())
    }

    /// Retrieves a list of Contact objects based on the supplied search text.
    /// - Parameter searchText: The search string for the operation. The query will attempt to match the name (Name ), email address (Emails values), or phone number (Phones values) of a contact.
    /// - Returns: An asynchronous operation that returns a search-filtered list of contacts on successful completion. If you use Asynchronous programming, the result type is a read-only list/vector of Contact items. (You can use APIs of IVectorView<Contact> for C++ or JavaScript, APIs of IReadOnlyList<Contact> for .NET.)
    public func findContactsAsync(_ searchText: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsApplicationModelContacts_Contact?>?> {
        try COM.NullResult.unwrap(_interop.findContactsWithSearchTextAsync(searchText))
    }

    /// Retrieves a Contact object representing the contact with the specified Id value.
    /// - Parameter contactId: The Id of the contact to be retrieved.
    /// - Returns: An asynchronous operation that returns a Contact object on successful completion. If you use Asynchronous programming, the result type is a single Contact object.
    public func getContactAsync(_ contactId: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelContacts_Contact?> {
        try COM.NullResult.unwrap(_interop.getContactAsync(contactId))
    }

    // MARK: Windows.ApplicationModel.Contacts.IContactStore2 members

    /// Gets a contact manager that provides functionality for linking individual (raw) contacts across services together into a single aggregate contact.
    /// - Returns: A contact manager that provides functionality for linking individual (raw) contacts across services together into a single aggregate contact.
    public var aggregateContactManager: WindowsApplicationModelContacts_AggregateContactManager {
        get throws {
            try COM.NullResult.unwrap(_icontactStore2.get_AggregateContactManager())
        }
    }

    /// Gets the ContactChangeTracker which provides functionality for monitoring changes to Contact objects in the ContactStore.
    /// - Returns: The ContactChangeTracker which provides functionality for monitoring changes to Contact objects in the ContactStore.
    public var changeTracker: WindowsApplicationModelContacts_ContactChangeTracker {
        get throws {
            try COM.NullResult.unwrap(_icontactStore2.get_ChangeTracker())
        }
    }

    /// Occurs when a Contact in the ContactStore has been changed.
    public func contactChanged(adding value: WindowsFoundation_TypedEventHandler<WindowsApplicationModelContacts_ContactStore?, WindowsApplicationModelContacts_ContactChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _icontactStore2.add_ContactChanged(value)
        return WindowsRuntime.EventRegistration(token: _token, remover: contactChanged)
    }

    public func contactChanged(removing value: WindowsRuntime.EventRegistrationToken) throws {
        try _icontactStore2.remove_ContactChanged(value)
    }

    /// Asynchronously returns the list of ContactList objects.
    /// - Returns: The list of ContactList objects.
    public func findContactListsAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsApplicationModelContacts_ContactList?>?> {
        try COM.NullResult.unwrap(_icontactStore2.findContactListsAsync())
    }

    /// Asynchronously gets the ContactList with the specified ID.
    /// - Parameter contactListId: The ID of the ContactList to retrieve.
    /// - Returns: The ContactList with the specified ID or null if the list is not found.
    public func getContactListAsync(_ contactListId: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelContacts_ContactList?> {
        try COM.NullResult.unwrap(_icontactStore2.getContactListAsync(contactListId))
    }

    /// Asynchronously creates a ContactList with the specified display name.
    /// - Parameter displayName: A name for the new ContactList, suitable for displaying in the user interface.
    /// - Returns: The newly created ContactList.
    public func createContactListAsync(_ displayName: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelContacts_ContactList?> {
        try COM.NullResult.unwrap(_icontactStore2.createContactListAsync(displayName))
    }

    /// Get the Contact object for the current user.
    /// - Returns: The Contact object for the current user.
    public func getMeContactAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelContacts_Contact?> {
        try COM.NullResult.unwrap(_icontactStore2.getMeContactAsync())
    }

    /// Creates and returns a ContactReader for the ContactStore.
    /// - Returns: The newly created ContactReader for the ContactStore.
    public func getContactReader() throws -> WindowsApplicationModelContacts_ContactReader {
        try COM.NullResult.unwrap(_icontactStore2.getContactReader())
    }

    /// Creates and returns a ContactReader for the ContactStore with the specified ContactQueryOptions.
    /// - Parameter options: The query options to use when creating the new ContactReader.
    /// - Returns: The newly created ContactReader for the ContactStore.
    public func getContactReader(_ options: WindowsApplicationModelContacts_ContactQueryOptions?) throws -> WindowsApplicationModelContacts_ContactReader {
        try COM.NullResult.unwrap(_icontactStore2.getContactReaderWithOptions(options))
    }

    /// Asynchronously creates a ContactList with the specified display name and user account.
    /// - Parameter displayName: A name for the new ContactList, suitable for displaying in the user interface.
    /// - Parameter userDataAccountId: The ID for the UserDataAccount to use when creating the ContactList.
    /// - Returns: The newly created ContactList.
    public func createContactListAsync(_ displayName: Swift.String, _ userDataAccountId: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelContacts_ContactList?> {
        try COM.NullResult.unwrap(_icontactStore2.createContactListInAccountAsync(displayName, userDataAccountId))
    }

    // MARK: Windows.ApplicationModel.Contacts.IContactStore3 members

    /// Gets a ContactChangeTracker that provides functionality for monitoring changes to Contact objects in the ContactStore.
    /// - Parameter identity: A string that identifies the ContactChangeTracker instance in the store.
    /// - Returns: A ContactChangeTracker that provides functionality for monitoring changes to Contact objects in the ContactStore.
    public func getChangeTracker(_ identity: Swift.String) throws -> WindowsApplicationModelContacts_ContactChangeTracker {
        try COM.NullResult.unwrap(_icontactStore3.getChangeTracker(identity))
    }

    // MARK: Implementation details

    private var _icontactStore2_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelContacts_IContactStore2>? = nil

    internal var _icontactStore2: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelContacts_IContactStore2> {
        get throws {
            try _icontactStore2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelContacts_IContactStore2.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelContacts_IContactStore2.self)
            }
        }
    }

    private var _icontactStore3_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelContacts_IContactStore3>? = nil

    internal var _icontactStore3: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelContacts_IContactStore3> {
        get throws {
            try _icontactStore3_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelContacts_IContactStore3.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelContacts_IContactStore3.self)
            }
        }
    }

    deinit {
        _icontactStore2_storage?.release()
        _icontactStore3_storage?.release()
    }
}