// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// This is used as an entry point for creating new sessions, viewing old sessions, or cleanup.
public enum WindowsManagement_MdmSessionManager {
    // MARK: Windows.Management.IMdmSessionManagerStatics members

    /// Gets all MDM session IDs for the current enterprise account.
    /// - Returns: An IVectorView containing the session IDs.
    public static var sessionIds: WindowsFoundationCollections_IVectorView<Swift.String> {
        get throws {
            try COM.NullResult.unwrap(_imdmSessionManagerStatics.get_SessionIds())
        }
    }

    /// Attempts to start an MDM session for the current enterprise account.
    /// - Returns: The MdmSession information of the created session.
    public static func tryCreateSession() throws -> WindowsManagement_MdmSession {
        try COM.NullResult.unwrap(_imdmSessionManagerStatics.tryCreateSession())
    }

    /// Deletes past session information.
    /// - Parameter sessionId: The string value of the session ID.
    public static func deleteSessionById(_ sessionId: Swift.String) throws {
        try _imdmSessionManagerStatics.deleteSessionById(sessionId)
    }

    /// Gets the MDM session's information given the session's ID.
    /// - Parameter sessionId: The string value of the MDM session ID.
    /// - Returns: The MdmSession corresponding to the provided session ID.
    public static func getSessionById(_ sessionId: Swift.String) throws -> WindowsManagement_MdmSession {
        try COM.NullResult.unwrap(_imdmSessionManagerStatics.getSessionById(sessionId))
    }

    // MARK: Implementation details

    private static var _imdmSessionManagerStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsManagement_IMdmSessionManagerStatics>? = nil

    internal static var _imdmSessionManagerStatics: COM.COMInterop<CWinRT.SWRT_WindowsManagement_IMdmSessionManagerStatics> {
        get throws {
            try _imdmSessionManagerStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Management.MdmSessionManager", id: CWinRT.SWRT_WindowsManagement_IMdmSessionManagerStatics.iid)
            }
        }
    }
}