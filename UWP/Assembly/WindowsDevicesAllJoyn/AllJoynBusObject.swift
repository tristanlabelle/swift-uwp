// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a bus object available over the transport agnostic communication pipeline.
public final class WindowsDevicesAllJoyn_AllJoynBusObject: WindowsRuntime.WinRTImport<WindowsDevicesAllJoyn_AllJoynBusObjectProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsDevicesAllJoyn_AllJoynBusObjectProjection.self))
    }

    // MARK: Windows.Devices.AllJoyn.IAllJoynBusObjectFactory members

    public convenience init(_ objectPath: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iallJoynBusObjectFactory.create(objectPath)))
    }

    public convenience init(_ objectPath: Swift.String, _ busAttachment: WindowsDevicesAllJoyn_AllJoynBusAttachment?) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iallJoynBusObjectFactory.createWithBusAttachment(objectPath, busAttachment)))
    }

    // MARK: Windows.Devices.AllJoyn.IAllJoynBusObject members

    /// Gets the bus attachment of this AllJoynBusObject.
    /// - Returns: The bus attachment.
    public var busAttachment: WindowsDevicesAllJoyn_AllJoynBusAttachment {
        get throws {
            try COM.NullResult.unwrap(_interop.get_BusAttachment())
        }
    }

    /// Gets the AllJoynSession for this AllJoynBusObject.
    /// - Returns: The AllJoyn session.
    public var session: WindowsDevicesAllJoyn_AllJoynSession {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Session())
        }
    }

    /// Event triggered when the AllJoynBusObject is stopped.
    public func stopped(adding handler: WindowsFoundation_TypedEventHandler<WindowsDevicesAllJoyn_AllJoynBusObject?, WindowsDevicesAllJoyn_AllJoynBusObjectStoppedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Stopped(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: stopped)
    }

    public func stopped(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Stopped(token)
    }

    /// Starts the AllJoynBusObject. If the bus attachment is not already explicitly connected, starting the producer will automatically connect the bus attachment.
    public func start() throws {
        try _interop.start()
    }

    /// Stops the AllJoynBusObject.
    public func stop() throws {
        try _interop.stop()
    }

    /// Adds an additional interface to be produced to the service provider.
    /// - Parameter producer: The interface to be produced.
    public func addProducer(_ producer: WindowsDevicesAllJoyn_IAllJoynProducer?) throws {
        try _interop.addProducer(producer)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.AllJoyn.AllJoynBusObject", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _iallJoynBusObjectFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesAllJoyn_IAllJoynBusObjectFactory>? = nil

    internal static var _iallJoynBusObjectFactory: COM.COMInterop<CWinRT.SWRT_WindowsDevicesAllJoyn_IAllJoynBusObjectFactory> {
        get throws {
            try _iallJoynBusObjectFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.AllJoyn.AllJoynBusObject", id: CWinRT.SWRT_WindowsDevicesAllJoyn_IAllJoynBusObjectFactory.iid)
            }
        }
    }
}