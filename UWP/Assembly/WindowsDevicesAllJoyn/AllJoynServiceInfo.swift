// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Exposes unique name and transport information for an advertising app.
public final class WindowsDevicesAllJoyn_AllJoynServiceInfo: WindowsRuntime.WinRTImport<WindowsDevicesAllJoyn_AllJoynServiceInfoProjection> {
    // MARK: Windows.Devices.AllJoyn.IAllJoynServiceInfoFactory members

    public convenience init(_ uniqueName: Swift.String, _ objectPath: Swift.String, _ sessionPort: Swift.UInt16) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iallJoynServiceInfoFactory.create(uniqueName, objectPath, sessionPort)))
    }

    // MARK: Windows.Devices.AllJoyn.IAllJoynServiceInfo members

    /// The path to the service object. This path is used to match communications with service objects connected to the session.
    /// - Returns: The service object path.
    public var objectPath: Swift.String {
        get throws {
            try _interop.get_ObjectPath()
        }
    }

    /// The port used to connect to the session.
    /// - Returns: The connection port number.
    public var sessionPort: Swift.UInt16 {
        get throws {
            try _interop.get_SessionPort()
        }
    }

    /// The unique bus name associated with the advertising app.
    /// - Returns: The unique name.
    public var uniqueName: Swift.String {
        get throws {
            try _interop.get_UniqueName()
        }
    }

    // MARK: Windows.Devices.AllJoyn.IAllJoynServiceInfoStatics members

    /// Converts a DeviceInformation ID acquired by a device enumeration into an AllJoynServiceInfo object.
    /// - Parameter deviceId: The acquired DeviceInformation ID.
    /// - Returns: The AllJoynServiceInfo object corresponding to the ID. This object can be used to establish sessions with remote endpoints and to retrieve About data from them.
    public static func fromIdAsync(_ deviceId: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesAllJoyn_AllJoynServiceInfo?> {
        try COM.NullResult.unwrap(_iallJoynServiceInfoStatics.fromIdAsync(deviceId))
    }

    // MARK: Implementation details

    private static var _iallJoynServiceInfoFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesAllJoyn_IAllJoynServiceInfoFactory>? = nil

    internal static var _iallJoynServiceInfoFactory: COM.COMInterop<CWinRT.SWRT_WindowsDevicesAllJoyn_IAllJoynServiceInfoFactory> {
        get throws {
            try _iallJoynServiceInfoFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.AllJoyn.AllJoynServiceInfo", id: CWinRT.SWRT_WindowsDevicesAllJoyn_IAllJoynServiceInfoFactory.iid)
            }
        }
    }

    private static var _iallJoynServiceInfoStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesAllJoyn_IAllJoynServiceInfoStatics>? = nil

    internal static var _iallJoynServiceInfoStatics: COM.COMInterop<CWinRT.SWRT_WindowsDevicesAllJoyn_IAllJoynServiceInfoStatics> {
        get throws {
            try _iallJoynServiceInfoStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.AllJoyn.AllJoynServiceInfo", id: CWinRT.SWRT_WindowsDevicesAllJoyn_IAllJoynServiceInfoStatics.iid)
            }
        }
    }
}