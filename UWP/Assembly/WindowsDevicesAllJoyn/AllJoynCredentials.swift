// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Defines properties used when passing credentials during authentication.
public final class WindowsDevicesAllJoyn_AllJoynCredentials: WindowsRuntime.WinRTImport<WindowsDevicesAllJoyn_AllJoynCredentialsProjection> {
    // MARK: Windows.Devices.AllJoyn.IAllJoynCredentials members

    /// The mechanism used for credential authentication.
    /// - Returns: The authentication mechanism.
    public var authenticationMechanism: WindowsDevicesAllJoyn_AllJoynAuthenticationMechanism {
        get throws {
            try _interop.get_AuthenticationMechanism()
        }
    }

    /// The cryptography certificate used for the Rsa and EcdheEcdsa authentication mechanisms.
    /// - Returns: The cryptography certificate.
    public var certificate: WindowsSecurityCryptographyCertificates_Certificate {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Certificate())
        }
    }

    /// The cryptography certificate used for the Rsa and EcdheEcdsa authentication mechanisms.
    /// - Returns: The cryptography certificate.
    public func certificate(_ value: WindowsSecurityCryptographyCertificates_Certificate?) throws {
        try _interop.put_Certificate(value)
    }

    /// The user name, if any, and password used for authentication.
    /// - Returns: A user name/password combination.
    public var passwordCredential: WindowsSecurityCredentials_PasswordCredential {
        get throws {
            try COM.NullResult.unwrap(_interop.get_PasswordCredential())
        }
    }

    /// The user name, if any, and password used for authentication.
    /// - Returns: A user name/password combination.
    public func passwordCredential(_ value: WindowsSecurityCredentials_PasswordCredential?) throws {
        try _interop.put_PasswordCredential(value)
    }

    /// The period of time before provided credentials expire.
    /// - Returns: The expiration time.
    public var timeout: WindowsFoundation_TimeSpan {
        get throws {
            try _interop.get_Timeout()
        }
    }

    /// The period of time before provided credentials expire.
    /// - Returns: The expiration time.
    public func timeout(_ value: WindowsFoundation_TimeSpan) throws {
        try _interop.put_Timeout(value)
    }

    // MARK: Implementation details
}