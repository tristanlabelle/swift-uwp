// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides information about an activated event that fires when the user saves a file through the file picker and selects the app as the location.
public final class WindowsApplicationModelActivation_FileSavePickerActivatedEventArgs: WindowsRuntime.WinRTImport<WindowsApplicationModelActivation_FileSavePickerActivatedEventArgsProjection>, WindowsApplicationModelActivation_IFileSavePickerActivatedEventArgsProtocol, WindowsApplicationModelActivation_IActivatedEventArgsProtocol, WindowsApplicationModelActivation_IFileSavePickerActivatedEventArgs2Protocol, WindowsApplicationModelActivation_IActivatedEventArgsWithUserProtocol {
    // MARK: Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs members

    /// Gets the letterbox UI of the file picker that is displayed when the user saves a file and selects the app as the save location.
    /// - Returns: The letterbox UI of the file picker that is displayed when the user saves a file and uses the app as the location.
    public var fileSavePickerUI: WindowsStoragePickersProvider_FileSavePickerUI {
        get throws {
            try COM.NullResult.unwrap(_interop.get_FileSavePickerUI())
        }
    }

    // MARK: Windows.ApplicationModel.Activation.IActivatedEventArgs members

    /// Gets the activation type.
    /// - Returns: The ActivationKind.FileSavePicker enumeration value.
    public var kind: WindowsApplicationModelActivation_ActivationKind {
        get throws {
            try _iactivatedEventArgs.get_Kind()
        }
    }

    /// Gets the execution state of the app before it was activated.
    /// - Returns: One of the enumeration values.
    public var previousExecutionState: WindowsApplicationModelActivation_ApplicationExecutionState {
        get throws {
            try _iactivatedEventArgs.get_PreviousExecutionState()
        }
    }

    /// Gets a SplashScreen object that provides information about the transition from the splash screen to the activated app.
    /// - Returns: The object that provides splash screen information.
    public var splashScreen: WindowsApplicationModelActivation_SplashScreen {
        get throws {
            try COM.NullResult.unwrap(_iactivatedEventArgs.get_SplashScreen())
        }
    }

    // MARK: Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs2 members

    /// The package family name of the app that launched this app.
    /// - Returns: The caller's package family name.
    public var callerPackageFamilyName: Swift.String {
        get throws {
            try _ifileSavePickerActivatedEventArgs2.get_CallerPackageFamilyName()
        }
    }

    /// Gets the ID of the enterprise that owns the file.
    /// - Returns: The ID of the enterprise to owns the file.
    public var enterpriseId: Swift.String {
        get throws {
            try _ifileSavePickerActivatedEventArgs2.get_EnterpriseId()
        }
    }

    // MARK: Windows.ApplicationModel.Activation.IActivatedEventArgsWithUser members

    /// Gets the user that the app was activated for.
    /// - Returns: The user that the app was activated for.
    public var user: WindowsSystem_User {
        get throws {
            try COM.NullResult.unwrap(_iactivatedEventArgsWithUser.get_User())
        }
    }

    // MARK: Implementation details

    private var _iactivatedEventArgs_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelActivation_IActivatedEventArgs>? = nil

    internal var _iactivatedEventArgs: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelActivation_IActivatedEventArgs> {
        get throws {
            try _iactivatedEventArgs_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelActivation_IActivatedEventArgs.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelActivation_IActivatedEventArgs.self)
            }
        }
    }

    private var _ifileSavePickerActivatedEventArgs2_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelActivation_IFileSavePickerActivatedEventArgs2>? = nil

    internal var _ifileSavePickerActivatedEventArgs2: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelActivation_IFileSavePickerActivatedEventArgs2> {
        get throws {
            try _ifileSavePickerActivatedEventArgs2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelActivation_IFileSavePickerActivatedEventArgs2.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelActivation_IFileSavePickerActivatedEventArgs2.self)
            }
        }
    }

    private var _iactivatedEventArgsWithUser_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelActivation_IActivatedEventArgsWithUser>? = nil

    internal var _iactivatedEventArgsWithUser: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelActivation_IActivatedEventArgsWithUser> {
        get throws {
            try _iactivatedEventArgsWithUser_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelActivation_IActivatedEventArgsWithUser.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelActivation_IActivatedEventArgsWithUser.self)
            }
        }
    }

    deinit {
        _iactivatedEventArgs_storage?.release()
        _ifileSavePickerActivatedEventArgs2_storage?.release()
        _iactivatedEventArgsWithUser_storage?.release()
    }
}