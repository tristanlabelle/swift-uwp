// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Contains methods and properties for allowing a user to select a user account in multi-user scenarios (such as on Xbox).
public final class WindowsSystem_UserPicker: WindowsRuntime.WinRTImport<WindowsSystem_UserPickerProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsSystem_UserPickerProjection.self))
    }

    // MARK: Windows.System.IUserPicker members

    /// Gets or sets whether picking guest accounts is allowed.
    /// - Returns: True if guest accounts are allowed; otherwise, false.
    public var allowGuestAccounts: Swift.Bool {
        get throws {
            try _interop.get_AllowGuestAccounts()
        }
    }

    /// Gets or sets whether picking guest accounts is allowed.
    /// - Returns: True if guest accounts are allowed; otherwise, false.
    public func allowGuestAccounts(_ value: Swift.Bool) throws {
        try _interop.put_AllowGuestAccounts(value)
    }

    /// Gets or sets a suggested user for the picker to indicate in the UI.
    /// - Returns: The suggested user.
    public var suggestedSelectedUser: WindowsSystem_User {
        get throws {
            try COM.NullResult.unwrap(_interop.get_SuggestedSelectedUser())
        }
    }

    /// Gets or sets a suggested user for the picker to indicate in the UI.
    /// - Returns: The suggested user.
    public func suggestedSelectedUser(_ value: WindowsSystem_User?) throws {
        try _interop.put_SuggestedSelectedUser(value)
    }

    /// Displays a dialog for the user to pick a user account. The selected account is signed in, paired with the IGameController that selected it, and becomes obtainable using the User class. This method is only supported for multi-user devices and apps, and will throw an exception if called from a single user device or app.
    /// - Returns: When this method completes, it returns the selected user. If no user was selected, it returns null instead.
    public func pickSingleUserAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsSystem_User?> {
        try COM.NullResult.unwrap(_interop.pickSingleUserAsync())
    }

    // MARK: Windows.System.IUserPickerStatics members

    /// Gets if the user picker is supported. This property will return false for single user devices or apps, and true for multi-user devices (such as Xbox).
    /// - Returns: True if the user picker is supported; otherwise, false.
    public static func isSupported() throws -> Swift.Bool {
        try _iuserPickerStatics.isSupported()
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.System.UserPicker", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _iuserPickerStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsSystem_IUserPickerStatics>? = nil

    internal static var _iuserPickerStatics: COM.COMInterop<CWinRT.SWRT_WindowsSystem_IUserPickerStatics> {
        get throws {
            try _iuserPickerStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.System.UserPicker", id: CWinRT.SWRT_WindowsSystem_IUserPickerStatics.iid)
            }
        }
    }
}