// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Manages the lifetime of a DispatcherQueue. Provides methods to create and shutdown the **DispatcherQueue**.
public final class WindowsSystem_DispatcherQueueController: WindowsRuntime.WinRTImport<WindowsSystem_DispatcherQueueControllerProjection> {
    // MARK: Windows.System.IDispatcherQueueController members

    /// Gets the **DispatcherQueue** associated with this **DispatcherQueueController**.
    /// - Returns: The **DispatcherQueue** instance that you use to queue tasks that run on a thread.
    public var dispatcherQueue: WindowsSystem_DispatcherQueue {
        get throws {
            try COM.NullResult.unwrap(_interop.get_DispatcherQueue())
        }
    }

    /// Stops the **DispatcherQueue** associated with this **DispatcherQueueController**. Shuts down the thread if the **DispatcherQueueController** was created by **CreateOnDedicatedThread**.
    /// - Returns: An asynchronous operation which will complete after the queue has dispatched all of its remaining work.
    public func shutdownQueueAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.shutdownQueueAsync())
    }

    // MARK: Windows.System.IDispatcherQueueControllerStatics members

    /// Creates a DispatcherQueue that you can use to run tasks on a dedicated thread.
    /// - Returns: The created **DispatcherQueueController**.
    public static func createOnDedicatedThread() throws -> WindowsSystem_DispatcherQueueController {
        try COM.NullResult.unwrap(_idispatcherQueueControllerStatics.createOnDedicatedThread())
    }

    // MARK: Implementation details

    private static var _idispatcherQueueControllerStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsSystem_IDispatcherQueueControllerStatics>? = nil

    internal static var _idispatcherQueueControllerStatics: COM.COMInterop<CWinRT.SWRT_WindowsSystem_IDispatcherQueueControllerStatics> {
        get throws {
            try _idispatcherQueueControllerStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.System.DispatcherQueueController", id: CWinRT.SWRT_WindowsSystem_IDispatcherQueueControllerStatics.iid)
            }
        }
    }
}