// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides events that fire during enumeration of users, when the collection of users changes, or when a user's authentication status changes.
public final class WindowsSystem_UserWatcher: WindowsRuntime.WinRTImport<WindowsSystem_UserWatcherProjection> {
    // MARK: Windows.System.IUserWatcher members

    /// Gets the status of a user watcher.
    /// - Returns: The status of the user watcher.
    public var status: WindowsSystem_UserWatcherStatus {
        get throws {
            try _interop.get_Status()
        }
    }

    /// Fires when a user is added to the collection of users returned by User.FindAllAsync.
    public func added(adding handler: WindowsFoundation_TypedEventHandler<WindowsSystem_UserWatcher?, WindowsSystem_UserChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Added(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: added)
    }

    public func added(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Added(token)
    }

    /// Fires when a user's authentication status has changed.
    public func authenticationStatusChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsSystem_UserWatcher?, WindowsSystem_UserChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_AuthenticationStatusChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: authenticationStatusChanged)
    }

    public func authenticationStatusChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_AuthenticationStatusChanged(token)
    }

    /// Fires when a user's authentication status is about to change.
    public func authenticationStatusChanging(adding handler: WindowsFoundation_TypedEventHandler<WindowsSystem_UserWatcher?, WindowsSystem_UserAuthenticationStatusChangingEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_AuthenticationStatusChanging(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: authenticationStatusChanging)
    }

    public func authenticationStatusChanging(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_AuthenticationStatusChanging(token)
    }

    /// Fires when the initial pass of watcher events has been processed and the collection of users is complete.
    public func enumerationCompleted(adding handler: WindowsFoundation_TypedEventHandler<WindowsSystem_UserWatcher?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_EnumerationCompleted(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: enumerationCompleted)
    }

    public func enumerationCompleted(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_EnumerationCompleted(token)
    }

    /// Fires when a user is removed from the collection of users returned by User.FindAllAsync.
    public func removed(adding handler: WindowsFoundation_TypedEventHandler<WindowsSystem_UserWatcher?, WindowsSystem_UserChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Removed(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: removed)
    }

    public func removed(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Removed(token)
    }

    /// Fires when the user watcher has stopped.
    public func stopped(adding handler: WindowsFoundation_TypedEventHandler<WindowsSystem_UserWatcher?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Stopped(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: stopped)
    }

    public func stopped(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Stopped(token)
    }

    /// Fires when the data associated with a user has changed.
    public func updated(adding handler: WindowsFoundation_TypedEventHandler<WindowsSystem_UserWatcher?, WindowsSystem_UserChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Updated(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: updated)
    }

    public func updated(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Updated(token)
    }

    /// Starts the user watcher.
    public func start() throws {
        try _interop.start()
    }

    /// Stops the user watcher.
    public func stop() throws {
        try _interop.stop()
    }

    // MARK: Implementation details
}