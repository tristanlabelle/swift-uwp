// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Allows you to monitor diagnostic information for an app and get notifications when an app is added or removed from the list of running apps.
public final class WindowsSystem_AppDiagnosticInfoWatcher: WindowsRuntime.WinRTImport<WindowsSystem_AppDiagnosticInfoWatcherProjection> {
    // MARK: Windows.System.IAppDiagnosticInfoWatcher members

    /// Gets this **AppDiagnosticInfoWatcher** status.
    /// - Returns: The status such as Started, Stopped, and so on.
    public var status: WindowsSystem_AppDiagnosticInfoWatcherStatus {
        get throws {
            try _interop.get_Status()
        }
    }

    /// Event that fires when an app is added to the list of running apps.
    public func added(adding handler: WindowsFoundation_TypedEventHandler<WindowsSystem_AppDiagnosticInfoWatcher?, WindowsSystem_AppDiagnosticInfoWatcherEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Added(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: added)
    }

    public func added(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Added(token)
    }

    /// Fires when the watcher has completed enumerating the list of running apps that are available to monitor.
    public func enumerationCompleted(adding handler: WindowsFoundation_TypedEventHandler<WindowsSystem_AppDiagnosticInfoWatcher?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_EnumerationCompleted(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: enumerationCompleted)
    }

    public func enumerationCompleted(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_EnumerationCompleted(token)
    }

    /// Fires when one of the apps has been removed from the list of running apps.
    public func removed(adding handler: WindowsFoundation_TypedEventHandler<WindowsSystem_AppDiagnosticInfoWatcher?, WindowsSystem_AppDiagnosticInfoWatcherEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Removed(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: removed)
    }

    public func removed(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Removed(token)
    }

    /// Event that fires when this **AppDiagnosticInfoWatcher** stops watching for changes.
    public func stopped(adding handler: WindowsFoundation_TypedEventHandler<WindowsSystem_AppDiagnosticInfoWatcher?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Stopped(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: stopped)
    }

    public func stopped(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Stopped(token)
    }

    /// Start firing events when the execution state changes, or apps change, within the list of running apps.
    public func start() throws {
        try _interop.start()
    }

    /// Stops firing events when the execution state changes, or apps change, within the list of running apps.
    public func stop() throws {
        try _interop.stop()
    }

    // MARK: Implementation details
}