// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides package identification info, such as name, version, and publisher.
public final class WindowsApplicationModel_PackageId: WindowsRuntime.WinRTImport<WindowsApplicationModel_PackageIdProjection> {
    // MARK: Windows.ApplicationModel.IPackageId members

    /// Gets the processor architecture for which the package was created.
    /// - Returns: The processor architecture.
    public var architecture: WindowsSystem_ProcessorArchitecture {
        get throws {
            try _interop.get_Architecture()
        }
    }

    /// Gets the family name of the package.
    /// - Returns: The family name.
    public var familyName: Swift.String {
        get throws {
            try _interop.get_FamilyName()
        }
    }

    /// Gets the full name of the package.
    /// - Returns: The full name.
    public var fullName: Swift.String {
        get throws {
            try _interop.get_FullName()
        }
    }

    /// Gets the name of the package.
    /// - Returns: The package name.
    public var name: Swift.String {
        get throws {
            try _interop.get_Name()
        }
    }

    /// Gets the publisher of the package.
    /// - Returns: The publisher.
    public var publisher: Swift.String {
        get throws {
            try _interop.get_Publisher()
        }
    }

    /// Gets the publisher ID of the package.
    /// - Returns: The publisher ID.
    public var publisherId: Swift.String {
        get throws {
            try _interop.get_PublisherId()
        }
    }

    /// Gets the resource ID of the package.
    /// - Returns: The resource ID. If there is no resource ID for the package, this property is null.
    public var resourceId: Swift.String {
        get throws {
            try _interop.get_ResourceId()
        }
    }

    /// Gets the package version info.
    /// - Returns: The package version information.
    public var version: WindowsApplicationModel_PackageVersion {
        get throws {
            try _interop.get_Version()
        }
    }

    // MARK: Windows.ApplicationModel.IPackageIdWithMetadata members

    /// Windows Phone only. Gets the value of the Author attribute for the specified application package.
    /// - Returns: The value of the Author attribute for the specified application package.
    public var author: Swift.String {
        get throws {
            try _ipackageIdWithMetadata.get_Author()
        }
    }

    /// Windows Phone only. Gets the value of the ProductID attribute associated with this XAP application package.
    /// - Returns: The value of the ProductID attribute associated with this XAP application package.
    public var productId: Swift.String {
        get throws {
            try _ipackageIdWithMetadata.get_ProductId()
        }
    }

    // MARK: Implementation details

    private var _ipackageIdWithMetadata_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModel_IPackageIdWithMetadata>? = nil

    internal var _ipackageIdWithMetadata: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModel_IPackageIdWithMetadata> {
        get throws {
            try _ipackageIdWithMetadata_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModel_IPackageIdWithMetadata.iid).cast(to: CWinRT.SWRT_WindowsApplicationModel_IPackageIdWithMetadata.self)
            }
        }
    }

    deinit {
        _ipackageIdWithMetadata_storage?.release()
    }
}