// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides information about the package that is being updated.
public final class WindowsApplicationModel_PackageUpdatingEventArgs: WindowsRuntime.WinRTImport<WindowsApplicationModel_PackageUpdatingEventArgsProjection> {
    // MARK: Windows.ApplicationModel.IPackageUpdatingEventArgs members

    /// Gets the id for the update operation.
    /// - Returns: A unique value that an app can use to correlate events that relate to a single deployment operation.
    public var activityId: Foundation.UUID {
        get throws {
            try _interop.get_ActivityId()
        }
    }

    /// Gets the result of the package uninstall operation.
    /// - Returns: The result of the package uninstall operation.
    public var errorCode: COM.HResult {
        get throws {
            try _interop.get_ErrorCode()
        }
    }

    /// Indicates whether the app package is done updating.
    /// - Returns: **True** if the app package is done updating; **false** otherwise.
    public var isComplete: Swift.Bool {
        get throws {
            try _interop.get_IsComplete()
        }
    }

    /// Gets an approximation of the package's update progress.
    /// - Returns: A value in the range of 0 through 1.0 which represents approximately how far along the package is in the update process.
    public var progress: Swift.Double {
        get throws {
            try _interop.get_Progress()
        }
    }

    /// Gets the package that is being updated.
    /// - Returns: The package being updated. This is the original package that was on the machine that is now being updated.
    public var sourcePackage: WindowsApplicationModel_Package {
        get throws {
            try COM.NullResult.unwrap(_interop.get_SourcePackage())
        }
    }

    /// Gets the updated package.
    /// - Returns: This is the new package that is an update to the old package on the device.
    public var targetPackage: WindowsApplicationModel_Package {
        get throws {
            try COM.NullResult.unwrap(_interop.get_TargetPackage())
        }
    }

    // MARK: Implementation details
}