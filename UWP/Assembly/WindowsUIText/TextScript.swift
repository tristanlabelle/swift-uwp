// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Specifies the character repertoire (typically the script) for a run of character formatting.
public struct WindowsUIText_TextScript: RawRepresentable, Hashable, Codable {
    public var rawValue: Swift.Int32

    public init(rawValue: Swift.Int32 = 0) {
        self.rawValue = rawValue
    }

    /// Undefined
    public static let undefined = Self()

    /// Latin 1 (ANSI)
    public static let ansi = Self(rawValue: 1)

    /// Latin 1 and Latin 2
    public static let eastEurope = Self(rawValue: 2)

    /// Cyrillic
    public static let cyrillic = Self(rawValue: 3)

    /// Greek
    public static let greek = Self(rawValue: 4)

    /// Turkish (Latin 1 + dotless i, and so on)
    public static let turkish = Self(rawValue: 5)

    /// Hebrew
    public static let hebrew = Self(rawValue: 6)

    /// Arabic
    public static let arabic = Self(rawValue: 7)

    /// From Latin 1 and 2
    public static let baltic = Self(rawValue: 8)

    /// Latin 1 with some combining marks
    public static let vietnamese = Self(rawValue: 9)

    /// Default character repertoire
    public static let `default` = Self(rawValue: 10)

    /// Symbol character set (not Unicode)
    public static let symbol = Self(rawValue: 11)

    /// Thai
    public static let thai = Self(rawValue: 12)

    /// Japanese
    public static let shiftJis = Self(rawValue: 13)

    /// Simplified Chinese
    public static let gb2312 = Self(rawValue: 14)

    /// Hangul
    public static let hangul = Self(rawValue: 15)

    /// Traditional Chinese
    public static let big5 = Self(rawValue: 16)

    /// PC437 character set (disk operating system (DOS))
    public static let pc437 = Self(rawValue: 17)

    /// OEM character set (original PC)
    public static let oem = Self(rawValue: 18)

    /// Main Macintosh character repertoire
    public static let mac = Self(rawValue: 19)

    /// Armenian
    public static let armenian = Self(rawValue: 20)

    /// Syriac
    public static let syriac = Self(rawValue: 21)

    /// Thaana
    public static let thaana = Self(rawValue: 22)

    /// Devanagari
    public static let devanagari = Self(rawValue: 23)

    /// Bangla
    public static let bengali = Self(rawValue: 24)

    /// Gurmukhi
    public static let gurmukhi = Self(rawValue: 25)

    /// Gujarati
    public static let gujarati = Self(rawValue: 26)

    /// Odia
    public static let oriya = Self(rawValue: 27)

    /// Tamil
    public static let tamil = Self(rawValue: 28)

    /// Telugu
    public static let telugu = Self(rawValue: 29)

    /// Kannada
    public static let kannada = Self(rawValue: 30)

    /// Malayalam
    public static let malayalam = Self(rawValue: 31)

    /// Sinhala
    public static let sinhala = Self(rawValue: 32)

    /// Lao
    public static let lao = Self(rawValue: 33)

    /// Tibetan
    public static let tibetan = Self(rawValue: 34)

    /// Myanmar
    public static let myanmar = Self(rawValue: 35)

    /// Georgian
    public static let georgian = Self(rawValue: 36)

    /// Jamo
    public static let jamo = Self(rawValue: 37)

    /// Ethiopic
    public static let ethiopic = Self(rawValue: 38)

    /// Cherokee
    public static let cherokee = Self(rawValue: 39)

    /// Aboriginal
    public static let aboriginal = Self(rawValue: 40)

    /// Ogham
    public static let ogham = Self(rawValue: 41)

    /// Runic
    public static let runic = Self(rawValue: 42)

    /// Khmer
    public static let khmer = Self(rawValue: 43)

    /// Mongolian
    public static let mongolian = Self(rawValue: 44)

    /// Braille
    public static let braille = Self(rawValue: 45)

    /// Yi
    public static let yi = Self(rawValue: 46)

    /// Limbu
    public static let limbu = Self(rawValue: 47)

    /// TaiLe
    public static let taiLe = Self(rawValue: 48)

    /// TaiLu
    public static let newTaiLue = Self(rawValue: 49)

    /// Syloti Nagri
    public static let sylotiNagri = Self(rawValue: 50)

    /// Kharoshthi
    public static let kharoshthi = Self(rawValue: 51)

    /// Kayahli
    public static let kayahli = Self(rawValue: 52)

    /// Unicode symbol such as math operators
    public static let unicodeSymbol = Self(rawValue: 53)

    /// Emoji
    public static let emoji = Self(rawValue: 54)

    /// Glagolitic
    public static let glagolitic = Self(rawValue: 55)

    /// Lisu
    public static let lisu = Self(rawValue: 56)

    /// Vai
    public static let vai = Self(rawValue: 57)

    /// NKo
    public static let nko = Self(rawValue: 58)

    /// Osmanya
    public static let osmanya = Self(rawValue: 59)

    /// PhagsPa
    public static let phagsPa = Self(rawValue: 60)

    /// Gothic
    public static let gothic = Self(rawValue: 61)

    /// Deseret
    public static let deseret = Self(rawValue: 62)

    /// Tifinagh
    public static let tifinagh = Self(rawValue: 63)
}