// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides access to existing signal detector and configuration definitions of a digital assistant.
public final class WindowsApplicationModelConversationalAgent_ConversationalAgentDetectorManager: WindowsRuntime.WinRTImport<WindowsApplicationModelConversationalAgent_ConversationalAgentDetectorManagerProjection> {
    // MARK: Windows.ApplicationModel.ConversationalAgent.IConversationalAgentDetectorManager members

    /// Gets all ActivationSignalDetector objects available on the system that are associated with this manager and that correspond to the type of detector specified.
    /// - Returns: When this method completes successfully, it returns a collection of activation signal detectors.
    public func getAllActivationSignalDetectors() throws -> WindowsFoundationCollections_IVectorView<WindowsApplicationModelConversationalAgent_ActivationSignalDetector?> {
        try COM.NullResult.unwrap(_interop.getAllActivationSignalDetectors())
    }

    /// Asynchronously gets all ActivationSignalDetector objects available on the system that are associated with this manager and that correspond to the type of detector specified.
    /// - Returns: When this method completes successfully, it returns a collection of activation signal detectors.
    public func getAllActivationSignalDetectorsAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsApplicationModelConversationalAgent_ActivationSignalDetector?>?> {
        try COM.NullResult.unwrap(_interop.getAllActivationSignalDetectorsAsync())
    }

    /// Gets all ActivationSignalDetector objects available on the system that are associated with this manager.
    /// - Parameter kind: A supported ActivationSignalDetector type.
    /// - Returns: When this method completes successfully, it returns an activation signal detector.
    public func getActivationSignalDetectors(_ kind: WindowsApplicationModelConversationalAgent_ActivationSignalDetectorKind) throws -> WindowsFoundationCollections_IVectorView<WindowsApplicationModelConversationalAgent_ActivationSignalDetector?> {
        try COM.NullResult.unwrap(_interop.getActivationSignalDetectors(kind))
    }

    /// Asynchronously gets all ActivationSignalDetector objects available on the system that are associated with this manager.
    /// - Parameter kind: A supported ActivationSignalDetector type.
    /// - Returns: When this method completes successfully, it returns an activation signal detector.
    public func getActivationSignalDetectorsAsync(_ kind: WindowsApplicationModelConversationalAgent_ActivationSignalDetectorKind) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsApplicationModelConversationalAgent_ActivationSignalDetector?>?> {
        try COM.NullResult.unwrap(_interop.getActivationSignalDetectorsAsync(kind))
    }

    // MARK: Windows.ApplicationModel.ConversationalAgent.IConversationalAgentDetectorManager2 members

    public func getActivationSignalDetectorFromId(_ detectorId: Swift.String) throws -> WindowsApplicationModelConversationalAgent_ActivationSignalDetector {
        try COM.NullResult.unwrap(_iconversationalAgentDetectorManager2.getActivationSignalDetectorFromId(detectorId))
    }

    public func getActivationSignalDetectorFromIdAsync(_ detectorId: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelConversationalAgent_ActivationSignalDetector?> {
        try COM.NullResult.unwrap(_iconversationalAgentDetectorManager2.getActivationSignalDetectorFromIdAsync(detectorId))
    }

    // MARK: Windows.ApplicationModel.ConversationalAgent.IConversationalAgentDetectorManagerStatics members

    /// Gets the global manager associated with all ActivationSignalDetector objects available on the system.
    /// - Returns: The global manager associated with all ActivationSignalDetector objects available on the system.
    public static var `default`: WindowsApplicationModelConversationalAgent_ConversationalAgentDetectorManager {
        get throws {
            try COM.NullResult.unwrap(_iconversationalAgentDetectorManagerStatics.get_Default())
        }
    }

    // MARK: Implementation details

    private var _iconversationalAgentDetectorManager2_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelConversationalAgent_IConversationalAgentDetectorManager2>? = nil

    internal var _iconversationalAgentDetectorManager2: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelConversationalAgent_IConversationalAgentDetectorManager2> {
        get throws {
            try _iconversationalAgentDetectorManager2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelConversationalAgent_IConversationalAgentDetectorManager2.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelConversationalAgent_IConversationalAgentDetectorManager2.self)
            }
        }
    }

    deinit {
        _iconversationalAgentDetectorManager2_storage?.release()
    }

    private static var _iconversationalAgentDetectorManagerStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelConversationalAgent_IConversationalAgentDetectorManagerStatics>? = nil

    internal static var _iconversationalAgentDetectorManagerStatics: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelConversationalAgent_IConversationalAgentDetectorManagerStatics> {
        get throws {
            try _iconversationalAgentDetectorManagerStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.ConversationalAgent.ConversationalAgentDetectorManager", id: CWinRT.SWRT_WindowsApplicationModelConversationalAgent_IConversationalAgentDetectorManagerStatics.iid)
            }
        }
    }
}