// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a printing operation including the content to be printed, as well as providing access to information describing how the content is to be printed.
public final class WindowsGraphicsPrinting_PrintTask: WindowsRuntime.WinRTImport<WindowsGraphicsPrinting_PrintTaskProjection> {
    // MARK: Windows.Graphics.Printing.IPrintTask members

    /// Retrieves the PrintTaskOptions for the print task that defines how the content is to be formatted for printing.
    /// - Returns: The list of print task options.
    public var options: WindowsGraphicsPrinting_PrintTaskOptions {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Options())
        }
    }

    /// Retrieves a set of properties associated with the PrintTask.
    /// - Returns: The data package property set.
    public var properties: WindowsApplicationModelDataTransfer_DataPackagePropertySet {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Properties())
        }
    }

    /// Returns a pointer to the app-provided object that represents the content to be printed. This object must support the IPrintDocumentSource interface.
    /// - Returns: The print task object.
    public var source: WindowsGraphicsPrinting_IPrintDocumentSource {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Source())
        }
    }

    /// Raised when the print task is completed.
    public func completed(adding eventHandler: WindowsFoundation_TypedEventHandler<WindowsGraphicsPrinting_PrintTask?, WindowsGraphicsPrinting_PrintTaskCompletedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Completed(eventHandler)
        return WindowsRuntime.EventRegistration(token: _token, remover: completed)
    }

    public func completed(removing eventCookie: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Completed(eventCookie)
    }

    /// Raised when the print system initializes print preview mode.
    public func previewing(adding eventHandler: WindowsFoundation_TypedEventHandler<WindowsGraphicsPrinting_PrintTask?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Previewing(eventHandler)
        return WindowsRuntime.EventRegistration(token: _token, remover: previewing)
    }

    public func previewing(removing eventCookie: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Previewing(eventCookie)
    }

    /// Raised to provide progress information about how much of the printed content has been submitted to the print subsystem for printing.
    public func progressing(adding eventHandler: WindowsFoundation_TypedEventHandler<WindowsGraphicsPrinting_PrintTask?, WindowsGraphicsPrinting_PrintTaskProgressingEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Progressing(eventHandler)
        return WindowsRuntime.EventRegistration(token: _token, remover: progressing)
    }

    public func progressing(removing eventCookie: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Progressing(eventCookie)
    }

    /// Raised when a print task begins submitting content to the print subsystem to be printed.
    public func submitting(adding eventHandler: WindowsFoundation_TypedEventHandler<WindowsGraphicsPrinting_PrintTask?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Submitting(eventHandler)
        return WindowsRuntime.EventRegistration(token: _token, remover: submitting)
    }

    public func submitting(removing eventCookie: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Submitting(eventCookie)
    }

    // MARK: Windows.Graphics.Printing.IPrintTaskTargetDeviceSupport members

    /// Gets or sets a value that indicates whether the PrintTask supports 3D manufacturing devices, like a 3D printer.
    /// - Returns: True, if 3D manufacturing devices are supported.
    public var is3DManufacturingTargetEnabled: Swift.Bool {
        get throws {
            try _iprintTaskTargetDeviceSupport.get_Is3DManufacturingTargetEnabled()
        }
    }

    /// Gets or sets a value that indicates whether the PrintTask supports 3D manufacturing devices, like a 3D printer.
    /// - Returns: True, if 3D manufacturing devices are supported.
    public func is3DManufacturingTargetEnabled(_ value: Swift.Bool) throws {
        try _iprintTaskTargetDeviceSupport.put_Is3DManufacturingTargetEnabled(value)
    }

    /// Gets or sets a value indicating whether the PrintTask supports printer targets.
    /// - Returns: True if the PrintTask supports printer targets.
    public var isPrinterTargetEnabled: Swift.Bool {
        get throws {
            try _iprintTaskTargetDeviceSupport.get_IsPrinterTargetEnabled()
        }
    }

    /// Gets or sets a value indicating whether the PrintTask supports printer targets.
    /// - Returns: True if the PrintTask supports printer targets.
    public func isPrinterTargetEnabled(_ value: Swift.Bool) throws {
        try _iprintTaskTargetDeviceSupport.put_IsPrinterTargetEnabled(value)
    }

    // MARK: Windows.Graphics.Printing.IPrintTask2 members

    /// Gets or sets a value that indicates whether the PrintTask will show a print preview.
    /// - Returns: True, if print preview is enabled.
    public var isPreviewEnabled: Swift.Bool {
        get throws {
            try _iprintTask2.get_IsPreviewEnabled()
        }
    }

    /// Gets or sets a value that indicates whether the PrintTask will show a print preview.
    /// - Returns: True, if print preview is enabled.
    public func isPreviewEnabled(_ value: Swift.Bool) throws {
        try _iprintTask2.put_IsPreviewEnabled(value)
    }

    // MARK: Implementation details

    private var _iprintTaskTargetDeviceSupport_storage: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsPrinting_IPrintTaskTargetDeviceSupport>? = nil

    internal var _iprintTaskTargetDeviceSupport: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsPrinting_IPrintTaskTargetDeviceSupport> {
        get throws {
            try _iprintTaskTargetDeviceSupport_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsGraphicsPrinting_IPrintTaskTargetDeviceSupport.iid).cast(to: CWinRT.SWRT_WindowsGraphicsPrinting_IPrintTaskTargetDeviceSupport.self)
            }
        }
    }

    private var _iprintTask2_storage: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsPrinting_IPrintTask2>? = nil

    internal var _iprintTask2: COM.COMInterop<CWinRT.SWRT_WindowsGraphicsPrinting_IPrintTask2> {
        get throws {
            try _iprintTask2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsGraphicsPrinting_IPrintTask2.iid).cast(to: CWinRT.SWRT_WindowsGraphicsPrinting_IPrintTask2.self)
            }
        }
    }

    deinit {
        _iprintTaskTargetDeviceSupport_storage?.release()
        _iprintTask2_storage?.release()
    }
}