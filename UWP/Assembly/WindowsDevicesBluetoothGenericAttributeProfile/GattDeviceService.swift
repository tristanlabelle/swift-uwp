// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a GATT Primary Service on a Bluetooth device. The GattDeviceService class represents a GATT service on a Bluetooth LE device. It is instantiated by using a device service instance path, obtained by finding a device using the Windows.Devices.Enumeration API.
public final class WindowsDevicesBluetoothGenericAttributeProfile_GattDeviceService: WindowsRuntime.WinRTImport<WindowsDevicesBluetoothGenericAttributeProfile_GattDeviceServiceProjection>, WindowsFoundation_IClosableProtocol {
    // MARK: Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService members

    /// Gets the handle used to uniquely identify GATT-based service attributes as declared on the Bluetooth LE device.
    /// - Returns: Handle to uniquely identify GATT-based service attributes.
    public var attributeHandle: Swift.UInt16 {
        get throws {
            try _interop.get_AttributeHandle()
        }
    }

    /// Get the string that represents the GATT service instance path used to instantiate the GattDeviceService.
    /// - Returns: String that represents the GATT service instance path used to instantiate the GattDeviceService.
    public var deviceId: Swift.String {
        get throws {
            try _interop.get_DeviceId()
        }
    }

    /// Gets the GATT Service UUID associated with this **GattDeviceService**.
    /// - Returns: **A 128-bit Bluetooth GATT Service UUID, represented as a standard GUID object.**
    public var uuid: Foundation.UUID {
        get throws {
            try _interop.get_Uuid()
        }
    }

    /// Returns a vector of characteristics, that are identified by the specified UUID and belong to this GattDeviceService instance.
    /// - Parameter characteristicUuid: The UUID for the characteristics to be retrieved.
    /// - Returns: A vector of GattCharacteristic objects whose UUIDs match characteristicUuid.
    public func getCharacteristics(_ characteristicUuid: Foundation.UUID) throws -> WindowsFoundationCollections_IVectorView<WindowsDevicesBluetoothGenericAttributeProfile_GattCharacteristic?> {
        try COM.NullResult.unwrap(_interop.getCharacteristics(characteristicUuid))
    }

    /// Returns a vector of included services, that are identified by the specified UUID and belong to this GattDeviceService instance.
    /// - Parameter serviceUuid: The UUID for the included services to be retrieved.
    /// - Returns: A vector of included services whose UUIDs match serviceUuid.
    public func getIncludedServices(_ serviceUuid: Foundation.UUID) throws -> WindowsFoundationCollections_IVectorView<WindowsDevicesBluetoothGenericAttributeProfile_GattDeviceService?> {
        try COM.NullResult.unwrap(_interop.getIncludedServices(serviceUuid))
    }

    // MARK: Windows.Foundation.IClosable members

    /// Releases the resources associated with the GattDeviceService class. This allows other apps to access the resources of the GattDeviceService in question. A GattDeviceService object should not be used after Close is invoked, instead a new GattDeviceService object should be instantiated using the FromIdAsync method.
    public func close() throws {
        try _iclosable.close()
    }

    // MARK: Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService2 members

    /// Gets the BluetoothLEDevice object describing the device associated with the current GattDeviceService object.
    /// - Returns: The BluetoothLEDevice object describing the device associated with the current GattDeviceService object.
    public var device: WindowsDevicesBluetooth_BluetoothLEDevice {
        get throws {
            try COM.NullResult.unwrap(_igattDeviceService2.get_Device())
        }
    }

    /// Gets the read-only list of parent services for this service.
    /// - Returns: A read-only list of parent services from which this object is derived, if this GattDeviceService is an included service; Otherwise, null.
    public var parentServices: WindowsFoundationCollections_IVectorView<WindowsDevicesBluetoothGenericAttributeProfile_GattDeviceService?> {
        get throws {
            try COM.NullResult.unwrap(_igattDeviceService2.get_ParentServices())
        }
    }

    /// Gets the collection of all characteristics belonging to this GattDeviceService instance.
    /// - Returns: The collection of all characteristics belonging to this GattDeviceService instance.
    public func getAllCharacteristics() throws -> WindowsFoundationCollections_IVectorView<WindowsDevicesBluetoothGenericAttributeProfile_GattCharacteristic?> {
        try COM.NullResult.unwrap(_igattDeviceService2.getAllCharacteristics())
    }

    /// Gets the collection of all included services belonging to this GattDeviceService instance.
    /// - Returns: The collection of all included services belonging to this GattDeviceService instance.
    public func getAllIncludedServices() throws -> WindowsFoundationCollections_IVectorView<WindowsDevicesBluetoothGenericAttributeProfile_GattDeviceService?> {
        try COM.NullResult.unwrap(_igattDeviceService2.getAllIncludedServices())
    }

    // MARK: Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService3 members

    /// Gets the device access information associated with the current GattDeviceService object.
    /// - Returns: The device access information associated with the current GattDeviceService object.
    public var deviceAccessInformation: WindowsDevicesEnumeration_DeviceAccessInformation {
        get throws {
            try COM.NullResult.unwrap(_igattDeviceService3.get_DeviceAccessInformation())
        }
    }

    /// Gets the session for this GATT device service instance.
    /// - Returns: The session for this GATT device service instance.
    public var session: WindowsDevicesBluetoothGenericAttributeProfile_GattSession {
        get throws {
            try COM.NullResult.unwrap(_igattDeviceService3.get_Session())
        }
    }

    /// Gets the sharing mode for this GATT device service instance.
    /// - Returns: The sharing mode for this GATT device service instance.
    public var sharingMode: WindowsDevicesBluetoothGenericAttributeProfile_GattSharingMode {
        get throws {
            try _igattDeviceService3.get_SharingMode()
        }
    }

    /// Requests access to the GattDeviceService.
    /// - Returns: An asynchronous operation that completes with a DeviceAccessStatus object.
    public func requestAccessAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesEnumeration_DeviceAccessStatus> {
        try COM.NullResult.unwrap(_igattDeviceService3.requestAccessAsync())
    }

    /// Opens the GATT device service with the specified sharingMode.
    /// - Parameter sharingMode: The sharing mode.
    /// - Returns: An asynchronous operation that completes with a GattOpenStatus object.
    public func openAsync(_ sharingMode: WindowsDevicesBluetoothGenericAttributeProfile_GattSharingMode) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesBluetoothGenericAttributeProfile_GattOpenStatus> {
        try COM.NullResult.unwrap(_igattDeviceService3.openAsync(sharingMode))
    }

    /// Gets the characterisitics that are part of this GattDeviceService instance.
    /// - Returns: An asynchronous operation that completes with a GattCharacteristicsResult object.
    public func getCharacteristicsAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesBluetoothGenericAttributeProfile_GattCharacteristicsResult?> {
        try COM.NullResult.unwrap(_igattDeviceService3.getCharacteristicsAsync())
    }

    /// Gets the characterisitics that are part of this GattDeviceService instance.
    /// - Parameter cacheMode: The cache mode.
    /// - Returns: An asynchronous operation that completes with a GattCharacteristicsResult object.
    public func getCharacteristicsAsync(_ cacheMode: WindowsDevicesBluetooth_BluetoothCacheMode) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesBluetoothGenericAttributeProfile_GattCharacteristicsResult?> {
        try COM.NullResult.unwrap(_igattDeviceService3.getCharacteristicsWithCacheModeAsync(cacheMode))
    }

    /// Gets the characterisitics that are part of this GattDeviceService instance and associated with the characteristicUuid.
    /// - Parameter characteristicUuid: The UUID for the characteristics to be retrieved.
    /// - Returns: An asynchronous operation that completes with a GattCharacteristicsResult object.
    public func getCharacteristicsForUuidAsync(_ characteristicUuid: Foundation.UUID) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesBluetoothGenericAttributeProfile_GattCharacteristicsResult?> {
        try COM.NullResult.unwrap(_igattDeviceService3.getCharacteristicsForUuidAsync(characteristicUuid))
    }

    /// Gets the characterisitics that are part of this GattDeviceService instance and associated with the characteristicUuid.
    /// - Parameter characteristicUuid: The UUID for the characteristics to be retrieved.
    /// - Parameter cacheMode: The cache mode.
    /// - Returns: An asynchronous operation that completes with a GattCharacteristicsResult object.
    public func getCharacteristicsForUuidAsync(_ characteristicUuid: Foundation.UUID, _ cacheMode: WindowsDevicesBluetooth_BluetoothCacheMode) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesBluetoothGenericAttributeProfile_GattCharacteristicsResult?> {
        try COM.NullResult.unwrap(_igattDeviceService3.getCharacteristicsForUuidWithCacheModeAsync(characteristicUuid, cacheMode))
    }

    /// Gets the included services that are associated with this GattDeviceService instance.
    /// - Returns: An asynchronous operation that completes with a GattDeviceServicesResult object.
    public func getIncludedServicesAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesBluetoothGenericAttributeProfile_GattDeviceServicesResult?> {
        try COM.NullResult.unwrap(_igattDeviceService3.getIncludedServicesAsync())
    }

    /// Gets the included services that are associated with this GattDeviceService instance.
    /// - Parameter cacheMode: The cache mode.
    /// - Returns: An asynchronous operation that completes with a GattDeviceServicesResult object.
    public func getIncludedServicesAsync(_ cacheMode: WindowsDevicesBluetooth_BluetoothCacheMode) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesBluetoothGenericAttributeProfile_GattDeviceServicesResult?> {
        try COM.NullResult.unwrap(_igattDeviceService3.getIncludedServicesWithCacheModeAsync(cacheMode))
    }

    /// Gets the included services from the serviceUuid that is associated with this GattDeviceService instance.
    /// - Parameter serviceUuid: A 128-bit Bluetooth GATT Service UUID, represented as a standard GUID object.
    /// - Returns: An asynchronous operation that completes with a GattDeviceServicesResult object.
    public func getIncludedServicesForUuidAsync(_ serviceUuid: Foundation.UUID) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesBluetoothGenericAttributeProfile_GattDeviceServicesResult?> {
        try COM.NullResult.unwrap(_igattDeviceService3.getIncludedServicesForUuidAsync(serviceUuid))
    }

    /// Gets the included services from the serviceUuid that is associated with this GattDeviceService instance.
    /// - Parameter serviceUuid: A 128-bit Bluetooth GATT Service UUID, represented as a standard GUID object.
    /// - Parameter cacheMode: The cache mode.
    /// - Returns: An asynchronous operation that completes with a GattDeviceServicesResult object.
    public func getIncludedServicesForUuidAsync(_ serviceUuid: Foundation.UUID, _ cacheMode: WindowsDevicesBluetooth_BluetoothCacheMode) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesBluetoothGenericAttributeProfile_GattDeviceServicesResult?> {
        try COM.NullResult.unwrap(_igattDeviceService3.getIncludedServicesForUuidWithCacheModeAsync(serviceUuid, cacheMode))
    }

    // MARK: Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceStatics members

    /// Instantiates a new GattDeviceService from the device ID.
    /// - Parameter deviceId: The GATT device ID.
    /// - Returns: The object for managing the asynchronous operation, which, upon completion, returns the newly instantiated GattDeviceService.
    public static func fromIdAsync(_ deviceId: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesBluetoothGenericAttributeProfile_GattDeviceService?> {
        try COM.NullResult.unwrap(_igattDeviceServiceStatics.fromIdAsync(deviceId))
    }

    /// Creates a suitable AQS Filter string for use with the CreateWatcher method, from a Bluetooth service UUID.
    /// - Parameter serviceUuid: A 128-bit Bluetooth GATT Service UUID, represented as a standard GUID object.
    /// - Returns: A suitable AQS Selector String which can be passed as a parameter to the CreateWatcher method, in order to retrieve a GATT service instance path.
    public static func getDeviceSelectorFromUuid(_ serviceUuid: Foundation.UUID) throws -> Swift.String {
        try _igattDeviceServiceStatics.getDeviceSelectorFromUuid(serviceUuid)
    }

    /// Creates a suitable AQS Filter string for use with the CreateWatcher method, from a 16-bit Bluetooth GATT Service UUID.
    /// - Parameter serviceShortId: A 16-bit Bluetooth GATT Service UUID.
    /// - Returns: A suitable AQS Selector String which can be passed as a parameter to the CreateWatcher method, in order to retrieve a GATT service instance path
    public static func getDeviceSelectorFromShortId(_ serviceShortId: Swift.UInt16) throws -> Swift.String {
        try _igattDeviceServiceStatics.getDeviceSelectorFromShortId(serviceShortId)
    }

    /// Converts a Bluetooth SIG defined short Id to a full GATT UUID.
    /// - Parameter shortId: A 16-bit Bluetooth GATT Service UUID.
    /// - Returns: The corresponding 128-bit GATT Service UUID, that uniquely identifies this service.
    public static func convertShortIdToUuid(_ shortId: Swift.UInt16) throws -> Foundation.UUID {
        try _igattDeviceServiceStatics.convertShortIdToUuid(shortId)
    }

    // MARK: Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceStatics2 members

    /// Instantiates a new GattDeviceService object from the device ID.
    /// - Parameter deviceId: The GATT device ID.
    /// - Parameter sharingMode: The sharing mode of the GATT device.
    /// - Returns: An asynchronous operation that completes with a GattDeviceService object.
    public static func fromIdAsync(_ deviceId: Swift.String, _ sharingMode: WindowsDevicesBluetoothGenericAttributeProfile_GattSharingMode) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesBluetoothGenericAttributeProfile_GattDeviceService?> {
        try COM.NullResult.unwrap(_igattDeviceServiceStatics2.fromIdWithSharingModeAsync(deviceId, sharingMode))
    }

    /// Creates a suitable AQS Filter string for use with the CreateWatcher method, from a BluetoothDeviceId.
    /// - Parameter bluetoothDeviceId: The bluetooth device ID.
    /// - Returns: A suitable AQS Selector String which can be passed as a parameter to the CreateWatcher method, in order to retrieve a GATT service instance path
    public static func getDeviceSelectorForBluetoothDeviceId(_ bluetoothDeviceId: WindowsDevicesBluetooth_BluetoothDeviceId?) throws -> Swift.String {
        try _igattDeviceServiceStatics2.getDeviceSelectorForBluetoothDeviceId(bluetoothDeviceId)
    }

    /// Creates a suitable AQS Filter string for use with the CreateWatcher method, from a BluetoothDeviceId.
    /// - Parameter bluetoothDeviceId: The bluetooth device ID.
    /// - Parameter cacheMode: The cache mode.
    /// - Returns: A suitable AQS Selector String which can be passed as a parameter to the CreateWatcher method, in order to retrieve a GATT service instance path
    public static func getDeviceSelectorForBluetoothDeviceId(_ bluetoothDeviceId: WindowsDevicesBluetooth_BluetoothDeviceId?, _ cacheMode: WindowsDevicesBluetooth_BluetoothCacheMode) throws -> Swift.String {
        try _igattDeviceServiceStatics2.getDeviceSelectorForBluetoothDeviceIdWithCacheMode(bluetoothDeviceId, cacheMode)
    }

    /// Creates a suitable AQS Filter string for use with the CreateWatcher method, from a BluetoothDeviceId and serviceUuid.
    /// - Parameter bluetoothDeviceId: The bluetooth device ID.
    /// - Parameter serviceUuid: The GATT service ID.
    /// - Returns: A suitable AQS Selector String which can be passed as a parameter to the CreateWatcher method, in order to retrieve a GATT service instance path
    public static func getDeviceSelectorForBluetoothDeviceIdAndUuid(_ bluetoothDeviceId: WindowsDevicesBluetooth_BluetoothDeviceId?, _ serviceUuid: Foundation.UUID) throws -> Swift.String {
        try _igattDeviceServiceStatics2.getDeviceSelectorForBluetoothDeviceIdAndUuid(bluetoothDeviceId, serviceUuid)
    }

    /// Creates a suitable AQS Filter string for use with the CreateWatcher method, from a BluetoothDeviceId and serviceUuid.
    /// - Parameter bluetoothDeviceId: The bluetooth device ID.
    /// - Parameter serviceUuid: The GATT service ID.
    /// - Parameter cacheMode: The cache mode.
    /// - Returns: A suitable AQS Selector String which can be passed as a parameter to the CreateWatcher method, in order to retrieve a GATT service instance path
    public static func getDeviceSelectorForBluetoothDeviceIdAndUuid(_ bluetoothDeviceId: WindowsDevicesBluetooth_BluetoothDeviceId?, _ serviceUuid: Foundation.UUID, _ cacheMode: WindowsDevicesBluetooth_BluetoothCacheMode) throws -> Swift.String {
        try _igattDeviceServiceStatics2.getDeviceSelectorForBluetoothDeviceIdAndUuidWithCacheMode(bluetoothDeviceId, serviceUuid, cacheMode)
    }

    // MARK: Implementation details

    private var _iclosable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable>? = nil

    internal var _iclosable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable> {
        get throws {
            try _iclosable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IClosable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IClosable.self)
            }
        }
    }

    private var _igattDeviceService2_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattDeviceService2>? = nil

    internal var _igattDeviceService2: COM.COMInterop<CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattDeviceService2> {
        get throws {
            try _igattDeviceService2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattDeviceService2.iid).cast(to: CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattDeviceService2.self)
            }
        }
    }

    private var _igattDeviceService3_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattDeviceService3>? = nil

    internal var _igattDeviceService3: COM.COMInterop<CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattDeviceService3> {
        get throws {
            try _igattDeviceService3_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattDeviceService3.iid).cast(to: CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattDeviceService3.self)
            }
        }
    }

    deinit {
        _iclosable_storage?.release()
        _igattDeviceService2_storage?.release()
        _igattDeviceService3_storage?.release()
    }

    private static var _igattDeviceServiceStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattDeviceServiceStatics>? = nil

    internal static var _igattDeviceServiceStatics: COM.COMInterop<CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattDeviceServiceStatics> {
        get throws {
            try _igattDeviceServiceStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService", id: CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattDeviceServiceStatics.iid)
            }
        }
    }

    private static var _igattDeviceServiceStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattDeviceServiceStatics2>? = nil

    internal static var _igattDeviceServiceStatics2: COM.COMInterop<CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattDeviceServiceStatics2> {
        get throws {
            try _igattDeviceServiceStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService", id: CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattDeviceServiceStatics2.iid)
            }
        }
    }
}