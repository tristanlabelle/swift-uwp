// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// This class is used to define a GATT service advertisement parameters.
public final class WindowsDevicesBluetoothGenericAttributeProfile_GattServiceProviderAdvertisingParameters: WindowsRuntime.WinRTImport<WindowsDevicesBluetoothGenericAttributeProfile_GattServiceProviderAdvertisingParametersProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsDevicesBluetoothGenericAttributeProfile_GattServiceProviderAdvertisingParametersProjection.self))
    }

    // MARK: Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisingParameters members

    /// Gets or sets a boolean that indicates if the GATT service is connectable.
    /// - Returns: A boolean that indicates if the GATT service is connectable.
    public var isConnectable: Swift.Bool {
        get throws {
            try _interop.get_IsConnectable()
        }
    }

    /// Gets or sets a boolean that indicates if the GATT service is connectable.
    /// - Returns: A boolean that indicates if the GATT service is connectable.
    public func isConnectable(_ value: Swift.Bool) throws {
        try _interop.put_IsConnectable(value)
    }

    /// Gets or sets a boolean indicating that the GATT service is discoverable.
    /// - Returns: A boolean indicating that the GATT service is discoverable.
    public var isDiscoverable: Swift.Bool {
        get throws {
            try _interop.get_IsDiscoverable()
        }
    }

    /// Gets or sets a boolean indicating that the GATT service is discoverable.
    /// - Returns: A boolean indicating that the GATT service is discoverable.
    public func isDiscoverable(_ value: Swift.Bool) throws {
        try _interop.put_IsDiscoverable(value)
    }

    // MARK: Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisingParameters2 members

    /// For Bluetooth Low Energy, this parameter adds an additional **ServiceData** section to the advertisement payload for the service's service UUID if space is available. If the service data is added to the advertisement, then the service UUID will also be included in the same section in the advertisement.
    /// - Returns: The service data included in a Bluetooth Low Energy advertising payload.
    public var serviceData: WindowsStorageStreams_IBuffer {
        get throws {
            try COM.NullResult.unwrap(_igattServiceProviderAdvertisingParameters2.get_ServiceData())
        }
    }

    /// For Bluetooth Low Energy, this parameter adds an additional **ServiceData** section to the advertisement payload for the service's service UUID if space is available. If the service data is added to the advertisement, then the service UUID will also be included in the same section in the advertisement.
    /// - Returns: The service data included in a Bluetooth Low Energy advertising payload.
    public func serviceData(_ value: WindowsStorageStreams_IBuffer?) throws {
        try _igattServiceProviderAdvertisingParameters2.put_ServiceData(value)
    }

    // MARK: Implementation details

    private var _igattServiceProviderAdvertisingParameters2_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattServiceProviderAdvertisingParameters2>? = nil

    internal var _igattServiceProviderAdvertisingParameters2: COM.COMInterop<CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattServiceProviderAdvertisingParameters2> {
        get throws {
            try _igattServiceProviderAdvertisingParameters2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattServiceProviderAdvertisingParameters2.iid).cast(to: CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattServiceProviderAdvertisingParameters2.self)
            }
        }
    }

    deinit {
        _igattServiceProviderAdvertisingParameters2_storage?.release()
    }

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}