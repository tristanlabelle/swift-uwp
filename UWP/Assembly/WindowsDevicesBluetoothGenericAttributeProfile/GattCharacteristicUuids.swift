// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents an enumeration of the most well known Characteristic UUID values, and provides convenience methods for working with GATT characteristic UUIDs, and static properties providing characteristic UUIDs for common GATT characteristics.
public enum WindowsDevicesBluetoothGenericAttributeProfile_GattCharacteristicUuids {
    // MARK: Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics members

    /// Gets the Bluetooth SIG-defined Battery Level Characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Battery Level Characteristic UUID.
    public static var batteryLevel: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics.get_BatteryLevel()
        }
    }

    /// Gets the Bluetooth SIG-defined Blood Pressure Feature Characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Blood Pressure Feature Characteristic UUID.
    public static var bloodPressureFeature: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics.get_BloodPressureFeature()
        }
    }

    /// Gets the Bluetooth SIG-defined Blood Pressure Measurement Characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Blood Pressure Measurement Characteristic UUID.
    public static var bloodPressureMeasurement: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics.get_BloodPressureMeasurement()
        }
    }

    /// Gets the Bluetooth SIG-defined Body Sensor Location Characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Body Sensor Location Characteristic UUID.
    public static var bodySensorLocation: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics.get_BodySensorLocation()
        }
    }

    /// Gets the Bluetooth SIG-defined Csc Feature Characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Csc Feature Characteristic UUID.
    public static var cscFeature: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics.get_CscFeature()
        }
    }

    /// Gets the Bluetooth SIG-defined Csc Measurement Characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Csc Measurement Characteristic UUID.
    public static var cscMeasurement: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics.get_CscMeasurement()
        }
    }

    /// Gets the Bluetooth SIG-defined Glucose Feature Characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Glucose Feature Characteristic UUID.
    public static var glucoseFeature: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics.get_GlucoseFeature()
        }
    }

    /// Gets the Bluetooth SIG-defined Glucose Measurement Characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Glucose Measurement Characteristic UUID.
    public static var glucoseMeasurement: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics.get_GlucoseMeasurement()
        }
    }

    /// Gets the Bluetooth SIG-defined Glucose Measurement Context Characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Glucose Measurement Context Characteristic UUID.
    public static var glucoseMeasurementContext: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics.get_GlucoseMeasurementContext()
        }
    }

    /// Gets the Bluetooth SIG-defined Heart Rate Control Point Characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Heart Rate Control Point Characteristic UUID.
    public static var heartRateControlPoint: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics.get_HeartRateControlPoint()
        }
    }

    /// Gets the Bluetooth SIG-defined Heart Rate Measurement Characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Heart Rate Measurement Characteristic UUID.
    public static var heartRateMeasurement: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics.get_HeartRateMeasurement()
        }
    }

    /// Gets the Bluetooth SIG-defined Intermediate Cuff Pressure Characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Intermediate Cuff Pressure Characteristic UUID.
    public static var intermediateCuffPressure: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics.get_IntermediateCuffPressure()
        }
    }

    /// Gets the Bluetooth SIG-defined Intermediate Temperature Characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Intermediate Temperature Characteristic UUID.
    public static var intermediateTemperature: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics.get_IntermediateTemperature()
        }
    }

    /// Gets the Bluetooth SIG-defined Measurement Interval Characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Measurement Interval Characteristic UUID.
    public static var measurementInterval: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics.get_MeasurementInterval()
        }
    }

    /// Gets the Bluetooth SIG-defined Record Access Control Point Characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Record Access Control Point Characteristic UUID.
    public static var recordAccessControlPoint: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics.get_RecordAccessControlPoint()
        }
    }

    /// Gets the Bluetooth SIG-defined Rsc Feature Characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Rsc Feature Characteristic UUID.
    public static var rscFeature: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics.get_RscFeature()
        }
    }

    /// Gets the Bluetooth SIG-defined Rsc Measurement Characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Rsc Measurement Characteristic UUID.
    public static var rscMeasurement: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics.get_RscMeasurement()
        }
    }

    /// Gets the Bluetooth SIG-defined SC Control Point Characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined SC Control Point Characteristic UUID.
    public static var sccontrolPoint: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics.get_SCControlPoint()
        }
    }

    /// Gets the Bluetooth SIG-defined Sensor Location Characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Sensor Location Characteristic UUID.
    public static var sensorLocation: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics.get_SensorLocation()
        }
    }

    /// Gets the Bluetooth SIG-defined Temperature Measurement Characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Temperature Measurement Characteristic UUID.
    public static var temperatureMeasurement: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics.get_TemperatureMeasurement()
        }
    }

    /// Gets the Bluetooth SIG-defined Temperature Type Characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Temperature Type Characteristic UUID.
    public static var temperatureType: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics.get_TemperatureType()
        }
    }

    // MARK: Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2 members

    /// Gets the Bluetooth SIG-defined AlertCategoryId characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined AlertCategoryId characteristic UUID.
    public static var alertCategoryId: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_AlertCategoryId()
        }
    }

    /// Gets the Bluetooth SIG-Defined AlertCategoryIdBitMask characteristic UUID. To view a list of all Bluetooth SIG-defined characteristic UUIDs, see Bluetooth SIG-defined Characteristic UUIDs.
    /// - Returns: The Bluetooth SIG-defined AlertCategoryIdBitMask characteristic UUID.
    public static var alertCategoryIdBitMask: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_AlertCategoryIdBitMask()
        }
    }

    /// Gets the Bluetooth SIG-defined AlertLevel characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined AlertLevel characteristic UUID.
    public static var alertLevel: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_AlertLevel()
        }
    }

    /// Gets the Bluetooth SIG-defined AlertNotificationControlPoint characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined AlertNotificationControlPoint characteristic UUID.
    public static var alertNotificationControlPoint: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_AlertNotificationControlPoint()
        }
    }

    /// Gets the Bluetooth SIG-defined AlertStatus characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined AllertStatus characteristic UUID.
    public static var alertStatus: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_AlertStatus()
        }
    }

    /// Gets the Bluetooth SIG-defined BootKeyboardInputReport characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined BootKayboardInputReport characteristic UUID.
    public static var bootKeyboardInputReport: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_BootKeyboardInputReport()
        }
    }

    /// Gets the Bluetooth SIG-defined BootKeyboardOutputReport characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined characteristic UUID.
    public static var bootKeyboardOutputReport: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_BootKeyboardOutputReport()
        }
    }

    /// Gets the Bluetooth SIG-defined BootMouseInputReport characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined BootMouseInputReport characteristic UUID.
    public static var bootMouseInputReport: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_BootMouseInputReport()
        }
    }

    /// Gets the Bluetooth SIG-defined CurrentTime characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined CurrentTime characteristic UUID.
    public static var currentTime: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_CurrentTime()
        }
    }

    /// Gets the Bluetooth SIG-defined CyclingPowerControlPoint characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined CyclingPowerControlPoint characteristic UUID.
    public static var cyclingPowerControlPoint: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_CyclingPowerControlPoint()
        }
    }

    /// Gets the Bluetooth SIG-defined CyclingPowerFeature characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined CyclingPowerFeature characterisitc UUID.
    public static var cyclingPowerFeature: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_CyclingPowerFeature()
        }
    }

    /// Gets the Bluetooth SIG-defined CyclingPowerMeasurement characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined CyclingPowerMeasurement characteristic UUID.
    public static var cyclingPowerMeasurement: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_CyclingPowerMeasurement()
        }
    }

    /// Gets the Bluetooth SIG-defined CyclingPowerVector characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined CyclingPowerVector characteristic UUID.
    public static var cyclingPowerVector: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_CyclingPowerVector()
        }
    }

    /// Gets the Bluetooth SIG-defined DateTime characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined DateTime characteristic UUID.
    public static var dateTime: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_DateTime()
        }
    }

    /// Gets the Bluetooth SIG-defined DayDateTime characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined DayDateTime characteristic UUID.
    public static var dayDateTime: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_DayDateTime()
        }
    }

    /// Gets the Bluetooth SIG-defined DayOfWeek characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined DayOfWeek characteristic UUID.
    public static var dayOfWeek: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_DayOfWeek()
        }
    }

    /// Gets the Bluetooth SIG-defined DstOffset characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined DstOffset characteristic UUID.
    public static var dstOffset: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_DstOffset()
        }
    }

    /// Gets the Bluetooth SIG-defined ExactTime256 characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined ExactTime256 characteristic UUID.
    public static var exactTime256: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_ExactTime256()
        }
    }

    /// Gets the Bluetooth SIG-defined FirmwareRevisionString characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined FirmwareRevisionString characteristic UUID.
    public static var firmwareRevisionString: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_FirmwareRevisionString()
        }
    }

    /// Gets the Bluetooth SIG-defined GapAppearance characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined GapAppearance characteristic UUID.
    public static var gapAppearance: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_GapAppearance()
        }
    }

    /// Gets the Bluetooth SIG-defined GapDeviceName characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined GapDeviceName characteristic UUID.
    public static var gapDeviceName: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_GapDeviceName()
        }
    }

    /// Gets the Bluetooth SIG-defined GapPeripheralPreferredConnectionParameters characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined GapPeripheralPreferredConnectionParameters characteristic UUID.
    public static var gapPeripheralPreferredConnectionParameters: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_GapPeripheralPreferredConnectionParameters()
        }
    }

    /// Gets the Bluetooth GapPeripheralPrivacyFlag characterisitc UUID.
    /// - Returns: The Bluetooth GapPeripheralPrivacyFlag characteristic UUID.
    public static var gapPeripheralPrivacyFlag: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_GapPeripheralPrivacyFlag()
        }
    }

    /// Gets the Bluetooth SIG-defined GapReconnectionAddress characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined GapReconnectionAddress characteristic UUID.
    public static var gapReconnectionAddress: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_GapReconnectionAddress()
        }
    }

    /// Gets the Bluetooth SIG-defined GattServiceChanged characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined GattServiceChanged characteristic UUID.
    public static var gattServiceChanged: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_GattServiceChanged()
        }
    }

    /// Gets the Bluetooth SIG-defined HardwareRevisionString characterisitc UUID.
    /// - Returns: The Bluetooth SIG-defined HardwareRevisionString characteristic UUID.
    public static var hardwareRevisionString: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_HardwareRevisionString()
        }
    }

    /// Gets the Bluetooth SIG-defined HidControlPoint characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined HidControlPoint characteristic UUID.
    public static var hidControlPoint: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_HidControlPoint()
        }
    }

    /// Gets the Bluetooth SIG-defined HidInformation characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined HidInformation characteristic UUID.
    public static var hidInformation: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_HidInformation()
        }
    }

    /// Gets the Bluetooth SIG-defined Ieee1107320601RegulatoryCertificationDataList characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Ieee1107320601RegulatoryCertificationDataList characteristic UUID.
    public static var ieee1107320601RegulatoryCertificationDataList: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_Ieee1107320601RegulatoryCertificationDataList()
        }
    }

    /// Gets the Bluetooth SIG-defined LnControlPoint characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined LnControlPoint characteristic UUID.
    public static var lnControlPoint: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_LnControlPoint()
        }
    }

    /// Gets the Bluetooth SIG-defined LnFeature characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined LnFeature characteristic UUID.
    public static var lnFeature: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_LnFeature()
        }
    }

    /// Gets the Bluetooth SIG-defined LocalTimeInformation characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined LocalTimeInformation characteristic UUID.
    public static var localTimeInformation: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_LocalTimeInformation()
        }
    }

    /// Gets the Bluetooth SIG-defined LocationAndSpeed characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined LocationAndSpeed characteristic UUID.
    public static var locationAndSpeed: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_LocationAndSpeed()
        }
    }

    /// Gets the Bluetooth SIG-defined ManufacturerNameString characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined ManufacturerNameString characteristic UUID.
    public static var manufacturerNameString: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_ManufacturerNameString()
        }
    }

    /// Gets the Bluetooth SIG-defined ModelNumberString UUID.
    /// - Returns: The Bluetooth SIG-defined ModelNumberString UUID.
    public static var modelNumberString: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_ModelNumberString()
        }
    }

    /// Gets the Bluetooth SIG-defined Navigation characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Navigation characteristic UUID.
    public static var navigation: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_Navigation()
        }
    }

    /// Gets the Bluetooth SIG-defined NewAlert characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined NewAlert characteristic UUID.
    public static var newAlert: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_NewAlert()
        }
    }

    /// Gets the Bluetooth SIG-defined PnpId characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined PnpId characteristic UUID.
    public static var pnpId: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_PnpId()
        }
    }

    /// Gets the Bluetooth SIG-defined PositionQuality characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined PositionQuality characteristic UUID.
    public static var positionQuality: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_PositionQuality()
        }
    }

    /// Gets the Bluetooth SIG-defined ProtocolMode characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined ProtocolMode characteristic UUID.
    public static var protocolMode: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_ProtocolMode()
        }
    }

    /// Gets the Bluetooth SIG-defined ReferenceTimeInformation characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined ReferenceTimeInformation characteristic UUID.
    public static var referenceTimeInformation: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_ReferenceTimeInformation()
        }
    }

    /// Gets the Bluetooth SIG-defined Report characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined Report characteristic UUID.
    public static var report: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_Report()
        }
    }

    /// Gets the Bluetooth SIG-defined ReportMap characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined ReportMap characteristic UUID.
    public static var reportMap: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_ReportMap()
        }
    }

    /// Gets the Bluetooth SIG-defined RingerControlPoint characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined RingerControlPoint characteristic UUID.
    public static var ringerControlPoint: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_RingerControlPoint()
        }
    }

    /// Gets the Bluetooth SIG-defined RingerSetting characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined RingerSetting characteristic UUID.
    public static var ringerSetting: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_RingerSetting()
        }
    }

    /// Gets the Bluetooth SIG-defined ScanIntervalWindow characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined ScanIntervalWindow characteristic UUID.
    public static var scanIntervalWindow: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_ScanIntervalWindow()
        }
    }

    /// Gets the Bluetooth SIG-defined ScanRefresh characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined ScanRefresh characteristic UUID.
    public static var scanRefresh: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_ScanRefresh()
        }
    }

    /// Gets the Bluetooth SIG-defined SerialNumberString characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined SerialNumberString characteristic UUID.
    public static var serialNumberString: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_SerialNumberString()
        }
    }

    /// Gets the Bluetooth SIG-defined SoftwareRevisionString characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined SoftwareRevisionString characteristic UUID.
    public static var softwareRevisionString: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_SoftwareRevisionString()
        }
    }

    /// Gets the Bluetooth SIG-defined SupportUnreadAlertCategory characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined SupportUnreadAlertCategory characteristic UUID.
    public static var supportUnreadAlertCategory: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_SupportUnreadAlertCategory()
        }
    }

    /// Gets the Bluetooth SIG-defined SupportedNewAlertCategory characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined SupportedNewAlertCategory characteristic UUID.
    public static var supportedNewAlertCategory: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_SupportedNewAlertCategory()
        }
    }

    /// Gets the Bluetooth SIG-defined SystemId characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined SystemId characteristic UUID.
    public static var systemId: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_SystemId()
        }
    }

    /// Gets the Bluetooth SIG-defined TimeAccuracy characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined TimeAccuracy characteristic UUID.
    public static var timeAccuracy: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_TimeAccuracy()
        }
    }

    /// Gets the Bluetooth SIG-defined TimeSource characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined TimeSource characteristic UUID.
    public static var timeSource: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_TimeSource()
        }
    }

    /// Gets the Bluetooth SIG-defined TimeUpdateControlPoint characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined TimeUpdateControlPoint characteristic UUID.
    public static var timeUpdateControlPoint: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_TimeUpdateControlPoint()
        }
    }

    /// Gets the Bluetooth SIG-defined TimeUpdateState characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined TimeUpdateState characteristic UUID.
    public static var timeUpdateState: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_TimeUpdateState()
        }
    }

    /// Gets the Bluetooth SIG-defined TimeWithDst characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined TimeWithDst characteristic UUID.
    public static var timeWithDst: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_TimeWithDst()
        }
    }

    /// Gets the Bluetooth SIG-defined TimeZone characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined TimeZone characteristic UUID.
    public static var timeZone: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_TimeZone()
        }
    }

    /// Gets the Bluetooth SIG-defined TxPowerLevel characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined TxPowerLevel characteristic UUID.
    public static var txPowerLevel: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_TxPowerLevel()
        }
    }

    /// Gets the Bluetooth SIG-defined UnreadAlertStatus characteristic UUID.
    /// - Returns: The Bluetooth SIG-defined UnreadAlertStatus characteristic UUID.
    public static var unreadAlertStatus: Foundation.UUID {
        get throws {
            try _igattCharacteristicUuidsStatics2.get_UnreadAlertStatus()
        }
    }

    // MARK: Implementation details

    private static var _igattCharacteristicUuidsStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattCharacteristicUuidsStatics>? = nil

    internal static var _igattCharacteristicUuidsStatics: COM.COMInterop<CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattCharacteristicUuidsStatics> {
        get throws {
            try _igattCharacteristicUuidsStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicUuids", id: CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattCharacteristicUuidsStatics.iid)
            }
        }
    }

    private static var _igattCharacteristicUuidsStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattCharacteristicUuidsStatics2>? = nil

    internal static var _igattCharacteristicUuidsStatics2: COM.COMInterop<CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattCharacteristicUuidsStatics2> {
        get throws {
            try _igattCharacteristicUuidsStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicUuids", id: CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattCharacteristicUuidsStatics2.iid)
            }
        }
    }
}