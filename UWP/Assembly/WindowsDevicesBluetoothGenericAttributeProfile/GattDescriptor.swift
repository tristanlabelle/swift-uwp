// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a Descriptor of a GATT Characteristic. The GattDescriptor object represents a GATT Descriptor of a particular characteristic, and is obtained from the Descriptors property of the GattCharacteristic object.
public final class WindowsDevicesBluetoothGenericAttributeProfile_GattDescriptor: WindowsRuntime.WinRTImport<WindowsDevicesBluetoothGenericAttributeProfile_GattDescriptorProjection> {
    // MARK: Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptor members

    /// Gets the GATT Attribute handle used to uniquely identify this attribute on the GATT Server Device.
    /// - Returns: Handle that uniquely identifies this attribute on the GATT Server Device.
    public var attributeHandle: Swift.UInt16 {
        get throws {
            try _interop.get_AttributeHandle()
        }
    }

    /// Gets or sets the desired GATT security options for over the air communication with the device.
    /// - Returns: The desired GATT security options for over the air communication with the device.
    public var protectionLevel: WindowsDevicesBluetoothGenericAttributeProfile_GattProtectionLevel {
        get throws {
            try _interop.get_ProtectionLevel()
        }
    }

    /// Gets or sets the desired GATT security options for over the air communication with the device.
    /// - Returns: The desired GATT security options for over the air communication with the device.
    public func protectionLevel(_ value: WindowsDevicesBluetoothGenericAttributeProfile_GattProtectionLevel) throws {
        try _interop.put_ProtectionLevel(value)
    }

    /// Gets the GATT Descriptor UUID for this GattDescriptor.
    /// - Returns: The GATT Descriptor UUID for this GattDescriptor.
    public var uuid: Foundation.UUID {
        get throws {
            try _interop.get_Uuid()
        }
    }

    /// Performs a Descriptor Value read from a value cache maintained by Windows.
    /// - Returns: The object required to manage the asynchronous operation, which, upon completion, returns a GattReadResult object, which in turn contains the completion status of the asynchronous operation and, if successful, the data read from the device.
    public func readValueAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesBluetoothGenericAttributeProfile_GattReadResult?> {
        try COM.NullResult.unwrap(_interop.readValueAsync())
    }

    /// Performs a Descriptor Value read either from the value cache maintained by Windows, or directly from the device.
    /// - Parameter cacheMode: Specifies whether to read the value directly from the device or from a value cache maintained by Windows.
    /// - Returns: The object required to manage the asynchronous operation, which, upon completion, returns a GattReadResult object, which in turn contains the completion status of the asynchronous operation and, if successful, the data read from the device.
    public func readValueAsync(_ cacheMode: WindowsDevicesBluetooth_BluetoothCacheMode) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesBluetoothGenericAttributeProfile_GattReadResult?> {
        try COM.NullResult.unwrap(_interop.readValueWithCacheModeAsync(cacheMode))
    }

    /// Performs a Descriptor Value write to a Bluetooth LE device.
    /// - Parameter value: A Windows.Storage.Streams.IBuffer object which contains the data to be written to the Bluetooth LE device.
    /// - Returns: The object that manages the asynchronous operation, which, upon completion, returns the status with which the operation completed.
    public func writeValueAsync(_ value: WindowsStorageStreams_IBuffer?) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesBluetoothGenericAttributeProfile_GattCommunicationStatus> {
        try COM.NullResult.unwrap(_interop.writeValueAsync(value))
    }

    // MARK: Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptor2 members

    /// Performs a Descriptor Value write to a Bluetooth LE device.
    /// - Parameter value: A Windows.Storage.Streams.IBuffer object which contains the data to be written to the Bluetooth LE device.
    /// - Returns: An asynchronous operation that completes with the result.
    public func writeValueWithResultAsync(_ value: WindowsStorageStreams_IBuffer?) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesBluetoothGenericAttributeProfile_GattWriteResult?> {
        try COM.NullResult.unwrap(_igattDescriptor2.writeValueWithResultAsync(value))
    }

    // MARK: Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorStatics members

    /// Converts a Bluetooth SIG defined short Id to a full GATT UUID.
    /// - Parameter shortId: A 16-bit Bluetooth GATT Descriptor UUID.
    /// - Returns: The corresponding 128-bit GATT Descriptor UUID, that uniquely identifies this descriptor.
    public static func convertShortIdToUuid(_ shortId: Swift.UInt16) throws -> Foundation.UUID {
        try _igattDescriptorStatics.convertShortIdToUuid(shortId)
    }

    // MARK: Implementation details

    private var _igattDescriptor2_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattDescriptor2>? = nil

    internal var _igattDescriptor2: COM.COMInterop<CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattDescriptor2> {
        get throws {
            try _igattDescriptor2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattDescriptor2.iid).cast(to: CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattDescriptor2.self)
            }
        }
    }

    deinit {
        _igattDescriptor2_storage?.release()
    }

    private static var _igattDescriptorStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattDescriptorStatics>? = nil

    internal static var _igattDescriptorStatics: COM.COMInterop<CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattDescriptorStatics> {
        get throws {
            try _igattDescriptorStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor", id: CWinRT.SWRT_WindowsDevicesBluetoothGenericAttributeProfile_IGattDescriptorStatics.iid)
            }
        }
    }
}