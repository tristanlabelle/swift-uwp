// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Exposes methods and properties to support access by a Microsoft UI Automation client to controls or elements that can be moved, resized, or rotated within a two-dimensional space. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.Transform.
public protocol WindowsUIXamlAutomationProvider_ITransformProviderProtocol: IInspectableProtocol {
    /// Gets a value that indicates whether the element can be moved.
    /// - Returns: **true** if the element can be moved; otherwise, **false**.
    var canMove: Swift.Bool { get throws }

    /// Gets a value that indicates whether the element can be resized.
    /// - Returns: **true** if the element can be resized; otherwise, **false**.
    var canResize: Swift.Bool { get throws }

    /// Gets a value that indicates whether the element can be rotated.
    /// - Returns: **true** if the element can be rotated; otherwise, **false**.
    var canRotate: Swift.Bool { get throws }

    /// Moves the control.
    /// - Parameter x: The absolute screen coordinates of the left side of the control.
    /// - Parameter y: The absolute screen coordinates of the top of the control.
    func move(_ x: Swift.Double, _ y: Swift.Double) throws

    /// Resizes the control.
    /// - Parameter width: The new width of the window, in pixels.
    /// - Parameter height: The new height of the window, in pixels.
    func resize(_ width: Swift.Double, _ height: Swift.Double) throws

    /// Rotates the control.
    /// - Parameter degrees: The number of degrees to rotate the control. A positive number rotates the control clockwise. A negative number rotates the control counterclockwise.
    func rotate(_ degrees: Swift.Double) throws
}

/// Exposes methods and properties to support access by a Microsoft UI Automation client to controls or elements that can be moved, resized, or rotated within a two-dimensional space. Implement this interface in order to support the capabilities that an automation client requests with a GetPattern call and PatternInterface.Transform.
public typealias WindowsUIXamlAutomationProvider_ITransformProvider = any WindowsUIXamlAutomationProvider_ITransformProviderProtocol