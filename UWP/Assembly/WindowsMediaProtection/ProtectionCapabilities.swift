// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Exposes Microsoft PlayReady digital rights management (DRM) capabilities for video decoding, video display, and video output protection subsystems used by the Windows Media Foundation pipeline under a XAML MediaElement or  C++ Media Engine to a WinRT caller.  The caller may use this information to select the most appropriate encoding of DRMâ€™ed content for playback.
public final class WindowsMediaProtection_ProtectionCapabilities: WindowsRuntime.WinRTImport<WindowsMediaProtection_ProtectionCapabilitiesProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsMediaProtection_ProtectionCapabilitiesProjection.self))
    }

    // MARK: Windows.Media.Protection.IProtectionCapabilities members

    /// Queries features of video decoding, display, and output protection subsystems for DRM capabilities.
    /// - Parameter type: String identifying the features for which support is queried queried. This parameter accepts RFC 2045 Content-Type strings to specify media type and subtype identifiers, and RFC 6381 Codecs identifiers for the codecs required. These base strings are consistent with those used in the HTML5 **HTMLMediaElement** **canPlayType** method. RFC 2045 allows for additional, custom parameters as modifiers in the form of `";<parameter>=<name>[=<value>] [,<name>[=<value>]"`.
    /// - Parameter keySystem: A string identifying the PlayReady namespace to check query against, specifying hardware or software protection. Use "com.microsoft.playready.hardware" for hardware queries (PlayReady must have support for hardware offload), "com.microsoft.playready.software" for explicitly querying for software protection support, and "com.microsoft.playready" for general queries (must answer for software protection support to guarantee backward compatibility).
    /// - Returns: A value indicating if the queried capabilities are likely supported, are possibly supported, or are unsupported.
    public func isTypeSupported(_ type: Swift.String, _ keySystem: Swift.String) throws -> WindowsMediaProtection_ProtectionCapabilityResult {
        try _interop.isTypeSupported(type, keySystem)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.Protection.ProtectionCapabilities", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}