// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides a list of installed Win32 apps available to the current user. This includes apps installed for all users as well as only for the current user.
public final class WindowsSystemInventory_InstalledDesktopApp: WindowsRuntime.WinRTImport<WindowsSystemInventory_InstalledDesktopAppProjection>, WindowsFoundation_IStringableProtocol {
    // MARK: Windows.System.Inventory.IInstalledDesktopApp members

    /// Gets the display name of the installed desktop app.
    /// - Returns: The display name of the installed desktop app.
    public var displayName: Swift.String {
        get throws {
            try _interop.get_DisplayName()
        }
    }

    /// Gets the string-based version of the installed desktop app.
    /// - Returns: The string-based version of the installed desktop app.
    public var displayVersion: Swift.String {
        get throws {
            try _interop.get_DisplayVersion()
        }
    }

    /// Gets the string-based ID of the installed desktop app.
    /// - Returns: The string-based ID of the installed desktop app.
    public var id: Swift.String {
        get throws {
            try _interop.get_Id()
        }
    }

    /// Gets the publisher of the installed desktop app.
    /// - Returns: The publisher of the installed desktop app.
    public var publisher: Swift.String {
        get throws {
            try _interop.get_Publisher()
        }
    }

    // MARK: Windows.Foundation.IStringable members

    /// Returns a string that represents the current InstalledDesktopApp object.
    /// - Returns: The string version of the InstalledDesktopApp.
    public func toString() throws -> Swift.String {
        try _istringable.toString()
    }

    // MARK: Windows.System.Inventory.IInstalledDesktopAppStatics members

    /// Gets a list of installed Win32 apps available to the current user. This includes apps installed for all users as well as only for the current user.
    /// - Returns: Returns an async operation indicating that the task has completed and containing a list of installed Win32 apps available to the current user.
    public static func getInventoryAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsSystemInventory_InstalledDesktopApp?>?> {
        try COM.NullResult.unwrap(_iinstalledDesktopAppStatics.getInventoryAsync())
    }

    // MARK: Implementation details

    private var _istringable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IStringable>? = nil

    internal var _istringable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IStringable> {
        get throws {
            try _istringable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IStringable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IStringable.self)
            }
        }
    }

    deinit {
        _istringable_storage?.release()
    }

    private static var _iinstalledDesktopAppStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsSystemInventory_IInstalledDesktopAppStatics>? = nil

    internal static var _iinstalledDesktopAppStatics: COM.COMInterop<CWinRT.SWRT_WindowsSystemInventory_IInstalledDesktopAppStatics> {
        get throws {
            try _iinstalledDesktopAppStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.System.Inventory.InstalledDesktopApp", id: CWinRT.SWRT_WindowsSystemInventory_IInstalledDesktopAppStatics.iid)
            }
        }
    }
}