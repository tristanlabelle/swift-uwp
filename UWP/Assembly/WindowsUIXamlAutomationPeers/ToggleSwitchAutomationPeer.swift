// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Exposes ToggleSwitch types to Microsoft UI Automation.
open class WindowsUIXamlAutomationPeers_ToggleSwitchAutomationPeer: WindowsRuntime.WinRTComposableClass, WindowsUIXamlAutomationProvider_IToggleProviderProtocol {
    // MARK: Windows.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeerFactory members

    public convenience init(_ owner: WindowsUIXamlControls_ToggleSwitch?) throws {
        try self.init(_compose: Self.self != WindowsUIXamlAutomationPeers_ToggleSwitchAutomationPeer.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._itoggleSwitchAutomationPeerFactory.createInstanceWithOwner(owner, baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Automation.Provider.IToggleProvider members

    /// Gets the toggle state of the control.
    /// - Returns: The toggle state of the control.
    public var toggleState: WindowsUIXamlAutomation_ToggleState {
        get throws {
            try _itoggleProvider.get_ToggleState()
        }
    }

    /// Cycles through the toggle states of a control.
    public func toggle() throws {
        try _itoggleProvider.toggle()
    }

    // MARK: Implementation details

    private var _itoggleSwitchAutomationPeer_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationPeers_IToggleSwitchAutomationPeer>? = nil

    internal var _itoggleSwitchAutomationPeer: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationPeers_IToggleSwitchAutomationPeer> {
        get throws {
            try _itoggleSwitchAutomationPeer_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlAutomationPeers_IToggleSwitchAutomationPeer.iid).cast(to: CWinRT.SWRT_WindowsUIXamlAutomationPeers_IToggleSwitchAutomationPeer.self)
            }
        }
    }

    private var _itoggleProvider_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationProvider_IToggleProvider>? = nil

    internal var _itoggleProvider: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationProvider_IToggleProvider> {
        get throws {
            try _itoggleProvider_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlAutomationProvider_IToggleProvider.iid).cast(to: CWinRT.SWRT_WindowsUIXamlAutomationProvider_IToggleProvider.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlAutomationPeers_IToggleSwitchAutomationPeer>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _itoggleSwitchAutomationPeer_storage?.release()
        _itoggleProvider_storage?.release()
    }

    private static var _itoggleSwitchAutomationPeerFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationPeers_IToggleSwitchAutomationPeerFactory>? = nil

    internal static var _itoggleSwitchAutomationPeerFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationPeers_IToggleSwitchAutomationPeerFactory> {
        get throws {
            try _itoggleSwitchAutomationPeerFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer", id: CWinRT.SWRT_WindowsUIXamlAutomationPeers_IToggleSwitchAutomationPeerFactory.iid)
            }
        }
    }
}