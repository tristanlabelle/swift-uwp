// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Exposes RadioButton types to Microsoft UI Automation.
open class WindowsUIXamlAutomationPeers_RadioButtonAutomationPeer: WindowsRuntime.WinRTComposableClass, WindowsUIXamlAutomationProvider_ISelectionItemProviderProtocol {
    // MARK: Windows.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeerFactory members

    public convenience init(_ owner: WindowsUIXamlControls_RadioButton?) throws {
        try self.init(_compose: Self.self != WindowsUIXamlAutomationPeers_RadioButtonAutomationPeer.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._iradioButtonAutomationPeerFactory.createInstanceWithOwner(owner, baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Automation.Provider.ISelectionItemProvider members

    /// Gets a value that indicates whether an item is selected.
    /// - Returns: **true** if the element is selected; otherwise, **false**.
    public var isSelected: Swift.Bool {
        get throws {
            try _iselectionItemProvider.get_IsSelected()
        }
    }

    /// Gets the UI automation provider that implements ISelectionProvider and acts as the container for the calling object.
    /// - Returns: The provider that supports ISelectionProvider.
    public var selectionContainer: WindowsUIXamlAutomationProvider_IRawElementProviderSimple {
        get throws {
            try COM.NullResult.unwrap(_iselectionItemProvider.get_SelectionContainer())
        }
    }

    /// Adds the current element to the collection of selected items.
    public func addToSelection() throws {
        try _iselectionItemProvider.addToSelection()
    }

    /// Removes the current element from the collection of selected items.
    public func removeFromSelection() throws {
        try _iselectionItemProvider.removeFromSelection()
    }

    /// Clears any existing selection and then selects the current element.
    public func select() throws {
        try _iselectionItemProvider.select()
    }

    // MARK: Implementation details

    private var _iradioButtonAutomationPeer_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationPeers_IRadioButtonAutomationPeer>? = nil

    internal var _iradioButtonAutomationPeer: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationPeers_IRadioButtonAutomationPeer> {
        get throws {
            try _iradioButtonAutomationPeer_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlAutomationPeers_IRadioButtonAutomationPeer.iid).cast(to: CWinRT.SWRT_WindowsUIXamlAutomationPeers_IRadioButtonAutomationPeer.self)
            }
        }
    }

    private var _iselectionItemProvider_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationProvider_ISelectionItemProvider>? = nil

    internal var _iselectionItemProvider: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationProvider_ISelectionItemProvider> {
        get throws {
            try _iselectionItemProvider_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlAutomationProvider_ISelectionItemProvider.iid).cast(to: CWinRT.SWRT_WindowsUIXamlAutomationProvider_ISelectionItemProvider.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlAutomationPeers_IRadioButtonAutomationPeer>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _iradioButtonAutomationPeer_storage?.release()
        _iselectionItemProvider_storage?.release()
    }

    private static var _iradioButtonAutomationPeerFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationPeers_IRadioButtonAutomationPeerFactory>? = nil

    internal static var _iradioButtonAutomationPeerFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationPeers_IRadioButtonAutomationPeerFactory> {
        get throws {
            try _iradioButtonAutomationPeerFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer", id: CWinRT.SWRT_WindowsUIXamlAutomationPeers_IRadioButtonAutomationPeerFactory.iid)
            }
        }
    }
}