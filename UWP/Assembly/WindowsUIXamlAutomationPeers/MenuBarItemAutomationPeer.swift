// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Exposes MenuBarItem types to Microsoft UI Automation.
open class WindowsUIXamlAutomationPeers_MenuBarItemAutomationPeer: WindowsRuntime.WinRTComposableClass, WindowsUIXamlAutomationProvider_IExpandCollapseProviderProtocol, WindowsUIXamlAutomationProvider_IInvokeProviderProtocol {
    // MARK: Windows.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeerFactory members

    public convenience init(_ owner: WindowsUIXamlControls_MenuBarItem?) throws {
        try self.init(_compose: Self.self != WindowsUIXamlAutomationPeers_MenuBarItemAutomationPeer.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._imenuBarItemAutomationPeerFactory.createInstance(owner, baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider members

    /// Gets the state, expanded or collapsed, of the MenuBarItem.
    /// - Returns: A value of the enumeration.
    public var expandCollapseState: WindowsUIXamlAutomation_ExpandCollapseState {
        get throws {
            try _iexpandCollapseProvider.get_ExpandCollapseState()
        }
    }

    /// Hides all nodes, controls, or content that are descendants of the MenuBarItem.
    public func collapse() throws {
        try _iexpandCollapseProvider.collapse()
    }

    /// Displays all child nodes, controls, or content of the MenuBarItem.
    public func expand() throws {
        try _iexpandCollapseProvider.expand()
    }

    // MARK: Windows.UI.Xaml.Automation.Provider.IInvokeProvider members

    /// Sends a request to click the MenuBarItem associated with the automation peer.
    public func invoke() throws {
        try _iinvokeProvider.invoke()
    }

    // MARK: Implementation details

    private var _imenuBarItemAutomationPeer_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationPeers_IMenuBarItemAutomationPeer>? = nil

    internal var _imenuBarItemAutomationPeer: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationPeers_IMenuBarItemAutomationPeer> {
        get throws {
            try _imenuBarItemAutomationPeer_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlAutomationPeers_IMenuBarItemAutomationPeer.iid).cast(to: CWinRT.SWRT_WindowsUIXamlAutomationPeers_IMenuBarItemAutomationPeer.self)
            }
        }
    }

    private var _iexpandCollapseProvider_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationProvider_IExpandCollapseProvider>? = nil

    internal var _iexpandCollapseProvider: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationProvider_IExpandCollapseProvider> {
        get throws {
            try _iexpandCollapseProvider_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlAutomationProvider_IExpandCollapseProvider.iid).cast(to: CWinRT.SWRT_WindowsUIXamlAutomationProvider_IExpandCollapseProvider.self)
            }
        }
    }

    private var _iinvokeProvider_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationProvider_IInvokeProvider>? = nil

    internal var _iinvokeProvider: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationProvider_IInvokeProvider> {
        get throws {
            try _iinvokeProvider_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlAutomationProvider_IInvokeProvider.iid).cast(to: CWinRT.SWRT_WindowsUIXamlAutomationProvider_IInvokeProvider.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlAutomationPeers_IMenuBarItemAutomationPeer>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _imenuBarItemAutomationPeer_storage?.release()
        _iexpandCollapseProvider_storage?.release()
        _iinvokeProvider_storage?.release()
    }

    private static var _imenuBarItemAutomationPeerFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationPeers_IMenuBarItemAutomationPeerFactory>? = nil

    internal static var _imenuBarItemAutomationPeerFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationPeers_IMenuBarItemAutomationPeerFactory> {
        get throws {
            try _imenuBarItemAutomationPeerFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer", id: CWinRT.SWRT_WindowsUIXamlAutomationPeers_IMenuBarItemAutomationPeerFactory.iid)
            }
        }
    }
}