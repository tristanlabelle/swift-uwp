// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Exposes a data item in an Items collection to Microsoft UI Automation.
open class WindowsUIXamlAutomationPeers_ItemAutomationPeer: WindowsRuntime.WinRTComposableClass, WindowsUIXamlAutomationProvider_IVirtualizedItemProviderProtocol {
    // MARK: Windows.UI.Xaml.Automation.Peers.IItemAutomationPeerFactory members

    public convenience init(_ item: WindowsRuntime.IInspectable?, _ parent: WindowsUIXamlAutomationPeers_ItemsControlAutomationPeer?) throws {
        try self.init(_compose: Self.self != WindowsUIXamlAutomationPeers_ItemAutomationPeer.self) {
            (baseInterface, innerInterface: inout IInspectablePointer?) in
            try COM.NullResult.unwrap(Self._iitemAutomationPeerFactory.createInstanceWithParentAndItem(item, parent, baseInterface, &innerInterface))
        }
    }

    // MARK: Windows.UI.Xaml.Automation.Peers.IItemAutomationPeer members

    /// Gets the data item in the Items collection that is associated with this ItemAutomationPeer.
    /// - Returns: The data item.
    public var item: WindowsRuntime.IInspectable {
        get throws {
            try COM.NullResult.unwrap(_iitemAutomationPeer.get_Item())
        }
    }

    /// Gets the ItemsControlAutomationPeer that is associated with the ItemsControl that holds the Items collection.
    /// - Returns: The ItemsControlAutomationPeer associated with the ItemsControl that holds the Items collection.
    public var itemsControlAutomationPeer: WindowsUIXamlAutomationPeers_ItemsControlAutomationPeer {
        get throws {
            try COM.NullResult.unwrap(_iitemAutomationPeer.get_ItemsControlAutomationPeer())
        }
    }

    // MARK: Windows.UI.Xaml.Automation.Provider.IVirtualizedItemProvider members

    /// Makes the virtual item fully accessible as a Microsoft UI Automation element.
    public func realize() throws {
        try _ivirtualizedItemProvider.realize()
    }

    // MARK: Implementation details

    private var _iitemAutomationPeer_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationPeers_IItemAutomationPeer>? = nil

    internal var _iitemAutomationPeer: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationPeers_IItemAutomationPeer> {
        get throws {
            try _iitemAutomationPeer_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlAutomationPeers_IItemAutomationPeer.iid).cast(to: CWinRT.SWRT_WindowsUIXamlAutomationPeers_IItemAutomationPeer.self)
            }
        }
    }

    private var _ivirtualizedItemProvider_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationProvider_IVirtualizedItemProvider>? = nil

    internal var _ivirtualizedItemProvider: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationProvider_IVirtualizedItemProvider> {
        get throws {
            try _ivirtualizedItemProvider_storage.lazyInit {
                try _queryInnerInterfacePointer(CWinRT.SWRT_WindowsUIXamlAutomationProvider_IVirtualizedItemProvider.iid).cast(to: CWinRT.SWRT_WindowsUIXamlAutomationProvider_IVirtualizedItemProvider.self)
            }
        }
    }

    public init(_transferringRef comPointer: Swift.UnsafeMutablePointer<CWinRT.SWRT_WindowsUIXamlAutomationPeers_IItemAutomationPeer>) {
        super.init(_transferringRef: IInspectablePointer.cast(comPointer))
    }

    public override init<Interface>(_compose: Swift.Bool, _factory: ComposableFactory<Interface>) throws {
        try super.init(_compose: _compose, _factory: _factory)
    }

    deinit {
        _iitemAutomationPeer_storage?.release()
        _ivirtualizedItemProvider_storage?.release()
    }

    private static var _iitemAutomationPeerFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationPeers_IItemAutomationPeerFactory>? = nil

    internal static var _iitemAutomationPeerFactory: COM.COMInterop<CWinRT.SWRT_WindowsUIXamlAutomationPeers_IItemAutomationPeerFactory> {
        get throws {
            try _iitemAutomationPeerFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Xaml.Automation.Peers.ItemAutomationPeer", id: CWinRT.SWRT_WindowsUIXamlAutomationPeers_IItemAutomationPeerFactory.iid)
            }
        }
    }
}