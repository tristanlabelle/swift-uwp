// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

public final class WindowsManagementDeployment_AutoUpdateSettingsOptions: WindowsRuntime.WinRTImport<WindowsManagementDeployment_AutoUpdateSettingsOptionsProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsManagementDeployment_AutoUpdateSettingsOptionsProjection.self))
    }

    // MARK: Windows.Management.Deployment.IAutoUpdateSettingsOptions members

    public var appInstallerUri: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_interop.get_AppInstallerUri())
        }
    }

    public func appInstallerUri(_ value: WindowsFoundation_Uri?) throws {
        try _interop.put_AppInstallerUri(value)
    }

    public var automaticBackgroundTask: Swift.Bool {
        get throws {
            try _interop.get_AutomaticBackgroundTask()
        }
    }

    public func automaticBackgroundTask(_ value: Swift.Bool) throws {
        try _interop.put_AutomaticBackgroundTask(value)
    }

    public var dependencyPackageUris: WindowsFoundationCollections_IVector<WindowsFoundation_Uri?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_DependencyPackageUris())
        }
    }

    public var forceUpdateFromAnyVersion: Swift.Bool {
        get throws {
            try _interop.get_ForceUpdateFromAnyVersion()
        }
    }

    public func forceUpdateFromAnyVersion(_ value: Swift.Bool) throws {
        try _interop.put_ForceUpdateFromAnyVersion(value)
    }

    public var hoursBetweenUpdateChecks: Swift.UInt32 {
        get throws {
            try _interop.get_HoursBetweenUpdateChecks()
        }
    }

    public func hoursBetweenUpdateChecks(_ value: Swift.UInt32) throws {
        try _interop.put_HoursBetweenUpdateChecks(value)
    }

    public var isAutoRepairEnabled: Swift.Bool {
        get throws {
            try _interop.get_IsAutoRepairEnabled()
        }
    }

    public func isAutoRepairEnabled(_ value: Swift.Bool) throws {
        try _interop.put_IsAutoRepairEnabled(value)
    }

    public var onLaunch: Swift.Bool {
        get throws {
            try _interop.get_OnLaunch()
        }
    }

    public func onLaunch(_ value: Swift.Bool) throws {
        try _interop.put_OnLaunch(value)
    }

    public var optionalPackageUris: WindowsFoundationCollections_IVector<WindowsFoundation_Uri?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_OptionalPackageUris())
        }
    }

    public var repairUris: WindowsFoundationCollections_IVector<WindowsFoundation_Uri?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_RepairUris())
        }
    }

    public var showPrompt: Swift.Bool {
        get throws {
            try _interop.get_ShowPrompt()
        }
    }

    public func showPrompt(_ value: Swift.Bool) throws {
        try _interop.put_ShowPrompt(value)
    }

    public var updateBlocksActivation: Swift.Bool {
        get throws {
            try _interop.get_UpdateBlocksActivation()
        }
    }

    public func updateBlocksActivation(_ value: Swift.Bool) throws {
        try _interop.put_UpdateBlocksActivation(value)
    }

    public var updateUris: WindowsFoundationCollections_IVector<WindowsFoundation_Uri?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_UpdateUris())
        }
    }

    public var version: WindowsApplicationModel_PackageVersion {
        get throws {
            try _interop.get_Version()
        }
    }

    public func version(_ value: WindowsApplicationModel_PackageVersion) throws {
        try _interop.put_Version(value)
    }

    // MARK: Windows.Management.Deployment.IAutoUpdateSettingsOptionsStatics members

    public static func createFromAppInstallerInfo(_ appInstallerInfo: WindowsApplicationModel_AppInstallerInfo?) throws -> WindowsManagementDeployment_AutoUpdateSettingsOptions {
        try COM.NullResult.unwrap(_iautoUpdateSettingsOptionsStatics.createFromAppInstallerInfo(appInstallerInfo))
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Management.Deployment.AutoUpdateSettingsOptions", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _iautoUpdateSettingsOptionsStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsManagementDeployment_IAutoUpdateSettingsOptionsStatics>? = nil

    internal static var _iautoUpdateSettingsOptionsStatics: COM.COMInterop<CWinRT.SWRT_WindowsManagementDeployment_IAutoUpdateSettingsOptionsStatics> {
        get throws {
            try _iautoUpdateSettingsOptionsStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Management.Deployment.AutoUpdateSettingsOptions", id: CWinRT.SWRT_WindowsManagementDeployment_IAutoUpdateSettingsOptionsStatics.iid)
            }
        }
    }
}