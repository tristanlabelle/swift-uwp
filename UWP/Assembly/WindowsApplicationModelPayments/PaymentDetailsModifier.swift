// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// This class is used when payment methods (see PaymentRequest.MethodData ) have additional costs or discounts associated with them. This class reflects the W3C PaymentDetailsModifier dictionary.
public final class WindowsApplicationModelPayments_PaymentDetailsModifier: WindowsRuntime.WinRTImport<WindowsApplicationModelPayments_PaymentDetailsModifierProjection> {
    // MARK: Windows.ApplicationModel.Payments.IPaymentDetailsModifierFactory members

    public convenience init(_ supportedMethodIds: WindowsFoundationCollections_IIterable<Swift.String>?, _ total: WindowsApplicationModelPayments_PaymentItem?) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ipaymentDetailsModifierFactory.create(supportedMethodIds, total)))
    }

    public convenience init(_ supportedMethodIds: WindowsFoundationCollections_IIterable<Swift.String>?, _ total: WindowsApplicationModelPayments_PaymentItem?, _ additionalDisplayItems: WindowsFoundationCollections_IIterable<WindowsApplicationModelPayments_PaymentItem?>?) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ipaymentDetailsModifierFactory.createWithAdditionalDisplayItems(supportedMethodIds, total, additionalDisplayItems)))
    }

    public convenience init(_ supportedMethodIds: WindowsFoundationCollections_IIterable<Swift.String>?, _ total: WindowsApplicationModelPayments_PaymentItem?, _ additionalDisplayItems: WindowsFoundationCollections_IIterable<WindowsApplicationModelPayments_PaymentItem?>?, _ jsonData: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ipaymentDetailsModifierFactory.createWithAdditionalDisplayItemsAndJsonData(supportedMethodIds, total, additionalDisplayItems, jsonData)))
    }

    // MARK: Windows.ApplicationModel.Payments.IPaymentDetailsModifier members

    /// The additional display items.
    /// - Returns: Gets or sets the AdditionalDisplayItems.
    public var additionalDisplayItems: WindowsFoundationCollections_IVectorView<WindowsApplicationModelPayments_PaymentItem?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_AdditionalDisplayItems())
        }
    }

    /// Optional information.
    /// - Returns: Gets or sets the JsonData.
    public var jsonData: Swift.String {
        get throws {
            try _interop.get_JsonData()
        }
    }

    /// A collection of payment method that this modifier applies to.
    /// - Returns: Gets or sets the SupportedMethodIds.
    public var supportedMethodIds: WindowsFoundationCollections_IVectorView<Swift.String> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_SupportedMethodIds())
        }
    }

    /// This is the total of all DisplayItems. This value serves as a replacement for the PaymentDetails.Total property when one of the payment methods in the SupportedMethodIds list is used. Therefore, this value needs to be the sum of PaymentDetail.DisplayItems, the selected shipping option in the PaymentDetails.ShippingOptions collection (See PaymentShippingOption.IsSelected ), and AdditionalDisplayItems.
    /// - Returns: Gets or sets the Total.
    public var total: WindowsApplicationModelPayments_PaymentItem {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Total())
        }
    }

    // MARK: Implementation details

    private static var _ipaymentDetailsModifierFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelPayments_IPaymentDetailsModifierFactory>? = nil

    internal static var _ipaymentDetailsModifierFactory: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelPayments_IPaymentDetailsModifierFactory> {
        get throws {
            try _ipaymentDetailsModifierFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Payments.PaymentDetailsModifier", id: CWinRT.SWRT_WindowsApplicationModelPayments_IPaymentDetailsModifierFactory.iid)
            }
        }
    }
}