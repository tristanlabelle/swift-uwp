// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides data for the local endpoint and remote endpoint for a network connection used by network apps.
public final class WindowsNetworking_EndpointPair: WindowsRuntime.WinRTImport<WindowsNetworking_EndpointPairProjection> {
    // MARK: Windows.Networking.IEndpointPairFactory members

    public convenience init(_ localHostName: WindowsNetworking_HostName?, _ localServiceName: Swift.String, _ remoteHostName: WindowsNetworking_HostName?, _ remoteServiceName: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iendpointPairFactory.createEndpointPair(localHostName, localServiceName, remoteHostName, remoteServiceName)))
    }

    // MARK: Windows.Networking.IEndpointPair members

    /// Get or set the local hostname for the EndpointPair object.
    /// - Returns: The local hostname for the EndpointPair object.
    public var localHostName: WindowsNetworking_HostName {
        get throws {
            try COM.NullResult.unwrap(_interop.get_LocalHostName())
        }
    }

    /// Get or set the local hostname for the EndpointPair object.
    /// - Returns: The local hostname for the EndpointPair object.
    public func localHostName(_ value: WindowsNetworking_HostName?) throws {
        try _interop.put_LocalHostName(value)
    }

    /// Get or set the local service name for the EndpointPair object.
    /// - Returns: The local service name for the EndpointPair object.
    public var localServiceName: Swift.String {
        get throws {
            try _interop.get_LocalServiceName()
        }
    }

    /// Get or set the local service name for the EndpointPair object.
    /// - Returns: The local service name for the EndpointPair object.
    public func localServiceName(_ value: Swift.String) throws {
        try _interop.put_LocalServiceName(value)
    }

    /// Get or set the remote hostname for the EndpointPair object.
    /// - Returns: The remote hostname for the EndpointPair object.
    public var remoteHostName: WindowsNetworking_HostName {
        get throws {
            try COM.NullResult.unwrap(_interop.get_RemoteHostName())
        }
    }

    /// Get or set the remote hostname for the EndpointPair object.
    /// - Returns: The remote hostname for the EndpointPair object.
    public func remoteHostName(_ value: WindowsNetworking_HostName?) throws {
        try _interop.put_RemoteHostName(value)
    }

    /// Get or set the remote service name for the EndpointPair object.
    /// - Returns: The remote service name for the EndpointPair object.
    public var remoteServiceName: Swift.String {
        get throws {
            try _interop.get_RemoteServiceName()
        }
    }

    /// Get or set the remote service name for the EndpointPair object.
    /// - Returns: The remote service name for the EndpointPair object.
    public func remoteServiceName(_ value: Swift.String) throws {
        try _interop.put_RemoteServiceName(value)
    }

    // MARK: Implementation details

    private static var _iendpointPairFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsNetworking_IEndpointPairFactory>? = nil

    internal static var _iendpointPairFactory: COM.COMInterop<CWinRT.SWRT_WindowsNetworking_IEndpointPairFactory> {
        get throws {
            try _iendpointPairFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Networking.EndpointPair", id: CWinRT.SWRT_WindowsNetworking_IEndpointPairFactory.iid)
            }
        }
    }
}