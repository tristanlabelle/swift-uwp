// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// An unchangeable view into a map of ResourceMap objects.
public final class WindowsApplicationModelResourcesCore_ResourceMapMapView: WindowsRuntime.WinRTImport<WindowsApplicationModelResourcesCore_ResourceMapMapViewProjection>, WindowsFoundationCollections_IMapViewProtocol, WindowsFoundationCollections_IIterableProtocol {
    public typealias K = Swift.String
    public typealias V = WindowsApplicationModelResourcesCore_ResourceMap?
    public typealias T = WindowsFoundationCollections_IKeyValuePair<Swift.String, WindowsApplicationModelResourcesCore_ResourceMap?>?

    // MARK: Windows.Foundation.Collections.IMapView`2<String, Windows.ApplicationModel.Resources.Core.ResourceMap> members

    /// Gets the number of ResourceMap objects in the map.
    /// - Returns: The number of ResourceMap objects in the map.
    public var size: Swift.UInt32 {
        get throws {
            try _interop.get_Size()
        }
    }

    /// Returns the ResourceMap at the specified key in the map view.
    /// - Parameter key: The key to locate in the map view.
    /// - Returns: The value, if an item with the specified key exists. Use the **HasKey** method to determine whether the key exists.
    public func lookup(_ key: Swift.String) throws -> WindowsApplicationModelResourcesCore_ResourceMap? {
        try _interop.lookup(key)
    }

    /// Determines whether the map view contains the specified key.
    /// - Parameter key: The key to locate in the map view.
    /// - Returns: **TRUE** if the key is found, otherwise **FALSE** if it is not found.
    public func hasKey(_ key: Swift.String) throws -> Swift.Bool {
        try _interop.hasKey(key)
    }

    public func split(_ first: inout WindowsFoundationCollections_IMapView<Swift.String, WindowsApplicationModelResourcesCore_ResourceMap?>?, _ second: inout WindowsFoundationCollections_IMapView<Swift.String, WindowsApplicationModelResourcesCore_ResourceMap?>?) throws {
        try _interop.split(&first, &second)
    }

    // MARK: Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.ApplicationModel.Resources.Core.ResourceMap>> members

    /// Returns an iterator to enumerate the items in the map view.
    /// - Returns: The iterator. The current position of the iterator is index 0, or the end of the map if the map is empty.
    public func first() throws -> WindowsFoundationCollections_IIterator<WindowsFoundationCollections_IKeyValuePair<Swift.String, WindowsApplicationModelResourcesCore_ResourceMap?>?> {
        try COM.NullResult.unwrap(_iiterable.first())
    }

    // MARK: Implementation details

    private var _iiterable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_WindowsApplicationModelResourcesCore_ResourceMap>? = nil

    internal var _iiterable: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_WindowsApplicationModelResourcesCore_ResourceMap> {
        get throws {
            try _iiterable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_WindowsApplicationModelResourcesCore_ResourceMap.iid).cast(to: CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_WindowsApplicationModelResourcesCore_ResourceMap.self)
            }
        }
    }

    deinit {
        _iiterable_storage?.release()
    }
}