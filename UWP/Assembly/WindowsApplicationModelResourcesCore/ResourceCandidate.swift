// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a single possible value for a given NamedResource, the qualifiers associated with that resource, and how well those qualifiers match the context against which it was resolved.
public final class WindowsApplicationModelResourcesCore_ResourceCandidate: WindowsRuntime.WinRTImport<WindowsApplicationModelResourcesCore_ResourceCandidateProjection> {
    // MARK: Windows.ApplicationModel.Resources.Core.IResourceCandidate members

    /// Indicates whether this ResourceCandidate can be used as a default fallback value for any context.
    /// - Returns: **TRUE** if this candidate can be used as a default fallback value for any context, **FALSE** otherwise.
    public var isDefault: Swift.Bool {
        get throws {
            try _interop.get_IsDefault()
        }
    }

    /// Indicates whether this ResourceCandidate matched the ResourceContext against which it was evaluated.
    /// - Returns: **TRUE** if the ResourceCandidate matched the context, **FALSE** otherwise.
    public var isMatch: Swift.Bool {
        get throws {
            try _interop.get_IsMatch()
        }
    }

    /// Indicates whether this ResourceCandidate matched the ResourceContext against which it was evaluated as a result of being a true match, a default fallback value, or a mixed match with default fallback (that is, a match in relation to some qualifiers but using default fallback values for other qualifiers).
    /// - Returns: **TRUE** if this candidate is an acceptable default fallback value, **FALSE** otherwise.
    public var isMatchAsDefault: Swift.Bool {
        get throws {
            try _interop.get_IsMatchAsDefault()
        }
    }

    /// Gets the qualifiers associated with this ResourceCandidate.
    /// - Returns: The ResourceQualifier s associated with this ResourceCandidate.
    public var qualifiers: WindowsFoundationCollections_IVectorView<WindowsApplicationModelResourcesCore_ResourceQualifier?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Qualifiers())
        }
    }

    /// Gets the value of this ResourceCandidate, expressed as a string.
    /// - Returns: The string value.
    public var valueAsString: Swift.String {
        get throws {
            try _interop.get_ValueAsString()
        }
    }

    /// Asynchronously returns a StorageFile that accesses the value of this ResourceCandidate. This only works on certain types of ResourceCandidate s that are files.
    /// - Returns: An asynchronous operation to return the requested StorageFile.
    public func getValueAsFileAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsStorage_StorageFile?> {
        try COM.NullResult.unwrap(_interop.getValueAsFileAsync())
    }

    /// Returns the value of a qualifier, given its name.
    /// - Parameter qualifierName: The name of the qualifier.
    /// - Returns: The value of the qualifier.
    public func getQualifierValue(_ qualifierName: Swift.String) throws -> Swift.String {
        try _interop.getQualifierValue(qualifierName)
    }

    // MARK: Windows.ApplicationModel.Resources.Core.IResourceCandidate2 members

    /// Asynchronously returns an [IRandomAccessStream](https://docs.microsoft.com/previous-versions/hh438400(v=vs.85)) that accesses the value of this ResourceCandidate.
    /// - Returns: An asynchronous operation to return the requested [IRandomAccessStream](https://docs.microsoft.com/previous-versions/hh438400(v=vs.85)).
    public func getValueAsStreamAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsStorageStreams_IRandomAccessStream?> {
        try COM.NullResult.unwrap(_iresourceCandidate2.getValueAsStreamAsync())
    }

    // MARK: Windows.ApplicationModel.Resources.Core.IResourceCandidate3 members

    /// Gets the type of resource that is encapsulated in this ResourceCandidate.
    /// - Returns: A value that specifies the type of resource that is encapsulated in this ResourceCandidate.
    public var kind: WindowsApplicationModelResourcesCore_ResourceCandidateKind {
        get throws {
            try _iresourceCandidate3.get_Kind()
        }
    }

    // MARK: Implementation details

    private var _iresourceCandidate2_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelResourcesCore_IResourceCandidate2>? = nil

    internal var _iresourceCandidate2: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelResourcesCore_IResourceCandidate2> {
        get throws {
            try _iresourceCandidate2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelResourcesCore_IResourceCandidate2.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelResourcesCore_IResourceCandidate2.self)
            }
        }
    }

    private var _iresourceCandidate3_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelResourcesCore_IResourceCandidate3>? = nil

    internal var _iresourceCandidate3: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelResourcesCore_IResourceCandidate3> {
        get throws {
            try _iresourceCandidate3_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelResourcesCore_IResourceCandidate3.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelResourcesCore_IResourceCandidate3.self)
            }
        }
    }

    deinit {
        _iresourceCandidate2_storage?.release()
        _iresourceCandidate3_storage?.release()
    }
}