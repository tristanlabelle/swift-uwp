// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides functionality for controlling the flash settings on a capture device.
public final class WindowsMediaDevices_FlashControl: WindowsRuntime.WinRTImport<WindowsMediaDevices_FlashControlProjection> {
    // MARK: Windows.Media.Devices.IFlashControl members

    /// Gets or sets a value that specifies if flash is automatically set.
    /// - Returns: **true** if auto flash is set; otherwise, **false**.
    public var auto: Swift.Bool {
        get throws {
            try _interop.get_Auto()
        }
    }

    /// Gets or sets a value that specifies if flash is automatically set.
    /// - Returns: **true** if auto flash is set; otherwise, **false**.
    public func auto(_ value: Swift.Bool) throws {
        try _interop.put_Auto(value)
    }

    /// Gets a value that specifies if the flash on the capture device is enabled or disabled.
    /// - Returns: **true** if the flash is enabled; otherwise, **false**.
    public var enabled: Swift.Bool {
        get throws {
            try _interop.get_Enabled()
        }
    }

    /// Gets a value that specifies if the flash on the capture device is enabled or disabled.
    /// - Returns: **true** if the flash is enabled; otherwise, **false**.
    public func enabled(_ value: Swift.Bool) throws {
        try _interop.put_Enabled(value)
    }

    /// Gets or sets the intensity of the flash.
    /// - Returns: The power percent the torch LED is set to.
    public var powerPercent: Swift.Float {
        get throws {
            try _interop.get_PowerPercent()
        }
    }

    /// Gets or sets the intensity of the flash.
    /// - Returns: The power percent the torch LED is set to.
    public func powerPercent(_ value: Swift.Float) throws {
        try _interop.put_PowerPercent(value)
    }

    /// Gets a value that specifics if the device allows the torch LED power settings to be changed.
    /// - Returns: **true** if the device allows the torch LED power settings to be changed; otherwise, **false**.
    public var powerSupported: Swift.Bool {
        get throws {
            try _interop.get_PowerSupported()
        }
    }

    /// Gets a value that specifies if the red eye reduction is enabled or disabled.
    /// - Returns: **true** if red eye reduction is enabled; otherwise, **false**.
    public var redEyeReduction: Swift.Bool {
        get throws {
            try _interop.get_RedEyeReduction()
        }
    }

    /// Gets a value that specifies if the red eye reduction is enabled or disabled.
    /// - Returns: **true** if red eye reduction is enabled; otherwise, **false**.
    public func redEyeReduction(_ value: Swift.Bool) throws {
        try _interop.put_RedEyeReduction(value)
    }

    /// Gets a value that specifies if the capture device supports red eye reduction.
    /// - Returns: **true** if the capture device supports red eye reduction; otherwise, **false**.
    public var redEyeReductionSupported: Swift.Bool {
        get throws {
            try _interop.get_RedEyeReductionSupported()
        }
    }

    /// Gets a value that specifies if the capture device supports the flash control.
    /// - Returns: **true** if the capture device supports the FlashControl; otherwise, **false**.
    public var supported: Swift.Bool {
        get throws {
            try _interop.get_Supported()
        }
    }

    // MARK: Windows.Media.Devices.IFlashControl2 members

    /// Gets or sets a value indicating whether focus assist light is enabled on the capture device.
    /// - Returns: A value indicating whether focus assist light is enabled on the capture device.
    public var assistantLightEnabled: Swift.Bool {
        get throws {
            try _iflashControl2.get_AssistantLightEnabled()
        }
    }

    /// Gets or sets a value indicating whether focus assist light is enabled on the capture device.
    /// - Returns: A value indicating whether focus assist light is enabled on the capture device.
    public func assistantLightEnabled(_ value: Swift.Bool) throws {
        try _iflashControl2.put_AssistantLightEnabled(value)
    }

    /// Gets a value indicating whether focus assist light is supported by the capture device.
    /// - Returns: A value indicating whether focus assist light is supported by the capture device.
    public var assistantLightSupported: Swift.Bool {
        get throws {
            try _iflashControl2.get_AssistantLightSupported()
        }
    }

    // MARK: Implementation details

    private var _iflashControl2_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaDevices_IFlashControl2>? = nil

    internal var _iflashControl2: COM.COMInterop<CWinRT.SWRT_WindowsMediaDevices_IFlashControl2> {
        get throws {
            try _iflashControl2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaDevices_IFlashControl2.iid).cast(to: CWinRT.SWRT_WindowsMediaDevices_IFlashControl2.self)
            }
        }
    }

    deinit {
        _iflashControl2_storage?.release()
    }
}