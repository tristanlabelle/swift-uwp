// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a region of interest which is a rectangular region on the image which is used for functions such as focus and exposure.
public final class WindowsMediaDevices_RegionOfInterest: WindowsRuntime.WinRTImport<WindowsMediaDevices_RegionOfInterestProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsMediaDevices_RegionOfInterestProjection.self))
    }

    // MARK: Windows.Media.Devices.IRegionOfInterest members

    /// Gets or sets a value that specifies if auto exposure is enabled.
    /// - Returns: **true** if auto exposure is enabled; otherwise, **false**.
    public var autoExposureEnabled: Swift.Bool {
        get throws {
            try _interop.get_AutoExposureEnabled()
        }
    }

    /// Gets or sets a value that specifies if auto exposure is enabled.
    /// - Returns: **true** if auto exposure is enabled; otherwise, **false**.
    public func autoExposureEnabled(_ value: Swift.Bool) throws {
        try _interop.put_AutoExposureEnabled(value)
    }

    /// Gets or sets a value that specifies if auto focus is enabled.
    /// - Returns: **true** if auto focus is enabled; otherwise, **false**.
    public var autoFocusEnabled: Swift.Bool {
        get throws {
            try _interop.get_AutoFocusEnabled()
        }
    }

    /// Gets or sets a value that specifies if auto focus is enabled.
    /// - Returns: **true** if auto focus is enabled; otherwise, **false**.
    public func autoFocusEnabled(_ value: Swift.Bool) throws {
        try _interop.put_AutoFocusEnabled(value)
    }

    /// Gets or sets a value that specifies if auto white balance is enabled.
    /// - Returns: **true** if auto white balance; otherwise, **false**.
    public var autoWhiteBalanceEnabled: Swift.Bool {
        get throws {
            try _interop.get_AutoWhiteBalanceEnabled()
        }
    }

    /// Gets or sets a value that specifies if auto white balance is enabled.
    /// - Returns: **true** if auto white balance; otherwise, **false**.
    public func autoWhiteBalanceEnabled(_ value: Swift.Bool) throws {
        try _interop.put_AutoWhiteBalanceEnabled(value)
    }

    /// Gets or sets the rectangle that defines the region of focus.
    /// - Returns: The rectangle that defines the region of focus.
    public var bounds: WindowsFoundation_Rect {
        get throws {
            try _interop.get_Bounds()
        }
    }

    /// Gets or sets the rectangle that defines the region of focus.
    /// - Returns: The rectangle that defines the region of focus.
    public func bounds(_ value: WindowsFoundation_Rect) throws {
        try _interop.put_Bounds(value)
    }

    // MARK: Windows.Media.Devices.IRegionOfInterest2 members

    /// Gets or sets a value indicating whether the Bounds Rect is in pixels or is mapped to a range of 0 to 1.0.
    /// - Returns: A value indicating whether the Bounds Rect is in pixels or is mapped to a range of 0 to 1.0.
    public var boundsNormalized: Swift.Bool {
        get throws {
            try _iregionOfInterest2.get_BoundsNormalized()
        }
    }

    /// Gets or sets a value indicating whether the Bounds Rect is in pixels or is mapped to a range of 0 to 1.0.
    /// - Returns: A value indicating whether the Bounds Rect is in pixels or is mapped to a range of 0 to 1.0.
    public func boundsNormalized(_ value: Swift.Bool) throws {
        try _iregionOfInterest2.put_BoundsNormalized(value)
    }

    /// Gets or sets the type of region represented by the RegionOfInterest object.
    /// - Returns: The type of region represented by the RegionOfInterest object.
    public var type: WindowsMediaDevices_RegionOfInterestType {
        get throws {
            try _iregionOfInterest2.get_Type()
        }
    }

    /// Gets or sets the type of region represented by the RegionOfInterest object.
    /// - Returns: The type of region represented by the RegionOfInterest object.
    public func type(_ value: WindowsMediaDevices_RegionOfInterestType) throws {
        try _iregionOfInterest2.put_Type(value)
    }

    /// Gets or sets the weight of the region of interest.
    /// - Returns: Gets or sets the weight of the region of interest which is a value from 0-100.
    public var weight: Swift.UInt32 {
        get throws {
            try _iregionOfInterest2.get_Weight()
        }
    }

    /// Gets or sets the weight of the region of interest.
    /// - Returns: Gets or sets the weight of the region of interest which is a value from 0-100.
    public func weight(_ value: Swift.UInt32) throws {
        try _iregionOfInterest2.put_Weight(value)
    }

    // MARK: Implementation details

    private var _iregionOfInterest2_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaDevices_IRegionOfInterest2>? = nil

    internal var _iregionOfInterest2: COM.COMInterop<CWinRT.SWRT_WindowsMediaDevices_IRegionOfInterest2> {
        get throws {
            try _iregionOfInterest2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaDevices_IRegionOfInterest2.iid).cast(to: CWinRT.SWRT_WindowsMediaDevices_IRegionOfInterest2.self)
            }
        }
    }

    deinit {
        _iregionOfInterest2_storage?.release()
    }

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.Devices.RegionOfInterest", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}