// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

public final class WindowsUIShell_ShareWindowCommandSource: WindowsRuntime.WinRTImport<WindowsUIShell_ShareWindowCommandSourceProjection> {
    // MARK: Windows.UI.Shell.IShareWindowCommandSource members

    public func commandInvoked(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIShell_ShareWindowCommandSource?, WindowsUIShell_ShareWindowCommandEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_CommandInvoked(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: commandInvoked)
    }

    public func commandInvoked(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_CommandInvoked(token)
    }

    public func commandRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsUIShell_ShareWindowCommandSource?, WindowsUIShell_ShareWindowCommandEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_CommandRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: commandRequested)
    }

    public func commandRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_CommandRequested(token)
    }

    public func start() throws {
        try _interop.start()
    }

    public func stop() throws {
        try _interop.stop()
    }

    public func reportCommandChanged() throws {
        try _interop.reportCommandChanged()
    }

    // MARK: Windows.UI.Shell.IShareWindowCommandSourceStatics members

    public static func getForCurrentView() throws -> WindowsUIShell_ShareWindowCommandSource {
        try COM.NullResult.unwrap(_ishareWindowCommandSourceStatics.getForCurrentView())
    }

    // MARK: Implementation details

    private static var _ishareWindowCommandSourceStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIShell_IShareWindowCommandSourceStatics>? = nil

    internal static var _ishareWindowCommandSourceStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIShell_IShareWindowCommandSourceStatics> {
        get throws {
            try _ishareWindowCommandSourceStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Shell.ShareWindowCommandSource", id: CWinRT.SWRT_WindowsUIShell_IShareWindowCommandSourceStatics.iid)
            }
        }
    }
}