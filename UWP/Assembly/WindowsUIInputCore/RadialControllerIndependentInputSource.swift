// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Enables an app to handle radial controller input on the background thread.
public final class WindowsUIInputCore_RadialControllerIndependentInputSource: WindowsRuntime.WinRTImport<WindowsUIInputCore_RadialControllerIndependentInputSourceProjection> {
    // MARK: Windows.UI.Input.Core.IRadialControllerIndependentInputSource members

    /// Gets a reference to a wheel input device or accessory such as the Surface Dial.
    /// - Returns: The wheel input device.
    public var controller: WindowsUIInput_RadialController {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Controller())
        }
    }

    /// Gets the event message dispatcher associated with the current view.
    /// - Returns: The event message dispatcher.
    public var dispatcher: WindowsUICore_CoreDispatcher {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Dispatcher())
        }
    }

    // MARK: Windows.UI.Input.Core.IRadialControllerIndependentInputSource2 members

    /// Gets the DispatcherQueue associated with this RadialControllerIndependentInputSource.
    /// - Returns: The DispatcherQueue for managing prioritized tasks that execute in a serial fashion on a thread.
    public var dispatcherQueue: WindowsSystem_DispatcherQueue {
        get throws {
            try COM.NullResult.unwrap(_iradialControllerIndependentInputSource2.get_DispatcherQueue())
        }
    }

    // MARK: Windows.UI.Input.Core.IRadialControllerIndependentInputSourceStatics members

    /// Gets an instance of RadialControllerIndependentInputSource for the running app's current CoreWindow.
    /// - Parameter view: The app window and its thread.
    /// - Returns: The radial controller input manager.
    public static func createForView(_ view: WindowsApplicationModelCore_CoreApplicationView?) throws -> WindowsUIInputCore_RadialControllerIndependentInputSource {
        try COM.NullResult.unwrap(_iradialControllerIndependentInputSourceStatics.createForView(view))
    }

    // MARK: Implementation details

    private var _iradialControllerIndependentInputSource2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIInputCore_IRadialControllerIndependentInputSource2>? = nil

    internal var _iradialControllerIndependentInputSource2: COM.COMInterop<CWinRT.SWRT_WindowsUIInputCore_IRadialControllerIndependentInputSource2> {
        get throws {
            try _iradialControllerIndependentInputSource2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUIInputCore_IRadialControllerIndependentInputSource2.iid).cast(to: CWinRT.SWRT_WindowsUIInputCore_IRadialControllerIndependentInputSource2.self)
            }
        }
    }

    deinit {
        _iradialControllerIndependentInputSource2_storage?.release()
    }

    private static var _iradialControllerIndependentInputSourceStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUIInputCore_IRadialControllerIndependentInputSourceStatics>? = nil

    internal static var _iradialControllerIndependentInputSourceStatics: COM.COMInterop<CWinRT.SWRT_WindowsUIInputCore_IRadialControllerIndependentInputSourceStatics> {
        get throws {
            try _iradialControllerIndependentInputSourceStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Input.Core.RadialControllerIndependentInputSource", id: CWinRT.SWRT_WindowsUIInputCore_IRadialControllerIndependentInputSourceStatics.iid)
            }
        }
    }
}