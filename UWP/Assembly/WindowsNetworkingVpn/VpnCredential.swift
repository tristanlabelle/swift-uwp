// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the credentials requested and provided by the platform. This class holds username, password, PIN, OTP, and any additional PIN or certificate to which access has been granted.
public final class WindowsNetworkingVpn_VpnCredential: WindowsRuntime.WinRTImport<WindowsNetworkingVpn_VpnCredentialProjection>, WindowsNetworkingVpn_IVpnCredentialProtocol {
    // MARK: Windows.Networking.Vpn.IVpnCredential members

    /// Gets an additional PIN provided by the user, typically used when requesting a credential type of username, password, and PIN.
    /// - Returns: An additional PIN provided by the user.
    public var additionalPin: Swift.String {
        get throws {
            try _interop.get_AdditionalPin()
        }
    }

    /// Gets the certificate to which we were granted access for use in the VPN connection.
    /// - Returns: The certificate to which we were granted access for use in the VPN connection.
    public var certificateCredential: WindowsSecurityCryptographyCertificates_Certificate {
        get throws {
            try COM.NullResult.unwrap(_interop.get_CertificateCredential())
        }
    }

    /// Gets the previous credential the user used to log on to the VPN server, as in the case of a password change.
    /// - Returns: The previous credential the user used to log in to the VPN server.
    public var oldPasswordCredential: WindowsSecurityCredentials_PasswordCredential {
        get throws {
            try COM.NullResult.unwrap(_interop.get_OldPasswordCredential())
        }
    }

    /// Gets the current password credential used by the user to log on to the VPN server.
    /// - Returns: The current password credential used by the user to log in to the VPN server.
    public var passkeyCredential: WindowsSecurityCredentials_PasswordCredential {
        get throws {
            try COM.NullResult.unwrap(_interop.get_PasskeyCredential())
        }
    }

    // MARK: Implementation details
}