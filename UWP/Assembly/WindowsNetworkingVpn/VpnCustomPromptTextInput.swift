// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a text input UI element used in the RequestCustomPromptAsync method.
public final class WindowsNetworkingVpn_VpnCustomPromptTextInput: WindowsRuntime.WinRTImport<WindowsNetworkingVpn_VpnCustomPromptTextInputProjection>, WindowsNetworkingVpn_IVpnCustomPromptElementProtocol {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsNetworkingVpn_VpnCustomPromptTextInputProjection.self))
    }

    // MARK: Windows.Networking.Vpn.IVpnCustomPromptTextInput members

    /// Gets or sets whether the text typed into the text input UI element must be hidden by showing different characters. This is typically used when the input is expected to be a password, other text credential, or secret.
    /// - Returns: If the text typed into the text input UI element must be hidden , it is TRUE; otherwise , it is FALSE.
    public var isTextHidden: Swift.Bool {
        get throws {
            try _interop.get_IsTextHidden()
        }
    }

    /// Gets or sets whether the text typed into the text input UI element must be hidden by showing different characters. This is typically used when the input is expected to be a password, other text credential, or secret.
    /// - Returns: If the text typed into the text input UI element must be hidden , it is TRUE; otherwise , it is FALSE.
    public func isTextHidden(_ value: Swift.Bool) throws {
        try _interop.put_IsTextHidden(value)
    }

    /// Gets or sets the text that is displayed as grayed out when the text input UI element does not contain any text typed by the user. This can be sample text.
    /// - Returns: Sample text that is displayed as grayed out when the text input UI element does not contain any text typed by the user.
    public var placeholderText: Swift.String {
        get throws {
            try _interop.get_PlaceholderText()
        }
    }

    /// Gets or sets the text that is displayed as grayed out when the text input UI element does not contain any text typed by the user. This can be sample text.
    /// - Returns: Sample text that is displayed as grayed out when the text input UI element does not contain any text typed by the user.
    public func placeholderText(_ value: Swift.String) throws {
        try _interop.put_PlaceholderText(value)
    }

    /// Gets the text typed into the text input UI element.
    /// - Returns: The text typed into the text input UI element.
    public var text: Swift.String {
        get throws {
            try _interop.get_Text()
        }
    }

    // MARK: Windows.Networking.Vpn.IVpnCustomPromptElement members

    /// Gets or sets whether the user must provide some text input in this element before the UI flow of the can continue (the next button is grayed out).
    /// - Returns: If the user must provide some text input, it is TRUE; otherwise , it is FALSE.
    public var compulsory: Swift.Bool {
        get throws {
            try _ivpnCustomPromptElement.get_Compulsory()
        }
    }

    /// Gets or sets whether the user must provide some text input in this element before the UI flow of the can continue (the next button is grayed out).
    /// - Returns: If the user must provide some text input, it is TRUE; otherwise , it is FALSE.
    public func compulsory(_ value: Swift.Bool) throws {
        try _ivpnCustomPromptElement.put_Compulsory(value)
    }

    /// Gets or sets the text label of the text input UI element.
    /// - Returns: The text label of the text input UI element.
    public var displayName: Swift.String {
        get throws {
            try _ivpnCustomPromptElement.get_DisplayName()
        }
    }

    /// Gets or sets the text label of the text input UI element.
    /// - Returns: The text label of the text input UI element.
    public func displayName(_ value: Swift.String) throws {
        try _ivpnCustomPromptElement.put_DisplayName(value)
    }

    /// Gets or sets whether the text input UI element is emphasized.
    /// - Returns: If the text input UI element is emphasized, it is TRUE; otherwise , it is FALSE.
    public var emphasized: Swift.Bool {
        get throws {
            try _ivpnCustomPromptElement.get_Emphasized()
        }
    }

    /// Gets or sets whether the text input UI element is emphasized.
    /// - Returns: If the text input UI element is emphasized, it is TRUE; otherwise , it is FALSE.
    public func emphasized(_ value: Swift.Bool) throws {
        try _ivpnCustomPromptElement.put_Emphasized(value)
    }

    // MARK: Implementation details

    private var _ivpnCustomPromptElement_storage: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingVpn_IVpnCustomPromptElement>? = nil

    internal var _ivpnCustomPromptElement: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingVpn_IVpnCustomPromptElement> {
        get throws {
            try _ivpnCustomPromptElement_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsNetworkingVpn_IVpnCustomPromptElement.iid).cast(to: CWinRT.SWRT_WindowsNetworkingVpn_IVpnCustomPromptElement.self)
            }
        }
    }

    deinit {
        _ivpnCustomPromptElement_storage?.release()
    }

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Networking.Vpn.VpnCustomPromptTextInput", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}