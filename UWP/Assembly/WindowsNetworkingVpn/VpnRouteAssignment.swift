// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the list of routes assigned to the VPN channel for the correct flow and redirection of traffic.
public final class WindowsNetworkingVpn_VpnRouteAssignment: WindowsRuntime.WinRTImport<WindowsNetworkingVpn_VpnRouteAssignmentProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsNetworkingVpn_VpnRouteAssignmentProjection.self))
    }

    // MARK: Windows.Networking.Vpn.IVpnRouteAssignment members

    /// Gets or sets whether the physical infrastructure network, such as the local subnet, should always be exempted from flowing over the VPN interface.
    /// - Returns: If local subnets are excluded, it is **TRUE**; otherwise , it is **FALSE**.
    public var excludeLocalSubnets: Swift.Bool {
        get throws {
            try _interop.get_ExcludeLocalSubnets()
        }
    }

    /// Gets or sets whether the physical infrastructure network, such as the local subnet, should always be exempted from flowing over the VPN interface.
    /// - Returns: If local subnets are excluded, it is **TRUE**; otherwise , it is **FALSE**.
    public func excludeLocalSubnets(_ value: Swift.Bool) throws {
        try _interop.put_ExcludeLocalSubnets(value)
    }

    /// Gets or sets a list of IPv4 routes that should not sent traffic over the VPN interface.
    /// - Returns: A list of IPv4 routes that should not sent traffic over the VPN interface.
    public var ipv4ExclusionRoutes: WindowsFoundationCollections_IVector<WindowsNetworkingVpn_VpnRoute?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Ipv4ExclusionRoutes())
        }
    }

    /// Gets or sets a list of IPv4 routes that should not sent traffic over the VPN interface.
    /// - Returns: A list of IPv4 routes that should not sent traffic over the VPN interface.
    public func ipv4ExclusionRoutes(_ value: WindowsFoundationCollections_IVector<WindowsNetworkingVpn_VpnRoute?>?) throws {
        try _interop.put_Ipv4ExclusionRoutes(value)
    }

    /// Gets or sets a list of IPv4 routes that should send traffic over the VPN interface.
    /// - Returns: A list of IPv4 routes that should send traffic over the VPN interface.
    public var ipv4InclusionRoutes: WindowsFoundationCollections_IVector<WindowsNetworkingVpn_VpnRoute?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Ipv4InclusionRoutes())
        }
    }

    /// Gets or sets a list of IPv4 routes that should send traffic over the VPN interface.
    /// - Returns: A list of IPv4 routes that should send traffic over the VPN interface.
    public func ipv4InclusionRoutes(_ value: WindowsFoundationCollections_IVector<WindowsNetworkingVpn_VpnRoute?>?) throws {
        try _interop.put_Ipv4InclusionRoutes(value)
    }

    /// Gets or sets a list of IPv6 routes that should not sent traffic over the VPN interface.
    /// - Returns: The list of IPv6 routes that should not sent traffic over the VPN interface.
    public var ipv6ExclusionRoutes: WindowsFoundationCollections_IVector<WindowsNetworkingVpn_VpnRoute?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Ipv6ExclusionRoutes())
        }
    }

    /// Gets or sets a list of IPv6 routes that should not sent traffic over the VPN interface.
    /// - Returns: The list of IPv6 routes that should not sent traffic over the VPN interface.
    public func ipv6ExclusionRoutes(_ value: WindowsFoundationCollections_IVector<WindowsNetworkingVpn_VpnRoute?>?) throws {
        try _interop.put_Ipv6ExclusionRoutes(value)
    }

    /// Gets or sets a list of IPv6 routes that should always sent traffic over the VPN interface.
    /// - Returns: The list of IPv6 routes that should always sent traffic over the VPN interface.
    public var ipv6InclusionRoutes: WindowsFoundationCollections_IVector<WindowsNetworkingVpn_VpnRoute?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Ipv6InclusionRoutes())
        }
    }

    /// Gets or sets a list of IPv6 routes that should always sent traffic over the VPN interface.
    /// - Returns: The list of IPv6 routes that should always sent traffic over the VPN interface.
    public func ipv6InclusionRoutes(_ value: WindowsFoundationCollections_IVector<WindowsNetworkingVpn_VpnRoute?>?) throws {
        try _interop.put_Ipv6InclusionRoutes(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Networking.Vpn.VpnRouteAssignment", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}