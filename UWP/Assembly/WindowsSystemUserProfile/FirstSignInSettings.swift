// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a collection of settings that a user can opt-in to during the first run experience.
public final class WindowsSystemUserProfile_FirstSignInSettings: WindowsRuntime.WinRTImport<WindowsSystemUserProfile_FirstSignInSettingsProjection>, WindowsFoundationCollections_IMapViewProtocol, WindowsFoundationCollections_IIterableProtocol {
    public typealias K = Swift.String
    public typealias V = WindowsRuntime.IInspectable?
    public typealias T = WindowsFoundationCollections_IKeyValuePair<Swift.String, WindowsRuntime.IInspectable?>?

    // MARK: Windows.Foundation.Collections.IMapView`2<String, Object> members

    /// Returns the number of elements in the map.
    /// - Returns: The number of elements in the map.
    public var size: Swift.UInt32 {
        get throws {
            try _imapView.get_Size()
        }
    }

    /// Returns the item in the map view with the specified key.
    /// - Parameter key: The key to locate in the map view.
    /// - Returns: The value, if an item with the specified key exists. Use the **HasKey** method to determine whether the key exists.
    public func lookup(_ key: Swift.String) throws -> WindowsRuntime.IInspectable? {
        try _imapView.lookup(key)
    }

    /// Determines whether the map view contains the specified key.
    /// - Parameter key: The key to locate in the map view.
    /// - Returns: **true** if the key is found; otherwise, **false**.
    public func hasKey(_ key: Swift.String) throws -> Swift.Bool {
        try _imapView.hasKey(key)
    }

    public func split(_ first: inout WindowsFoundationCollections_IMapView<Swift.String, WindowsRuntime.IInspectable?>?, _ second: inout WindowsFoundationCollections_IMapView<Swift.String, WindowsRuntime.IInspectable?>?) throws {
        try _imapView.split(&first, &second)
    }

    // MARK: Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Object>> members

    /// Returns an iterator for the items in the collection.
    /// - Returns: The iterator.
    public func first() throws -> WindowsFoundationCollections_IIterator<WindowsFoundationCollections_IKeyValuePair<Swift.String, WindowsRuntime.IInspectable?>?> {
        try COM.NullResult.unwrap(_iiterable.first())
    }

    // MARK: Windows.System.UserProfile.IFirstSignInSettingsStatics members

    /// Gets the default instance of the settings.
    /// - Returns: The default instance of the settings.
    public static func getDefault() throws -> WindowsSystemUserProfile_FirstSignInSettings {
        try COM.NullResult.unwrap(_ifirstSignInSettingsStatics.getDefault())
    }

    // MARK: Implementation details

    private var _imapView_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IMapView_String_Object>? = nil

    internal var _imapView: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IMapView_String_Object> {
        get throws {
            try _imapView_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundationCollections_IMapView_String_Object.iid).cast(to: CWinRT.SWRT_WindowsFoundationCollections_IMapView_String_Object.self)
            }
        }
    }

    private var _iiterable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_Object>? = nil

    internal var _iiterable: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_Object> {
        get throws {
            try _iiterable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_Object.iid).cast(to: CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsFoundationCollections_IKeyValuePair_String_Object.self)
            }
        }
    }

    deinit {
        _imapView_storage?.release()
        _iiterable_storage?.release()
    }

    private static var _ifirstSignInSettingsStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsSystemUserProfile_IFirstSignInSettingsStatics>? = nil

    internal static var _ifirstSignInSettingsStatics: COM.COMInterop<CWinRT.SWRT_WindowsSystemUserProfile_IFirstSignInSettingsStatics> {
        get throws {
            try _ifirstSignInSettingsStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.System.UserProfile.FirstSignInSettings", id: CWinRT.SWRT_WindowsSystemUserProfile_IFirstSignInSettingsStatics.iid)
            }
        }
    }
}