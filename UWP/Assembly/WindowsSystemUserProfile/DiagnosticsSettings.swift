// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides properties and methods to access the user's diagnostics settings.
public final class WindowsSystemUserProfile_DiagnosticsSettings: WindowsRuntime.WinRTImport<WindowsSystemUserProfile_DiagnosticsSettingsProjection> {
    // MARK: Windows.System.UserProfile.IDiagnosticsSettings members

    /// Gets a value that indicates whether the user has turned on access to diagnostic data for tailored experiences in the Windows *Feedback & diagnostics* settings.
    /// - Returns: **true** if access to diagnostic data is turned on; otherwise, **false**.
    public var canUseDiagnosticsToTailorExperiences: Swift.Bool {
        get throws {
            try _interop.get_CanUseDiagnosticsToTailorExperiences()
        }
    }

    /// Gets the User associated with this instance of diagnostics settings.
    /// - Returns: The user associated with this instance of diagnostics settings.
    public var user: WindowsSystem_User {
        get throws {
            try COM.NullResult.unwrap(_interop.get_User())
        }
    }

    // MARK: Windows.System.UserProfile.IDiagnosticsSettingsStatics members

    /// Retrieves the default diagnostics settings.
    /// - Returns: A settings object that contains the user's current diagnostics settings.
    public static func getDefault() throws -> WindowsSystemUserProfile_DiagnosticsSettings {
        try COM.NullResult.unwrap(_idiagnosticsSettingsStatics.getDefault())
    }

    /// Retrieves the diagnostics settings for the specified user.
    /// - Parameter user: The user to get settings for.
    /// - Returns: A settings object that contains the user's current diagnostics settings.
    public static func getForUser(_ user: WindowsSystem_User?) throws -> WindowsSystemUserProfile_DiagnosticsSettings {
        try COM.NullResult.unwrap(_idiagnosticsSettingsStatics.getForUser(user))
    }

    // MARK: Implementation details

    private static var _idiagnosticsSettingsStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsSystemUserProfile_IDiagnosticsSettingsStatics>? = nil

    internal static var _idiagnosticsSettingsStatics: COM.COMInterop<CWinRT.SWRT_WindowsSystemUserProfile_IDiagnosticsSettingsStatics> {
        get throws {
            try _idiagnosticsSettingsStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.System.UserProfile.DiagnosticsSettings", id: CWinRT.SWRT_WindowsSystemUserProfile_IDiagnosticsSettingsStatics.iid)
            }
        }
    }
}