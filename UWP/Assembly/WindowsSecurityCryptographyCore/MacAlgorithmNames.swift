// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Contains static properties that enable you to retrieve algorithm names that can be used in the OpenAlgorithm method of the MacAlgorithmProvider class.
public enum WindowsSecurityCryptographyCore_MacAlgorithmNames {
    // MARK: Windows.Security.Cryptography.Core.IMacAlgorithmNamesStatics members

    /// Retrieves a string that contains "AES_CMAC".
    /// - Returns: String that contains "AesCmac".
    public static var aesCmac: Swift.String {
        get throws {
            try _imacAlgorithmNamesStatics.get_AesCmac()
        }
    }

    /// Retrieves a string that contains "HMAC_MD5".
    /// - Returns: String that contains "HMAC_MD5".
    public static var hmacMd5: Swift.String {
        get throws {
            try _imacAlgorithmNamesStatics.get_HmacMd5()
        }
    }

    /// Retrieves a string that contains "HMAC_SHA1".
    /// - Returns: String that contains "HMAC_SHA1".
    public static var hmacSha1: Swift.String {
        get throws {
            try _imacAlgorithmNamesStatics.get_HmacSha1()
        }
    }

    /// Retrieves a string that contains "HMAC_SHA256".
    /// - Returns: String that contains "HMAC_SHA256".
    public static var hmacSha256: Swift.String {
        get throws {
            try _imacAlgorithmNamesStatics.get_HmacSha256()
        }
    }

    /// Retrieves a string that contains "HMAC_SHA384".
    /// - Returns: String that contains "HMAC_SHA384".
    public static var hmacSha384: Swift.String {
        get throws {
            try _imacAlgorithmNamesStatics.get_HmacSha384()
        }
    }

    /// Retrieves a string that contains "HMAC_SHA512".
    /// - Returns: String that contains "HMAC_SHA512".
    public static var hmacSha512: Swift.String {
        get throws {
            try _imacAlgorithmNamesStatics.get_HmacSha512()
        }
    }

    // MARK: Implementation details

    private static var _imacAlgorithmNamesStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsSecurityCryptographyCore_IMacAlgorithmNamesStatics>? = nil

    internal static var _imacAlgorithmNamesStatics: COM.COMInterop<CWinRT.SWRT_WindowsSecurityCryptographyCore_IMacAlgorithmNamesStatics> {
        get throws {
            try _imacAlgorithmNamesStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Security.Cryptography.Core.MacAlgorithmNames", id: CWinRT.SWRT_WindowsSecurityCryptographyCore_IMacAlgorithmNamesStatics.iid)
            }
        }
    }
}