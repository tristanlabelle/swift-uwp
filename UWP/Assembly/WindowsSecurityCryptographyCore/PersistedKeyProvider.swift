// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Retrieves a persisted key from a Certificate object.
public enum WindowsSecurityCryptographyCore_PersistedKeyProvider {
    // MARK: Windows.Security.Cryptography.Core.IPersistedKeyProviderStatics members

    /// Opens the persisted private key from the specified Certificate object.
    /// - Parameter certificate: The certificate that is associated with the private key.
    /// - Parameter hashAlgorithmName: The hash algorithm for signature operations. For encryption, the hash algorithm is ignored.
    /// - Parameter padding: The padding mode for asymmetric algorithm signature or encryption operations.
    /// - Returns: An asynchronous operation for retrieving a private key from the supplied Certificate object.
    public static func openKeyPairFromCertificateAsync(_ certificate: WindowsSecurityCryptographyCertificates_Certificate?, _ hashAlgorithmName: Swift.String, _ padding: WindowsSecurityCryptographyCore_CryptographicPadding) throws -> WindowsFoundation_IAsyncOperation<WindowsSecurityCryptographyCore_CryptographicKey?> {
        try COM.NullResult.unwrap(_ipersistedKeyProviderStatics.openKeyPairFromCertificateAsync(certificate, hashAlgorithmName, padding))
    }

    /// Opens the persisted public key from the specified Certificate object.
    /// - Parameter certificate: The certificate that contains the public key.
    /// - Parameter hashAlgorithmName: The has algorithm for signature operations.
    /// - Parameter padding: The padding mode for asymmetric algorithm signature or encryption operations.
    /// - Returns: The public key retrieved from the supplied Certificate object.
    public static func openPublicKeyFromCertificate(_ certificate: WindowsSecurityCryptographyCertificates_Certificate?, _ hashAlgorithmName: Swift.String, _ padding: WindowsSecurityCryptographyCore_CryptographicPadding) throws -> WindowsSecurityCryptographyCore_CryptographicKey {
        try COM.NullResult.unwrap(_ipersistedKeyProviderStatics.openPublicKeyFromCertificate(certificate, hashAlgorithmName, padding))
    }

    // MARK: Implementation details

    private static var _ipersistedKeyProviderStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsSecurityCryptographyCore_IPersistedKeyProviderStatics>? = nil

    internal static var _ipersistedKeyProviderStatics: COM.COMInterop<CWinRT.SWRT_WindowsSecurityCryptographyCore_IPersistedKeyProviderStatics> {
        get throws {
            try _ipersistedKeyProviderStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Security.Cryptography.Core.PersistedKeyProvider", id: CWinRT.SWRT_WindowsSecurityCryptographyCore_IPersistedKeyProviderStatics.iid)
            }
        }
    }
}