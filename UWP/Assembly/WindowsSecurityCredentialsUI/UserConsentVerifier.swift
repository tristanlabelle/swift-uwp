// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Checks for availability of a verification device (such as a Microsoft Passport PIN, Windows Hello biometric, or fingerprint reader) and performs a verification.
public enum WindowsSecurityCredentialsUI_UserConsentVerifier {
    // MARK: Windows.Security.Credentials.UI.IUserConsentVerifierStatics members

    /// Checks to see whether a verifier device, such as a Microsoft Passport PIN, Windows Hello, or fingerprint reader, is available.
    /// - Returns: A UserConsentVerifierAvailability value that describes the result of the availability check operation.
    public static func checkAvailabilityAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsSecurityCredentialsUI_UserConsentVerifierAvailability> {
        try COM.NullResult.unwrap(_iuserConsentVerifierStatics.checkAvailabilityAsync())
    }

    /// Performs a verification using a device such as Microsoft Passport PIN, Windows Hello, or a fingerprint reader.
    /// - Parameter message: A message to display to the user for this biometric verification request.
    /// - Returns: A UserConsentVerificationResult value that describes the result of the biometric verification.
    public static func requestVerificationAsync(_ message: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsSecurityCredentialsUI_UserConsentVerificationResult> {
        try COM.NullResult.unwrap(_iuserConsentVerifierStatics.requestVerificationAsync(message))
    }

    // MARK: Implementation details

    private static var _iuserConsentVerifierStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsSecurityCredentialsUI_IUserConsentVerifierStatics>? = nil

    internal static var _iuserConsentVerifierStatics: COM.COMInterop<CWinRT.SWRT_WindowsSecurityCredentialsUI_IUserConsentVerifierStatics> {
        get throws {
            try _iuserConsentVerifierStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Security.Credentials.UI.UserConsentVerifier", id: CWinRT.SWRT_WindowsSecurityCredentialsUI_IUserConsentVerifierStatics.iid)
            }
        }
    }
}