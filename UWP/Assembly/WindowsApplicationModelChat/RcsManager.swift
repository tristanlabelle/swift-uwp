// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides access to APIs for handling Rich Communication Services (RCS) messages.
public enum WindowsApplicationModelChat_RcsManager {
    // MARK: Windows.ApplicationModel.Chat.IRcsManagerStatics members

    /// Gets the RcsEndUserMessageManager.
    /// - Returns: The end user message manager.
    public static func getEndUserMessageManager() throws -> WindowsApplicationModelChat_RcsEndUserMessageManager {
        try COM.NullResult.unwrap(_ircsManagerStatics.getEndUserMessageManager())
    }

    /// Gets all instances of RcsTransport.
    /// - Returns: A list of RcsTransport instances.
    public static func getTransportsAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsApplicationModelChat_RcsTransport?>?> {
        try COM.NullResult.unwrap(_ircsManagerStatics.getTransportsAsync())
    }

    /// Gets an instance of RcsTransport for the specified transport ID.
    /// - Parameter transportId: The ID of the transport to retrieve.
    /// - Returns: An instance of the transport specified by the *transportId* parameter.
    public static func getTransportAsync(_ transportId: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsApplicationModelChat_RcsTransport?> {
        try COM.NullResult.unwrap(_ircsManagerStatics.getTransportAsync(transportId))
    }

    /// Asynchronously allows a user to leave a particular conversation.
    /// - Parameter conversation: The conversation to leave.
    /// - Returns: An async action indicating that the operation has completed.
    public static func leaveConversationAsync(_ conversation: WindowsApplicationModelChat_ChatConversation?) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_ircsManagerStatics.leaveConversationAsync(conversation))
    }

    // MARK: Windows.ApplicationModel.Chat.IRcsManagerStatics2 members

    /// Occurs when one or more RcsTransport instances are added or removed from the list of RcsTransport instances that would be returned from RcsManager.GetTransportsAsync.
    public static func transportListChanged(adding handler: WindowsFoundation_EventHandler<WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _ircsManagerStatics2.add_TransportListChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: transportListChanged)
    }

    public static func transportListChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _ircsManagerStatics2.remove_TransportListChanged(token)
    }

    // MARK: Implementation details

    private static var _ircsManagerStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelChat_IRcsManagerStatics>? = nil

    internal static var _ircsManagerStatics: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelChat_IRcsManagerStatics> {
        get throws {
            try _ircsManagerStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Chat.RcsManager", id: CWinRT.SWRT_WindowsApplicationModelChat_IRcsManagerStatics.iid)
            }
        }
    }

    private static var _ircsManagerStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelChat_IRcsManagerStatics2>? = nil

    internal static var _ircsManagerStatics2: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelChat_IRcsManagerStatics2> {
        get throws {
            try _ircsManagerStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Chat.RcsManager", id: CWinRT.SWRT_WindowsApplicationModelChat_IRcsManagerStatics2.iid)
            }
        }
    }
}