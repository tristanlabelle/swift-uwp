// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the criteria for finding chat messages.
public final class WindowsApplicationModelChat_ChatQueryOptions: WindowsRuntime.WinRTImport<WindowsApplicationModelChat_ChatQueryOptionsProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsApplicationModelChat_ChatQueryOptionsProjection.self))
    }

    // MARK: Windows.ApplicationModel.Chat.IChatQueryOptions members

    /// Gets or sets the string to search for the in ChatMessageStore.
    /// - Returns: The string to search for the in ChatMessageStore.
    public var searchString: Swift.String {
        get throws {
            try _interop.get_SearchString()
        }
    }

    /// Gets or sets the string to search for the in ChatMessageStore.
    /// - Returns: The string to search for the in ChatMessageStore.
    public func searchString(_ value: Swift.String) throws {
        try _interop.put_SearchString(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Chat.ChatQueryOptions", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}