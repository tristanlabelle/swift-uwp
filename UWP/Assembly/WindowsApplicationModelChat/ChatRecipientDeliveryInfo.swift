// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represent the delivery info about a chat recipient.
public final class WindowsApplicationModelChat_ChatRecipientDeliveryInfo: WindowsRuntime.WinRTImport<WindowsApplicationModelChat_ChatRecipientDeliveryInfoProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsApplicationModelChat_ChatRecipientDeliveryInfoProjection.self))
    }

    // MARK: Windows.ApplicationModel.Chat.IChatRecipientDeliveryInfo members

    /// Gets or sets the time the message was sent to the recipient.
    /// - Returns: The time the message was sent to the recipient.
    public var deliveryTime: WindowsFoundation_IReference<WindowsFoundation_DateTime>? {
        get throws {
            try _interop.get_DeliveryTime()
        }
    }

    /// Gets or sets the time the message was sent to the recipient.
    /// - Returns: The time the message was sent to the recipient.
    public func deliveryTime(_ value: WindowsFoundation_IReference<WindowsFoundation_DateTime>?) throws {
        try _interop.put_DeliveryTime(value)
    }

    /// Gets a Boolean value indicating whether the error for the message that was sent to the recipient is permanent.
    /// - Returns: A Boolean value indicating whether the error for the message that was sent to the recipient is permanent.
    public var isErrorPermanent: Swift.Bool {
        get throws {
            try _interop.get_IsErrorPermanent()
        }
    }

    /// Gets or sets the time the recipient read the message.
    /// - Returns: The time the recipient read the message.
    public var readTime: WindowsFoundation_IReference<WindowsFoundation_DateTime>? {
        get throws {
            try _interop.get_ReadTime()
        }
    }

    /// Gets or sets the time the recipient read the message.
    /// - Returns: The time the recipient read the message.
    public func readTime(_ value: WindowsFoundation_IReference<WindowsFoundation_DateTime>?) throws {
        try _interop.put_ReadTime(value)
    }

    /// Gets the status of the message.
    /// - Returns: The status of the message.
    public var status: WindowsApplicationModelChat_ChatMessageStatus {
        get throws {
            try _interop.get_Status()
        }
    }

    /// Gets or sets the transport address of the recipient.
    /// - Returns: The transport address of the recipient.
    public var transportAddress: Swift.String {
        get throws {
            try _interop.get_TransportAddress()
        }
    }

    /// Gets or sets the transport address of the recipient.
    /// - Returns: The transport address of the recipient.
    public func transportAddress(_ value: Swift.String) throws {
        try _interop.put_TransportAddress(value)
    }

    /// Get the transport error code.
    /// - Returns: The transport error code.
    public var transportErrorCode: Swift.Int32 {
        get throws {
            try _interop.get_TransportErrorCode()
        }
    }

    /// Gets the category for the TransportErrorCode.
    /// - Returns: The category for the TransportErrorCode.
    public var transportErrorCodeCategory: WindowsApplicationModelChat_ChatTransportErrorCodeCategory {
        get throws {
            try _interop.get_TransportErrorCodeCategory()
        }
    }

    /// Gets the interpreted error code for the transport.
    /// - Returns: The interpreted error code for the transport.
    public var transportInterpretedErrorCode: WindowsApplicationModelChat_ChatTransportInterpretedErrorCode {
        get throws {
            try _interop.get_TransportInterpretedErrorCode()
        }
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Chat.ChatRecipientDeliveryInfo", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}