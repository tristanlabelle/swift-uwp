// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides methods for reading messages from the message store.
public final class WindowsApplicationModelChat_ChatMessageReader: WindowsRuntime.WinRTImport<WindowsApplicationModelChat_ChatMessageReaderProjection> {
    // MARK: Windows.ApplicationModel.Chat.IChatMessageReader members

    /// Returns a batch list of chat messages from the message store.
    /// - Returns: An asynchronous operation that returns a list of chat messages upon successful completion.
    public func readBatchAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsApplicationModelChat_ChatMessage?>?> {
        try COM.NullResult.unwrap(_interop.readBatchAsync())
    }

    // MARK: Windows.ApplicationModel.Chat.IChatMessageReader2 members

    /// Returns a batch list of chat messages from the message store limited to the specified size.
    /// - Parameter count: The size of the batch to read.
    /// - Returns: An asynchronous operation that returns a list of chat messages upon successful completion.
    public func readBatchAsync(_ count: Swift.Int32) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsApplicationModelChat_ChatMessage?>?> {
        try COM.NullResult.unwrap(_ichatMessageReader2.readBatchWithCountAsync(count))
    }

    // MARK: Implementation details

    private var _ichatMessageReader2_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelChat_IChatMessageReader2>? = nil

    internal var _ichatMessageReader2: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelChat_IChatMessageReader2> {
        get throws {
            try _ichatMessageReader2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelChat_IChatMessageReader2.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelChat_IChatMessageReader2.self)
            }
        }
    }

    deinit {
        _ichatMessageReader2_storage?.release()
    }
}