// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a Rich Communication Services (RCS) end user message.
public final class WindowsApplicationModelChat_RcsEndUserMessage: WindowsRuntime.WinRTImport<WindowsApplicationModelChat_RcsEndUserMessageProjection> {
    // MARK: Windows.ApplicationModel.Chat.IRcsEndUserMessage members

    /// Gets the actions to which the user can respond.
    /// - Returns: The actions to which the user can respond.
    public var actions: WindowsFoundationCollections_IVectorView<WindowsApplicationModelChat_RcsEndUserMessageAction?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Actions())
        }
    }

    /// Gets a Boolean value that specifies whether a PIN is required to be sent back with the response.
    /// - Returns: A Boolean value that specifies whether a PIN is required to be sent back with the response.
    public var isPinRequired: Swift.Bool {
        get throws {
            try _interop.get_IsPinRequired()
        }
    }

    /// Gets the contents of the message.
    /// - Returns: The contents of the message.
    public var text: Swift.String {
        get throws {
            try _interop.get_Text()
        }
    }

    /// Gets the title of the message.
    /// - Returns: The title of the message.
    public var title: Swift.String {
        get throws {
            try _interop.get_Title()
        }
    }

    /// Gets the ID of the transport where this message originated.
    /// - Returns: The ID of the transport where this message originated.
    public var transportId: Swift.String {
        get throws {
            try _interop.get_TransportId()
        }
    }

    /// Asynchronously sends the user's selection back.
    /// - Parameter action: Specifies the label of the action.
    /// - Returns: An async action indicating that the operation has completed.
    public func sendResponseAsync(_ action: WindowsApplicationModelChat_RcsEndUserMessageAction?) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.sendResponseAsync(action))
    }

    /// Asynchronously sends the user's selection back with the specified PIN.
    /// - Parameter action: Specifies the label of the action.
    /// - Parameter pin: The PIN to send.
    /// - Returns: An async action indicating that the operation has completed.
    public func sendResponseWithPinAsync(_ action: WindowsApplicationModelChat_RcsEndUserMessageAction?, _ pin: Swift.String) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.sendResponseWithPinAsync(action, pin))
    }

    // MARK: Implementation details
}