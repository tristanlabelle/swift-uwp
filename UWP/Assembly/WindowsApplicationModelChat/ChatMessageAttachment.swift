// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents an attachment to a chat message.
public final class WindowsApplicationModelChat_ChatMessageAttachment: WindowsRuntime.WinRTImport<WindowsApplicationModelChat_ChatMessageAttachmentProjection> {
    // MARK: Windows.ApplicationModel.Chat.IChatMessageAttachmentFactory members

    public convenience init(_ mimeType: Swift.String, _ dataStreamReference: WindowsStorageStreams_IRandomAccessStreamReference?) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ichatMessageAttachmentFactory.createChatMessageAttachment(mimeType, dataStreamReference)))
    }

    // MARK: Windows.ApplicationModel.Chat.IChatMessageAttachment members

    /// Gets or sets a stream reference for a message attachment.
    /// - Returns: The data stream for the attachment.
    public var dataStreamReference: WindowsStorageStreams_IRandomAccessStreamReference {
        get throws {
            try COM.NullResult.unwrap(_interop.get_DataStreamReference())
        }
    }

    /// Gets or sets a stream reference for a message attachment.
    /// - Returns: The data stream for the attachment.
    public func dataStreamReference(_ value: WindowsStorageStreams_IRandomAccessStreamReference?) throws {
        try _interop.put_DataStreamReference(value)
    }

    /// Gets or sets the identifier for the attachment group to which this attachment belongs.
    /// - Returns: The group ID of the attachment.
    public var groupId: Swift.UInt32 {
        get throws {
            try _interop.get_GroupId()
        }
    }

    /// Gets or sets the identifier for the attachment group to which this attachment belongs.
    /// - Returns: The group ID of the attachment.
    public func groupId(_ value: Swift.UInt32) throws {
        try _interop.put_GroupId(value)
    }

    /// Gets or sets the MIME type of the attachment.
    /// - Returns: The MIME type of the attachment.
    public var mimeType: Swift.String {
        get throws {
            try _interop.get_MimeType()
        }
    }

    /// Gets or sets the MIME type of the attachment.
    /// - Returns: The MIME type of the attachment.
    public func mimeType(_ value: Swift.String) throws {
        try _interop.put_MimeType(value)
    }

    /// Gets or sets the text encoded representation of the attachment object.
    /// - Returns: The text of the attachment.
    public var text: Swift.String {
        get throws {
            try _interop.get_Text()
        }
    }

    /// Gets or sets the text encoded representation of the attachment object.
    /// - Returns: The text of the attachment.
    public func text(_ value: Swift.String) throws {
        try _interop.put_Text(value)
    }

    // MARK: Windows.ApplicationModel.Chat.IChatMessageAttachment2 members

    /// Gets or sets the original file name of the attachment.
    /// - Returns: The original file name of the attachment.
    public var originalFileName: Swift.String {
        get throws {
            try _ichatMessageAttachment2.get_OriginalFileName()
        }
    }

    /// Gets or sets the original file name of the attachment.
    /// - Returns: The original file name of the attachment.
    public func originalFileName(_ value: Swift.String) throws {
        try _ichatMessageAttachment2.put_OriginalFileName(value)
    }

    /// Gets or sets the thumbnail image for the attachment.
    /// - Returns: The thumbnail image for the attachment.
    public var thumbnail: WindowsStorageStreams_IRandomAccessStreamReference {
        get throws {
            try COM.NullResult.unwrap(_ichatMessageAttachment2.get_Thumbnail())
        }
    }

    /// Gets or sets the thumbnail image for the attachment.
    /// - Returns: The thumbnail image for the attachment.
    public func thumbnail(_ value: WindowsStorageStreams_IRandomAccessStreamReference?) throws {
        try _ichatMessageAttachment2.put_Thumbnail(value)
    }

    /// Gets or sets the progress of transferring the attachment.
    /// - Returns: The progress of transferring the attachment.
    public var transferProgress: Swift.Double {
        get throws {
            try _ichatMessageAttachment2.get_TransferProgress()
        }
    }

    /// Gets or sets the progress of transferring the attachment.
    /// - Returns: The progress of transferring the attachment.
    public func transferProgress(_ value: Swift.Double) throws {
        try _ichatMessageAttachment2.put_TransferProgress(value)
    }

    // MARK: Implementation details

    private var _ichatMessageAttachment2_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelChat_IChatMessageAttachment2>? = nil

    internal var _ichatMessageAttachment2: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelChat_IChatMessageAttachment2> {
        get throws {
            try _ichatMessageAttachment2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsApplicationModelChat_IChatMessageAttachment2.iid).cast(to: CWinRT.SWRT_WindowsApplicationModelChat_IChatMessageAttachment2.self)
            }
        }
    }

    deinit {
        _ichatMessageAttachment2_storage?.release()
    }

    private static var _ichatMessageAttachmentFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelChat_IChatMessageAttachmentFactory>? = nil

    internal static var _ichatMessageAttachmentFactory: COM.COMInterop<CWinRT.SWRT_WindowsApplicationModelChat_IChatMessageAttachmentFactory> {
        get throws {
            try _ichatMessageAttachmentFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.ApplicationModel.Chat.ChatMessageAttachment", id: CWinRT.SWRT_WindowsApplicationModelChat_IChatMessageAttachmentFactory.iid)
            }
        }
    }
}