// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the results of a resource download operation.
public final class WindowsMediaStreamingAdaptive_AdaptiveMediaSourceDownloadResult: WindowsRuntime.WinRTImport<WindowsMediaStreamingAdaptive_AdaptiveMediaSourceDownloadResultProjection> {
    // MARK: Windows.Media.Streaming.Adaptive.IAdaptiveMediaSourceDownloadResult members

    /// Gets or sets a buffer containing the downloaded resource.
    /// - Returns: A buffer containing the downloaded resource.
    public var buffer: WindowsStorageStreams_IBuffer {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Buffer())
        }
    }

    /// Gets or sets a buffer containing the downloaded resource.
    /// - Returns: A buffer containing the downloaded resource.
    public func buffer(_ value: WindowsStorageStreams_IBuffer?) throws {
        try _interop.put_Buffer(value)
    }

    /// Gets or sets a string that identifies the MIME content type of the downloaded resource.
    /// - Returns: A string that identifies the MIME content type of the downloaded resource.
    public var contentType: Swift.String {
        get throws {
            try _interop.get_ContentType()
        }
    }

    /// Gets or sets a string that identifies the MIME content type of the downloaded resource.
    /// - Returns: A string that identifies the MIME content type of the downloaded resource.
    public func contentType(_ value: Swift.String) throws {
        try _interop.put_ContentType(value)
    }

    /// Gets or sets an integer value that represents extended status information about the resource download operation.
    /// - Returns: An integer value that represents extended status information about the resource download operation.
    public var extendedStatus: Swift.UInt32 {
        get throws {
            try _interop.get_ExtendedStatus()
        }
    }

    /// Gets or sets an integer value that represents extended status information about the resource download operation.
    /// - Returns: An integer value that represents extended status information about the resource download operation.
    public func extendedStatus(_ value: Swift.UInt32) throws {
        try _interop.put_ExtendedStatus(value)
    }

    /// Gets or sets an input stream containing the downloaded resource.
    /// - Returns: An input stream containing the downloaded resource.
    public var inputStream: WindowsStorageStreams_IInputStream {
        get throws {
            try COM.NullResult.unwrap(_interop.get_InputStream())
        }
    }

    /// Gets or sets an input stream containing the downloaded resource.
    /// - Returns: An input stream containing the downloaded resource.
    public func inputStream(_ value: WindowsStorageStreams_IInputStream?) throws {
        try _interop.put_InputStream(value)
    }

    /// Gets or sets the Uniform Resource Identifier (URI) of the downloaded resource.
    /// - Returns: The Uniform Resource Identifier (URI) of the downloaded resource.
    public var resourceUri: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_interop.get_ResourceUri())
        }
    }

    /// Gets or sets the Uniform Resource Identifier (URI) of the downloaded resource.
    /// - Returns: The Uniform Resource Identifier (URI) of the downloaded resource.
    public func resourceUri(_ value: WindowsFoundation_Uri?) throws {
        try _interop.put_ResourceUri(value)
    }

    // MARK: Windows.Media.Streaming.Adaptive.IAdaptiveMediaSourceDownloadResult2 members

    /// Gets or sets the requested byte range of the resource to be downloaded.
    /// - Returns: The requested byte range of the resource to be downloaded.
    public var resourceByteRangeLength: Swift.UInt64? {
        get throws {
            try _iadaptiveMediaSourceDownloadResult2.get_ResourceByteRangeLength()
        }
    }

    /// Gets or sets the requested byte range of the resource to be downloaded.
    /// - Returns: The requested byte range of the resource to be downloaded.
    public func resourceByteRangeLength(_ value: Swift.UInt64?) throws {
        try _iadaptiveMediaSourceDownloadResult2.put_ResourceByteRangeLength(value)
    }

    /// Gets or sets the requested byte range offset of the resource to be downloaded.
    /// - Returns: The requested byte range offset of the resource to be downloaded.
    public var resourceByteRangeOffset: Swift.UInt64? {
        get throws {
            try _iadaptiveMediaSourceDownloadResult2.get_ResourceByteRangeOffset()
        }
    }

    /// Gets or sets the requested byte range offset of the resource to be downloaded.
    /// - Returns: The requested byte range offset of the resource to be downloaded.
    public func resourceByteRangeOffset(_ value: Swift.UInt64?) throws {
        try _iadaptiveMediaSourceDownloadResult2.put_ResourceByteRangeOffset(value)
    }

    // MARK: Implementation details

    private var _iadaptiveMediaSourceDownloadResult2_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaStreamingAdaptive_IAdaptiveMediaSourceDownloadResult2>? = nil

    internal var _iadaptiveMediaSourceDownloadResult2: COM.COMInterop<CWinRT.SWRT_WindowsMediaStreamingAdaptive_IAdaptiveMediaSourceDownloadResult2> {
        get throws {
            try _iadaptiveMediaSourceDownloadResult2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaStreamingAdaptive_IAdaptiveMediaSourceDownloadResult2.iid).cast(to: CWinRT.SWRT_WindowsMediaStreamingAdaptive_IAdaptiveMediaSourceDownloadResult2.self)
            }
        }
    }

    deinit {
        _iadaptiveMediaSourceDownloadResult2_storage?.release()
    }
}