// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides advanced settings for an AdaptiveMediaSource.
public final class WindowsMediaStreamingAdaptive_AdaptiveMediaSourceAdvancedSettings: WindowsRuntime.WinRTImport<WindowsMediaStreamingAdaptive_AdaptiveMediaSourceAdvancedSettingsProjection> {
    // MARK: Windows.Media.Streaming.Adaptive.IAdaptiveMediaSourceAdvancedSettings members

    /// Gets or sets a value indicating whether media segments are known in advance to be fully independent such that each segment can be decoded and rendered without requiring any information from any other media segment.
    /// - Returns: True if the media segments for the AdaptiveMediaSource are independent; otherwise, false.
    public var allSegmentsIndependent: Swift.Bool {
        get throws {
            try _interop.get_AllSegmentsIndependent()
        }
    }

    /// Gets or sets a value indicating whether media segments are known in advance to be fully independent such that each segment can be decoded and rendered without requiring any information from any other media segment.
    /// - Returns: True if the media segments for the AdaptiveMediaSource are independent; otherwise, false.
    public func allSegmentsIndependent(_ value: Swift.Bool) throws {
        try _interop.put_AllSegmentsIndependent(value)
    }

    /// Gets or sets a value that specifies how low the inbound bits per second may drop before the adaptive media source will switch down to a different encoding bitrate to download.
    /// - Returns: A floating point value that is the ratio of actual inbound bitrate to the target bitrate.
    public var bitrateDowngradeTriggerRatio: Swift.Double? {
        get throws {
            try _interop.get_BitrateDowngradeTriggerRatio()
        }
    }

    /// Gets or sets a value that specifies how low the inbound bits per second may drop before the adaptive media source will switch down to a different encoding bitrate to download.
    /// - Returns: A floating point value that is the ratio of actual inbound bitrate to the target bitrate.
    public func bitrateDowngradeTriggerRatio(_ value: Swift.Double?) throws {
        try _interop.put_BitrateDowngradeTriggerRatio(value)
    }

    /// Gets or sets a value that specifies the minimum inbound bits per second required before the adaptive media source will switch up to one of the available encoded bitrates to download.
    /// - Returns: The minimum inbound bits per second before switching to another available encoded bitrate.
    public var desiredBitrateHeadroomRatio: Swift.Double? {
        get throws {
            try _interop.get_DesiredBitrateHeadroomRatio()
        }
    }

    /// Gets or sets a value that specifies the minimum inbound bits per second required before the adaptive media source will switch up to one of the available encoded bitrates to download.
    /// - Returns: The minimum inbound bits per second before switching to another available encoded bitrate.
    public func desiredBitrateHeadroomRatio(_ value: Swift.Double?) throws {
        try _interop.put_DesiredBitrateHeadroomRatio(value)
    }

    // MARK: Implementation details
}