// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a custom pairing for a DeviceInformation object.
public final class WindowsDevicesEnumeration_DeviceInformationCustomPairing: WindowsRuntime.WinRTImport<WindowsDevicesEnumeration_DeviceInformationCustomPairingProjection> {
    // MARK: Windows.Devices.Enumeration.IDeviceInformationCustomPairing members

    /// Raised when a pairing action is requested.
    public func pairingRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsDevicesEnumeration_DeviceInformationCustomPairing?, WindowsDevicesEnumeration_DevicePairingRequestedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_PairingRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: pairingRequested)
    }

    public func pairingRequested(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_PairingRequested(token)
    }

    /// Attempts to pair the device.
    /// - Parameter pairingKindsSupported: The different pairing kinds supported by this DeviceInformation object.
    /// - Returns: The result of the pairing action.
    public func pairAsync(_ pairingKindsSupported: WindowsDevicesEnumeration_DevicePairingKinds) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesEnumeration_DevicePairingResult?> {
        try COM.NullResult.unwrap(_interop.pairAsync(pairingKindsSupported))
    }

    /// Attempts to pair a device using a minimum protection level.
    /// - Parameter pairingKindsSupported: The different pairing kinds supported by this DeviceInformation object.
    /// - Parameter minProtectionLevel: The minimum protection level this DeviceInformation object requires in order to pair.
    /// - Returns: The result of the pairing action.
    public func pairAsync(_ pairingKindsSupported: WindowsDevicesEnumeration_DevicePairingKinds, _ minProtectionLevel: WindowsDevicesEnumeration_DevicePairingProtectionLevel) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesEnumeration_DevicePairingResult?> {
        try COM.NullResult.unwrap(_interop.pairWithProtectionLevelAsync(pairingKindsSupported, minProtectionLevel))
    }

    /// Attempts to pair a device using a minimum protection level and custom settings.
    /// - Parameter pairingKindsSupported: The different pairing kinds supported by this DeviceInformation object.
    /// - Parameter minProtectionLevel: The minimum protection level this DeviceInformation object requires in order to pair.
    /// - Parameter devicePairingSettings: The custom device pairing settings.
    /// - Returns: The result of the pairing action.
    public func pairAsync(_ pairingKindsSupported: WindowsDevicesEnumeration_DevicePairingKinds, _ minProtectionLevel: WindowsDevicesEnumeration_DevicePairingProtectionLevel, _ devicePairingSettings: WindowsDevicesEnumeration_IDevicePairingSettings?) throws -> WindowsFoundation_IAsyncOperation<WindowsDevicesEnumeration_DevicePairingResult?> {
        try COM.NullResult.unwrap(_interop.pairWithProtectionLevelAndSettingsAsync(pairingKindsSupported, minProtectionLevel, devicePairingSettings))
    }

    // MARK: Implementation details
}