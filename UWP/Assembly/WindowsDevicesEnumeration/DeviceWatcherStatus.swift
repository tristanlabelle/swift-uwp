// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Describes the state of a DeviceWatcher object.
public struct WindowsDevicesEnumeration_DeviceWatcherStatus: RawRepresentable, Hashable, Codable {
    public var rawValue: Swift.Int32

    public init(rawValue: Swift.Int32 = 0) {
        self.rawValue = rawValue
    }

    /// This is the initial state of a Watcher object. During this state clients can register event handlers.
    public static let created = Self()

    /// The watcher transitions to the Started state once Start is called. The watcher is enumerating the initial collection. Note that during this enumeration phase it is possible to receive Updated and Removed notifications but only to items that have already been Added.
    public static let started = Self(rawValue: 1)

    /// The watcher has completed enumerating the initial collection. Items can still be added, updated or removed from the collection.
    public static let enumerationCompleted = Self(rawValue: 2)

    /// The client has called Stop and the watcher is still in the process of stopping. Events may still be raised.
    public static let stopping = Self(rawValue: 3)

    /// The client has called Stop and the watcher has completed all outstanding events. No further events will be raised.
    public static let stopped = Self(rawValue: 4)

    /// The watcher has aborted operation. No subsequent events will be raised.
    public static let aborted = Self(rawValue: 5)
}