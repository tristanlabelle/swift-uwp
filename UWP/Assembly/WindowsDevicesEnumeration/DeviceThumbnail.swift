// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the thumbnail image for a device.
public final class WindowsDevicesEnumeration_DeviceThumbnail: WindowsRuntime.WinRTImport<WindowsDevicesEnumeration_DeviceThumbnailProjection>, WindowsStorageStreams_IRandomAccessStreamWithContentTypeProtocol, WindowsStorageStreams_IContentTypeProviderProtocol, WindowsStorageStreams_IRandomAccessStreamProtocol, WindowsStorageStreams_IOutputStreamProtocol, WindowsFoundation_IClosableProtocol, WindowsStorageStreams_IInputStreamProtocol {
    // MARK: Windows.Storage.Streams.IContentTypeProvider members

    /// Returns the content type of the thumbnail image.
    /// - Returns: The content type of the image.
    public var contentType: Swift.String {
        get throws {
            try _icontentTypeProvider.get_ContentType()
        }
    }

    // MARK: Windows.Storage.Streams.IRandomAccessStream members

    /// Gets a value that indicates whether the stream can be read from.
    /// - Returns: True if the stream can be read from. Otherwise, false.
    public var canRead: Swift.Bool {
        get throws {
            try _irandomAccessStream.get_CanRead()
        }
    }

    /// Gets a value that indicates whether the stream can be written to.
    /// - Returns: True if the stream can be written to. Otherwise, false.
    public var canWrite: Swift.Bool {
        get throws {
            try _irandomAccessStream.get_CanWrite()
        }
    }

    /// Gets the byte offset of the stream.
    /// - Returns: The number of bytes from the start of the stream.
    public var position: Swift.UInt64 {
        get throws {
            try _irandomAccessStream.get_Position()
        }
    }

    /// Gets or sets the size of the device thumbnail image.
    /// - Returns: The size of the device thumbnail image.
    public var size: Swift.UInt64 {
        get throws {
            try _irandomAccessStream.get_Size()
        }
    }

    /// Gets or sets the size of the device thumbnail image.
    /// - Returns: The size of the device thumbnail image.
    public func size(_ value: Swift.UInt64) throws {
        try _irandomAccessStream.put_Size(value)
    }

    /// Returns a pointer to an input stream starting at the specified location.
    /// - Parameter position: The position in the input stream.
    /// - Returns: A pointer to an input stream.
    public func getInputStreamAt(_ position: Swift.UInt64) throws -> WindowsStorageStreams_IInputStream {
        try COM.NullResult.unwrap(_irandomAccessStream.getInputStreamAt(position))
    }

    /// Returns a pointer to an output stream starting at the specified location.
    /// - Parameter position: The position in the output stream.
    /// - Returns: A pointer to an output stream.
    public func getOutputStreamAt(_ position: Swift.UInt64) throws -> WindowsStorageStreams_IOutputStream {
        try COM.NullResult.unwrap(_irandomAccessStream.getOutputStreamAt(position))
    }

    /// Sets the position of the stream to the specified value.
    /// - Parameter position: The new position of the stream.
    public func seek(_ position: Swift.UInt64) throws {
        try _irandomAccessStream.seek(position)
    }

    /// Creates a new instance of a IRandomAccessStream over the same resource as the current stream.
    /// - Returns: The new stream. The initial, internal position of the stream is 0.
    public func cloneStream() throws -> WindowsStorageStreams_IRandomAccessStream {
        try COM.NullResult.unwrap(_irandomAccessStream.cloneStream())
    }

    // MARK: Windows.Storage.Streams.IOutputStream members

    /// Writes data asynchronously in a sequential stream.
    /// - Parameter buffer: The buffer into which the asynchronous writer operation writes.
    /// - Returns: The byte writer operation.
    public func writeAsync(_ buffer: WindowsStorageStreams_IBuffer?) throws -> WindowsFoundation_IAsyncOperationWithProgress<Swift.UInt32, Swift.UInt32> {
        try COM.NullResult.unwrap(_ioutputStream.writeAsync(buffer))
    }

    /// Flushes data asynchronously in a sequential stream.
    /// - Returns: The stream flush operation.
    public func flushAsync() throws -> WindowsFoundation_IAsyncOperation<Swift.Bool> {
        try COM.NullResult.unwrap(_ioutputStream.flushAsync())
    }

    // MARK: Windows.Foundation.IClosable members

    /// Closes the current stream and releases system resources.
    public func close() throws {
        try _iclosable.close()
    }

    // MARK: Windows.Storage.Streams.IInputStream members

    /// Returns an asynchronous byte reader object.
    /// - Parameter buffer: The buffer into which the asynchronous read operation places the bytes that are read.
    /// - Parameter count: The number of bytes to read.
    /// - Parameter options: Specifies the type of the asynchronous read operation.
    /// - Returns: The asynchronous operation.
    public func readAsync(_ buffer: WindowsStorageStreams_IBuffer?, _ count: Swift.UInt32, _ options: WindowsStorageStreams_InputStreamOptions) throws -> WindowsFoundation_IAsyncOperationWithProgress<WindowsStorageStreams_IBuffer?, Swift.UInt32> {
        try COM.NullResult.unwrap(_iinputStream.readAsync(buffer, count, options))
    }

    // MARK: Implementation details

    private var _icontentTypeProvider_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorageStreams_IContentTypeProvider>? = nil

    internal var _icontentTypeProvider: COM.COMInterop<CWinRT.SWRT_WindowsStorageStreams_IContentTypeProvider> {
        get throws {
            try _icontentTypeProvider_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsStorageStreams_IContentTypeProvider.iid).cast(to: CWinRT.SWRT_WindowsStorageStreams_IContentTypeProvider.self)
            }
        }
    }

    private var _irandomAccessStream_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorageStreams_IRandomAccessStream>? = nil

    internal var _irandomAccessStream: COM.COMInterop<CWinRT.SWRT_WindowsStorageStreams_IRandomAccessStream> {
        get throws {
            try _irandomAccessStream_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsStorageStreams_IRandomAccessStream.iid).cast(to: CWinRT.SWRT_WindowsStorageStreams_IRandomAccessStream.self)
            }
        }
    }

    private var _ioutputStream_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorageStreams_IOutputStream>? = nil

    internal var _ioutputStream: COM.COMInterop<CWinRT.SWRT_WindowsStorageStreams_IOutputStream> {
        get throws {
            try _ioutputStream_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsStorageStreams_IOutputStream.iid).cast(to: CWinRT.SWRT_WindowsStorageStreams_IOutputStream.self)
            }
        }
    }

    private var _iclosable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable>? = nil

    internal var _iclosable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable> {
        get throws {
            try _iclosable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IClosable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IClosable.self)
            }
        }
    }

    private var _iinputStream_storage: COM.COMInterop<CWinRT.SWRT_WindowsStorageStreams_IInputStream>? = nil

    internal var _iinputStream: COM.COMInterop<CWinRT.SWRT_WindowsStorageStreams_IInputStream> {
        get throws {
            try _iinputStream_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsStorageStreams_IInputStream.iid).cast(to: CWinRT.SWRT_WindowsStorageStreams_IInputStream.self)
            }
        }
    }

    deinit {
        _icontentTypeProvider_storage?.release()
        _irandomAccessStream_storage?.release()
        _ioutputStream_storage?.release()
        _iclosable_storage?.release()
        _iinputStream_storage?.release()
    }
}