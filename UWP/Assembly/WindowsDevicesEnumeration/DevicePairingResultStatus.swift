// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// The result of the pairing action with an Association Endpoint (AEP) device object. For more information about AEP objects, see DeviceInformationKind.
public struct WindowsDevicesEnumeration_DevicePairingResultStatus: RawRepresentable, Hashable, Codable {
    public var rawValue: Swift.Int32

    public init(rawValue: Swift.Int32 = 0) {
        self.rawValue = rawValue
    }

    /// The device object is now paired.
    public static let paired = Self()

    /// The device object is not in a state where it can be paired.
    public static let notReadyToPair = Self(rawValue: 1)

    /// The device object is not currently paired.
    public static let notPaired = Self(rawValue: 2)

    /// The device object has already been paired.
    public static let alreadyPaired = Self(rawValue: 3)

    /// The device object rejected the connection.
    public static let connectionRejected = Self(rawValue: 4)

    /// The device object indicated it cannot accept any more incoming connections.
    public static let tooManyConnections = Self(rawValue: 5)

    /// The device object indicated there was a hardware failure.
    public static let hardwareFailure = Self(rawValue: 6)

    /// The authentication process timed out before it could complete.
    public static let authenticationTimeout = Self(rawValue: 7)

    /// The authentication protocol is not supported, so the device is not paired.
    public static let authenticationNotAllowed = Self(rawValue: 8)

    /// Authentication failed, so the device is not paired. Either the device object or the application rejected the authentication.
    public static let authenticationFailure = Self(rawValue: 9)

    /// There are no network profiles for this device object to use.
    public static let noSupportedProfiles = Self(rawValue: 10)

    /// The minimum level of protection is not supported by the device object or the application.
    public static let protectionLevelCouldNotBeMet = Self(rawValue: 11)

    /// Your application does not have the appropriate permissions level to pair the device object.
    public static let accessDenied = Self(rawValue: 12)

    /// The ceremony data was incorrect.
    public static let invalidCeremonyData = Self(rawValue: 13)

    /// The pairing action was canceled before completion.
    public static let pairingCanceled = Self(rawValue: 14)

    /// The device object is already attempting to pair or unpair.
    public static let operationAlreadyInProgress = Self(rawValue: 15)

    /// Either the event handler wasn't registered or a required DevicePairingKinds was not supported.
    public static let requiredHandlerNotRegistered = Self(rawValue: 16)

    /// The application handler rejected the pairing.
    public static let rejectedByHandler = Self(rawValue: 17)

    /// The remove device already has an association.
    public static let remoteDeviceHasAssociation = Self(rawValue: 18)

    /// An unknown failure occurred.
    public static let failed = Self(rawValue: 19)
}