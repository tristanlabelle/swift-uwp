// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides information about the USB control transfer, the type of control request, whether the data is sent from or to the host, and the recipient of the request in the device.
public final class WindowsDevicesUsb_UsbControlRequestType: WindowsRuntime.WinRTImport<WindowsDevicesUsb_UsbControlRequestTypeProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsDevicesUsb_UsbControlRequestTypeProjection.self))
    }

    // MARK: Windows.Devices.Usb.IUsbControlRequestType members

    /// Gets or sets the **bmRequestType** value as a byte.
    /// - Returns: The entire **bmRequestType** value in a byte.
    public var asByte: Swift.UInt8 {
        get throws {
            try _interop.get_AsByte()
        }
    }

    /// Gets or sets the **bmRequestType** value as a byte.
    /// - Returns: The entire **bmRequestType** value in a byte.
    public func asByte(_ value: Swift.UInt8) throws {
        try _interop.put_AsByte(value)
    }

    /// Gets or sets the type of USB control transfer: standard, class, or vendor.
    /// - Returns: The type of USB control transfer: standard, class, or vendor.
    public var controlTransferType: WindowsDevicesUsb_UsbControlTransferType {
        get throws {
            try _interop.get_ControlTransferType()
        }
    }

    /// Gets or sets the type of USB control transfer: standard, class, or vendor.
    /// - Returns: The type of USB control transfer: standard, class, or vendor.
    public func controlTransferType(_ value: WindowsDevicesUsb_UsbControlTransferType) throws {
        try _interop.put_ControlTransferType(value)
    }

    /// Gets or sets the direction of the USB control transfer.
    /// - Returns: The direction of the USB control transfer.
    public var direction: WindowsDevicesUsb_UsbTransferDirection {
        get throws {
            try _interop.get_Direction()
        }
    }

    /// Gets or sets the direction of the USB control transfer.
    /// - Returns: The direction of the USB control transfer.
    public func direction(_ value: WindowsDevicesUsb_UsbTransferDirection) throws {
        try _interop.put_Direction(value)
    }

    /// Gets or sets the recipient of the USB control transfer.
    /// - Returns: The recipient of the USB control transfer.
    public var recipient: WindowsDevicesUsb_UsbControlRecipient {
        get throws {
            try _interop.get_Recipient()
        }
    }

    /// Gets or sets the recipient of the USB control transfer.
    /// - Returns: The recipient of the USB control transfer.
    public func recipient(_ value: WindowsDevicesUsb_UsbControlRecipient) throws {
        try _interop.put_Recipient(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Usb.UsbControlRequestType", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}