// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides information about the USB interface including its endpoints, the number of alternate settings the interface supports, and gets the entire descriptor set for those settings. It also obtains pipes associated with the endpoints that the interface supports.
public final class WindowsDevicesUsb_UsbInterface: WindowsRuntime.WinRTImport<WindowsDevicesUsb_UsbInterfaceProjection> {
    // MARK: Windows.Devices.Usb.IUsbInterface members

    /// Gets an array of objects that represent pipes that the host opened to communicate with bulk IN endpoints defined in the current setting of the USB interface setting.
    /// - Returns: An array of UsbBulkInPipe objects.
    public var bulkInPipes: WindowsFoundationCollections_IVectorView<WindowsDevicesUsb_UsbBulkInPipe?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_BulkInPipes())
        }
    }

    /// Gets an array of objects that represent pipes that the host opened to communicate with bulk OUT endpoints defined in the current setting of the USB interface.
    /// - Returns: An array of UsbBulkOutPipe objects.
    public var bulkOutPipes: WindowsFoundationCollections_IVectorView<WindowsDevicesUsb_UsbBulkOutPipe?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_BulkOutPipes())
        }
    }

    /// Gets an array of objects that represent descriptors for all alternate settings that are part of this USB interface.
    /// - Returns: An array of UsbDescriptor objects.
    public var descriptors: WindowsFoundationCollections_IVectorView<WindowsDevicesUsb_UsbDescriptor?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Descriptors())
        }
    }

    /// Gets the interface number that identifies the USB interface. This value is the **bInterfaceNumber** field of a standard USB interface descriptor.
    /// - Returns: The interface number that identifies the USB interface.
    public var interfaceNumber: Swift.UInt8 {
        get throws {
            try _interop.get_InterfaceNumber()
        }
    }

    /// Gets an array of objects that represent alternate settings defined for the USB interface.
    /// - Returns: An array of UsbInterfaceSetting objects.
    public var interfaceSettings: WindowsFoundationCollections_IVectorView<WindowsDevicesUsb_UsbInterfaceSetting?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_InterfaceSettings())
        }
    }

    /// Gets an array of objects that represent pipes that the host opened to communicate with interrupt IN endpoints defined in the current setting of the USB interface.
    /// - Returns: An array of UsbInterruptInPipe objects. The objects are in the same order as they are defined in the interface descriptor.
    public var interruptInPipes: WindowsFoundationCollections_IVectorView<WindowsDevicesUsb_UsbInterruptInPipe?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_InterruptInPipes())
        }
    }

    /// Gets an array of objects that represent pipes that the host opened to communicate with interrupt OUT endpoints defined in the current setting of the USB interface.
    /// - Returns: An array of UsbInterruptOutPipe objects.
    public var interruptOutPipes: WindowsFoundationCollections_IVectorView<WindowsDevicesUsb_UsbInterruptOutPipe?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_InterruptOutPipes())
        }
    }

    // MARK: Implementation details
}