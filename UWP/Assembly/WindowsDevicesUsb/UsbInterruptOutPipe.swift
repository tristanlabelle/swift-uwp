// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents the pipe that the underlying USB driver opens to communicate with a USB interrupt OUT endpoint of the device. The object provides access to an output stream to which the app can write data to send to the endpoint.
public final class WindowsDevicesUsb_UsbInterruptOutPipe: WindowsRuntime.WinRTImport<WindowsDevicesUsb_UsbInterruptOutPipeProjection> {
    // MARK: Windows.Devices.Usb.IUsbInterruptOutPipe members

    /// Gets the object that represents the endpoint descriptor associated with the USB interrupt OUT endpoint.
    /// - Returns: A UsbInterruptOutEndpointDescriptor object that represents the endpoint descriptor associated with the USB interrupt OUT endpoint.
    public var endpointDescriptor: WindowsDevicesUsb_UsbInterruptOutEndpointDescriptor {
        get throws {
            try COM.NullResult.unwrap(_interop.get_EndpointDescriptor())
        }
    }

    /// Gets an output stream to which the app can write data to send to the endpoint.
    /// - Returns: Output stream that contains data to write to the endpoint.
    public var outputStream: WindowsStorageStreams_IOutputStream {
        get throws {
            try COM.NullResult.unwrap(_interop.get_OutputStream())
        }
    }

    /// Gets or sets configuration flags that controls the behavior of the pipe that writes data to a USB interrupt OUT endpoint.
    /// - Returns: A UsbWriteOptions constant that indicates the pipe policy.
    public var writeOptions: WindowsDevicesUsb_UsbWriteOptions {
        get throws {
            try _interop.get_WriteOptions()
        }
    }

    /// Gets or sets configuration flags that controls the behavior of the pipe that writes data to a USB interrupt OUT endpoint.
    /// - Returns: A UsbWriteOptions constant that indicates the pipe policy.
    public func writeOptions(_ value: WindowsDevicesUsb_UsbWriteOptions) throws {
        try _interop.put_WriteOptions(value)
    }

    /// Starts an asynchronous operation to clear a stall condition (endpoint halt) on the USB interrupt OUT endpoint that is associated with the pipe.
    /// - Returns: An IAsyncAction object that is used to control the asynchronous operation.
    public func clearStallAsync() throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_interop.clearStallAsync())
    }

    // MARK: Implementation details
}