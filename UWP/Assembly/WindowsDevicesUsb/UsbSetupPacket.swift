// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Describes the setup packet for a USB control transfer. For an explanation of the setup packet, see Table 9.2 in the Universal Serial Bus (USB) specification.
public final class WindowsDevicesUsb_UsbSetupPacket: WindowsRuntime.WinRTImport<WindowsDevicesUsb_UsbSetupPacketProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsDevicesUsb_UsbSetupPacketProjection.self))
    }

    // MARK: Windows.Devices.Usb.IUsbSetupPacketFactory members

    public convenience init(_ eightByteBuffer: WindowsStorageStreams_IBuffer?) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iusbSetupPacketFactory.createWithEightByteBuffer(eightByteBuffer)))
    }

    // MARK: Windows.Devices.Usb.IUsbSetupPacket members

    /// Gets or sets the **wIndex** field in the setup packet of the USB control transfer.
    /// - Returns: The **wIndex** field in the setup packet. For an explanation of this field, see section 9.3.4 of the Universal Serial Bus (USB) specification.
    public var index: Swift.UInt32 {
        get throws {
            try _interop.get_Index()
        }
    }

    /// Gets or sets the **wIndex** field in the setup packet of the USB control transfer.
    /// - Returns: The **wIndex** field in the setup packet. For an explanation of this field, see section 9.3.4 of the Universal Serial Bus (USB) specification.
    public func index(_ value: Swift.UInt32) throws {
        try _interop.put_Index(value)
    }

    /// Gets the length, in bytes, of the setup packet.
    /// - Returns: The length, in bytes, of the setup packet.
    public var length: Swift.UInt32 {
        get throws {
            try _interop.get_Length()
        }
    }

    /// Gets the length, in bytes, of the setup packet.
    /// - Returns: The length, in bytes, of the setup packet.
    public func length(_ value: Swift.UInt32) throws {
        try _interop.put_Length(value)
    }

    /// Gets or sets the **bRequest** field in the setup packet of the USB control transfer.
    /// - Returns: The **bRequest** field in the setup packet. For an explanation of this field, see section 9.3.2 of the Universal Serial Bus (USB) specification.
    public var request: Swift.UInt8 {
        get throws {
            try _interop.get_Request()
        }
    }

    /// Gets or sets the **bRequest** field in the setup packet of the USB control transfer.
    /// - Returns: The **bRequest** field in the setup packet. For an explanation of this field, see section 9.3.2 of the Universal Serial Bus (USB) specification.
    public func request(_ value: Swift.UInt8) throws {
        try _interop.put_Request(value)
    }

    /// Gets or sets the **bmRequestType** field in the setup packet of the USB control transfer. That field is represented by a UsbControlRequestType object.
    /// - Returns: The **bmRequestType** field in the setup packet. The values that are assigned to this field are described in Table 9.2 and section 9.3.1 of the Universal Serial Bus (USB) specification.
    public var requestType: WindowsDevicesUsb_UsbControlRequestType {
        get throws {
            try COM.NullResult.unwrap(_interop.get_RequestType())
        }
    }

    /// Gets or sets the **bmRequestType** field in the setup packet of the USB control transfer. That field is represented by a UsbControlRequestType object.
    /// - Returns: The **bmRequestType** field in the setup packet. The values that are assigned to this field are described in Table 9.2 and section 9.3.1 of the Universal Serial Bus (USB) specification.
    public func requestType(_ value: WindowsDevicesUsb_UsbControlRequestType?) throws {
        try _interop.put_RequestType(value)
    }

    /// Gets or sets the **wValue** field in the setup packet of the USB control transfer.
    /// - Returns: The **wValue** field in the setup packet and the value varies according to the request. For an explanation of this field, see section 9.3.3 of the Universal Serial Bus (USB) specification.
    public var value: Swift.UInt32 {
        get throws {
            try _interop.get_Value()
        }
    }

    /// Gets or sets the **wValue** field in the setup packet of the USB control transfer.
    /// - Returns: The **wValue** field in the setup packet and the value varies according to the request. For an explanation of this field, see section 9.3.3 of the Universal Serial Bus (USB) specification.
    public func value(_ value: Swift.UInt32) throws {
        try _interop.put_Value(value)
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Usb.UsbSetupPacket", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _iusbSetupPacketFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesUsb_IUsbSetupPacketFactory>? = nil

    internal static var _iusbSetupPacketFactory: COM.COMInterop<CWinRT.SWRT_WindowsDevicesUsb_IUsbSetupPacketFactory> {
        get throws {
            try _iusbSetupPacketFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Usb.UsbSetupPacket", id: CWinRT.SWRT_WindowsDevicesUsb_IUsbSetupPacketFactory.iid)
            }
        }
    }
}