// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Describes a USB alternate setting (of an interface) in an interface descriptor. For an explanation of an interface descriptor, see Section 9.6.5 in the Universal Serial Bus Specification:
public final class WindowsDevicesUsb_UsbInterfaceDescriptor: WindowsRuntime.WinRTImport<WindowsDevicesUsb_UsbInterfaceDescriptorProjection> {
    // MARK: Windows.Devices.Usb.IUsbInterfaceDescriptor members

    /// Gets the **bAlternateSetting** field of the USB interface descriptor. The value is a number that identifies the alternate setting defined by the interface.
    /// - Returns: A number that identifies the alternate setting defined by the interface.
    public var alternateSettingNumber: Swift.UInt8 {
        get throws {
            try _interop.get_AlternateSettingNumber()
        }
    }

    /// Gets the **bInterfaceClass** field of the USB interface descriptor. The value indicates the USB-defined class to which the interface conforms.
    /// - Returns: The USB-defined class to which the interface conforms.
    public var classCode: Swift.UInt8 {
        get throws {
            try _interop.get_ClassCode()
        }
    }

    /// Gets the **bInterfaceNumber** field of the USB interface descriptor. The value is the index that identifies the interface.
    /// - Returns: The index that identifies the interface.
    public var interfaceNumber: Swift.UInt8 {
        get throws {
            try _interop.get_InterfaceNumber()
        }
    }

    /// Gets the **bInterfaceProtocol** field of the interface descriptor. The value is a USB-assigned identifier that specifies a USB-defined protocol to which the interface conforms.
    /// - Returns: A USB-assigned identifier that specifies a USB-defined protocol to which the interface conforms.
    public var protocolCode: Swift.UInt8 {
        get throws {
            try _interop.get_ProtocolCode()
        }
    }

    /// Gets the **bInterfaceSubClass** field of the USB interface descriptor. The value is a USB-assigned identifier that specifies a USB-defined subclass to which the interface.
    /// - Returns: A USB-assigned identifier that specifies a USB-defined subclass to which the interface.
    public var subclassCode: Swift.UInt8 {
        get throws {
            try _interop.get_SubclassCode()
        }
    }

    // MARK: Windows.Devices.Usb.IUsbInterfaceDescriptorStatics members

    /// Retrieves information about the alternate setting in a UsbInterfaceDescriptor object that is contained in a UsbDescriptor object.
    /// - Parameter descriptor: The UsbDescriptor object to parse.
    /// - Parameter parsed: Receives a UsbInterfaceDescriptor object.
    /// - Returns: True, if the specified UsbDescriptor object is USB interface descriptor. Otherwise, false.
    public static func tryParse(_ descriptor: WindowsDevicesUsb_UsbDescriptor?, _ parsed: inout WindowsDevicesUsb_UsbInterfaceDescriptor?) throws -> Swift.Bool {
        try _iusbInterfaceDescriptorStatics.tryParse(descriptor, &parsed)
    }

    /// Parses the specified USB descriptor and returns alternate setting information in a UsbInterfaceDescriptor object.
    /// - Parameter descriptor: A UsbDescriptor object that contains the USB interface descriptor.
    /// - Returns: A UsbInterfaceDescriptor object describes the alternate setting.
    public static func parse(_ descriptor: WindowsDevicesUsb_UsbDescriptor?) throws -> WindowsDevicesUsb_UsbInterfaceDescriptor {
        try COM.NullResult.unwrap(_iusbInterfaceDescriptorStatics.parse(descriptor))
    }

    // MARK: Implementation details

    private static var _iusbInterfaceDescriptorStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsDevicesUsb_IUsbInterfaceDescriptorStatics>? = nil

    internal static var _iusbInterfaceDescriptorStatics: COM.COMInterop<CWinRT.SWRT_WindowsDevicesUsb_IUsbInterfaceDescriptorStatics> {
        get throws {
            try _iusbInterfaceDescriptorStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Devices.Usb.UsbInterfaceDescriptor", id: CWinRT.SWRT_WindowsDevicesUsb_IUsbInterfaceDescriptorStatics.iid)
            }
        }
    }
}