// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// The interface you implement to create a custom video effect.
public protocol WindowsMediaEffects_IBasicVideoEffectProtocol: WindowsMedia_IMediaExtensionProtocol {
    /// Gets a value indicating whether the video effect will modify the contents of the input frame.
    /// - Returns: True, if the effect will not modify the input frame; otherwise, false.
    var isReadOnly: Swift.Bool { get throws }

    /// Gets the encoding properties supported by the custom video effect.
    /// - Returns: A list of supported encoding properties.
    var supportedEncodingProperties: WindowsFoundationCollections_IVectorView<WindowsMediaMediaProperties_VideoEncodingProperties?> { get throws }

    /// Gets a value that indicates whether the custom video effect supports the use of GPU memory or CPU memory.
    /// - Returns: A value that indicates the custom video effect's supported memory types.
    var supportedMemoryTypes: WindowsMediaEffects_MediaMemoryTypes { get throws }

    /// Gets a value that indicates whether the custom video effect is time independent.
    /// - Returns: True, if the video effect is time independent; otherwise, false.
    var timeIndependent: Swift.Bool { get throws }

    /// Called to set the encoding properties of a custom video effect.
    /// - Parameter encodingProperties: The encoding properties.
    /// - Parameter device: The Microsoft Direct3D device that can be used to create resources based on the media format described by the encoding properties.
    func setEncodingProperties(_ encodingProperties: WindowsMediaMediaProperties_VideoEncodingProperties?, _ device: WindowsGraphicsDirectXDirect3D11_IDirect3DDevice?) throws

    /// Called when frames are available for processing by a custom video effect.
    /// - Parameter context: The context object that provides the input and output frames for the process operation.
    func processFrame(_ context: WindowsMediaEffects_ProcessVideoFrameContext?) throws

    /// Called when the video effect should close and clean up allocated resources.
    /// - Parameter reason: The reason the effect was closed.
    func close(_ reason: WindowsMediaEffects_MediaEffectClosedReason) throws

    /// Called to allow video effect implementations optionally discard any stored state related to frames that have already been received.
    func discardQueuedFrames() throws
}

/// The interface you implement to create a custom video effect.
public typealias WindowsMediaEffects_IBasicVideoEffect = any WindowsMediaEffects_IBasicVideoEffectProtocol