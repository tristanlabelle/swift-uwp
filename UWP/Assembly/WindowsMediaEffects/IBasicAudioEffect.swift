// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// The interface you implement to create a custom audio effect.
public protocol WindowsMediaEffects_IBasicAudioEffectProtocol: WindowsMedia_IMediaExtensionProtocol {
    /// Gets the encoding properties supported by the custom audio effect.
    /// - Returns: A list of supported encoding properties.
    var supportedEncodingProperties: WindowsFoundationCollections_IVectorView<WindowsMediaMediaProperties_AudioEncodingProperties?> { get throws }

    /// Gets a value that indicates whether the input frame is used for the output of the audio effect.
    /// - Returns: True if the input frame is used for output; otherwise, false.
    var useInputFrameForOutput: Swift.Bool { get throws }

    /// Called to set the encoding properties of a custom audio effect.
    /// - Parameter encodingProperties: The encoding properties.
    func setEncodingProperties(_ encodingProperties: WindowsMediaMediaProperties_AudioEncodingProperties?) throws

    /// Called when samples are available for processing by a custom audio effect.
    /// - Parameter context: The context object that provides the input and output frames for the process operation.
    func processFrame(_ context: WindowsMediaEffects_ProcessAudioFrameContext?) throws

    /// Called when the audio effect should close and clean up allocated resources.
    /// - Parameter reason: The reason the effect was closed.
    func close(_ reason: WindowsMediaEffects_MediaEffectClosedReason) throws

    /// Called to allow audio effect implementations optionally discard any stored state related to samples that have already been received.
    func discardQueuedFrames() throws
}

/// The interface you implement to create a custom audio effect.
public typealias WindowsMediaEffects_IBasicAudioEffect = any WindowsMediaEffects_IBasicAudioEffectProtocol