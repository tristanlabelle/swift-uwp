// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Dynamically discovers peer apps within wireless range.
public final class WindowsNetworkingProximity_PeerWatcher: WindowsRuntime.WinRTImport<WindowsNetworkingProximity_PeerWatcherProjection> {
    // MARK: Windows.Networking.Proximity.IPeerWatcher members

    /// Gets the current state of the PeerWatcher object.
    /// - Returns: The current state of the PeerWatcher object.
    public var status: WindowsNetworkingProximity_PeerWatcherStatus {
        get throws {
            try _interop.get_Status()
        }
    }

    /// Occurs when a peer app is found within wireless range.
    public func added(adding handler: WindowsFoundation_TypedEventHandler<WindowsNetworkingProximity_PeerWatcher?, WindowsNetworkingProximity_PeerInformation?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Added(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: added)
    }

    public func added(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Added(token)
    }

    /// Occurs after a scan operation is complete and all peer apps within wireless range have been found.
    public func enumerationCompleted(adding handler: WindowsFoundation_TypedEventHandler<WindowsNetworkingProximity_PeerWatcher?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_EnumerationCompleted(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: enumerationCompleted)
    }

    public func enumerationCompleted(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_EnumerationCompleted(token)
    }

    /// Occurs when a peer app is no longer within wireless range.
    public func removed(adding handler: WindowsFoundation_TypedEventHandler<WindowsNetworkingProximity_PeerWatcher?, WindowsNetworkingProximity_PeerInformation?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Removed(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: removed)
    }

    public func removed(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Removed(token)
    }

    /// Occurs when the PeerWatcher object has been stopped.
    public func stopped(adding handler: WindowsFoundation_TypedEventHandler<WindowsNetworkingProximity_PeerWatcher?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Stopped(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: stopped)
    }

    public func stopped(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Stopped(token)
    }

    /// Occurs when the DisplayName or DiscoveryData for a peer app within wireless range has changed.
    public func updated(adding handler: WindowsFoundation_TypedEventHandler<WindowsNetworkingProximity_PeerWatcher?, WindowsNetworkingProximity_PeerInformation?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_Updated(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: updated)
    }

    public func updated(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_Updated(token)
    }

    /// Begin dynamically searching for peer apps within wireless range.
    public func start() throws {
        try _interop.start()
    }

    /// Stop dynamically searching for peer apps within wireless range.
    public func stop() throws {
        try _interop.stop()
    }

    // MARK: Implementation details
}