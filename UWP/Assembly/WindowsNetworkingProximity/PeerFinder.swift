// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Enables you to discover other instances of your app on nearby devices and create a socket connection between the peer apps by using a tap gesture or by browsing. For creating Bluetooth socket connections on WindowsÂ 8.1 and later, use Windows.Devices.Bluetooth.Rfcomm instead.
public enum WindowsNetworkingProximity_PeerFinder {
    // MARK: Windows.Networking.Proximity.IPeerFinderStatics members

    /// Specifies whether the PeerFinder class may connect a StreamSocket object by using Bluetooth.
    /// - Returns: True if the PeerFinder class may connect a StreamSocket object by using Bluetooth; otherwise false. The default is true.
    public static var allowBluetooth: Swift.Bool {
        get throws {
            try _ipeerFinderStatics.get_AllowBluetooth()
        }
    }

    /// Specifies whether the PeerFinder class may connect a StreamSocket object by using Bluetooth.
    /// - Returns: True if the PeerFinder class may connect a StreamSocket object by using Bluetooth; otherwise false. The default is true.
    public static func allowBluetooth(_ value: Swift.Bool) throws {
        try _ipeerFinderStatics.put_AllowBluetooth(value)
    }

    /// Specifies whether the PeerFinder class may connect to a StreamSocket object using TCP/IP.
    /// - Returns: True if the PeerFinder class may connect to a StreamSocket object using TCP/IP; otherwise false.
    public static var allowInfrastructure: Swift.Bool {
        get throws {
            try _ipeerFinderStatics.get_AllowInfrastructure()
        }
    }

    /// Specifies whether the PeerFinder class may connect to a StreamSocket object using TCP/IP.
    /// - Returns: True if the PeerFinder class may connect to a StreamSocket object using TCP/IP; otherwise false.
    public static func allowInfrastructure(_ value: Swift.Bool) throws {
        try _ipeerFinderStatics.put_AllowInfrastructure(value)
    }

    /// Specifies whether the PeerFinder class may connect a StreamSocket object by using Wi-Fi Direct.
    /// - Returns: True if the PeerFinder class may connect a StreamSocket object by using Wi-Fi Direct; otherwise false. The default is true.
    public static var allowWiFiDirect: Swift.Bool {
        get throws {
            try _ipeerFinderStatics.get_AllowWiFiDirect()
        }
    }

    /// Specifies whether the PeerFinder class may connect a StreamSocket object by using Wi-Fi Direct.
    /// - Returns: True if the PeerFinder class may connect a StreamSocket object by using Wi-Fi Direct; otherwise false. The default is true.
    public static func allowWiFiDirect(_ value: Swift.Bool) throws {
        try _ipeerFinderStatics.put_AllowWiFiDirect(value)
    }

    /// Gets a list of alternate appId values to match with peer applications on other platforms.
    /// - Returns: A list of alternate appId values to match with peer applications on other platforms.
    public static var alternateIdentities: WindowsFoundationCollections_IMap<Swift.String, Swift.String> {
        get throws {
            try COM.NullResult.unwrap(_ipeerFinderStatics.get_AlternateIdentities())
        }
    }

    /// Gets or sets the name that identifies your computer to remote peers.
    /// - Returns: The name that identifies your computer to remote peers.
    public static var displayName: Swift.String {
        get throws {
            try _ipeerFinderStatics.get_DisplayName()
        }
    }

    /// Gets or sets the name that identifies your computer to remote peers.
    /// - Returns: The name that identifies your computer to remote peers.
    public static func displayName(_ value: Swift.String) throws {
        try _ipeerFinderStatics.put_DisplayName(value)
    }

    /// Gets a value that indicates which discovery options are available to use with the PeerFinder class.
    /// - Returns: A value that indicates which discovery options are available to use with the PeerFinder class.
    public static var supportedDiscoveryTypes: WindowsNetworkingProximity_PeerDiscoveryTypes {
        get throws {
            try _ipeerFinderStatics.get_SupportedDiscoveryTypes()
        }
    }

    /// Occurs when a remote peer requests a connection using the ConnectAsync method.
    public static func connectionRequested(adding handler: WindowsFoundation_TypedEventHandler<WindowsRuntime.IInspectable?, WindowsNetworkingProximity_ConnectionRequestedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _ipeerFinderStatics.add_ConnectionRequested(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: connectionRequested)
    }

    public static func connectionRequested(removing cookie: WindowsRuntime.EventRegistrationToken) throws {
        try _ipeerFinderStatics.remove_ConnectionRequested(cookie)
    }

    /// Occurs during a tap gesture from a remote peer.
    public static func triggeredConnectionStateChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsRuntime.IInspectable?, WindowsNetworkingProximity_TriggeredConnectionStateChangedEventArgs?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _ipeerFinderStatics.add_TriggeredConnectionStateChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: triggeredConnectionStateChanged)
    }

    public static func triggeredConnectionStateChanged(removing cookie: WindowsRuntime.EventRegistrationToken) throws {
        try _ipeerFinderStatics.remove_TriggeredConnectionStateChanged(cookie)
    }

    /// Makes an app discoverable to remote peers.
    public static func start() throws {
        try _ipeerFinderStatics.start()
    }

    /// Makes an app discoverable to remote peers.
    /// - Parameter peerMessage: The message to deliver to the proximate device.
    public static func start(_ peerMessage: Swift.String) throws {
        try _ipeerFinderStatics.startWithMessage(peerMessage)
    }

    /// Stops advertising for a peer connection.
    public static func stop() throws {
        try _ipeerFinderStatics.stop()
    }

    /// Asynchronously browses for peer devices that are running the same app within wireless range.
    /// - Returns: The asynchronous operation for browsing for peer devices that are running your app.
    public static func findAllPeersAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsNetworkingProximity_PeerInformation?>?> {
        try COM.NullResult.unwrap(_ipeerFinderStatics.findAllPeersAsync())
    }

    /// Connects to a peer discovered by a call to the FindAllPeersAsync method.
    /// - Parameter peerInformation: A peer information object representing the peer to connect to.
    /// - Returns: An asynchronous operation for connecting to a remote peer using the supplied StreamSocket object.
    public static func connectAsync(_ peerInformation: WindowsNetworkingProximity_PeerInformation?) throws -> WindowsFoundation_IAsyncOperation<WindowsNetworkingSockets_StreamSocket?> {
        try COM.NullResult.unwrap(_ipeerFinderStatics.connectAsync(peerInformation))
    }

    // MARK: Windows.Networking.Proximity.IPeerFinderStatics2 members

    /// Gets or sets user or device data to include during device discovery.
    /// - Returns: User or device data to include during device discovery. Must be less than 32 bytes.
    public static var discoveryData: WindowsStorageStreams_IBuffer {
        get throws {
            try COM.NullResult.unwrap(_ipeerFinderStatics2.get_DiscoveryData())
        }
    }

    /// Gets or sets user or device data to include during device discovery.
    /// - Returns: User or device data to include during device discovery. Must be less than 32 bytes.
    public static func discoveryData(_ value: WindowsStorageStreams_IBuffer?) throws {
        try _ipeerFinderStatics2.put_DiscoveryData(value)
    }

    /// Gets or sets the role of the app in peer-to-peer connections.
    /// - Returns: The role of the app in peer-to-peer connections.
    public static var role: WindowsNetworkingProximity_PeerRole {
        get throws {
            try _ipeerFinderStatics2.get_Role()
        }
    }

    /// Gets or sets the role of the app in peer-to-peer connections.
    /// - Returns: The role of the app in peer-to-peer connections.
    public static func role(_ value: WindowsNetworkingProximity_PeerRole) throws {
        try _ipeerFinderStatics2.put_Role(value)
    }

    /// Creates a new instance of a PeerWatcher object for dynamic discovery of peer apps.
    /// - Returns: An instance of a PeerWatcher object for dynamic discovery of peer apps.
    public static func createWatcher() throws -> WindowsNetworkingProximity_PeerWatcher {
        try COM.NullResult.unwrap(_ipeerFinderStatics2.createWatcher())
    }

    // MARK: Implementation details

    private static var _ipeerFinderStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingProximity_IPeerFinderStatics>? = nil

    internal static var _ipeerFinderStatics: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingProximity_IPeerFinderStatics> {
        get throws {
            try _ipeerFinderStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Networking.Proximity.PeerFinder", id: CWinRT.SWRT_WindowsNetworkingProximity_IPeerFinderStatics.iid)
            }
        }
    }

    private static var _ipeerFinderStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingProximity_IPeerFinderStatics2>? = nil

    internal static var _ipeerFinderStatics2: COM.COMInterop<CWinRT.SWRT_WindowsNetworkingProximity_IPeerFinderStatics2> {
        get throws {
            try _ipeerFinderStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Networking.Proximity.PeerFinder", id: CWinRT.SWRT_WindowsNetworkingProximity_IPeerFinderStatics2.iid)
            }
        }
    }
}