// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Stores data for display in a toast notification.
public final class WindowsUINotifications_NotificationData: WindowsRuntime.WinRTImport<WindowsUINotifications_NotificationDataProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsUINotifications_NotificationDataProjection.self))
    }

    // MARK: Windows.UI.Notifications.INotificationDataFactory members

    public convenience init(_ initialValues: WindowsFoundationCollections_IIterable<WindowsFoundationCollections_IKeyValuePair<Swift.String, Swift.String>?>?, _ sequenceNumber: Swift.UInt32) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._inotificationDataFactory.createNotificationDataWithValuesAndSequenceNumber(initialValues, sequenceNumber)))
    }

    public convenience init(_ initialValues: WindowsFoundationCollections_IIterable<WindowsFoundationCollections_IKeyValuePair<Swift.String, Swift.String>?>?) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._inotificationDataFactory.createNotificationDataWithValues(initialValues)))
    }

    // MARK: Windows.UI.Notifications.INotificationData members

    /// Gets or sets the sequence number of this notification data. The system uses the sequence number to determine whether the notification data is out-of-date.
    /// - Returns: A value greater than or equal to 0 that specifies the sequence number of this notification data. When multiple NotificationData objects are received, the system displays the NotificationData with the greatest non-zero number. Setting this value to 0 causes it to always displays.
    public var sequenceNumber: Swift.UInt32 {
        get throws {
            try _interop.get_SequenceNumber()
        }
    }

    /// Gets or sets the sequence number of this notification data. The system uses the sequence number to determine whether the notification data is out-of-date.
    /// - Returns: A value greater than or equal to 0 that specifies the sequence number of this notification data. When multiple NotificationData objects are received, the system displays the NotificationData with the greatest non-zero number. Setting this value to 0 causes it to always displays.
    public func sequenceNumber(_ value: Swift.UInt32) throws {
        try _interop.put_SequenceNumber(value)
    }

    /// Gets the collection of keys and values for the new NotificationData, such as "progressValue", "0".
    /// - Returns: The collection of keys and values for the new NotificationData, such as "progressValue", "0".
    public var values: WindowsFoundationCollections_IMap<Swift.String, Swift.String> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Values())
        }
    }

    // MARK: Implementation details

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Notifications.NotificationData", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _inotificationDataFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsUINotifications_INotificationDataFactory>? = nil

    internal static var _inotificationDataFactory: COM.COMInterop<CWinRT.SWRT_WindowsUINotifications_INotificationDataFactory> {
        get throws {
            try _inotificationDataFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Notifications.NotificationData", id: CWinRT.SWRT_WindowsUINotifications_INotificationDataFactory.iid)
            }
        }
    }
}