// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Creates TileUpdater objects used to change and update **Start** menu tiles. This class also provides access to the XML content of the system-provided tile templates so that you can customize that content for use in updating your tiles.
public enum WindowsUINotifications_TileUpdateManager {
    // MARK: Windows.UI.Notifications.ITileUpdateManagerStatics members

    /// Creates and initializes a new instance of the TileUpdater, which lets you change the appearance of the calling app's tile.
    /// - Returns: The object you will use to send changes to the app's tile.
    public static func createTileUpdaterForApplication() throws -> WindowsUINotifications_TileUpdater {
        try COM.NullResult.unwrap(_itileUpdateManagerStatics.createTileUpdaterForApplication())
    }

    /// Creates and initializes a new instance of the TileUpdater for a tile that belongs to another app in the same package as the calling app. The TileUpdater lets a developer change the appearance of that tile.
    /// - Parameter applicationId: The package-relative application identifier (PRAID) of the tile. The specified app must be in the same package as the calling app. For more info on the PRAID, see the **Id** attribute of the Application element.
    /// - Returns: The object you will use to send changes to the tile identified by *applicationId*.
    public static func createTileUpdaterForApplication(_ applicationId: Swift.String) throws -> WindowsUINotifications_TileUpdater {
        try COM.NullResult.unwrap(_itileUpdateManagerStatics.createTileUpdaterForApplicationWithId(applicationId))
    }

    /// Creates and initializes a new instance of the TileUpdater, which enables you to change the appearance of a secondary tile. The tile can belong to the calling app or any other app in the same package.
    /// - Parameter tileId: A unique ID for the tile.
    /// - Returns: The object you will use to send updates to the tile identified by *tileID*.
    public static func createTileUpdaterForSecondaryTile(_ tileId: Swift.String) throws -> WindowsUINotifications_TileUpdater {
        try COM.NullResult.unwrap(_itileUpdateManagerStatics.createTileUpdaterForSecondaryTile(tileId))
    }

    /// Gets the XML content of one of the predefined tile templates so that you can customize it for a tile update.
    /// - Parameter type: The name of the template.
    /// - Returns: The object that contains the XML.
    public static func getTemplateContent(_ type: WindowsUINotifications_TileTemplateType) throws -> WindowsDataXmlDom_XmlDocument {
        try COM.NullResult.unwrap(_itileUpdateManagerStatics.getTemplateContent(type))
    }

    // MARK: Windows.UI.Notifications.ITileUpdateManagerStatics2 members

    /// Creates and initializes a new TileUpdateManagerForUser for the specified user, which lets you change the appearance or content of a tile for a specific user.
    /// - Parameter user: The user who will receive the tile updates.
    /// - Returns: An object that will update tiles for the specified user.
    public static func getForUser(_ user: WindowsSystem_User?) throws -> WindowsUINotifications_TileUpdateManagerForUser {
        try COM.NullResult.unwrap(_itileUpdateManagerStatics2.getForUser(user))
    }

    // MARK: Implementation details

    private static var _itileUpdateManagerStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsUINotifications_ITileUpdateManagerStatics>? = nil

    internal static var _itileUpdateManagerStatics: COM.COMInterop<CWinRT.SWRT_WindowsUINotifications_ITileUpdateManagerStatics> {
        get throws {
            try _itileUpdateManagerStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Notifications.TileUpdateManager", id: CWinRT.SWRT_WindowsUINotifications_ITileUpdateManagerStatics.iid)
            }
        }
    }

    private static var _itileUpdateManagerStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUINotifications_ITileUpdateManagerStatics2>? = nil

    internal static var _itileUpdateManagerStatics2: COM.COMInterop<CWinRT.SWRT_WindowsUINotifications_ITileUpdateManagerStatics2> {
        get throws {
            try _itileUpdateManagerStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.UI.Notifications.TileUpdateManager", id: CWinRT.SWRT_WindowsUINotifications_ITileUpdateManagerStatics2.iid)
            }
        }
    }
}