// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Manages the toast notifications for an app including the ability the clear all toast history and removing individual toasts.
public final class WindowsUINotifications_ToastNotificationHistory: WindowsRuntime.WinRTImport<WindowsUINotifications_ToastNotificationHistoryProjection> {
    // MARK: Windows.UI.Notifications.IToastNotificationHistory members

    /// Removes a group of toast notifications, identified by the specified group label, from action center.
    /// - Parameter group: The group label of the toast notifications to be removed.
    public func removeGroup(_ group: Swift.String) throws {
        try _interop.removeGroup(group)
    }

    /// Removes a group of toast notifications sent by the another app inside the same app package from action center using the group label.
    /// - Parameter group: The group label of the toast notifications to be removed.
    /// - Parameter applicationId: The app ID of the app within the same app package of the calling app.
    public func removeGroup(_ group: Swift.String, _ applicationId: Swift.String) throws {
        try _interop.removeGroupWithId(group, applicationId)
    }

    /// Removes an individual toast notification from action center, identified by the combination of tag label, group label and app ID.
    /// - Parameter tag: The tag label of the toast notification to be removed.
    /// - Parameter group: The group label of the toast notification to be removed.
    /// - Parameter applicationId: The app ID of the app that sent the specified toast notification. This app must be part of the same app package as the app making this remove request.
    public func remove(_ tag: Swift.String, _ group: Swift.String, _ applicationId: Swift.String) throws {
        try _interop.removeGroupedTagWithId(tag, group, applicationId)
    }

    /// Removes a toast notification from the action using the notification's tag and group labels.
    /// - Parameter tag: The tag label of the toast notification to be removed.
    /// - Parameter group: The group label of the toast notification to be removed.
    public func remove(_ tag: Swift.String, _ group: Swift.String) throws {
        try _interop.removeGroupedTag(tag, group)
    }

    /// Removes an individual toast, with the specified tag label, from action center.
    /// - Parameter tag: The tag label of the toast notification to be removed.
    public func remove(_ tag: Swift.String) throws {
        try _interop.remove(tag)
    }

    /// Removes all notifications sent by this app from action center.
    public func clear() throws {
        try _interop.clear()
    }

    /// Removes all notifications from action center that were sent by another app inside the same app package.
    /// - Parameter applicationId: The ID of the app inside the app package whose notifications are to be deleted.
    public func clear(_ applicationId: Swift.String) throws {
        try _interop.clearWithId(applicationId)
    }

    // MARK: Windows.UI.Notifications.IToastNotificationHistory2 members

    /// Gets notification history, for all notifications sent by this app, from action center.
    /// - Returns: A collection of toasts.
    public func getHistory() throws -> WindowsFoundationCollections_IVectorView<WindowsUINotifications_ToastNotification?> {
        try COM.NullResult.unwrap(_itoastNotificationHistory2.getHistory())
    }

    /// Gets notification history, for a toast with the specified tag label, from action center.
    /// - Parameter applicationId: The tag label for the toast being queried-for.
    /// - Returns: A collection of toasts.
    public func getHistory(_ applicationId: Swift.String) throws -> WindowsFoundationCollections_IVectorView<WindowsUINotifications_ToastNotification?> {
        try COM.NullResult.unwrap(_itoastNotificationHistory2.getHistoryWithId(applicationId))
    }

    // MARK: Implementation details

    private var _itoastNotificationHistory2_storage: COM.COMInterop<CWinRT.SWRT_WindowsUINotifications_IToastNotificationHistory2>? = nil

    internal var _itoastNotificationHistory2: COM.COMInterop<CWinRT.SWRT_WindowsUINotifications_IToastNotificationHistory2> {
        get throws {
            try _itoastNotificationHistory2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsUINotifications_IToastNotificationHistory2.iid).cast(to: CWinRT.SWRT_WindowsUINotifications_IToastNotificationHistory2.self)
            }
        }
    }

    deinit {
        _itoastNotificationHistory2_storage?.release()
    }
}