// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Creates BadgeUpdater objects that you use to manipulate a tile's badge overlay for a specific user. This class also provides access to the XML content of the system-provided badge templates so that you can customize that content for use in updating your badges.
public final class WindowsUINotifications_BadgeUpdateManagerForUser: WindowsRuntime.WinRTImport<WindowsUINotifications_BadgeUpdateManagerForUserProjection> {
    // MARK: Windows.UI.Notifications.IBadgeUpdateManagerForUser members

    /// Gets the user targeted by the badge update manager.
    /// - Returns: The user targeted by the badge update manager.
    public var user: WindowsSystem_User {
        get throws {
            try COM.NullResult.unwrap(_interop.get_User())
        }
    }

    /// Creates and initializes a new instance of the BadgeUpdater, which lets you change the appearance or content of the badge for the bound user on the calling app's tile.
    /// - Returns: A BadgeUpdater for the current app and user.
    public func createBadgeUpdaterForApplication() throws -> WindowsUINotifications_BadgeUpdater {
        try COM.NullResult.unwrap(_interop.createBadgeUpdaterForApplication())
    }

    /// Creates a new BadgeUpdater for the bound user and the specified app tile's badge, usually the tile of another app in the package. The BadgeUpdater lets you change the appearance or content of that badge.
    /// - Parameter applicationId: The ID of the app that owns the tile to update.
    /// - Returns: A BadgeUpdater for the current user and the specified app.
    public func createBadgeUpdaterForApplication(_ applicationId: Swift.String) throws -> WindowsUINotifications_BadgeUpdater {
        try COM.NullResult.unwrap(_interop.createBadgeUpdaterForApplicationWithId(applicationId))
    }

    /// Creates a BadgeUpdater, which enables you to change the appearance or content of a badge on a secondary tile for the bound user. The tile can belong to the calling app or any other app in the same package.
    /// - Parameter tileId: The ID of the secondary tile.
    /// - Returns: A BadgeUpdater for the secondary tile of the current app for the current user.
    public func createBadgeUpdaterForSecondaryTile(_ tileId: Swift.String) throws -> WindowsUINotifications_BadgeUpdater {
        try COM.NullResult.unwrap(_interop.createBadgeUpdaterForSecondaryTile(tileId))
    }

    // MARK: Implementation details
}