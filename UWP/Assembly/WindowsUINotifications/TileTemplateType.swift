// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Specifies the content template to use in a tile update. For a more detailed discussion of each tile, including an example of its XML coding, specifics on each template's image sizes, and use with different versions of the tile XML schema, see [The tile template catalog](https://docs.microsoft.com/previous-versions/windows/apps/hh761491(v=win.10)).
public struct WindowsUINotifications_TileTemplateType: RawRepresentable, Hashable, Codable {
    public var rawValue: Swift.Int32

    public init(rawValue: Swift.Int32 = 0) {
        self.rawValue = rawValue
    }

    /// One image that fills the entire tile; no text. <img src="./windows.ui.notifications/images/TileSquareImage.png" alt="TileSquareImage example" />
    public static let tileSquareImage = Self()

    /// ****: One string of large block text (generally numerical) over a single, short line of regular text.
    public static let tileSquareBlock = Self(rawValue: 1)

    /// One header string in larger text on the first line; three strings of regular text on each of the next three lines. Text does not wrap. <img src="./windows.ui.notifications/images/TileSquareText01.png" alt="TileSquareText01 example" />
    public static let tileSquareText01 = Self(rawValue: 2)

    /// One header string in larger text on the first line, over one string of regular text wrapped over a maximum of three lines. <img src="./windows.ui.notifications/images/TileSquareText02.png" alt="TileSquareText02 example" />
    public static let tileSquareText02 = Self(rawValue: 3)

    /// Four strings of regular text on four lines. Text does not wrap. <img src="./windows.ui.notifications/images/TileSquareText03.png" alt="TileSquareText03 example" />
    public static let tileSquareText03 = Self(rawValue: 4)

    /// One string of regular text wrapped over a maximum of four lines. <img src="./windows.ui.notifications/images/TileSquareText04.png" alt="TileSquareText04 example" />
    public static let tileSquareText04 = Self(rawValue: 5)

    /// Top/Front: One square image, no text. Bottom/Back: One header string in larger text on the first line, three strings of regular text on each of the next three lines. Text does not wrap. <img src="./windows.ui.notifications/images/TileSquarePeekImageAndText01.png" alt="TileSquarePeekImageAndText01 example" />
    public static let tileSquarePeekImageAndText01 = Self(rawValue: 6)

    /// Top/Front: Square image, no text. Bottom/Back: One header string in larger text on the first line, over one string of regular text wrapped over a maximum of three lines. <img src="./windows.ui.notifications/images/TileSquarePeekImageAndText02.png" alt="TileSquarePeekImageAndText02 example" />
    public static let tileSquarePeekImageAndText02 = Self(rawValue: 7)

    /// Top/Front: Square image, no text. Bottom/Back: Four strings of regular text on four lines. Text does not wrap. <img src="./windows.ui.notifications/images/TileSquarePeekImageAndText03.png" alt="TileSquarePeekImageAndText03 example" />
    public static let tileSquarePeekImageAndText03 = Self(rawValue: 8)

    /// Top/Front: Square image, no text. Bottom/Back: One string of regular text wrapped over a maximum of four lines. <img src="./windows.ui.notifications/images/TileSquarePeekImageAndText04.png" alt="TileSquarePeekImageAndText04 example" />
    public static let tileSquarePeekImageAndText04 = Self(rawValue: 9)

    /// One wide image that fills the entire tile, no text. <img src="./windows.ui.notifications/images/TileWideImage.png" alt="TileWideImage example" />
    public static let tileWideImage = Self(rawValue: 10)

    /// ****: One large square image with four smaller square images to its right, no text.
    public static let tileWideImageCollection = Self(rawValue: 11)

    /// One wide image over one string of regular text wrapped over a maximum of two lines (one line on Windows Phone 8.1). The width of the text area depends on whether a logo is displayed. 
    public static let tileWideImageAndText01 = Self(rawValue: 12)

    /// ****: One wide image over two strings of regular text on two lines. Text does not wrap. The width of the text area depends on whether a logo is displayed.
    public static let tileWideImageAndText02 = Self(rawValue: 13)

    /// Four strings of regular, unwrapped text on the left; large block text (this should be numerical) over a single, short string of regular text on the right. 
    public static let tileWideBlockAndText01 = Self(rawValue: 14)

    /// One string of regular text wrapped over a maximum of four lines on the left; large block text (this should be numerical) over a single, short string of regular text on the right. <img src="./windows.ui.notifications/images/TileWideBlockAndText02.png" alt="TileWideBlockAndText02 example" />
    public static let tileWideBlockAndText02 = Self(rawValue: 15)

    /// ****: Top: One large square image with four smaller square images to its right, no text.
    public static let tileWidePeekImageCollection01 = Self(rawValue: 16)

    /// ****: Top: One large square image with four smaller square images to its right, no text.
    public static let tileWidePeekImageCollection02 = Self(rawValue: 17)

    /// ****: Top: One large square image with four smaller square images to its right, no text.
    public static let tileWidePeekImageCollection03 = Self(rawValue: 18)

    /// ****: Top: One large square image with four smaller square images to its right, no text.
    public static let tileWidePeekImageCollection04 = Self(rawValue: 19)

    /// ****: Top: One large square image with four smaller square images to its right, no text.
    public static let tileWidePeekImageCollection05 = Self(rawValue: 20)

    /// ****: Top: One large square image with four smaller square images to its right, no text.
    public static let tileWidePeekImageCollection06 = Self(rawValue: 21)

    /// ****: Top: One wide image, with a shorter height than a full-bleed wide image.
    public static let tileWidePeekImageAndText01 = Self(rawValue: 22)

    /// Top/Front: One wide image, with a shorter height than a full-bleed wide image. Bottom/Back: Five strings of regular text on five lines. Text does not wrap. <img src="./windows.ui.notifications/images/TileWidePeekImageAndText02.jpg" alt="TileWidePeekImageAndText02 example" />
    public static let tileWidePeekImageAndText02 = Self(rawValue: 23)

    /// Top/Front: One wide image. Bottom/Back: One header string in larger text over one string of regular text that wraps over a maximum of four lines. <img src="./windows.ui.notifications/images/TileWidePeekImage01.png" alt="TileWidePeekImage01 example" />
    public static let tileWidePeekImage01 = Self(rawValue: 24)

    /// Top/Front: One wide image. Bottom/Back: One header string in larger text on the first line, four strings of regular text on the next four lines. Text does not wrap. <img src="./windows.ui.notifications/images/TileWidePeekImage02.png" alt="TileWidePeekImage02 example" />
    public static let tileWidePeekImage02 = Self(rawValue: 25)

    /// Top/Front: One wide image. Bottom/Back: One string of large text wrapped over a maximum of three lines. <img src="./windows.ui.notifications/images/TileWidePeekImage03.png" alt="TileWidePeekImage03 example" />
    public static let tileWidePeekImage03 = Self(rawValue: 26)

    /// Top/Front: One wide image. Bottom/Back: One string of regular text wrapped over a maximum of five lines. <img src="./windows.ui.notifications/images/TileWidePeekImage04.png" alt="TileWidePeekImage04 example" />
    public static let tileWidePeekImage04 = Self(rawValue: 27)

    /// Top/Front: One wide image.
    public static let tileWidePeekImage05 = Self(rawValue: 28)

    /// Top/Front: One wide image.
    public static let tileWidePeekImage06 = Self(rawValue: 29)

    /// On the left, one small image; on the right, one string of large text wrapped over a maximum of three lines. 
    public static let tileWideSmallImageAndText01 = Self(rawValue: 30)

    /// On the left, one small image; on the right, one header string in larger text on the first line, four strings of regular text on the next four lines. Text does not wrap. 
    public static let tileWideSmallImageAndText02 = Self(rawValue: 31)

    /// On the left, one small image; on the right, one string of regular text wrapped over a maximum of five lines. 
    public static let tileWideSmallImageAndText03 = Self(rawValue: 32)

    /// On the left, one small image; on the right, one header string of larger text on the first line over one string of regular text wrapped over a maximum of four lines. 
    public static let tileWideSmallImageAndText04 = Self(rawValue: 33)

    /// On the left, one header string in larger text over one string of regular text wrapped over a maximum of four lines; on the right, one small image with 3:4 dimensions. 
    public static let tileWideSmallImageAndText05 = Self(rawValue: 34)

    /// One header string in larger text on the first line, four strings of regular text on the next four lines. Text does not wrap. <img src="./windows.ui.notifications/images/TileWideText01.png" alt="TileWideText01 example" />
    public static let tileWideText01 = Self(rawValue: 35)

    /// One header string in larger text over eight short strings arranged in two columns of four lines each. Columns are of equal width. This template is similar to TileWideText07 and TileWideText10, but those templates use columns of unequal width. <img src="./windows.ui.notifications/images/TileWideText02.png" alt="TileWideText02 example" />
    public static let tileWideText02 = Self(rawValue: 36)

    /// One string of large text wrapped over a maximum of three lines. <img src="./windows.ui.notifications/images/TileWideText03.png" alt="TileWideText03 example" />
    public static let tileWideText03 = Self(rawValue: 37)

    /// One string of regular text wrapped over a maximum of five lines. <img src="./windows.ui.notifications/images/TileWideText04.png" alt="TileWideText04 example" />
    public static let tileWideText04 = Self(rawValue: 38)

    /// Five strings of regular text on five lines. Text does not wrap. <img src="./windows.ui.notifications/images/TileWideText05.png" alt="TileWideText05 example" />
    public static let tileWideText05 = Self(rawValue: 39)

    /// Ten short strings of regular text, arranged in two columns of five lines each. Columns are of equal width. This template is similar to TileWideText08 and TileWideText11, but those templates use columns of unequal width. <img src="./windows.ui.notifications/images/TileWideText06.png" alt="TileWideText06 example" />
    public static let tileWideText06 = Self(rawValue: 40)

    /// One header string in larger text over eight short strings of regular text arranged in two columns of four lines each. The column widths are such that the first column acts as a label and the second column as the content. This template is similar to TileWideText10, which has an even narrower first column, and TileWideText02, which has columns of equal width. <img src="./windows.ui.notifications/images/TileWideText07.png" alt="TileWideText07 example" />
    public static let tileWideText07 = Self(rawValue: 41)

    /// Ten short strings of regular text arranged in two columns of five lines each. The column widths are such that the first column acts as a label and the second column as the content. This template is similar to TileWideText11, which has an even narrower first column, and TileWideText06, which has columns of equal width. <img src="./windows.ui.notifications/images/TileWideText08.png" alt="TileWideText08 example" />
    public static let tileWideText08 = Self(rawValue: 42)

    /// One header string in larger text over one string of regular text wrapped over a maximum of four lines. <img src="./windows.ui.notifications/images/TileWideText09.png" alt="TileWideText09 example" />
    public static let tileWideText09 = Self(rawValue: 43)

    /// One header string in larger text over eight short strings of regular text arranged in two columns of four lines each. The column widths are such that the first column acts as a label and the second column as the content. This template is similar to TileWideText07, which has a wider first column, and TileWideText02, which has columns of equal width. <img src="./windows.ui.notifications/images/TileWideText10.png" alt="TileWideText10 example" />
    public static let tileWideText10 = Self(rawValue: 44)

    /// Ten short strings of regular text arranged in two columns of five lines each. The column widths are such that the first column acts as a label and the second column as the content. This template is similar to TileWideText08, which has a wider first column, and TileWideText06, which has columns of equal width. <img src="./windows.ui.notifications/images/TileWideText11.png" alt="TileWideText11 example" />
    public static let tileWideText11 = Self(rawValue: 45)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileSquareImage**
    public static let tileSquare150x150Image = Self()

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileSquareBlock**
    public static let tileSquare150x150Block = Self(rawValue: 1)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileSquareText01**
    public static let tileSquare150x150Text01 = Self(rawValue: 2)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileSquareText02**
    public static let tileSquare150x150Text02 = Self(rawValue: 3)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileSquareText03**
    public static let tileSquare150x150Text03 = Self(rawValue: 4)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileSquareText04**
    public static let tileSquare150x150Text04 = Self(rawValue: 5)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileSquarePeekImageAndText01**
    public static let tileSquare150x150PeekImageAndText01 = Self(rawValue: 6)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileSquarePeekImageAndText02**
    public static let tileSquare150x150PeekImageAndText02 = Self(rawValue: 7)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileSquarePeekImageAndText03**
    public static let tileSquare150x150PeekImageAndText03 = Self(rawValue: 8)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileSquarePeekImageAndText04**
    public static let tileSquare150x150PeekImageAndText04 = Self(rawValue: 9)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWideImage**
    public static let tileWide310x150Image = Self(rawValue: 10)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWideImageCollection**
    public static let tileWide310x150ImageCollection = Self(rawValue: 11)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWideImageAndText01**
    public static let tileWide310x150ImageAndText01 = Self(rawValue: 12)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWideImageAndText02**
    public static let tileWide310x150ImageAndText02 = Self(rawValue: 13)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWideBlockAndText01**
    public static let tileWide310x150BlockAndText01 = Self(rawValue: 14)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWideBlockAndText02**
    public static let tileWide310x150BlockAndText02 = Self(rawValue: 15)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWidePeekImageCollection01**
    public static let tileWide310x150PeekImageCollection01 = Self(rawValue: 16)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWidePeekImageCollection02**
    public static let tileWide310x150PeekImageCollection02 = Self(rawValue: 17)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWidePeekImageCollection03**
    public static let tileWide310x150PeekImageCollection03 = Self(rawValue: 18)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWidePeekImageCollection04**
    public static let tileWide310x150PeekImageCollection04 = Self(rawValue: 19)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWidePeekImageCollection05**
    public static let tileWide310x150PeekImageCollection05 = Self(rawValue: 20)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWidePeekImageCollection06**
    public static let tileWide310x150PeekImageCollection06 = Self(rawValue: 21)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWidePeekImageAndText01**
    public static let tileWide310x150PeekImageAndText01 = Self(rawValue: 22)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWidePeekImageAndText02**
    public static let tileWide310x150PeekImageAndText02 = Self(rawValue: 23)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWidePeekImage01**
    public static let tileWide310x150PeekImage01 = Self(rawValue: 24)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWidePeekImage02**
    public static let tileWide310x150PeekImage02 = Self(rawValue: 25)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWidePeekImage03**
    public static let tileWide310x150PeekImage03 = Self(rawValue: 26)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWidePeekImage04**
    public static let tileWide310x150PeekImage04 = Self(rawValue: 27)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWidePeekImage05**
    public static let tileWide310x150PeekImage05 = Self(rawValue: 28)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWidePeekImage06**
    public static let tileWide310x150PeekImage06 = Self(rawValue: 29)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWideSmallImageAndText01**
    public static let tileWide310x150SmallImageAndText01 = Self(rawValue: 30)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWideSmallImageAndText02**
    public static let tileWide310x150SmallImageAndText02 = Self(rawValue: 31)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWideSmallImageAndText03**
    public static let tileWide310x150SmallImageAndText03 = Self(rawValue: 32)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWideSmallImageAndText04**
    public static let tileWide310x150SmallImageAndText04 = Self(rawValue: 33)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWideSmallImageAndText05**
    public static let tileWide310x150SmallImageAndText05 = Self(rawValue: 34)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWideText01**
    public static let tileWide310x150Text01 = Self(rawValue: 35)

    /// **Windows only; not supported on **
    public static let tileWide310x150Text02 = Self(rawValue: 36)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWideText03**
    public static let tileWide310x150Text03 = Self(rawValue: 37)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWideText04**
    public static let tileWide310x150Text04 = Self(rawValue: 38)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWideText05**
    public static let tileWide310x150Text05 = Self(rawValue: 39)

    /// **Windows only; not supported on **
    public static let tileWide310x150Text06 = Self(rawValue: 40)

    /// **Windows only; not supported on **
    public static let tileWide310x150Text07 = Self(rawValue: 41)

    /// **Windows only; not supported on **
    public static let tileWide310x150Text08 = Self(rawValue: 42)

    ///  Windows 8 (Version 1) name/Windows 8.1  fallback attribute value: **TileWideText09**
    public static let tileWide310x150Text09 = Self(rawValue: 43)

    /// **Windows only; not supported on **
    public static let tileWide310x150Text10 = Self(rawValue: 44)

    /// **Windows only; not supported on **
    public static let tileWide310x150Text11 = Self(rawValue: 45)

    /// **Windows only; not supported on **
    public static let tileSquare310x310BlockAndText01 = Self(rawValue: 46)

    /// **Windows only; not supported on **
    public static let tileSquare310x310BlockAndText02 = Self(rawValue: 47)

    /// **Windows only; not supported on **
    public static let tileSquare310x310Image = Self(rawValue: 48)

    /// **Windows only; not supported on **
    public static let tileSquare310x310ImageAndText01 = Self(rawValue: 49)

    /// **Windows only; not supported on **
    public static let tileSquare310x310ImageAndText02 = Self(rawValue: 50)

    /// **Windows only; not supported on **
    public static let tileSquare310x310ImageAndTextOverlay01 = Self(rawValue: 51)

    /// **Windows only; not supported on **
    public static let tileSquare310x310ImageAndTextOverlay02 = Self(rawValue: 52)

    /// **Windows only; not supported on **
    public static let tileSquare310x310ImageAndTextOverlay03 = Self(rawValue: 53)

    /// **Windows only; not supported on **
    public static let tileSquare310x310ImageCollectionAndText01 = Self(rawValue: 54)

    /// **Windows only; not supported on **
    public static let tileSquare310x310ImageCollectionAndText02 = Self(rawValue: 55)

    /// **Windows only; not supported on **
    public static let tileSquare310x310ImageCollection = Self(rawValue: 56)

    /// **Windows only; not supported on **
    public static let tileSquare310x310SmallImagesAndTextList01 = Self(rawValue: 57)

    /// **Windows only; not supported on **
    public static let tileSquare310x310SmallImagesAndTextList02 = Self(rawValue: 58)

    /// **Windows only; not supported on **
    public static let tileSquare310x310SmallImagesAndTextList03 = Self(rawValue: 59)

    /// **Windows only; not supported on **
    public static let tileSquare310x310SmallImagesAndTextList04 = Self(rawValue: 60)

    /// **Windows only; not supported on **
    public static let tileSquare310x310Text01 = Self(rawValue: 61)

    /// **Windows only; not supported on **
    public static let tileSquare310x310Text02 = Self(rawValue: 62)

    /// **Windows only; not supported on **
    public static let tileSquare310x310Text03 = Self(rawValue: 63)

    /// **Windows only; not supported on **
    public static let tileSquare310x310Text04 = Self(rawValue: 64)

    /// **Windows only; not supported on **
    public static let tileSquare310x310Text05 = Self(rawValue: 65)

    /// **Windows only; not supported on **
    public static let tileSquare310x310Text06 = Self(rawValue: 66)

    /// **Windows only; not supported on **
    public static let tileSquare310x310Text07 = Self(rawValue: 67)

    /// **Windows only; not supported on **
    public static let tileSquare310x310Text08 = Self(rawValue: 68)

    /// **Windows only; not supported on **
    public static let tileSquare310x310TextList01 = Self(rawValue: 69)

    /// **Windows only; not supported on **
    public static let tileSquare310x310TextList02 = Self(rawValue: 70)

    /// **Windows only; not supported on **
    public static let tileSquare310x310TextList03 = Self(rawValue: 71)

    /// **Windows only; not supported on **
    public static let tileSquare310x310SmallImageAndText01 = Self(rawValue: 72)

    /// **Windows only; not supported on **
    public static let tileSquare310x310SmallImagesAndTextList05 = Self(rawValue: 73)

    /// **Windows only; not supported on **
    public static let tileSquare310x310Text09 = Self(rawValue: 74)

    /// ** only**.
    public static let tileSquare71x71IconWithBadge = Self(rawValue: 75)

    /// ** only**
    public static let tileSquare150x150IconWithBadge = Self(rawValue: 76)

    /// ** only**
    public static let tileWide310x150IconWithBadgeAndText = Self(rawValue: 77)

    /// ** only**
    public static let tileSquare71x71Image = Self(rawValue: 78)

    /// One rectangular image that fills the entire tile, no text.
    public static let tileTall150x310Image = Self(rawValue: 79)
}