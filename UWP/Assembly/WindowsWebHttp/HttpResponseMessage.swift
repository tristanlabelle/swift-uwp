// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents an HTTP response message including headers, the status code, and data.
public final class WindowsWebHttp_HttpResponseMessage: WindowsRuntime.WinRTImport<WindowsWebHttp_HttpResponseMessageProjection>, WindowsFoundation_IClosableProtocol, WindowsFoundation_IStringableProtocol {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsWebHttp_HttpResponseMessageProjection.self))
    }

    // MARK: Windows.Web.Http.IHttpResponseMessageFactory members

    public convenience init(_ statusCode: WindowsWebHttp_HttpStatusCode) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ihttpResponseMessageFactory.create(statusCode)))
    }

    // MARK: Windows.Web.Http.IHttpResponseMessage members

    /// Gets or sets the content of the HTTP response message on the HttpResponseMessage object.
    /// - Returns: The content of the HTTP response message on the HttpResponseMessage object.
    public var content: WindowsWebHttp_IHttpContent {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Content())
        }
    }

    /// Gets or sets the content of the HTTP response message on the HttpResponseMessage object.
    /// - Returns: The content of the HTTP response message on the HttpResponseMessage object.
    public func content(_ value: WindowsWebHttp_IHttpContent?) throws {
        try _interop.put_Content(value)
    }

    /// Gets the collection of HTTP response headers associated with the HttpResponseMessage that were sent by the server.
    /// - Returns: The collection of HTTP response headers.
    public var headers: WindowsWebHttpHeaders_HttpResponseHeaderCollection {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Headers())
        }
    }

    /// Gets a value that indicates whether the HTTP response was successful.
    /// - Returns: A value that indicates if the HTTP response was successful. true if HttpStatusCode was in the **Successful** range (200-299); otherwise false.
    public var isSuccessStatusCode: Swift.Bool {
        get throws {
            try _interop.get_IsSuccessStatusCode()
        }
    }

    /// Gets or sets the reason phrase which typically is sent by servers together with the status code.
    /// - Returns: The reason phrase sent by the server.
    public var reasonPhrase: Swift.String {
        get throws {
            try _interop.get_ReasonPhrase()
        }
    }

    /// Gets or sets the reason phrase which typically is sent by servers together with the status code.
    /// - Returns: The reason phrase sent by the server.
    public func reasonPhrase(_ value: Swift.String) throws {
        try _interop.put_ReasonPhrase(value)
    }

    /// Gets or sets the request message that led to this response message.
    /// - Returns: The request message that led to this response message.
    public var requestMessage: WindowsWebHttp_HttpRequestMessage {
        get throws {
            try COM.NullResult.unwrap(_interop.get_RequestMessage())
        }
    }

    /// Gets or sets the request message that led to this response message.
    /// - Returns: The request message that led to this response message.
    public func requestMessage(_ value: WindowsWebHttp_HttpRequestMessage?) throws {
        try _interop.put_RequestMessage(value)
    }

    /// Gets the source of the data received in the HttpResponseMessage.
    /// - Returns: The source of the data received in the HttpResponseMessage.
    public var source: WindowsWebHttp_HttpResponseMessageSource {
        get throws {
            try _interop.get_Source()
        }
    }

    /// Gets the source of the data received in the HttpResponseMessage.
    /// - Returns: The source of the data received in the HttpResponseMessage.
    public func source(_ value: WindowsWebHttp_HttpResponseMessageSource) throws {
        try _interop.put_Source(value)
    }

    /// Gets or sets the status code of the HTTP response.
    /// - Returns: The status code of the HTTP response.
    public var statusCode: WindowsWebHttp_HttpStatusCode {
        get throws {
            try _interop.get_StatusCode()
        }
    }

    /// Gets or sets the status code of the HTTP response.
    /// - Returns: The status code of the HTTP response.
    public func statusCode(_ value: WindowsWebHttp_HttpStatusCode) throws {
        try _interop.put_StatusCode(value)
    }

    /// Gets or sets the HTTP protocol version used on the HttpResponseMessage object.
    /// - Returns: The HTTP protocol version. The default is 1.1.
    public var version: WindowsWebHttp_HttpVersion {
        get throws {
            try _interop.get_Version()
        }
    }

    /// Gets or sets the HTTP protocol version used on the HttpResponseMessage object.
    /// - Returns: The HTTP protocol version. The default is 1.1.
    public func version(_ value: WindowsWebHttp_HttpVersion) throws {
        try _interop.put_Version(value)
    }

    /// Throws an exception if the IsSuccessStatusCode property for the HTTP response is false.
    /// - Returns: The HTTP response if the request was successful.
    public func ensureSuccessStatusCode() throws -> WindowsWebHttp_HttpResponseMessage {
        try COM.NullResult.unwrap(_interop.ensureSuccessStatusCode())
    }

    // MARK: Windows.Foundation.IClosable members

    /// Closes the HttpResponseMessage instance and releases allocated resources.
    public func close() throws {
        try _iclosable.close()
    }

    // MARK: Windows.Foundation.IStringable members

    /// Returns a string that represents the current HttpResponseMessage object.
    /// - Returns: A string that represents the current object.
    public func toString() throws -> Swift.String {
        try _istringable.toString()
    }

    // MARK: Implementation details

    private var _iclosable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable>? = nil

    internal var _iclosable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable> {
        get throws {
            try _iclosable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IClosable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IClosable.self)
            }
        }
    }

    private var _istringable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IStringable>? = nil

    internal var _istringable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IStringable> {
        get throws {
            try _istringable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IStringable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IStringable.self)
            }
        }
    }

    deinit {
        _iclosable_storage?.release()
        _istringable_storage?.release()
    }

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Web.Http.HttpResponseMessage", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _ihttpResponseMessageFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsWebHttp_IHttpResponseMessageFactory>? = nil

    internal static var _ihttpResponseMessageFactory: COM.COMInterop<CWinRT.SWRT_WindowsWebHttp_IHttpResponseMessageFactory> {
        get throws {
            try _ihttpResponseMessageFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Web.Http.HttpResponseMessage", id: CWinRT.SWRT_WindowsWebHttp_IHttpResponseMessageFactory.iid)
            }
        }
    }
}