// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents an HTTP request message including headers.
public final class WindowsWebHttp_HttpRequestMessage: WindowsRuntime.WinRTImport<WindowsWebHttp_HttpRequestMessageProjection>, WindowsFoundation_IClosableProtocol, WindowsFoundation_IStringableProtocol {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsWebHttp_HttpRequestMessageProjection.self))
    }

    // MARK: Windows.Web.Http.IHttpRequestMessageFactory members

    public convenience init(_ method: WindowsWebHttp_HttpMethod?, _ uri: WindowsFoundation_Uri?) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ihttpRequestMessageFactory.create(method, uri)))
    }

    // MARK: Windows.Web.Http.IHttpRequestMessage members

    /// Gets or sets the HTTP content to send to the server on the HttpRequestMessage object.
    /// - Returns: The HTTP content to send to the server on the HttpRequestMessage object.
    public var content: WindowsWebHttp_IHttpContent {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Content())
        }
    }

    /// Gets or sets the HTTP content to send to the server on the HttpRequestMessage object.
    /// - Returns: The HTTP content to send to the server on the HttpRequestMessage object.
    public func content(_ value: WindowsWebHttp_IHttpContent?) throws {
        try _interop.put_Content(value)
    }

    /// Gets the collection of the HTTP request headers associated with the HttpRequestMessage.
    /// - Returns: The collection of HTTP request headers associated with the HttpRequestMessage.
    public var headers: WindowsWebHttpHeaders_HttpRequestHeaderCollection {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Headers())
        }
    }

    /// Gets or sets the HTTP method to be performed on the request URI.
    /// - Returns: The HTTP method to be performed on the request URI.
    public var method: WindowsWebHttp_HttpMethod {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Method())
        }
    }

    /// Gets or sets the HTTP method to be performed on the request URI.
    /// - Returns: The HTTP method to be performed on the request URI.
    public func method(_ value: WindowsWebHttp_HttpMethod?) throws {
        try _interop.put_Method(value)
    }

    /// Gets a set of properties on the HttpRequestMessage instance that are for use by the developer.
    /// - Returns: A set of properties on the HttpRequestMessage instance that are for use by the developer.
    public var properties: WindowsFoundationCollections_IMap<Swift.String, WindowsRuntime.IInspectable?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Properties())
        }
    }

    /// Gets or sets the Uri used for the HttpRequestMessage object.
    /// - Returns: The Uri used for the HTTP request.
    public var requestUri: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_interop.get_RequestUri())
        }
    }

    /// Gets or sets the Uri used for the HttpRequestMessage object.
    /// - Returns: The Uri used for the HTTP request.
    public func requestUri(_ value: WindowsFoundation_Uri?) throws {
        try _interop.put_RequestUri(value)
    }

    /// Get information about the underlying transport socket used by an HTTP connection.
    /// - Returns: Information about the underlying transport socket used by an HTTP connection.
    public var transportInformation: WindowsWebHttp_HttpTransportInformation {
        get throws {
            try COM.NullResult.unwrap(_interop.get_TransportInformation())
        }
    }

    // MARK: Windows.Foundation.IClosable members

    /// Closes the HttpRequestMessage instance and releases allocated resources.
    public func close() throws {
        try _iclosable.close()
    }

    // MARK: Windows.Foundation.IStringable members

    /// Returns a string that represents the current HttpRequestMessage object.
    /// - Returns: A string that represents the current object.
    public func toString() throws -> Swift.String {
        try _istringable.toString()
    }

    // MARK: Implementation details

    private var _iclosable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable>? = nil

    internal var _iclosable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable> {
        get throws {
            try _iclosable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IClosable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IClosable.self)
            }
        }
    }

    private var _istringable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IStringable>? = nil

    internal var _istringable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IStringable> {
        get throws {
            try _istringable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IStringable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IStringable.self)
            }
        }
    }

    deinit {
        _iclosable_storage?.release()
        _istringable_storage?.release()
    }

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Web.Http.HttpRequestMessage", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _ihttpRequestMessageFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsWebHttp_IHttpRequestMessageFactory>? = nil

    internal static var _ihttpRequestMessageFactory: COM.COMInterop<CWinRT.SWRT_WindowsWebHttp_IHttpRequestMessageFactory> {
        get throws {
            try _ihttpRequestMessageFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Web.Http.HttpRequestMessage", id: CWinRT.SWRT_WindowsWebHttp_IHttpRequestMessageFactory.iid)
            }
        }
    }
}