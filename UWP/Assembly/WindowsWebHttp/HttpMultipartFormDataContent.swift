// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides HTTP content that uses the **multipart/form-data** MIME type.
public final class WindowsWebHttp_HttpMultipartFormDataContent: WindowsRuntime.WinRTImport<WindowsWebHttp_HttpMultipartFormDataContentProjection>, WindowsWebHttp_IHttpContentProtocol, WindowsFoundation_IClosableProtocol, WindowsFoundationCollections_IIterableProtocol, WindowsFoundation_IStringableProtocol {
    public typealias T = WindowsWebHttp_IHttpContent?

    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsWebHttp_HttpMultipartFormDataContentProjection.self))
    }

    // MARK: Windows.Web.Http.IHttpMultipartFormDataContentFactory members

    public convenience init(_ boundary: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._ihttpMultipartFormDataContentFactory.createWithBoundary(boundary)))
    }

    // MARK: Windows.Web.Http.IHttpContent members

    /// Get a collection of content headers set on the HttpMultipartFormDataContent.
    /// - Returns: A collection of content headers set on the HttpMultipartFormDataContent.
    public var headers: WindowsWebHttpHeaders_HttpContentHeaderCollection {
        get throws {
            try COM.NullResult.unwrap(_interop.get_Headers())
        }
    }

    /// Serialize the HttpMultipartFormDataContent into memory as an asynchronous operation.
    /// - Returns: The object that represents the asynchronous operation.
    public func bufferAllAsync() throws -> WindowsFoundation_IAsyncOperationWithProgress<Swift.UInt64, Swift.UInt64> {
        try COM.NullResult.unwrap(_interop.bufferAllAsync())
    }

    /// Serialize the HttpMultipartFormDataContent to a buffer as an asynchronous operation.
    /// - Returns: The object representing the asynchronous operation.
    public func readAsBufferAsync() throws -> WindowsFoundation_IAsyncOperationWithProgress<WindowsStorageStreams_IBuffer?, Swift.UInt64> {
        try COM.NullResult.unwrap(_interop.readAsBufferAsync())
    }

    /// Serialize the HttpMultipartFormDataContent and return an input stream that represents the content as an asynchronous operation.
    /// - Returns: The object representing the asynchronous operation.
    public func readAsInputStreamAsync() throws -> WindowsFoundation_IAsyncOperationWithProgress<WindowsStorageStreams_IInputStream?, Swift.UInt64> {
        try COM.NullResult.unwrap(_interop.readAsInputStreamAsync())
    }

    /// Serialize the HttpMultipartFormDataContent to a String as an asynchronous operation.
    /// - Returns: The object representing the asynchronous operation.
    public func readAsStringAsync() throws -> WindowsFoundation_IAsyncOperationWithProgress<Swift.String, Swift.UInt64> {
        try COM.NullResult.unwrap(_interop.readAsStringAsync())
    }

    /// Determines whether the HttpMultipartFormDataContent has a valid length in bytes.
    /// - Parameter length: The length in bytes of the HttpMultipartFormDataContent.
    /// - Returns: **true** if *length* is a valid length; otherwise, **false**.
    public func tryComputeLength(_ length: inout Swift.UInt64) throws -> Swift.Bool {
        try _interop.tryComputeLength(&length)
    }

    /// Write the HttpMultipartFormDataContent to an output stream as an asynchronous operation.
    /// - Parameter outputStream: The output stream to write to.
    /// - Returns: The object that represents the asynchronous operation.
    public func writeToStreamAsync(_ outputStream: WindowsStorageStreams_IOutputStream?) throws -> WindowsFoundation_IAsyncOperationWithProgress<Swift.UInt64, Swift.UInt64> {
        try COM.NullResult.unwrap(_interop.writeToStreamAsync(outputStream))
    }

    // MARK: Windows.Web.Http.IHttpMultipartFormDataContent members

    /// Add HTTP content to the HttpMultipartFormDataContent instance.
    /// - Parameter content: The HTTP content to add to HttpMultipartFormDataContent.
    public func add(_ content: WindowsWebHttp_IHttpContent?) throws {
        try _ihttpMultipartFormDataContent.add(content)
    }

    /// Add HTTP content with a specified name to the HttpMultipartFormDataContent instance.
    /// - Parameter content: The HTTP content to add to HttpMultipartFormDataContent.
    /// - Parameter name: The name for the HTTP content to add to HttpMultipartFormDataContent.
    public func add(_ content: WindowsWebHttp_IHttpContent?, _ name: Swift.String) throws {
        try _ihttpMultipartFormDataContent.addWithName(content, name)
    }

    /// Add HTTP content with a specified name from a file to the HttpMultipartFormDataContent instance.
    /// - Parameter content: The HTTP content to add to HttpMultipartFormDataContent.
    /// - Parameter name: The name for the HTTP content to add to HttpMultipartFormDataContent.
    /// - Parameter fileName: The file name for the HTTP content to add to HttpMultipartFormDataContent.
    public func add(_ content: WindowsWebHttp_IHttpContent?, _ name: Swift.String, _ fileName: Swift.String) throws {
        try _ihttpMultipartFormDataContent.addWithNameAndFileName(content, name, fileName)
    }

    // MARK: Windows.Foundation.IClosable members

    /// Closes the HttpMultipartFormDataContent instance and releases allocated resources.
    public func close() throws {
        try _iclosable.close()
    }

    // MARK: Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.IHttpContent> members

    /// Gets an object that can be used to enumerate the contents in the HttpMultipartFormDataContent object.
    /// - Returns: An object that can be used to enumerate the contents in the HttpMultipartFormDataContent object.
    public func first() throws -> WindowsFoundationCollections_IIterator<WindowsWebHttp_IHttpContent?> {
        try COM.NullResult.unwrap(_iiterable.first())
    }

    // MARK: Windows.Foundation.IStringable members

    /// Returns a string that represents the current HttpMultipartFormDataContent object.
    /// - Returns: A string that represents the current object.
    public func toString() throws -> Swift.String {
        try _istringable.toString()
    }

    // MARK: Implementation details

    private var _ihttpMultipartFormDataContent_storage: COM.COMInterop<CWinRT.SWRT_WindowsWebHttp_IHttpMultipartFormDataContent>? = nil

    internal var _ihttpMultipartFormDataContent: COM.COMInterop<CWinRT.SWRT_WindowsWebHttp_IHttpMultipartFormDataContent> {
        get throws {
            try _ihttpMultipartFormDataContent_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsWebHttp_IHttpMultipartFormDataContent.iid).cast(to: CWinRT.SWRT_WindowsWebHttp_IHttpMultipartFormDataContent.self)
            }
        }
    }

    private var _iclosable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable>? = nil

    internal var _iclosable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable> {
        get throws {
            try _iclosable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IClosable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IClosable.self)
            }
        }
    }

    private var _iiterable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsWebHttp_IHttpContent>? = nil

    internal var _iiterable: COM.COMInterop<CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsWebHttp_IHttpContent> {
        get throws {
            try _iiterable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsWebHttp_IHttpContent.iid).cast(to: CWinRT.SWRT_WindowsFoundationCollections_IIterable_WindowsWebHttp_IHttpContent.self)
            }
        }
    }

    private var _istringable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IStringable>? = nil

    internal var _istringable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IStringable> {
        get throws {
            try _istringable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IStringable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IStringable.self)
            }
        }
    }

    deinit {
        _ihttpMultipartFormDataContent_storage?.release()
        _iclosable_storage?.release()
        _iiterable_storage?.release()
        _istringable_storage?.release()
    }

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Web.Http.HttpMultipartFormDataContent", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }

    private static var _ihttpMultipartFormDataContentFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsWebHttp_IHttpMultipartFormDataContentFactory>? = nil

    internal static var _ihttpMultipartFormDataContentFactory: COM.COMInterop<CWinRT.SWRT_WindowsWebHttp_IHttpMultipartFormDataContentFactory> {
        get throws {
            try _ihttpMultipartFormDataContentFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Web.Http.HttpMultipartFormDataContent", id: CWinRT.SWRT_WindowsWebHttp_IHttpMultipartFormDataContentFactory.iid)
            }
        }
    }
}