// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Contains information about an audio headset attached to a gamepad.
public final class WindowsGamingInput_Headset: WindowsRuntime.WinRTImport<WindowsGamingInput_HeadsetProjection>, WindowsGamingInput_IGameControllerBatteryInfoProtocol {
    // MARK: Windows.Gaming.Input.IHeadset members

    /// The XAudio endpoint ID for the headset's audio capture device.
    /// - Returns: The XAudio endpoint ID for the headset's audio capture device.
    public var captureDeviceId: Swift.String {
        get throws {
            try _interop.get_CaptureDeviceId()
        }
    }

    /// The XAudio enpoint ID for the headset's audio render device.
    /// - Returns: The XAudio enpoint ID for the headset's audio render device.
    public var renderDeviceId: Swift.String {
        get throws {
            try _interop.get_RenderDeviceId()
        }
    }

    // MARK: Windows.Gaming.Input.IGameControllerBatteryInfo members

    /// Gets information about the headset's current battery state.
    /// - Returns: Information about the headset's current battery state.
    public func tryGetBatteryReport() throws -> WindowsDevicesPower_BatteryReport {
        try COM.NullResult.unwrap(_igameControllerBatteryInfo.tryGetBatteryReport())
    }

    // MARK: Implementation details

    private var _igameControllerBatteryInfo_storage: COM.COMInterop<CWinRT.SWRT_WindowsGamingInput_IGameControllerBatteryInfo>? = nil

    internal var _igameControllerBatteryInfo: COM.COMInterop<CWinRT.SWRT_WindowsGamingInput_IGameControllerBatteryInfo> {
        get throws {
            try _igameControllerBatteryInfo_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsGamingInput_IGameControllerBatteryInfo.iid).cast(to: CWinRT.SWRT_WindowsGamingInput_IGameControllerBatteryInfo.self)
            }
        }
    }

    deinit {
        _igameControllerBatteryInfo_storage?.release()
    }
}