// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides information about the capture device settings that were used for a frame in a variable photo sequence.
public final class WindowsMediaCapture_CapturedFrameControlValues: WindowsRuntime.WinRTImport<WindowsMediaCapture_CapturedFrameControlValuesProjection> {
    // MARK: Windows.Media.Capture.ICapturedFrameControlValues members

    /// Gets the exposure time used for a frame in a variable photo sequence.
    /// - Returns: Gets the exposure time used for a frame in a variable photo sequence.
    public var exposure: WindowsFoundation_IReference<WindowsFoundation_TimeSpan>? {
        get throws {
            try _interop.get_Exposure()
        }
    }

    /// Gets the exposure compensation value used for a frame in a variable photo sequence.
    /// - Returns: The exposure compensation value used for a frame in a variable photo sequence.
    public var exposureCompensation: Swift.Float? {
        get throws {
            try _interop.get_ExposureCompensation()
        }
    }

    /// Gets the flash power used for a frame in a variable photo sequence.
    /// - Returns: The flash power used for a frame in a variable photo sequence.
    public var flashPowerPercent: Swift.Float? {
        get throws {
            try _interop.get_FlashPowerPercent()
        }
    }

    /// Gets a value indicating if the flash was used for a frame in a variable photo sequence.
    /// - Returns: A value indicating if the flash was used for a frame in a variable photo sequence.
    public var flashed: Swift.Bool? {
        get throws {
            try _interop.get_Flashed()
        }
    }

    /// Gets the focus lens position used for a frame in a variable photo sequence.
    /// - Returns: The focus lens position used for a frame in a variable photo sequence.
    public var focus: Swift.UInt32? {
        get throws {
            try _interop.get_Focus()
        }
    }

    /// Gets the ISO speed used for a frame in a variable photo sequence.
    /// - Returns: The ISO speed used for a frame in a variable photo sequence.
    public var isoSpeed: Swift.UInt32? {
        get throws {
            try _interop.get_IsoSpeed()
        }
    }

    /// Gets the scene mode used for a frame in a variable photo sequence.
    /// - Returns: The scene mode used for a frame in a variable photo sequence.
    public var sceneMode: WindowsFoundation_IReference<WindowsMediaDevices_CaptureSceneMode>? {
        get throws {
            try _interop.get_SceneMode()
        }
    }

    /// Gets the white balance setting used for a frame in a variable photo sequence.
    /// - Returns: The white balance setting used for a frame in a variable photo sequence.
    public var whiteBalance: Swift.UInt32? {
        get throws {
            try _interop.get_WhiteBalance()
        }
    }

    /// Gets the zoom factor used for a frame in a variable photo sequence.
    /// - Returns: The zoom factor used for a frame in a variable photo sequence.
    public var zoomFactor: Swift.Float? {
        get throws {
            try _interop.get_ZoomFactor()
        }
    }

    // MARK: Windows.Media.Capture.ICapturedFrameControlValues2 members

    /// Gets the focus state for a frame in a variable photo sequence.
    /// - Returns: The focus state for a frame in a variable photo sequence.
    public var focusState: WindowsFoundation_IReference<WindowsMediaDevices_MediaCaptureFocusState>? {
        get throws {
            try _icapturedFrameControlValues2.get_FocusState()
        }
    }

    /// Gets the ISO analog gain used for a frame in a variable photo sequence.
    /// - Returns: The ISO analog gain used for a frame in a variable photo sequence.
    public var isoAnalogGain: Swift.Double? {
        get throws {
            try _icapturedFrameControlValues2.get_IsoAnalogGain()
        }
    }

    /// Gets the ISO digital gain used for a frame in a variable photo sequence.
    /// - Returns: The ISO digital gain used for a frame in a variable photo sequence.
    public var isoDigitalGain: Swift.Double? {
        get throws {
            try _icapturedFrameControlValues2.get_IsoDigitalGain()
        }
    }

    /// Gets the sensor frame rate used for a frame in a variable photo sequence.
    /// - Returns: The sensor frame rate used for a frame in a variable photo sequence.
    public var sensorFrameRate: WindowsMediaMediaProperties_MediaRatio {
        get throws {
            try COM.NullResult.unwrap(_icapturedFrameControlValues2.get_SensorFrameRate())
        }
    }

    /// Gets the white balance gain used for a frame in a variable photo sequence.
    /// - Returns: The white balance gain used for a frame in a variable photo sequence.
    public var whiteBalanceGain: WindowsFoundation_IReference<WindowsMediaCapture_WhiteBalanceGain>? {
        get throws {
            try _icapturedFrameControlValues2.get_WhiteBalanceGain()
        }
    }

    // MARK: Implementation details

    private var _icapturedFrameControlValues2_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaCapture_ICapturedFrameControlValues2>? = nil

    internal var _icapturedFrameControlValues2: COM.COMInterop<CWinRT.SWRT_WindowsMediaCapture_ICapturedFrameControlValues2> {
        get throws {
            try _icapturedFrameControlValues2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaCapture_ICapturedFrameControlValues2.iid).cast(to: CWinRT.SWRT_WindowsMediaCapture_ICapturedFrameControlValues2.self)
            }
        }
    }

    deinit {
        _icapturedFrameControlValues2_storage?.release()
    }
}