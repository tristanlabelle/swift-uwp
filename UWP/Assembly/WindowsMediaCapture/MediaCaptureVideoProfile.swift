// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a video profile that indicates a configuration supported by the video capture device.
public final class WindowsMediaCapture_MediaCaptureVideoProfile: WindowsRuntime.WinRTImport<WindowsMediaCapture_MediaCaptureVideoProfileProjection> {
    // MARK: Windows.Media.Capture.IMediaCaptureVideoProfile members

    /// Gets the unique identifier of the video profile.
    /// - Returns: The unique identifier of the video profile.
    public var id: Swift.String {
        get throws {
            try _interop.get_Id()
        }
    }

    /// Gets a list of MediaCaptureVideoProfileMediaDescription objects that represent supported video device settings for photo capture.
    /// - Returns: A list of MediaCaptureVideoProfileMediaDescription objects that represent supported video device settings for photo capture.
    public var supportedPhotoMediaDescription: WindowsFoundationCollections_IVectorView<WindowsMediaCapture_MediaCaptureVideoProfileMediaDescription?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_SupportedPhotoMediaDescription())
        }
    }

    /// Gets a list of MediaCaptureVideoProfileMediaDescription objects that represent supported video device settings for video preview.
    /// - Returns: A list of MediaCaptureVideoProfileMediaDescription objects that represent supported video device settings for video preview.
    public var supportedPreviewMediaDescription: WindowsFoundationCollections_IVectorView<WindowsMediaCapture_MediaCaptureVideoProfileMediaDescription?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_SupportedPreviewMediaDescription())
        }
    }

    /// Gets a list of MediaCaptureVideoProfileMediaDescription objects that represent supported video device settings for video recording.
    /// - Returns: A list of MediaCaptureVideoProfileMediaDescription objects that represent supported video device settings for video recording.
    public var supportedRecordMediaDescription: WindowsFoundationCollections_IVectorView<WindowsMediaCapture_MediaCaptureVideoProfileMediaDescription?> {
        get throws {
            try COM.NullResult.unwrap(_interop.get_SupportedRecordMediaDescription())
        }
    }

    /// Gets the device ID of the video device associated with the video profile.
    /// - Returns: The device ID of the video device associated with the video profile.
    public var videoDeviceId: Swift.String {
        get throws {
            try _interop.get_VideoDeviceId()
        }
    }

    /// Gets the list of MediaCaptureVideoProfile objects that can be used concurrently with this video profile.
    /// - Returns: The list of MediaCaptureVideoProfile objects that can be used concurrently with this video profile.
    public func getConcurrency() throws -> WindowsFoundationCollections_IVectorView<WindowsMediaCapture_MediaCaptureVideoProfile?> {
        try COM.NullResult.unwrap(_interop.getConcurrency())
    }

    // MARK: Windows.Media.Capture.IMediaCaptureVideoProfile2 members

    /// Gets a read-only list of MediaFrameSourceInfo objects which provide details about the capabilities of a MediaFrameSource.
    /// - Returns: A read-only list of MediaFrameSourceInfo objects.
    public var frameSourceInfos: WindowsFoundationCollections_IVectorView<WindowsMediaCaptureFrames_MediaFrameSourceInfo?> {
        get throws {
            try COM.NullResult.unwrap(_imediaCaptureVideoProfile2.get_FrameSourceInfos())
        }
    }

    /// Gets a read-only map of custom attributes provided by the capture device manufacturer.
    /// - Returns: A read-only map of custom attributes.
    public var properties: WindowsFoundationCollections_IMapView<Foundation.UUID, WindowsRuntime.IInspectable?> {
        get throws {
            try COM.NullResult.unwrap(_imediaCaptureVideoProfile2.get_Properties())
        }
    }

    // MARK: Implementation details

    private var _imediaCaptureVideoProfile2_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureVideoProfile2>? = nil

    internal var _imediaCaptureVideoProfile2: COM.COMInterop<CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureVideoProfile2> {
        get throws {
            try _imediaCaptureVideoProfile2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureVideoProfile2.iid).cast(to: CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureVideoProfile2.self)
            }
        }
    }

    deinit {
        _imediaCaptureVideoProfile2_storage?.release()
    }
}