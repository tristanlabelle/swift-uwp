// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides settings for capturing photos with CameraCaptureUI. The settings include aspect ratio, image size, format, resolution, and whether or not cropping is allowed by the user interface (UI).
public final class WindowsMediaCapture_CameraCaptureUIPhotoCaptureSettings: WindowsRuntime.WinRTImport<WindowsMediaCapture_CameraCaptureUIPhotoCaptureSettingsProjection> {
    // MARK: Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettings members

    /// Determines whether photo cropping will be enabled in the user interface for capture a photo.
    /// - Returns: True, if photo cropping will be enabled; otherwise, false.
    public var allowCropping: Swift.Bool {
        get throws {
            try _interop.get_AllowCropping()
        }
    }

    /// Determines whether photo cropping will be enabled in the user interface for capture a photo.
    /// - Returns: True, if photo cropping will be enabled; otherwise, false.
    public func allowCropping(_ value: Swift.Bool) throws {
        try _interop.put_AllowCropping(value)
    }

    /// The aspect ratio of the captured photo.
    /// - Returns: The aspect ratio of the captured photo. If zero, the aspect ratio is not enforced.
    public var croppedAspectRatio: WindowsFoundation_Size {
        get throws {
            try _interop.get_CroppedAspectRatio()
        }
    }

    /// The aspect ratio of the captured photo.
    /// - Returns: The aspect ratio of the captured photo. If zero, the aspect ratio is not enforced.
    public func croppedAspectRatio(_ value: WindowsFoundation_Size) throws {
        try _interop.put_CroppedAspectRatio(value)
    }

    /// The exact size in pixels of the captured photo.
    /// - Returns: The size of the captured photo.
    public var croppedSizeInPixels: WindowsFoundation_Size {
        get throws {
            try _interop.get_CroppedSizeInPixels()
        }
    }

    /// The exact size in pixels of the captured photo.
    /// - Returns: The size of the captured photo.
    public func croppedSizeInPixels(_ value: WindowsFoundation_Size) throws {
        try _interop.put_CroppedSizeInPixels(value)
    }

    /// Determines the format that captured photos will be stored in.
    /// - Returns: A value that indicates the format for captured photos.
    public var format: WindowsMediaCapture_CameraCaptureUIPhotoFormat {
        get throws {
            try _interop.get_Format()
        }
    }

    /// Determines the format that captured photos will be stored in.
    /// - Returns: A value that indicates the format for captured photos.
    public func format(_ value: WindowsMediaCapture_CameraCaptureUIPhotoFormat) throws {
        try _interop.put_Format(value)
    }

    /// Determines the maximum resolution the user will be able to select.
    /// - Returns: A value that indicates the maximum resolution the user will be able to select.
    public var maxResolution: WindowsMediaCapture_CameraCaptureUIMaxPhotoResolution {
        get throws {
            try _interop.get_MaxResolution()
        }
    }

    /// Determines the maximum resolution the user will be able to select.
    /// - Returns: A value that indicates the maximum resolution the user will be able to select.
    public func maxResolution(_ value: WindowsMediaCapture_CameraCaptureUIMaxPhotoResolution) throws {
        try _interop.put_MaxResolution(value)
    }

    // MARK: Implementation details
}