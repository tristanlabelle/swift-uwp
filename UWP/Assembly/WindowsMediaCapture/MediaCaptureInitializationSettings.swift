// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Contains initialization settings for the MediaCapture object which are passed to the MediaCapture.InitializeAsync method.
public final class WindowsMediaCapture_MediaCaptureInitializationSettings: WindowsRuntime.WinRTImport<WindowsMediaCapture_MediaCaptureInitializationSettingsProjection> {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_transferringRef: try Self._iactivationFactory.activateInstance(projection: WindowsMediaCapture_MediaCaptureInitializationSettingsProjection.self))
    }

    // MARK: Windows.Media.Capture.IMediaCaptureInitializationSettings members

    /// Gets the DeviceInformation.Id of the microphone.
    /// - Returns: The DeviceInformation.Id of the microphone.
    public var audioDeviceId: Swift.String {
        get throws {
            try _interop.get_AudioDeviceId()
        }
    }

    /// Gets the DeviceInformation.Id of the microphone.
    /// - Returns: The DeviceInformation.Id of the microphone.
    public func audioDeviceId(_ value: Swift.String) throws {
        try _interop.put_AudioDeviceId(value)
    }

    /// Gets or sets the stream that is used for photo capture.
    /// - Returns: The stream that is used for photo capture.
    public var photoCaptureSource: WindowsMediaCapture_PhotoCaptureSource {
        get throws {
            try _interop.get_PhotoCaptureSource()
        }
    }

    /// Gets or sets the stream that is used for photo capture.
    /// - Returns: The stream that is used for photo capture.
    public func photoCaptureSource(_ value: WindowsMediaCapture_PhotoCaptureSource) throws {
        try _interop.put_PhotoCaptureSource(value)
    }

    /// Gets or sets the streaming mode.
    /// - Returns: The streaming mode.
    public var streamingCaptureMode: WindowsMediaCapture_StreamingCaptureMode {
        get throws {
            try _interop.get_StreamingCaptureMode()
        }
    }

    /// Gets or sets the streaming mode.
    /// - Returns: The streaming mode.
    public func streamingCaptureMode(_ value: WindowsMediaCapture_StreamingCaptureMode) throws {
        try _interop.put_StreamingCaptureMode(value)
    }

    /// Gets the DeviceInformation.Id of the video camera.
    /// - Returns: The DeviceInformation.Id of the video camera.
    public var videoDeviceId: Swift.String {
        get throws {
            try _interop.get_VideoDeviceId()
        }
    }

    /// Gets the DeviceInformation.Id of the video camera.
    /// - Returns: The DeviceInformation.Id of the video camera.
    public func videoDeviceId(_ value: Swift.String) throws {
        try _interop.put_VideoDeviceId(value)
    }

    // MARK: Windows.Media.Capture.IMediaCaptureInitializationSettings2 members

    /// Gets or sets a value that specifies the audio processing mode.
    /// - Returns: The audio processing mode.
    public var audioProcessing: WindowsMedia_AudioProcessing {
        get throws {
            try _imediaCaptureInitializationSettings2.get_AudioProcessing()
        }
    }

    /// Gets or sets a value that specifies the audio processing mode.
    /// - Returns: The audio processing mode.
    public func audioProcessing(_ value: WindowsMedia_AudioProcessing) throws {
        try _imediaCaptureInitializationSettings2.put_AudioProcessing(value)
    }

    /// Gets or set the media category.
    /// - Returns: The media category.
    public var mediaCategory: WindowsMediaCapture_MediaCategory {
        get throws {
            try _imediaCaptureInitializationSettings2.get_MediaCategory()
        }
    }

    /// Gets or set the media category.
    /// - Returns: The media category.
    public func mediaCategory(_ value: WindowsMediaCapture_MediaCategory) throws {
        try _imediaCaptureInitializationSettings2.put_MediaCategory(value)
    }

    // MARK: Windows.Media.Capture.IMediaCaptureInitializationSettings3 members

    /// Gets or sets the audio source for the capture operation.
    /// - Returns: The audio source for the capture operation.
    public var audioSource: WindowsMediaCore_IMediaSource {
        get throws {
            try COM.NullResult.unwrap(_imediaCaptureInitializationSettings3.get_AudioSource())
        }
    }

    /// Gets or sets the audio source for the capture operation.
    /// - Returns: The audio source for the capture operation.
    public func audioSource(_ value: WindowsMediaCore_IMediaSource?) throws {
        try _imediaCaptureInitializationSettings3.put_AudioSource(value)
    }

    /// Gets or sets the video source for the capture operation.
    /// - Returns: The video source for the capture operation.
    public var videoSource: WindowsMediaCore_IMediaSource {
        get throws {
            try COM.NullResult.unwrap(_imediaCaptureInitializationSettings3.get_VideoSource())
        }
    }

    /// Gets or sets the video source for the capture operation.
    /// - Returns: The video source for the capture operation.
    public func videoSource(_ value: WindowsMediaCore_IMediaSource?) throws {
        try _imediaCaptureInitializationSettings3.put_VideoSource(value)
    }

    // MARK: Windows.Media.Capture.IMediaCaptureInitializationSettings4 members

    /// Gets or sets the media description for photo capture.
    /// - Returns: The media description for photo capture.
    public var photoMediaDescription: WindowsMediaCapture_MediaCaptureVideoProfileMediaDescription {
        get throws {
            try COM.NullResult.unwrap(_imediaCaptureInitializationSettings4.get_PhotoMediaDescription())
        }
    }

    /// Gets or sets the media description for photo capture.
    /// - Returns: The media description for photo capture.
    public func photoMediaDescription(_ value: WindowsMediaCapture_MediaCaptureVideoProfileMediaDescription?) throws {
        try _imediaCaptureInitializationSettings4.put_PhotoMediaDescription(value)
    }

    /// Gets or sets the media description for preview video.
    /// - Returns: The media description for preview video.
    public var previewMediaDescription: WindowsMediaCapture_MediaCaptureVideoProfileMediaDescription {
        get throws {
            try COM.NullResult.unwrap(_imediaCaptureInitializationSettings4.get_PreviewMediaDescription())
        }
    }

    /// Gets or sets the media description for preview video.
    /// - Returns: The media description for preview video.
    public func previewMediaDescription(_ value: WindowsMediaCapture_MediaCaptureVideoProfileMediaDescription?) throws {
        try _imediaCaptureInitializationSettings4.put_PreviewMediaDescription(value)
    }

    /// Gets or sets the media description for video recording.
    /// - Returns: The media description for video capture.
    public var recordMediaDescription: WindowsMediaCapture_MediaCaptureVideoProfileMediaDescription {
        get throws {
            try COM.NullResult.unwrap(_imediaCaptureInitializationSettings4.get_RecordMediaDescription())
        }
    }

    /// Gets or sets the media description for video recording.
    /// - Returns: The media description for video capture.
    public func recordMediaDescription(_ value: WindowsMediaCapture_MediaCaptureVideoProfileMediaDescription?) throws {
        try _imediaCaptureInitializationSettings4.put_RecordMediaDescription(value)
    }

    /// Gets or sets the video profile which provides hints to the driver to allow it to optimize for different capture scenarios.
    /// - Returns: The video profile.
    public var videoProfile: WindowsMediaCapture_MediaCaptureVideoProfile {
        get throws {
            try COM.NullResult.unwrap(_imediaCaptureInitializationSettings4.get_VideoProfile())
        }
    }

    /// Gets or sets the video profile which provides hints to the driver to allow it to optimize for different capture scenarios.
    /// - Returns: The video profile.
    public func videoProfile(_ value: WindowsMediaCapture_MediaCaptureVideoProfile?) throws {
        try _imediaCaptureInitializationSettings4.put_VideoProfile(value)
    }

    // MARK: Windows.Media.Capture.IMediaCaptureInitializationSettings5 members

    /// Gets or sets an object specifying the preferred memory location for storing frames acquired from a MediaFrameSource used by the MediaCapture.
    /// - Returns: An object specifying preferred the memory location for storing frames acquired from a MediaFrameSource.
    public var memoryPreference: WindowsMediaCapture_MediaCaptureMemoryPreference {
        get throws {
            try _imediaCaptureInitializationSettings5.get_MemoryPreference()
        }
    }

    /// Gets or sets an object specifying the preferred memory location for storing frames acquired from a MediaFrameSource used by the MediaCapture.
    /// - Returns: An object specifying preferred the memory location for storing frames acquired from a MediaFrameSource.
    public func memoryPreference(_ value: WindowsMediaCapture_MediaCaptureMemoryPreference) throws {
        try _imediaCaptureInitializationSettings5.put_MemoryPreference(value)
    }

    /// Gets or sets an object that specifies the sharing mode for the MediaCapture.
    /// - Returns: An object that specifies the sharing mode for the MediaCapture.
    public var sharingMode: WindowsMediaCapture_MediaCaptureSharingMode {
        get throws {
            try _imediaCaptureInitializationSettings5.get_SharingMode()
        }
    }

    /// Gets or sets an object that specifies the sharing mode for the MediaCapture.
    /// - Returns: An object that specifies the sharing mode for the MediaCapture.
    public func sharingMode(_ value: WindowsMediaCapture_MediaCaptureSharingMode) throws {
        try _imediaCaptureInitializationSettings5.put_SharingMode(value)
    }

    /// Gets or sets the MediaFrameSourceGroup with which the MediaCapture should be initialized. This property defines a set of media frame sources that can be used simultaneously.
    /// - Returns: The MediaFrameSourceGroup with which the MediaCapture should be initialized.
    public var sourceGroup: WindowsMediaCaptureFrames_MediaFrameSourceGroup {
        get throws {
            try COM.NullResult.unwrap(_imediaCaptureInitializationSettings5.get_SourceGroup())
        }
    }

    /// Gets or sets the MediaFrameSourceGroup with which the MediaCapture should be initialized. This property defines a set of media frame sources that can be used simultaneously.
    /// - Returns: The MediaFrameSourceGroup with which the MediaCapture should be initialized.
    public func sourceGroup(_ value: WindowsMediaCaptureFrames_MediaFrameSourceGroup?) throws {
        try _imediaCaptureInitializationSettings5.put_SourceGroup(value)
    }

    // MARK: Windows.Media.Capture.IMediaCaptureInitializationSettings6 members

    /// Gets a value indicating whether the system should always play a shutter sound when a photo is captured.
    /// - Returns: True if the system should always play a shutter sound; otherwise, false.
    public var alwaysPlaySystemShutterSound: Swift.Bool {
        get throws {
            try _imediaCaptureInitializationSettings6.get_AlwaysPlaySystemShutterSound()
        }
    }

    /// Gets a value indicating whether the system should always play a shutter sound when a photo is captured.
    /// - Returns: True if the system should always play a shutter sound; otherwise, false.
    public func alwaysPlaySystemShutterSound(_ value: Swift.Bool) throws {
        try _imediaCaptureInitializationSettings6.put_AlwaysPlaySystemShutterSound(value)
    }

    // MARK: Windows.Media.Capture.IMediaCaptureInitializationSettings7 members

    /// Gets or sets the URI of the remote capture device to be initialized.
    /// - Returns: The URI of the remote capture device to be initialized.
    public var deviceUri: WindowsFoundation_Uri {
        get throws {
            try COM.NullResult.unwrap(_imediaCaptureInitializationSettings7.get_DeviceUri())
        }
    }

    /// Gets or sets the URI of the remote capture device to be initialized.
    /// - Returns: The URI of the remote capture device to be initialized.
    public func deviceUri(_ value: WindowsFoundation_Uri?) throws {
        try _imediaCaptureInitializationSettings7.put_DeviceUri(value)
    }

    /// Gets or sets the PasswordCredential object representing the credentials used to access the remote capture device to be initialized.
    /// - Returns: The credentials used to access the remote capture device.
    public var deviceUriPasswordCredential: WindowsSecurityCredentials_PasswordCredential {
        get throws {
            try COM.NullResult.unwrap(_imediaCaptureInitializationSettings7.get_DeviceUriPasswordCredential())
        }
    }

    /// Gets or sets the PasswordCredential object representing the credentials used to access the remote capture device to be initialized.
    /// - Returns: The credentials used to access the remote capture device.
    public func deviceUriPasswordCredential(_ value: WindowsSecurityCredentials_PasswordCredential?) throws {
        try _imediaCaptureInitializationSettings7.put_DeviceUriPasswordCredential(value)
    }

    // MARK: Implementation details

    private var _imediaCaptureInitializationSettings2_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings2>? = nil

    internal var _imediaCaptureInitializationSettings2: COM.COMInterop<CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings2> {
        get throws {
            try _imediaCaptureInitializationSettings2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings2.iid).cast(to: CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings2.self)
            }
        }
    }

    private var _imediaCaptureInitializationSettings3_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings3>? = nil

    internal var _imediaCaptureInitializationSettings3: COM.COMInterop<CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings3> {
        get throws {
            try _imediaCaptureInitializationSettings3_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings3.iid).cast(to: CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings3.self)
            }
        }
    }

    private var _imediaCaptureInitializationSettings4_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings4>? = nil

    internal var _imediaCaptureInitializationSettings4: COM.COMInterop<CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings4> {
        get throws {
            try _imediaCaptureInitializationSettings4_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings4.iid).cast(to: CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings4.self)
            }
        }
    }

    private var _imediaCaptureInitializationSettings5_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings5>? = nil

    internal var _imediaCaptureInitializationSettings5: COM.COMInterop<CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings5> {
        get throws {
            try _imediaCaptureInitializationSettings5_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings5.iid).cast(to: CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings5.self)
            }
        }
    }

    private var _imediaCaptureInitializationSettings6_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings6>? = nil

    internal var _imediaCaptureInitializationSettings6: COM.COMInterop<CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings6> {
        get throws {
            try _imediaCaptureInitializationSettings6_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings6.iid).cast(to: CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings6.self)
            }
        }
    }

    private var _imediaCaptureInitializationSettings7_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings7>? = nil

    internal var _imediaCaptureInitializationSettings7: COM.COMInterop<CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings7> {
        get throws {
            try _imediaCaptureInitializationSettings7_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings7.iid).cast(to: CWinRT.SWRT_WindowsMediaCapture_IMediaCaptureInitializationSettings7.self)
            }
        }
    }

    deinit {
        _imediaCaptureInitializationSettings2_storage?.release()
        _imediaCaptureInitializationSettings3_storage?.release()
        _imediaCaptureInitializationSettings4_storage?.release()
        _imediaCaptureInitializationSettings5_storage?.release()
        _imediaCaptureInitializationSettings6_storage?.release()
        _imediaCaptureInitializationSettings7_storage?.release()
    }

    private static var _iactivationFactory_storage: COM.COMInterop<CWinRT.SWRT_IActivationFactory>? = nil

    internal static var _iactivationFactory: COM.COMInterop<CWinRT.SWRT_IActivationFactory> {
        get throws {
            try _iactivationFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.Capture.MediaCaptureInitializationSettings", id: CWinRT.SWRT_IActivationFactory.iid)
            }
        }
    }
}