// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Provides information about the app capture feature.
public final class WindowsMediaCapture_AppCapture: WindowsRuntime.WinRTImport<WindowsMediaCapture_AppCaptureProjection> {
    // MARK: Windows.Media.Capture.IAppCapture members

    /// Gets a value indicating whether another app is currently capturing audio.
    /// - Returns: True if another app is currently capturing audio; otherwise, false.
    public var isCapturingAudio: Swift.Bool {
        get throws {
            try _interop.get_IsCapturingAudio()
        }
    }

    /// Gets a value indicating whether another app is currently capturing video.
    /// - Returns: True if another app is currently capturing video; otherwise, false.
    public var isCapturingVideo: Swift.Bool {
        get throws {
            try _interop.get_IsCapturingVideo()
        }
    }

    /// Raised when the capturing status changes.
    public func capturingChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsMediaCapture_AppCapture?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_CapturingChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: capturingChanged)
    }

    public func capturingChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_CapturingChanged(token)
    }

    // MARK: Windows.Media.Capture.IAppCaptureStatics members

    /// Gets the instance of this class for the current view.
    /// - Returns: The instance for the current view.
    public static func getForCurrentView() throws -> WindowsMediaCapture_AppCapture {
        try COM.NullResult.unwrap(_iappCaptureStatics.getForCurrentView())
    }

    // MARK: Windows.Media.Capture.IAppCaptureStatics2 members

    /// Sets a value that specifies whether the app capture is currently allowed for the calling app.
    /// - Parameter allowed: True if app capture is allowed; otherwise, false.
    /// - Returns: An asynchronous action.
    public static func setAllowedAsync(_ allowed: Swift.Bool) throws -> WindowsFoundation_IAsyncAction {
        try COM.NullResult.unwrap(_iappCaptureStatics2.setAllowedAsync(allowed))
    }

    // MARK: Implementation details

    private static var _iappCaptureStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaCapture_IAppCaptureStatics>? = nil

    internal static var _iappCaptureStatics: COM.COMInterop<CWinRT.SWRT_WindowsMediaCapture_IAppCaptureStatics> {
        get throws {
            try _iappCaptureStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.Capture.AppCapture", id: CWinRT.SWRT_WindowsMediaCapture_IAppCaptureStatics.iid)
            }
        }
    }

    private static var _iappCaptureStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaCapture_IAppCaptureStatics2>? = nil

    internal static var _iappCaptureStatics2: COM.COMInterop<CWinRT.SWRT_WindowsMediaCapture_IAppCaptureStatics2> {
        get throws {
            try _iappCaptureStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.Capture.AppCapture", id: CWinRT.SWRT_WindowsMediaCapture_IAppCaptureStatics2.iid)
            }
        }
    }
}