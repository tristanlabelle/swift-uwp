// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Reverse-converts a Japanese string which is mix of phonetic and ideographic characters, to a string of phonetic characters.
public final class WindowsDataText_TextReverseConversionGenerator: WindowsRuntime.WinRTImport<WindowsDataText_TextReverseConversionGeneratorProjection> {
    // MARK: Windows.Data.Text.ITextReverseConversionGeneratorFactory members

    public convenience init(_ languageTag: Swift.String) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._itextReverseConversionGeneratorFactory.create(languageTag)))
    }

    // MARK: Windows.Data.Text.ITextReverseConversionGenerator members

    /// Determines if the language tag specified is available for reverse conversions, but is not installed on the user's device.
    /// - Returns: **true** if the language is available but not installed.
    public var languageAvailableButNotInstalled: Swift.Bool {
        get throws {
            try _interop.get_LanguageAvailableButNotInstalled()
        }
    }

    /// Gets the language tag of the successfully created TextReverseConversionGenerator object.
    /// - Returns: The BCP-47 language tag of the reverse conversion generator.
    public var resolvedLanguage: Swift.String {
        get throws {
            try _interop.get_ResolvedLanguage()
        }
    }

    /// Asynchronously reverse-converts a string which contains ideographic characters to a phonetic expression.
    /// - Parameter input: The string containing ideographic characters to be reverse-converted.
    /// - Returns: An asynchronous operation to return the phonetic expression.
    public func convertBackAsync(_ input: Swift.String) throws -> WindowsFoundation_IAsyncOperation<Swift.String> {
        try COM.NullResult.unwrap(_interop.convertBackAsync(input))
    }

    // MARK: Windows.Data.Text.ITextReverseConversionGenerator2 members

    /// Returns a set of phonemes representing the given input string. This method is primarily intended for use in sorting data in the Japanese language. Phonetic reading is important for Japanese data handling, especially to sort names in proper phonetic order rather than in character code point order.
    /// - Parameter input: A string containing words in Japanese.
    /// - Returns: On successful completion of the async operation, a list of TextPhoneme objects representing the input string in phoneme form.
    public func getPhonemesAsync(_ input: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsFoundationCollections_IVectorView<WindowsDataText_TextPhoneme?>?> {
        try COM.NullResult.unwrap(_itextReverseConversionGenerator2.getPhonemesAsync(input))
    }

    // MARK: Implementation details

    private var _itextReverseConversionGenerator2_storage: COM.COMInterop<CWinRT.SWRT_WindowsDataText_ITextReverseConversionGenerator2>? = nil

    internal var _itextReverseConversionGenerator2: COM.COMInterop<CWinRT.SWRT_WindowsDataText_ITextReverseConversionGenerator2> {
        get throws {
            try _itextReverseConversionGenerator2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsDataText_ITextReverseConversionGenerator2.iid).cast(to: CWinRT.SWRT_WindowsDataText_ITextReverseConversionGenerator2.self)
            }
        }
    }

    deinit {
        _itextReverseConversionGenerator2_storage?.release()
    }

    private static var _itextReverseConversionGeneratorFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsDataText_ITextReverseConversionGeneratorFactory>? = nil

    internal static var _itextReverseConversionGeneratorFactory: COM.COMInterop<CWinRT.SWRT_WindowsDataText_ITextReverseConversionGeneratorFactory> {
        get throws {
            try _itextReverseConversionGeneratorFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Data.Text.TextReverseConversionGenerator", id: CWinRT.SWRT_WindowsDataText_ITextReverseConversionGeneratorFactory.iid)
            }
        }
    }
}