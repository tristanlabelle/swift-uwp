// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a node in an audio graph node that outputs audio data from the graph to an audio file.
public final class WindowsMediaAudio_AudioFileOutputNode: WindowsRuntime.WinRTImport<WindowsMediaAudio_AudioFileOutputNodeProjection>, WindowsMediaAudio_IAudioNodeProtocol, WindowsFoundation_IClosableProtocol {
    // MARK: Windows.Media.Audio.IAudioFileOutputNode members

    /// Gets the file associated with the audio file output node.
    /// - Returns: A StorageFile object representing the file.
    public var file: WindowsStorage_IStorageFile {
        get throws {
            try COM.NullResult.unwrap(_interop.get_File())
        }
    }

    /// Gets the file encoding profile supported by the audio file output node.
    /// - Returns: A MediaEncodingProfile object representing the encoding profile.
    public var fileEncodingProfile: WindowsMediaMediaProperties_MediaEncodingProfile {
        get throws {
            try COM.NullResult.unwrap(_interop.get_FileEncodingProfile())
        }
    }

    /// Finalizes the asynchronous operation of the audio file output node.
    /// - Returns: When this operation completes, a TranscodeFailureReason value is returned.
    public func finalizeAsync() throws -> WindowsFoundation_IAsyncOperation<WindowsMediaTranscoding_TranscodeFailureReason> {
        try COM.NullResult.unwrap(_interop.finalizeAsync())
    }

    // MARK: Windows.Media.Audio.IAudioNode members

    /// Gets or sets a value indicating if the audio file output node consumes input.
    /// - Returns: True if the audio file output node consumes input, and false otherwise.
    public var consumeInput: Swift.Bool {
        get throws {
            try _iaudioNode.get_ConsumeInput()
        }
    }

    /// Gets or sets a value indicating if the audio file output node consumes input.
    /// - Returns: True if the audio file output node consumes input, and false otherwise.
    public func consumeInput(_ value: Swift.Bool) throws {
        try _iaudioNode.put_ConsumeInput(value)
    }

    /// Gets the list of effect definitions for the audio file output node. The effects in the list process audio data that flows through the node in the order in which they appear in the list.
    /// - Returns: The list of effect definitions for the node.
    public var effectDefinitions: WindowsFoundationCollections_IVector<WindowsMediaEffects_IAudioEffectDefinition?> {
        get throws {
            try COM.NullResult.unwrap(_iaudioNode.get_EffectDefinitions())
        }
    }

    /// Gets the encoding properties for the audio file output node.
    /// - Returns: The encoding properties for the node.
    public var encodingProperties: WindowsMediaMediaProperties_AudioEncodingProperties {
        get throws {
            try COM.NullResult.unwrap(_iaudioNode.get_EncodingProperties())
        }
    }

    /// Gets or sets the outgoing gain for the audio file output node.
    /// - Returns: The outgoing gain value.
    public var outgoingGain: Swift.Double {
        get throws {
            try _iaudioNode.get_OutgoingGain()
        }
    }

    /// Gets or sets the outgoing gain for the audio file output node.
    /// - Returns: The outgoing gain value.
    public func outgoingGain(_ value: Swift.Double) throws {
        try _iaudioNode.put_OutgoingGain(value)
    }

    /// Starts the audio file output node.
    public func start() throws {
        try _iaudioNode.start()
    }

    /// Stops the audio file output node.
    public func stop() throws {
        try _iaudioNode.stop()
    }

    /// Resets the audio file output node.
    public func reset() throws {
        try _iaudioNode.reset()
    }

    /// Disables all effects in the EffectDefinitions list with the specified effect definition.
    /// - Parameter definition: The effect definition of the effects to disable.
    public func disableEffectsByDefinition(_ definition: WindowsMediaEffects_IAudioEffectDefinition?) throws {
        try _iaudioNode.disableEffectsByDefinition(definition)
    }

    /// Enables all effects in the EffectDefinitions list with the specified effect definition.
    /// - Parameter definition: The effect definition of the effects to enable.
    public func enableEffectsByDefinition(_ definition: WindowsMediaEffects_IAudioEffectDefinition?) throws {
        try _iaudioNode.enableEffectsByDefinition(definition)
    }

    // MARK: Windows.Foundation.IClosable members

    /// Closes the audio file output node and disposes of associated resources.
    public func close() throws {
        try _iclosable.close()
    }

    // MARK: Implementation details

    private var _iaudioNode_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaAudio_IAudioNode>? = nil

    internal var _iaudioNode: COM.COMInterop<CWinRT.SWRT_WindowsMediaAudio_IAudioNode> {
        get throws {
            try _iaudioNode_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaAudio_IAudioNode.iid).cast(to: CWinRT.SWRT_WindowsMediaAudio_IAudioNode.self)
            }
        }
    }

    private var _iclosable_storage: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable>? = nil

    internal var _iclosable: COM.COMInterop<CWinRT.SWRT_WindowsFoundation_IClosable> {
        get throws {
            try _iclosable_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsFoundation_IClosable.iid).cast(to: CWinRT.SWRT_WindowsFoundation_IClosable.self)
            }
        }
    }

    deinit {
        _iaudioNode_storage?.release()
        _iclosable_storage?.release()
    }
}