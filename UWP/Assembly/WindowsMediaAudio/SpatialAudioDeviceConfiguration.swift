// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents a audio device, providing information and control for its current spatial audio setup.
public final class WindowsMediaAudio_SpatialAudioDeviceConfiguration: WindowsRuntime.WinRTImport<WindowsMediaAudio_SpatialAudioDeviceConfigurationProjection> {
    // MARK: Windows.Media.Audio.ISpatialAudioDeviceConfiguration members

    /// Provides the currently active spatial audio format for this device. This could have been changed by the system and therefore may not be the same as the default.
    /// - Returns: A string of the GUID for the active spatial audio format.
    public var activeSpatialAudioFormat: Swift.String {
        get throws {
            try _interop.get_ActiveSpatialAudioFormat()
        }
    }

    /// Provides the default spatial audio format for this device. This is the format the user has selected.
    /// - Returns: A string of the GUID for the default spatial audio format.
    public var defaultSpatialAudioFormat: Swift.String {
        get throws {
            try _interop.get_DefaultSpatialAudioFormat()
        }
    }

    /// The ID of the device this object represents.
    /// - Returns: String representation of the device ID.
    public var deviceId: Swift.String {
        get throws {
            try _interop.get_DeviceId()
        }
    }

    /// Specifies whether this device can support any form of spatial audio.
    /// - Returns: Bool indicating whether this device supports spatial audio.
    public var isSpatialAudioSupported: Swift.Bool {
        get throws {
            try _interop.get_IsSpatialAudioSupported()
        }
    }

    /// Occurs when the spatial audio state of the device has changed.
    public func configurationChanged(adding handler: WindowsFoundation_TypedEventHandler<WindowsMediaAudio_SpatialAudioDeviceConfiguration?, WindowsRuntime.IInspectable?>?) throws -> WindowsRuntime.EventRegistration {
        let _token = try _interop.add_ConfigurationChanged(handler)
        return WindowsRuntime.EventRegistration(token: _token, remover: configurationChanged)
    }

    public func configurationChanged(removing token: WindowsRuntime.EventRegistrationToken) throws {
        try _interop.remove_ConfigurationChanged(token)
    }

    /// Specifies whether this device can support the given spatial audio format.
    /// - Parameter subtype: A string of the GUID for the spatial audo format to check. SpatialAudioFormatSubtype enum will return the neccesary strings.
    /// - Returns: Bool indicating whether the format is supported or not.
    public func isSpatialAudioFormatSupported(_ subtype: Swift.String) throws -> Swift.Bool {
        try _interop.isSpatialAudioFormatSupported(subtype)
    }

    /// Tries to set the specified spatial audio format for this device. The caller must be the app that owns this spatial audio format.
    /// - Parameter subtype: A string of the GUID for the spatial audio format to set. SpatialAudioFormatSubtype enum will return the neccesary string.
    /// - Returns: A result indicating success or why the call failed to set the specified format.
    public func setDefaultSpatialAudioFormatAsync(_ subtype: Swift.String) throws -> WindowsFoundation_IAsyncOperation<WindowsMediaAudio_SetDefaultSpatialAudioFormatResult?> {
        try COM.NullResult.unwrap(_interop.setDefaultSpatialAudioFormatAsync(subtype))
    }

    // MARK: Windows.Media.Audio.ISpatialAudioDeviceConfigurationStatics members

    /// Creates a SpatialAudioDeviceConfiguration for the given device ID.
    /// - Parameter deviceId: The device ID of the device to represent.
    /// - Returns: The SpatialAudioDeviceConfiguration for the device.
    public static func getForDeviceId(_ deviceId: Swift.String) throws -> WindowsMediaAudio_SpatialAudioDeviceConfiguration {
        try COM.NullResult.unwrap(_ispatialAudioDeviceConfigurationStatics.getForDeviceId(deviceId))
    }

    // MARK: Implementation details

    private static var _ispatialAudioDeviceConfigurationStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaAudio_ISpatialAudioDeviceConfigurationStatics>? = nil

    internal static var _ispatialAudioDeviceConfigurationStatics: COM.COMInterop<CWinRT.SWRT_WindowsMediaAudio_ISpatialAudioDeviceConfigurationStatics> {
        get throws {
            try _ispatialAudioDeviceConfigurationStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.Audio.SpatialAudioDeviceConfiguration", id: CWinRT.SWRT_WindowsMediaAudio_ISpatialAudioDeviceConfigurationStatics.iid)
            }
        }
    }
}