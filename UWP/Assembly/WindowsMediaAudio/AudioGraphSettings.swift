// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Represents initialization settings for an audio graph. Set the properties of this object to your desired values and then call AudioGraph.CreateAsync to create a new audio graph instance with the specified settings.
public final class WindowsMediaAudio_AudioGraphSettings: WindowsRuntime.WinRTImport<WindowsMediaAudio_AudioGraphSettingsProjection> {
    // MARK: Windows.Media.Audio.IAudioGraphSettingsFactory members

    public convenience init(_ audioRenderCategory: WindowsMediaRender_AudioRenderCategory) throws {
        self.init(_transferringRef: try COM.NullResult.unwrap(Self._iaudioGraphSettingsFactory.create(audioRenderCategory)))
    }

    // MARK: Windows.Media.Audio.IAudioGraphSettings members

    /// Gets or sets a value that indicates the audio render category setting for the audio graph.
    /// - Returns: A value that indicates the audio render category setting for an audio graph.
    public var audioRenderCategory: WindowsMediaRender_AudioRenderCategory {
        get throws {
            try _interop.get_AudioRenderCategory()
        }
    }

    /// Gets or sets a value that indicates the audio render category setting for the audio graph.
    /// - Returns: A value that indicates the audio render category setting for an audio graph.
    public func audioRenderCategory(_ value: WindowsMediaRender_AudioRenderCategory) throws {
        try _interop.put_AudioRenderCategory(value)
    }

    /// Gets or sets a value that indicates the desired audio processing mode setting for the audio graph.
    /// - Returns: A value that indicates the desired audio processing mode setting for the audio graph.
    public var desiredRenderDeviceAudioProcessing: WindowsMedia_AudioProcessing {
        get throws {
            try _interop.get_DesiredRenderDeviceAudioProcessing()
        }
    }

    /// Gets or sets a value that indicates the desired audio processing mode setting for the audio graph.
    /// - Returns: A value that indicates the desired audio processing mode setting for the audio graph.
    public func desiredRenderDeviceAudioProcessing(_ value: WindowsMedia_AudioProcessing) throws {
        try _interop.put_DesiredRenderDeviceAudioProcessing(value)
    }

    /// Gets or sets the desired number of samples per quantum defined for the audio graph.
    /// - Returns: The number of samples per quantum.
    public var desiredSamplesPerQuantum: Swift.Int32 {
        get throws {
            try _interop.get_DesiredSamplesPerQuantum()
        }
    }

    /// Gets or sets the desired number of samples per quantum defined for the audio graph.
    /// - Returns: The number of samples per quantum.
    public func desiredSamplesPerQuantum(_ value: Swift.Int32) throws {
        try _interop.put_DesiredSamplesPerQuantum(value)
    }

    /// Gets or sets the audio encoding properties setting for the audio graph.
    /// - Returns: The audio encoding properties for the audio graph.
    public var encodingProperties: WindowsMediaMediaProperties_AudioEncodingProperties {
        get throws {
            try COM.NullResult.unwrap(_interop.get_EncodingProperties())
        }
    }

    /// Gets or sets the audio encoding properties setting for the audio graph.
    /// - Returns: The audio encoding properties for the audio graph.
    public func encodingProperties(_ value: WindowsMediaMediaProperties_AudioEncodingProperties?) throws {
        try _interop.put_EncodingProperties(value)
    }

    /// Gets or sets an object that represents the primary render device for the audio graph.
    /// - Returns: An object that represents the primary render device for the audio graph.
    public var primaryRenderDevice: WindowsDevicesEnumeration_DeviceInformation {
        get throws {
            try COM.NullResult.unwrap(_interop.get_PrimaryRenderDevice())
        }
    }

    /// Gets or sets an object that represents the primary render device for the audio graph.
    /// - Returns: An object that represents the primary render device for the audio graph.
    public func primaryRenderDevice(_ value: WindowsDevicesEnumeration_DeviceInformation?) throws {
        try _interop.put_PrimaryRenderDevice(value)
    }

    /// Gets or sets the quantum size selection mode for the audio graph.
    /// - Returns: An enumeration value indicating the quantum size selection mode. If the audio graph is only to be used with files, it is strongly recommended to use the value SystemDefault.
    public var quantumSizeSelectionMode: WindowsMediaAudio_QuantumSizeSelectionMode {
        get throws {
            try _interop.get_QuantumSizeSelectionMode()
        }
    }

    /// Gets or sets the quantum size selection mode for the audio graph.
    /// - Returns: An enumeration value indicating the quantum size selection mode. If the audio graph is only to be used with files, it is strongly recommended to use the value SystemDefault.
    public func quantumSizeSelectionMode(_ value: WindowsMediaAudio_QuantumSizeSelectionMode) throws {
        try _interop.put_QuantumSizeSelectionMode(value)
    }

    // MARK: Windows.Media.Audio.IAudioGraphSettings2 members

    /// Gets or sets the maximum playback speed of input nodes in the AudioGraph.
    /// - Returns: The maximum playback speed of the associated AudioGraph, as a multiplier of the normal speed of the content. So, a value of 2 represents twice the normal speed and a value of 3 represents three times the normal speed. This value must be in the range of 1 to 1024, inclusive. The default value is 1024.
    public var maxPlaybackSpeedFactor: Swift.Double {
        get throws {
            try _iaudioGraphSettings2.get_MaxPlaybackSpeedFactor()
        }
    }

    /// Gets or sets the maximum playback speed of input nodes in the AudioGraph.
    /// - Returns: The maximum playback speed of the associated AudioGraph, as a multiplier of the normal speed of the content. So, a value of 2 represents twice the normal speed and a value of 3 represents three times the normal speed. This value must be in the range of 1 to 1024, inclusive. The default value is 1024.
    public func maxPlaybackSpeedFactor(_ value: Swift.Double) throws {
        try _iaudioGraphSettings2.put_MaxPlaybackSpeedFactor(value)
    }

    // MARK: Implementation details

    private var _iaudioGraphSettings2_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaAudio_IAudioGraphSettings2>? = nil

    internal var _iaudioGraphSettings2: COM.COMInterop<CWinRT.SWRT_WindowsMediaAudio_IAudioGraphSettings2> {
        get throws {
            try _iaudioGraphSettings2_storage.lazyInit {
                try _queryInterfacePointer(CWinRT.SWRT_WindowsMediaAudio_IAudioGraphSettings2.iid).cast(to: CWinRT.SWRT_WindowsMediaAudio_IAudioGraphSettings2.self)
            }
        }
    }

    deinit {
        _iaudioGraphSettings2_storage?.release()
    }

    private static var _iaudioGraphSettingsFactory_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaAudio_IAudioGraphSettingsFactory>? = nil

    internal static var _iaudioGraphSettingsFactory: COM.COMInterop<CWinRT.SWRT_WindowsMediaAudio_IAudioGraphSettingsFactory> {
        get throws {
            try _iaudioGraphSettingsFactory_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.Audio.AudioGraphSettings", id: CWinRT.SWRT_WindowsMediaAudio_IAudioGraphSettingsFactory.iid)
            }
        }
    }
}