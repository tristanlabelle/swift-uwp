// Generated by swift-winrt
// swiftlint:disable all

import CWinRT
import WindowsRuntime
import UWP
import struct Foundation.UUID

/// Helper class to retrieve the GUIDs for known spatial audio formats.
public enum WindowsMediaAudio_SpatialAudioFormatSubtype {
    // MARK: Windows.Media.Audio.ISpatialAudioFormatSubtypeStatics members

    /// GUID for DTSHeadphoneX.
    /// - Returns: A string representation of the format's GUID.
    public static var dtsheadphoneX: Swift.String {
        get throws {
            try _ispatialAudioFormatSubtypeStatics.get_DTSHeadphoneX()
        }
    }

    /// GUID for DTSXUltra.
    /// - Returns: A string representation of the format's GUID.
    public static var dtsxultra: Swift.String {
        get throws {
            try _ispatialAudioFormatSubtypeStatics.get_DTSXUltra()
        }
    }

    /// GUID for DolbyAtmosForHeadphones.
    /// - Returns: A string representation of the format's GUID.
    public static var dolbyAtmosForHeadphones: Swift.String {
        get throws {
            try _ispatialAudioFormatSubtypeStatics.get_DolbyAtmosForHeadphones()
        }
    }

    /// GUID for DolbyAtmosForHomeTheater.
    /// - Returns: A string representation of the format's GUID.
    public static var dolbyAtmosForHomeTheater: Swift.String {
        get throws {
            try _ispatialAudioFormatSubtypeStatics.get_DolbyAtmosForHomeTheater()
        }
    }

    /// GUID for DolbyAtmosForSpeakers.
    /// - Returns: A string representation of the format's GUID.
    public static var dolbyAtmosForSpeakers: Swift.String {
        get throws {
            try _ispatialAudioFormatSubtypeStatics.get_DolbyAtmosForSpeakers()
        }
    }

    /// GUID for WindowsSonic.
    /// - Returns: A string representation of the format's GUID.
    public static var windowsSonic: Swift.String {
        get throws {
            try _ispatialAudioFormatSubtypeStatics.get_WindowsSonic()
        }
    }

    // MARK: Windows.Media.Audio.ISpatialAudioFormatSubtypeStatics2 members

    public static var dtsxforHomeTheater: Swift.String {
        get throws {
            try _ispatialAudioFormatSubtypeStatics2.get_DTSXForHomeTheater()
        }
    }

    // MARK: Implementation details

    private static var _ispatialAudioFormatSubtypeStatics_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaAudio_ISpatialAudioFormatSubtypeStatics>? = nil

    internal static var _ispatialAudioFormatSubtypeStatics: COM.COMInterop<CWinRT.SWRT_WindowsMediaAudio_ISpatialAudioFormatSubtypeStatics> {
        get throws {
            try _ispatialAudioFormatSubtypeStatics_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.Audio.SpatialAudioFormatSubtype", id: CWinRT.SWRT_WindowsMediaAudio_ISpatialAudioFormatSubtypeStatics.iid)
            }
        }
    }

    private static var _ispatialAudioFormatSubtypeStatics2_storage: COM.COMInterop<CWinRT.SWRT_WindowsMediaAudio_ISpatialAudioFormatSubtypeStatics2>? = nil

    internal static var _ispatialAudioFormatSubtypeStatics2: COM.COMInterop<CWinRT.SWRT_WindowsMediaAudio_ISpatialAudioFormatSubtypeStatics2> {
        get throws {
            try _ispatialAudioFormatSubtypeStatics2_storage.lazyInit {
                try WindowsRuntime.getActivationFactoryPointer(activatableId: "Windows.Media.Audio.SpatialAudioFormatSubtype", id: CWinRT.SWRT_WindowsMediaAudio_ISpatialAudioFormatSubtypeStatics2.iid)
            }
        }
    }
}